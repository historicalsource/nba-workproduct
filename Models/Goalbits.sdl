DEFINITION	/* ALIAS SDL File Version 8.5 */
			/* Apparently from wire file '/matt/mgilmore/user_data/NBAonNBC/wire/Nets/GOALS12'. */
	version = 8.5;

	xleft  = 0;
	xright = 1279;
	ylow   = 0;
	yhigh  = 1023;
	resolution = 1280 1024;
	aalevelmin   = 3;
	aalevelmax   = 12;
	aathreshold  = 0.6;
	post_filter   = OFF;
	post_center   = 8;    /* Values for a bartlet filter. */
	post_adjacent = 1;
	post_diagonal = 1;

	composite_rendering = OFF;
	invisible_objects_cast_shadows = OFF;
	image_format = ALIAS;
	jitter       = ON;
	reduced_samples = OFF;
	textures_active    = ON;

	clamp_bumpsize = 0.0;

	up = yaxis;

	motion_blur_on = OFF;
	shutter_angle  = 144.0;
	animation  = OFF;
	startframe = 0.0;
	endframe = 0.0;
	fields          = FALSE;
	odd             = FALSE;
	even            = FALSE;
	odd_field_first = TRUE;

	triple Camera#2_view(0.0, 0.0, 0.0);
	triple Camera#2_up(0.0, 0.0, 0.0);
	triple Camera_view(0.0, 0.0, 0.0);
	triple Camera_up(0.0, 0.0, 0.0);

	subdivision_recursion_limit = 2;
	grid_cache = 4000;
	bbox_memory = FULL;
	rt_voxel_res_type = AUTOMATIC;

	max_reflections             = 10;
	max_refractions             = 10;
	max_shadow_level            = 10;
	preview_ray_trace           = OFF;

	scalar pixel_aspect ( 1.0 );
	hline_to_fill_color  = FALSE;
	hline_fill_color     = (255.0, 255.0, 255.0);
	hline_line_color     = (0.0, 255.0, 255.0);
	hline_isoparam_u     = 0;
	hline_isoparam_v     = 0;

	show_particles       = TRUE;
	simulation_substeps  = 1;
	simulation_frames_per_second = 30;


texture File#2 (
        procedure = file,
        rgbout = (18.497383, 0.0, 255.0),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/cush4.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.05814,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = OFF,
        vwrap = OFF,
        invert = OFF
);

shader cush4 ( model = lambert,
        diffuse = 0.8,
        color = File#2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture WHITEPOSTtexture (
        procedure = file,
        rgbout = (241.787567, 249.559586, 255.0),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/whitpost.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader WHITEPOST ( model = lambert,
        diffuse = 0.8,
        color = WHITEPOSTtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture NETtexture#5 (
        procedure = file,
        rgbout = (133.048538, 136.964493, 151.943008),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/seal.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = -0.01,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader seal ( model = lambert,
        diffuse = 0.8,
        color = NETtexture#5,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture NETtexture#6 (
        procedure = file,
        rgbout = (151.943008, 143.597137, 99.983223),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/metal4.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = -0.01,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader METAL4 ( model = lambert,
        diffuse = 0.8,
        color = NETtexture#6,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture METAL2texture (
        procedure = file,
        rgbout = (113.120346, 120.298462, 134.76683),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/metal2.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.05814,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader METAL2 ( model = lambert,
        diffuse = 0.8,
        color = METAL2texture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture METAL3texture (
        procedure = file,
        rgbout = (113.120346, 120.298462, 134.76683),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/metal3.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.05814,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader METAL3 ( model = lambert,
        diffuse = 0.8,
        color = METAL3texture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture METAL1texture (
        procedure = file,
        rgbout = (113.120346, 120.298462, 134.76683),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/metal1.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.05814,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader METAL1 ( model = lambert,
        diffuse = 0.8,
        color = METAL1texture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture BUMPERtexture (
        procedure = file,
        rgbout = (43.813255, 73.097771, 132.124359),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/bumper.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader BUMPER ( model = lambert,
        diffuse = 0.8,
        color = BUMPERtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture NETtexture#2 (
        procedure = file,
        rgbout = (130.618286, 133.159958, 140.051819),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/backpad.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader BackPad ( model = lambert,
        diffuse = 0.8,
        color = NETtexture#2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture TARGETtexture (
        procedure = file,
        rgbout = (255.0, 254.555023, 248.393784),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/target.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader TARGET ( model = lambert,
        diffuse = 0.8,
        color = TARGETtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture GLASStexture (
        procedure = file,
        rgbout = (0.0, 55.813946, 94.88372),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/glass.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader GLASS ( model = lambert,
        diffuse = 0.8,
        color = GLASStexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (201.627914, 201.627914, 201.627914),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture nbalog (
        procedure = file,
        rgbout = (0.0, 150.0, 255.0),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/NBAlog.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = OFF,
        vwrap = OFF,
        invert = OFF
);

shader NBAdecal ( model = lambert,
        diffuse = 0.8,
        color = nbalog,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture ORANGEtexture (
        procedure = file,
        rgbout = (255.0, 71.347153, 0.0),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/bracket.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader ORANGE ( model = lambert,
        diffuse = 0.8,
        color = ORANGEtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture HOOPtexture (
        procedure = file,
        rgbout = (255.0, 71.347153, 0.0),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/hoop.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader HOOP ( model = lambert,
        diffuse = 0.8,
        color = HOOPtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture NETtexture (
        procedure = file,
        rgbout = (151.943008, 143.597137, 99.983223),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/net.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = -0.01,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader NET ( model = lambert,
        diffuse = 0.8,
        color = NETtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

polyset Net2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (NET ),
	casts_shadow = TRUE,
	vertices = ((cv((6.74063, 2.301843, 0.170015), 1)),
			(cv((6.750713, 2.200817, 0.131484), 1)),
			(cv((6.830414, 2.301843, 0.170015), 1)),
			(cv((6.81988, 2.200817, 0.131604), 1)),
			(cv((6.879841, 2.200817, 0.097125), 1)),
			(cv((6.845166, 1.946636, 0.06212), 1)),
			(cv((6.866997, 1.946636, 0.024307), 1)),
			(cv((6.854647, 2.044886, 0.071843), 1)),
			(cv((6.88007, 2.044886, 0.027987), 1)),
			(cv((6.662875, 2.301843, 0.125123), 1)),
			(cv((6.690873, 2.200817, 0.096795), 1)),
			(cv((6.656393, 2.200817, 0.036834), 1)),
			(cv((6.617983, 2.301843, 0.047368), 1)),
			(cv((6.908169, 2.301843, 0.125123), 1)),
			(cv((6.953061, 2.301843, 0.047368), 1)),
			(cv((6.91453, 2.200817, 0.037285), 1)),
			(cv((6.892863, 2.117504, 0.031238), 1)),
			(cv((6.864101, 2.117504, 0.081055), 1)),
			(cv((6.814284, 2.117504, 0.109816), 1)),
			(cv((6.75676, 2.117504, 0.109816), 1)),
			(cv((6.706943, 2.117504, 0.081055), 1)),
			(cv((6.760011, 2.044886, 0.097023), 1)),
			(cv((6.810703, 2.044886, 0.097112), 1)),
			(cv((6.716155, 2.044886, 0.071601), 1)),
			(cv((6.725878, 1.946636, 0.06212), 1)),
			(cv((6.763691, 1.946636, 0.083951), 1)),
			(cv((6.807353, 1.946636, 0.083951), 1)),
			(cv((6.914651, 2.200817, -0.031883), 1)),
			(cv((6.953061, 2.301843, -0.042416), 1)),
			(cv((6.908169, 2.301843, -0.120171), 1)),
			(cv((6.892863, 2.117504, -0.026286), 1)),
			(cv((6.864101, 2.117504, -0.076103), 1)),
			(cv((6.880171, 2.200817, -0.091844), 1)),
			(cv((6.880158, 2.044886, -0.022705), 1)),
			(cv((6.854889, 2.044886, -0.066649), 1)),
			(cv((6.866997, 1.946636, -0.019355), 1)),
			(cv((6.845166, 1.946636, -0.057168), 1)),
			(cv((6.811033, 2.044886, -0.092072), 1)),
			(cv((6.820331, 2.200817, -0.126532), 1)),
			(cv((6.830414, 2.301843, -0.165063), 1)),
			(cv((6.656514, 2.200817, -0.032333), 1)),
			(cv((6.678181, 2.117504, -0.026286), 1)),
			(cv((6.678181, 2.117504, 0.031238), 1)),
			(cv((6.74063, 2.301843, -0.165063), 1)),
			(cv((6.751163, 2.200817, -0.126653), 1)),
			(cv((6.691203, 2.200817, -0.092174), 1)),
			(cv((6.662875, 2.301843, -0.120171), 1)),
			(cv((6.617983, 2.301843, -0.042416), 1)),
			(cv((6.706943, 2.117504, -0.076103), 1)),
			(cv((6.75676, 2.117504, -0.104865), 1)),
			(cv((6.814284, 2.117504, -0.104865), 1)),
			(cv((6.760341, 2.044886, -0.09216), 1)),
			(cv((6.716397, 2.044886, -0.066891), 1)),
			(cv((6.690974, 2.044886, -0.023035), 1)),
			(cv((6.690886, 2.044886, 0.027656), 1)),
			(cv((6.807353, 1.946636, -0.078999), 1)),
			(cv((6.763691, 1.946636, -0.078999), 1)),
			(cv((6.725878, 1.946636, -0.057168), 1)),
			(cv((6.704047, 1.946636, -0.019355), 1)),
			(cv((6.704047, 1.946636, 0.024307), 1)),
			(cv((6.830414, 2.301843, 0.170015), 1)),
			(cv((6.750713, 2.200817, 0.131484), 1)),
			(cv((6.74063, 2.301843, 0.170015), 1)),
			(cv((6.879841, 2.200817, 0.097125), 1)),
			(cv((6.81988, 2.200817, 0.131604), 1)),
			(cv((6.854647, 2.044886, 0.071843), 1)),
			(cv((6.866997, 1.946636, 0.024307), 1)),
			(cv((6.845166, 1.946636, 0.06212), 1)),
			(cv((6.88007, 2.044886, 0.027987), 1)),
			(cv((6.662875, 2.301843, 0.125123), 1)),
			(cv((6.690873, 2.200817, 0.096795), 1)),
			(cv((6.656393, 2.200817, 0.036834), 1)),
			(cv((6.617983, 2.301843, 0.047368), 1)),
			(cv((6.908169, 2.301843, 0.125123), 1)),
			(cv((6.953061, 2.301843, 0.047368), 1)),
			(cv((6.91453, 2.200817, 0.037285), 1)),
			(cv((6.892863, 2.117504, 0.031238), 1)),
			(cv((6.864101, 2.117504, 0.081055), 1)),
			(cv((6.814284, 2.117504, 0.109816), 1)),
			(cv((6.75676, 2.117504, 0.109816), 1)),
			(cv((6.706943, 2.117504, 0.081055), 1)),
			(cv((6.810703, 2.044886, 0.097112), 1)),
			(cv((6.760011, 2.044886, 0.097023), 1)),
			(cv((6.716155, 2.044886, 0.071601), 1)),
			(cv((6.725878, 1.946636, 0.06212), 1)),
			(cv((6.763691, 1.946636, 0.083951), 1)),
			(cv((6.807353, 1.946636, 0.083951), 1)),
			(cv((6.914651, 2.200817, -0.031883), 1)),
			(cv((6.953061, 2.301843, -0.042416), 1)),
			(cv((6.908169, 2.301843, -0.120171), 1)),
			(cv((6.892863, 2.117504, -0.026286), 1)),
			(cv((6.864101, 2.117504, -0.076103), 1)),
			(cv((6.880171, 2.200817, -0.091844), 1)),
			(cv((6.854889, 2.044886, -0.066649), 1)),
			(cv((6.880158, 2.044886, -0.022705), 1)),
			(cv((6.866997, 1.946636, -0.019355), 1)),
			(cv((6.845166, 1.946636, -0.057168), 1)),
			(cv((6.811033, 2.044886, -0.092072), 1)),
			(cv((6.820331, 2.200817, -0.126532), 1)),
			(cv((6.830414, 2.301843, -0.165063), 1)),
			(cv((6.678181, 2.117504, -0.026286), 1)),
			(cv((6.656514, 2.200817, -0.032333), 1)),
			(cv((6.678181, 2.117504, 0.031238), 1)),
			(cv((6.74063, 2.301843, -0.165063), 1)),
			(cv((6.751163, 2.200817, -0.126653), 1)),
			(cv((6.691203, 2.200817, -0.092174), 1)),
			(cv((6.662875, 2.301843, -0.120171), 1)),
			(cv((6.617983, 2.301843, -0.042416), 1)),
			(cv((6.706943, 2.117504, -0.076103), 1)),
			(cv((6.75676, 2.117504, -0.104865), 1)),
			(cv((6.814284, 2.117504, -0.104865), 1)),
			(cv((6.760341, 2.044886, -0.09216), 1)),
			(cv((6.716397, 2.044886, -0.066891), 1)),
			(cv((6.690974, 2.044886, -0.023035), 1)),
			(cv((6.690886, 2.044886, 0.027656), 1)),
			(cv((6.807353, 1.946636, -0.078999), 1)),
			(cv((6.763691, 1.946636, -0.078999), 1)),
			(cv((6.725878, 1.946636, -0.057168), 1)),
			(cv((6.704047, 1.946636, -0.019355), 1)),
			(cv((6.704047, 1.946636, 0.024307), 1))	),
	texture_vertices = (
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.704342 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.704342 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((3, 4, 2),(3, 4, 2), 0 ),
		polygon ((3, 2, 1),(3, 2, 1), 0 ),
		polygon ((5, 6, 7),(5, 6, 7), 0 ),
		polygon ((8, 7, 6),(8, 7, 6), 0 ),
		polygon ((1, 0, 9),(1, 0, 9), 0 ),
		polygon ((9, 10, 1),(9, 10, 1), 0 ),
		polygon ((9, 11, 10),(9, 11, 10), 0 ),
		polygon ((11, 9, 12),(11, 9, 12), 0 ),
		polygon ((4, 13, 2),(4, 13, 2), 0 ),
		polygon ((4, 14, 13),(4, 14, 13), 0 ),
		polygon ((14, 4, 15),(14, 4, 15), 0 ),
		polygon ((4, 16, 15),(4, 16, 15), 0 ),
		polygon ((16, 4, 17),(16, 4, 17), 0 ),
		polygon ((4, 18, 17),(4, 18, 17), 0 ),
		polygon ((4, 3, 18),(4, 3, 18), 0 ),
		polygon ((18, 1, 19),(18, 1, 19), 0 ),
		polygon ((1, 18, 3),(1, 18, 3), 0 ),
		polygon ((20, 19, 1),(20, 19, 1), 0 ),
		polygon ((20, 1, 10),(20, 1, 10), 0 ),
		polygon ((18, 21, 22),(18, 21, 22), 0 ),
		polygon ((22, 7, 18),(22, 7, 18), 0 ),
		polygon ((17, 18, 7),(17, 18, 7), 0 ),
		polygon ((8, 16, 7),(8, 16, 7), 0 ),
		polygon ((21, 18, 19),(21, 18, 19), 0 ),
		polygon ((21, 20, 23),(21, 20, 23), 0 ),
		polygon ((20, 21, 19),(20, 21, 19), 0 ),
		polygon ((23, 24, 21),(23, 24, 21), 0 ),
		polygon ((24, 25, 21),(24, 25, 21), 0 ),
		polygon ((25, 26, 21),(25, 26, 21), 0 ),
		polygon ((22, 21, 26),(22, 21, 26), 0 ),
		polygon ((7, 22, 26),(7, 22, 26), 0 ),
		polygon ((7, 26, 5),(7, 26, 5), 0 ),
		polygon ((27, 14, 15),(27, 14, 15), 0 ),
		polygon ((28, 14, 27),(28, 14, 27), 0 ),
		polygon ((27, 29, 28),(27, 29, 28), 0 ),
		polygon ((27, 15, 16),(27, 15, 16), 0 ),
		polygon ((30, 27, 16),(30, 27, 16), 0 ),
		polygon ((30, 31, 27),(30, 31, 27), 0 ),
		polygon ((32, 27, 31),(32, 27, 31), 0 ),
		polygon ((31, 33, 34),(31, 33, 34), 0 ),
		polygon ((33, 31, 30),(33, 31, 30), 0 ),
		polygon ((33, 30, 16),(33, 30, 16), 0 ),
		polygon ((8, 33, 16),(8, 33, 16), 0 ),
		polygon ((17, 7, 16),(17, 7, 16), 0 ),
		polygon ((33, 6, 35),(33, 6, 35), 0 ),
		polygon ((6, 33, 8),(6, 33, 8), 0 ),
		polygon ((35, 36, 33),(35, 36, 33), 0 ),
		polygon ((34, 33, 36),(34, 33, 36), 0 ),
		polygon ((37, 34, 36),(37, 34, 36), 0 ),
		polygon ((31, 34, 37),(31, 34, 37), 0 ),
		polygon ((38, 32, 31),(38, 32, 31), 0 ),
		polygon ((39, 29, 38),(39, 29, 38), 0 ),
		polygon ((11, 40, 41),(11, 40, 41), 0 ),
		polygon ((29, 27, 32),(29, 27, 32), 0 ),
		polygon ((38, 29, 32),(38, 29, 32), 0 ),
		polygon ((20, 11, 42),(20, 11, 42), 0 ),
		polygon ((38, 43, 39),(38, 43, 39), 0 ),
		polygon ((43, 38, 44),(43, 38, 44), 0 ),
		polygon ((43, 44, 45),(43, 44, 45), 0 ),
		polygon ((46, 43, 45),(46, 43, 45), 0 ),
		polygon ((40, 47, 45),(40, 47, 45), 0 ),
		polygon ((46, 45, 47),(46, 45, 47), 0 ),
		polygon ((11, 47, 40),(11, 47, 40), 0 ),
		polygon ((12, 47, 11),(12, 47, 11), 0 ),
		polygon ((41, 45, 48),(41, 45, 48), 0 ),
		polygon ((45, 41, 40),(45, 41, 40), 0 ),
		polygon ((49, 48, 45),(49, 48, 45), 0 ),
		polygon ((49, 45, 44),(49, 45, 44), 0 ),
		polygon ((44, 38, 49),(44, 38, 49), 0 ),
		polygon ((50, 49, 38),(50, 49, 38), 0 ),
		polygon ((31, 50, 38),(31, 50, 38), 0 ),
		polygon ((37, 50, 31),(37, 50, 31), 0 ),
		polygon ((37, 49, 50),(37, 49, 50), 0 ),
		polygon ((49, 37, 51),(49, 37, 51), 0 ),
		polygon ((49, 51, 52),(49, 51, 52), 0 ),
		polygon ((48, 49, 52),(48, 49, 52), 0 ),
		polygon ((53, 41, 52),(53, 41, 52), 0 ),
		polygon ((48, 52, 41),(48, 52, 41), 0 ),
		polygon ((53, 54, 41),(53, 54, 41), 0 ),
		polygon ((36, 55, 37),(36, 55, 37), 0 ),
		polygon ((55, 56, 37),(55, 56, 37), 0 ),
		polygon ((51, 37, 56),(51, 37, 56), 0 ),
		polygon ((52, 51, 56),(52, 51, 56), 0 ),
		polygon ((52, 56, 57),(52, 56, 57), 0 ),
		polygon ((52, 58, 53),(52, 58, 53), 0 ),
		polygon ((58, 52, 57),(58, 52, 57), 0 ),
		polygon ((54, 53, 58),(54, 53, 58), 0 ),
		polygon ((58, 59, 54),(58, 59, 54), 0 ),
		polygon ((54, 24, 23),(54, 24, 23), 0 ),
		polygon ((24, 54, 59),(24, 54, 59), 0 ),
		polygon ((20, 54, 23),(20, 54, 23), 0 ),
		polygon ((42, 41, 54),(42, 41, 54), 0 ),
		polygon ((42, 11, 41),(42, 11, 41), 0 ),
		polygon ((11, 20, 10),(11, 20, 10), 0 ),
		polygon ((54, 20, 42),(54, 20, 42), 0 ),
		polygon ((60, 61, 62),(60, 61, 62), 0 ),
		polygon ((60, 63, 64),(60, 63, 64), 0 ),
		polygon ((61, 60, 64),(61, 60, 64), 0 ),
		polygon ((65, 66, 67),(65, 66, 67), 0 ),
		polygon ((66, 65, 68),(66, 65, 68), 0 ),
		polygon ((69, 62, 61),(69, 62, 61), 0 ),
		polygon ((61, 70, 69),(61, 70, 69), 0 ),
		polygon ((70, 71, 69),(70, 71, 69), 0 ),
		polygon ((72, 69, 71),(72, 69, 71), 0 ),
		polygon ((60, 73, 63),(60, 73, 63), 0 ),
		polygon ((73, 74, 63),(73, 74, 63), 0 ),
		polygon ((75, 63, 74),(75, 63, 74), 0 ),
		polygon ((75, 76, 63),(75, 76, 63), 0 ),
		polygon ((77, 63, 76),(77, 63, 76), 0 ),
		polygon ((77, 78, 63),(77, 78, 63), 0 ),
		polygon ((78, 64, 63),(78, 64, 63), 0 ),
		polygon ((79, 61, 78),(79, 61, 78), 0 ),
		polygon ((64, 78, 61),(64, 78, 61), 0 ),
		polygon ((61, 79, 80),(61, 79, 80), 0 ),
		polygon ((70, 61, 80),(70, 61, 80), 0 ),
		polygon ((81, 82, 78),(81, 82, 78), 0 ),
		polygon ((78, 65, 81),(78, 65, 81), 0 ),
		polygon ((65, 78, 77),(65, 78, 77), 0 ),
		polygon ((65, 76, 68),(65, 76, 68), 0 ),
		polygon ((79, 78, 82),(79, 78, 82), 0 ),
		polygon ((83, 80, 82),(83, 80, 82), 0 ),
		polygon ((79, 82, 80),(79, 82, 80), 0 ),
		polygon ((82, 84, 83),(82, 84, 83), 0 ),
		polygon ((82, 85, 84),(82, 85, 84), 0 ),
		polygon ((82, 86, 85),(82, 86, 85), 0 ),
		polygon ((86, 82, 81),(86, 82, 81), 0 ),
		polygon ((86, 81, 65),(86, 81, 65), 0 ),
		polygon ((67, 86, 65),(67, 86, 65), 0 ),
		polygon ((75, 74, 87),(75, 74, 87), 0 ),
		polygon ((87, 74, 88),(87, 74, 88), 0 ),
		polygon ((88, 89, 87),(88, 89, 87), 0 ),
		polygon ((76, 75, 87),(76, 75, 87), 0 ),
		polygon ((76, 87, 90),(76, 87, 90), 0 ),
		polygon ((87, 91, 90),(87, 91, 90), 0 ),
		polygon ((91, 87, 92),(91, 87, 92), 0 ),
		polygon ((93, 94, 91),(93, 94, 91), 0 ),
		polygon ((90, 91, 94),(90, 91, 94), 0 ),
		polygon ((76, 90, 94),(76, 90, 94), 0 ),
		polygon ((76, 94, 68),(76, 94, 68), 0 ),
		polygon ((76, 65, 77),(76, 65, 77), 0 ),
		polygon ((95, 66, 94),(95, 66, 94), 0 ),
		polygon ((68, 94, 66),(68, 94, 66), 0 ),
		polygon ((94, 96, 95),(94, 96, 95), 0 ),
		polygon ((96, 94, 93),(96, 94, 93), 0 ),
		polygon ((96, 93, 97),(96, 93, 97), 0 ),
		polygon ((97, 93, 91),(97, 93, 91), 0 ),
		polygon ((91, 92, 98),(91, 92, 98), 0 ),
		polygon ((98, 89, 99),(98, 89, 99), 0 ),
		polygon ((100, 101, 71),(100, 101, 71), 0 ),
		polygon ((92, 87, 89),(92, 87, 89), 0 ),
		polygon ((92, 89, 98),(92, 89, 98), 0 ),
		polygon ((102, 71, 80),(102, 71, 80), 0 ),
		polygon ((99, 103, 98),(99, 103, 98), 0 ),
		polygon ((104, 98, 103),(104, 98, 103), 0 ),
		polygon ((105, 104, 103),(105, 104, 103), 0 ),
		polygon ((105, 103, 106),(105, 103, 106), 0 ),
		polygon ((105, 107, 101),(105, 107, 101), 0 ),
		polygon ((107, 105, 106),(107, 105, 106), 0 ),
		polygon ((101, 107, 71),(101, 107, 71), 0 ),
		polygon ((71, 107, 72),(71, 107, 72), 0 ),
		polygon ((108, 105, 100),(108, 105, 100), 0 ),
		polygon ((101, 100, 105),(101, 100, 105), 0 ),
		polygon ((105, 108, 109),(105, 108, 109), 0 ),
		polygon ((104, 105, 109),(104, 105, 109), 0 ),
		polygon ((109, 98, 104),(109, 98, 104), 0 ),
		polygon ((98, 109, 110),(98, 109, 110), 0 ),
		polygon ((98, 110, 91),(98, 110, 91), 0 ),
		polygon ((91, 110, 97),(91, 110, 97), 0 ),
		polygon ((110, 109, 97),(110, 109, 97), 0 ),
		polygon ((111, 97, 109),(111, 97, 109), 0 ),
		polygon ((112, 111, 109),(112, 111, 109), 0 ),
		polygon ((112, 109, 108),(112, 109, 108), 0 ),
		polygon ((112, 100, 113),(112, 100, 113), 0 ),
		polygon ((100, 112, 108),(100, 112, 108), 0 ),
		polygon ((100, 114, 113),(100, 114, 113), 0 ),
		polygon ((97, 115, 96),(97, 115, 96), 0 ),
		polygon ((97, 116, 115),(97, 116, 115), 0 ),
		polygon ((116, 97, 111),(116, 97, 111), 0 ),
		polygon ((116, 111, 112),(116, 111, 112), 0 ),
		polygon ((117, 116, 112),(117, 116, 112), 0 ),
		polygon ((113, 118, 112),(113, 118, 112), 0 ),
		polygon ((117, 112, 118),(117, 112, 118), 0 ),
		polygon ((118, 113, 114),(118, 113, 114), 0 ),
		polygon ((114, 119, 118),(114, 119, 118), 0 ),
		polygon ((83, 84, 114),(83, 84, 114), 0 ),
		polygon ((119, 114, 84),(119, 114, 84), 0 ),
		polygon ((83, 114, 80),(83, 114, 80), 0 ),
		polygon ((114, 100, 102),(114, 100, 102), 0 ),
		polygon ((100, 71, 102),(100, 71, 102), 0 ),
		polygon ((70, 80, 71),(70, 80, 71), 0 ),
		polygon ((102, 80, 114),(102, 80, 114), 0 )
	)
); /* end of polyset 'Net2' */

polyset goal_post2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = ON,
	opposite = OFF,
	shader = (cush4 ),
	shader = (BUMPER ),
	shader = (WHITEPOST ),
	casts_shadow = TRUE,
	vertices = ((cv((8.197576, 2.501257, 0.0543), 1)),
			(cv((8.197576, 2.501257, -0.0543), 1)),
			(cv((8.197576, 2.296687, -0.0543), 1)),
			(cv((9.370498, 1.238626, 0.0), 1)),
			(cv((9.393654, 1.272513, 0.027879), 1)),
			(cv((9.47291, 1.049741, 0.027879), 1)),
			(cv((8.196649, 2.499232, -0.027879), 1)),
			(cv((9.393654, 1.272513, -0.027879), 1)),
			(cv((9.419667, 1.090958, 0.0), 1)),
			(cv((8.196649, 2.499232, 0.027879), 1)),
			(cv((8.196649, 2.452516, 0.0), 1)),
			(cv((9.47291, 1.049741, -0.027879), 1)),
			(cv((8.197576, 2.296687, 0.0543), 1)),
			(cv((9.622047, 0.869078, 0.053223), 1)),
			(cv((9.622047, 0.869078, -0.053223), 1)),
			(cv((8.196649, 2.296739, -0.053223), 1)),
			(cv((9.653818, 0.916448, -0.053223), 1)),
			(cv((9.653818, 0.916448, 0.053223), 1)),
			(cv((8.196649, 2.36443, 0.053223), 1)),
			(cv((8.196649, 2.296739, 0.053223), 1)),
			(cv((8.196649, 2.36443, -0.053223), 1))	),
	texture_vertices = (
			st( 0.006843, 0.986420 ),
			st( 0.006843, 0.986420 ),
			st( 0.993157, 0.989136 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.900000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 0.008669, 0.283240 ),
			st( 0.008669, 0.283240 ),
			st( 1.000000, 0.500000 ),
			st( 0.984829, 0.283240 ),
			st( 0.984829, 0.283240 ),
			st( 1.000000, 0.500000 ),
			st( 0.900000, 0.000000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 0.902167, 0.279799 ),
			st( 0.900000, 0.500000 ),
			st( 0.902167, 0.279799 ),
			st( 0.900000, 0.500000 ),
			st( 0.993157, 0.752716 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 1.000000 ),
			st( 0.995775, 0.003926 ),
			st( 0.995775, 0.003926 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.750000 ),
			st( 0.000000, 0.250000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 2 ),
		polygon ((3, 4, 5),(3, 4, 5), 2 ),
		polygon ((6, 7, 4),(6, 9, 4), 2 ),
		polygon ((5, 8, 3),(5, 13, 3), 2 ),
		polygon ((4, 9, 6),(4, 14, 6), 2 ),
		polygon ((4, 3, 10),(4, 3, 15), 2 ),
		polygon ((11, 7, 3),(16, 10, 3), 2 ),
		polygon ((11, 5, 4),(17, 5, 4), 2 ),
		polygon ((10, 9, 4),(15, 14, 4), 2 ),
		polygon ((6, 10, 3),(7, 15, 3), 2 ),
		polygon ((3, 7, 6),(3, 11, 8), 2 ),
		polygon ((8, 11, 3),(13, 18, 3), 2 ),
		polygon ((4, 7, 11),(4, 12, 19), 2 ),
		polygon ((2, 12, 0),(2, 20, 0), 2 ),
		polygon ((13, 14, 15),(21, 22, 25), 2 ),
		polygon ((16, 17, 18),(27, 28, 29), 2 ),
		polygon ((13, 15, 19),(21, 25, 30), 2 ),
		polygon ((18, 20, 16),(29, 31, 27), 2 ),
		polygon ((14, 20, 15),(23, 31, 26), 2 ),
		polygon ((18, 17, 13),(29, 28, 21), 2 ),
		polygon ((14, 16, 20),(24, 27, 31), 2 ),
		polygon ((13, 19, 18),(21, 30, 29), 2 )
	)
); /* end of polyset 'goal_post2' */

polyset goal_support2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (BUMPER ),
	shader = (WHITEPOST ),
	shader = (METAL2 ),
	shader = (METAL3 ),
	casts_shadow = TRUE,
	vertices = ((cv((7.082779, 2.286497, 0.679735), 1)),
			(cv((7.082727, 2.286801, 0.545211), 1)),
			(cv((7.21168, 2.374054, -0.679737), 1)),
			(cv((7.211628, 2.286801, -0.545213), 1)),
			(cv((7.211628, 2.286801, 0.545211), 1)),
			(cv((7.21168, 2.286497, 0.679735), 1)),
			(cv((7.226424, 2.296435, 0.666122), 1)),
			(cv((7.21168, 2.374054, 0.679735), 1)),
			(cv((7.226424, 2.36443, 0.666122), 1)),
			(cv((7.082779, 2.374054, 0.679735), 1)),
			(cv((7.082727, 2.374368, 0.545211), 1)),
			(cv((7.082779, 2.374054, -0.679737), 1)),
			(cv((7.082727, 2.374368, -0.545213), 1)),
			(cv((7.226372, 2.296435, 0.562631), 1)),
			(cv((7.211628, 2.374368, 0.545211), 1)),
			(cv((7.226372, 2.36443, 0.562631), 1)),
			(cv((8.116713, 2.296687, 0.0), 1)),
			(cv((8.197576, 2.501257, -0.0543), 1)),
			(cv((8.116713, 2.501257, 0.0), 1)),
			(cv((8.197576, 2.501257, 0.0543), 1)),
			(cv((7.424807, 2.828735, -0.415384), 1)),
			(cv((7.424707, 2.828735, 0.415364), 1)),
			(cv((7.448222, 2.794138, 0.407182), 1)),
			(cv((7.467116, 2.827309, 0.399), 1)),
			(cv((7.467216, 2.827309, -0.399), 1)),
			(cv((7.448322, 2.794138, -0.407202), 1)),
			(cv((8.197576, 2.296687, -0.0543), 1)),
			(cv((8.197576, 2.296687, 0.0543), 1)),
			(cv((7.058862, 2.98681, -0.630248), 1)),
			(cv((8.136407, 2.449849, 0.013271), 1)),
			(cv((8.11763, 2.499806, 0.0), 1)),
			(cv((7.069992, 3.024762, -0.633567), 1)),
			(cv((8.116894, 2.449137, 0.0), 1)),
			(cv((7.226424, 2.296435, -0.666124), 1)),
			(cv((7.226334, 2.36443, 0.562533), 1)),
			(cv((8.196649, 2.36443, -0.053223), 1)),
			(cv((8.196649, 2.36443, 0.053223), 1)),
			(cv((7.21168, 2.286497, -0.679737), 1)),
			(cv((8.196649, 2.296739, 0.053223), 1)),
			(cv((7.226386, 2.296435, 0.666512), 1)),
			(cv((7.226386, 2.364115, 0.666512), 1)),
			(cv((7.069992, 3.025357, 0.635946), 1)),
			(cv((7.058862, 2.987405, 0.632627), 1)),
			(cv((8.196649, 2.296739, -0.053223), 1)),
			(cv((7.226334, 2.296739, 0.562533), 1)),
			(cv((7.226372, 2.36443, -0.562633), 1)),
			(cv((7.226424, 2.36443, -0.666124), 1)),
			(cv((7.211628, 2.374368, -0.545213), 1)),
			(cv((7.071634, 2.979346, -0.655532), 1)),
			(cv((8.136407, 2.449849, -0.013271), 1)),
			(cv((7.226372, 2.296435, -0.562633), 1)),
			(cv((7.071634, 2.979941, 0.657911), 1)),
			(cv((7.082779, 2.286497, -0.679737), 1)),
			(cv((7.082727, 2.286801, -0.545213), 1))	),
	texture_vertices = (
			st( 0.200000, 0.250000 ),
			st( 0.200000, 0.000000 ),
			st( 0.200000, 0.997730 ),
			st( 0.200000, 0.997730 ),
			st( 0.200000, 0.997730 ),
			st( 0.800000, 0.500000 ),
			st( 0.799502, 0.997902 ),
			st( 0.800000, 0.000000 ),
			st( 0.800000, 0.000000 ),
			st( 0.800000, 0.000000 ),
			st( 0.800000, 0.000000 ),
			st( 0.799502, 0.997902 ),
			st( 0.799502, 0.997902 ),
			st( 0.799502, 0.997902 ),
			st( 0.800000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.800000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.200000, 0.500000 ),
			st( 0.200000, 0.750000 ),
			st( 0.200000, 0.500000 ),
			st( 0.200000, 0.750000 ),
			st( 1.000000, 0.000000 ),
			st( 0.999003, 0.998521 ),
			st( 0.999003, 0.998521 ),
			st( 0.800000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 0.989735, 0.515183 ),
			st( 0.008669, 0.745393 ),
			st( 0.570868, 0.708712 ),
			st( 0.011976, 0.513580 ),
			st( 0.015628, 0.516296 ),
			st( 0.244909, 0.504547 ),
			st( 0.017339, 0.735071 ),
			st( 0.023841, 0.705272 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 0.008669, 0.756941 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.984829, 0.763822 ),
			st( 1.000000, 0.000000 ),
			st( 0.984829, 0.763822 ),
			st( 0.989163, 0.745393 ),
			st( 0.393147, 0.732797 ),
			st( 0.000000, 0.750000 ),
			st( 0.997833, 0.745393 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.995775, 0.003926 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.505432 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.800000, 0.250000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.750000 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 1.000000, 1.000000 ),
			st( 0.995775, 0.003926 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.505432 ),
			st( 1.000000, 0.505432 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.500000 ),
			st( 0.800000, 0.750000 ),
			st( 0.006502, 0.738511 ),
			st( 0.000000, 1.000000 ),
			st( 0.982661, 0.745393 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.982661, 0.745393 ),
			st( 0.999003, 0.998521 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.002167, 0.752274 ),
			st( 0.000000, 1.000000 ),
			st( 0.200000, 0.250000 ),
			st( 0.200000, 0.997730 ),
			st( 0.200000, 0.000000 ),
			st( 0.200000, 0.000000 ),
			st( 0.200000, 0.997730 ) ),
	polygons = (
		polygon ((0, 1),(0, 1), 0 ),
		polygon ((0),(0), 0 ),
		polygon ((4, 1, 0),(10, 1, 0), 0 ),
		polygon ((0, 5, 4),(0, 14, 10), 0 ),
		polygon ((6, 5, 7),(15, 14, 16), 0 ),
		polygon ((7, 8, 6),(16, 17, 15), 0 ),
		polygon ((9, 7, 5),(18, 16, 14), 0 ),
		polygon ((5, 0, 9),(14, 0, 18), 0 ),
		polygon ((10, 9),(19, 18), 0 ),
		polygon ((10),(19), 0 ),
		polygon ((13, 4, 5),(22, 10, 14), 0 ),
		polygon ((5, 6, 13),(14, 15, 22), 0 ),
		polygon ((9, 0),(18, 0), 0 ),
		polygon ((0),(0), 0 ),
		polygon ((14, 7, 9),(25, 16, 18), 0 ),
		polygon ((14, 9, 10),(25, 18, 19), 0 ),
		polygon ((1, 10),(2, 19), 0 ),
		polygon ((1),(3), 0 ),
		polygon ((10, 1, 4),(19, 4, 11), 0 ),
		polygon ((4, 14, 10),(12, 25, 19), 0 ),
		polygon ((14, 4, 13),(25, 13, 23), 0 ),
		polygon ((13, 15, 14),(24, 26, 25), 0 ),
		polygon ((14, 15, 8),(25, 26, 17), 0 ),
		polygon ((8, 7, 14),(17, 16, 25), 0 ),
		polygon ((16, 17, 18),(27, 28, 30), 1 ),
		polygon ((16, 18, 19),(27, 31, 33), 1 ),
		polygon ((20, 21, 22),(35, 36, 37), 1 ),
		polygon ((23, 24, 25),(39, 40, 41), 1 ),
		polygon ((20, 24, 23),(35, 40, 39), 1 ),
		polygon ((23, 21, 20),(39, 36, 35), 1 ),
		polygon ((52, 11),(105, 20), 0 ),
		polygon ((19, 27, 16),(33, 45, 27), 1 ),
		polygon ((22, 25, 20),(37, 42, 35), 1 ),
		polygon ((22, 23, 25),(38, 39, 43), 1 ),
		polygon ((43, 35, 46),(71, 60, 85), 1 ),
		polygon ((50, 3, 47),(98, 6, 91), 0 ),
		polygon ((53),(106), 0 ),
		polygon ((34, 35, 36),(59, 60, 61), 1 ),
		polygon ((47, 45, 50),(91, 80, 98), 0 ),
		polygon ((38, 39, 40),(66, 67, 68), 1 ),
		polygon ((3, 53, 12),(6, 106, 21), 0 ),
		polygon ((40, 36, 38),(68, 61, 66), 1 ),
		polygon ((12, 47, 3),(21, 91, 6), 0 ),
		polygon ((43, 44, 39),(72, 78, 67), 1 ),
		polygon ((47, 2, 46),(91, 5, 86), 0 ),
		polygon ((39, 38, 43),(67, 66, 73), 1 ),
		polygon ((46, 45, 47),(87, 80, 91), 0 ),
		polygon ((41, 42, 32),(69, 70, 52), 1 ),
		polygon ((17, 16, 26),(28, 27, 44), 1 ),
		polygon ((32, 28, 31),(52, 46, 51), 1 ),
		polygon ((45, 46, 35),(81, 88, 60), 1 ),
		polygon ((35, 36, 45),(60, 62, 82), 1 ),
		polygon ((38, 43, 33),(66, 74, 53), 1 ),
		polygon ((38, 50, 45),(66, 99, 83), 1 ),
		polygon ((45, 36, 38),(84, 63, 66), 1 ),
		polygon ((29, 51, 41),(47, 103, 69), 1 ),
		polygon ((17, 19, 18),(29, 34, 32), 1 ),
		polygon ((41, 30, 29),(69, 50, 47), 1 ),
		polygon ((2, 37, 33),(5, 65, 54), 0 ),
		polygon ((31, 48, 49),(51, 92, 94), 1 ),
		polygon ((49, 48, 28),(95, 93, 46), 1 ),
		polygon ((46, 33, 43),(89, 55, 75), 1 ),
		polygon ((33, 46, 2),(56, 90, 5), 0 ),
		polygon ((29, 32, 42),(48, 52, 70), 1 ),
		polygon ((34, 44, 43),(59, 79, 76), 1 ),
		polygon ((52),(105), 0 ),
		polygon ((42, 51, 29),(70, 104, 49), 1 ),
		polygon ((32, 30, 41),(52, 50, 69), 1 ),
		polygon ((11, 2, 47),(20, 5, 91), 0 ),
		polygon ((12, 11, 47),(21, 20, 91), 0 ),
		polygon ((33, 50, 38),(57, 100, 66), 1 ),
		polygon ((28, 32, 49),(46, 52, 96), 1 ),
		polygon ((31, 30, 32),(51, 50, 52), 1 ),
		polygon ((49, 30, 31),(97, 50, 51), 1 ),
		polygon ((53, 52),(107, 105), 0 ),
		polygon ((52),(105), 0 ),
		polygon ((37, 2, 11),(65, 5, 20), 0 ),
		polygon ((11, 52, 37),(20, 105, 65), 0 ),
		polygon ((3, 37, 52),(7, 65, 105), 0 ),
		polygon ((52, 53, 3),(105, 108, 8), 0 ),
		polygon ((11, 12),(20, 21), 0 ),
		polygon ((12),(21), 0 ),
		polygon ((37, 3, 50),(65, 9, 101), 0 ),
		polygon ((50, 33, 37),(102, 58, 65), 0 ),
		polygon ((43, 35, 34),(77, 60, 59), 1 ),
		polygon ((36, 40, 34),(64, 68, 59), 1 ),
		polygon ((12, 53),(21, 109), 0 )
	)
); /* end of polyset 'goal_support2' */

polyset Rim2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (ORANGE ),
	shader = (HOOP ),
	casts_shadow = TRUE,
	vertices = ((cv((7.040381, 2.322238, 0.0), 1)),
			(cv((6.972044, 2.322238, 0.0), 1)),
			(cv((7.040381, 2.277873, 0.0), 1)),
			(cv((6.972044, 2.322238, 0.047477), 1)),
			(cv((6.972044, 2.322238, -0.042514), 1)),
			(cv((7.040381, 2.322238, -0.042416), 1)),
			(cv((7.040381, 2.322238, 0.047368), 1)),
			(cv((6.835241, 2.322238, 0.189638), 1)),
			(cv((6.953061, 2.301843, -0.042416), 1)),
			(cv((6.92197, 2.322238, 0.139564), 1)),
			(cv((6.92197, 2.322238, -0.134041), 1)),
			(cv((6.908169, 2.301843, -0.120171), 1)),
			(cv((6.953061, 2.301843, 0.047368), 1)),
			(cv((6.830414, 2.301843, -0.165063), 1)),
			(cv((6.830414, 2.342989, -0.165063), 1)),
			(cv((6.908169, 2.342989, -0.120171), 1)),
			(cv((6.953061, 2.342989, -0.042416), 1)),
			(cv((6.953061, 2.342989, 0.047368), 1)),
			(cv((6.908169, 2.342989, 0.125123), 1)),
			(cv((6.908169, 2.301843, 0.125123), 1)),
			(cv((6.830414, 2.342989, 0.170015), 1)),
			(cv((6.830414, 2.301843, 0.170015), 1)),
			(cv((6.662875, 2.342989, -0.120171), 1)),
			(cv((6.74063, 2.342989, -0.165063), 1)),
			(cv((6.74063, 2.301843, -0.165063), 1)),
			(cv((6.74063, 2.342989, 0.170015), 1)),
			(cv((6.74063, 2.301843, 0.170015), 1)),
			(cv((6.662875, 2.301843, 0.125123), 1)),
			(cv((6.662875, 2.342989, 0.125123), 1)),
			(cv((6.617983, 2.301843, 0.047368), 1)),
			(cv((6.617983, 2.342989, 0.047368), 1)),
			(cv((6.617983, 2.342989, -0.042416), 1)),
			(cv((6.617983, 2.301843, -0.042416), 1)),
			(cv((6.662875, 2.301843, -0.120171), 1)),
			(cv((6.835241, 2.322238, -0.184115), 1)),
			(cv((6.735094, 2.322238, -0.184115), 1)),
			(cv((6.648365, 2.322238, -0.134041), 1)),
			(cv((6.598291, 2.322238, -0.047312), 1)),
			(cv((6.598291, 2.322238, 0.052835), 1)),
			(cv((6.648365, 2.322238, 0.139564), 1)),
			(cv((6.735094, 2.322238, 0.189638), 1))	),
	texture_vertices = (
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.500000, 0.000000 ),
			st( 0.967775, 0.749460 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.002079, 0.759382 ),
			st( 1.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 0.005198, 0.006656 ),
			st( 0.967775, 0.008639 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ) ),
	polygons = (
		polygon ((2, 1, 0),(2, 1, 0), 0 ),
		polygon ((3, 4, 5),(3, 12, 17), 0 ),
		polygon ((5, 6, 3),(17, 18, 3), 0 ),
		polygon ((13, 11, 10),(25, 23, 22), 1 ),
		polygon ((4, 8, 3),(13, 20, 4), 1 ),
		polygon ((10, 11, 8),(22, 23, 20), 1 ),
		polygon ((8, 4, 10),(20, 14, 22), 1 ),
		polygon ((3, 8, 12),(5, 20, 24), 1 ),
		polygon ((13, 14, 11),(25, 26, 23), 1 ),
		polygon ((11, 14, 15),(23, 26, 27), 1 ),
		polygon ((15, 8, 11),(27, 20, 23), 1 ),
		polygon ((15, 16, 8),(27, 28, 20), 1 ),
		polygon ((16, 17, 8),(28, 29, 20), 1 ),
		polygon ((8, 17, 12),(20, 29, 24), 1 ),
		polygon ((12, 17, 18),(24, 29, 30), 1 ),
		polygon ((18, 19, 12),(30, 31, 24), 1 ),
		polygon ((19, 18, 20),(31, 30, 32), 1 ),
		polygon ((20, 21, 19),(32, 33, 31), 1 ),
		polygon ((22, 23, 24),(34, 35, 36), 1 ),
		polygon ((25, 21, 20),(37, 33, 32), 1 ),
		polygon ((21, 25, 26),(33, 37, 38), 1 ),
		polygon ((23, 13, 24),(35, 25, 36), 1 ),
		polygon ((23, 14, 13),(35, 26, 25), 1 ),
		polygon ((25, 27, 26),(37, 39, 38), 1 ),
		polygon ((25, 28, 27),(37, 40, 39), 1 ),
		polygon ((27, 28, 29),(39, 40, 41), 1 ),
		polygon ((29, 28, 30),(41, 40, 42), 1 ),
		polygon ((29, 30, 31),(41, 42, 43), 1 ),
		polygon ((31, 32, 29),(43, 44, 41), 1 ),
		polygon ((32, 31, 33),(44, 43, 45), 1 ),
		polygon ((33, 31, 22),(45, 43, 34), 1 ),
		polygon ((22, 24, 33),(34, 36, 45), 1 ),
		polygon ((16, 10, 4),(28, 22, 15), 1 ),
		polygon ((10, 16, 15),(22, 28, 27), 1 ),
		polygon ((10, 15, 14),(22, 27, 26), 1 ),
		polygon ((14, 34, 10),(26, 46, 22), 1 ),
		polygon ((14, 35, 34),(26, 47, 46), 1 ),
		polygon ((35, 14, 23),(47, 26, 35), 1 ),
		polygon ((35, 23, 22),(47, 35, 34), 1 ),
		polygon ((22, 36, 35),(34, 48, 47), 1 ),
		polygon ((22, 37, 36),(34, 49, 48), 1 ),
		polygon ((37, 22, 31),(49, 34, 43), 1 ),
		polygon ((37, 31, 30),(49, 43, 42), 1 ),
		polygon ((30, 38, 37),(42, 50, 49), 1 ),
		polygon ((30, 39, 38),(42, 51, 50), 1 ),
		polygon ((39, 30, 28),(51, 42, 40), 1 ),
		polygon ((39, 28, 25),(51, 40, 37), 1 ),
		polygon ((25, 40, 39),(37, 52, 51), 1 ),
		polygon ((25, 7, 40),(37, 19, 52), 1 ),
		polygon ((7, 25, 20),(19, 37, 32), 1 ),
		polygon ((7, 20, 18),(19, 32, 30), 1 ),
		polygon ((18, 9, 7),(30, 21, 19), 1 ),
		polygon ((18, 3, 9),(30, 6, 21), 1 ),
		polygon ((3, 18, 17),(7, 30, 29), 1 ),
		polygon ((3, 17, 16),(8, 29, 28), 1 ),
		polygon ((16, 4, 3),(28, 16, 9), 1 ),
		polygon ((19, 9, 3),(31, 21, 10), 1 ),
		polygon ((3, 12, 19),(11, 24, 31), 1 ),
		polygon ((19, 7, 9),(31, 19, 21), 1 ),
		polygon ((19, 21, 7),(31, 33, 19), 1 ),
		polygon ((21, 26, 7),(33, 38, 19), 1 ),
		polygon ((40, 7, 26),(52, 19, 38), 1 ),
		polygon ((26, 27, 39),(38, 39, 51), 1 ),
		polygon ((39, 40, 26),(51, 52, 38), 1 ),
		polygon ((39, 27, 29),(51, 39, 41), 1 ),
		polygon ((29, 38, 39),(41, 50, 51), 1 ),
		polygon ((38, 29, 37),(50, 41, 49), 1 ),
		polygon ((37, 29, 32),(49, 41, 44), 1 ),
		polygon ((33, 37, 32),(45, 49, 44), 1 ),
		polygon ((37, 33, 36),(49, 45, 48), 1 ),
		polygon ((35, 33, 24),(47, 45, 36), 1 ),
		polygon ((33, 35, 36),(45, 47, 48), 1 ),
		polygon ((13, 35, 24),(25, 47, 36), 1 ),
		polygon ((35, 13, 34),(47, 25, 46), 1 ),
		polygon ((10, 34, 13),(22, 46, 25), 1 )
	)
); /* end of polyset 'Rim2' */

polyset decals2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (NBAdecal ),
	casts_shadow = TRUE,
	vertices = ((cv((7.056166, 2.308076, -0.505139), 1)),
			(cv((7.056166, 2.470653, -0.505139), 1)),
			(cv((7.056166, 2.470653, -0.576603), 1)),
			(cv((7.056166, 2.308076, -0.576603), 1)),
			(cv((7.047003, 2.308076, -0.576436), 1)),
			(cv((7.047003, 2.470653, -0.576436), 1)),
			(cv((7.047003, 2.470653, -0.504972), 1)),
			(cv((7.047003, 2.308076, -0.504972), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 0 ),
		polygon ((6, 7, 4),(6, 7, 4), 0 )
	)
); /* end of polyset 'decals2' */

polyset BackBoard2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (seal ),
	shader = (TARGET ),
	shader = (METAL4 ),
	shader = (BackPad ),
	casts_shadow = TRUE,
	vertices = ((cv((7.072435, 2.288114, -0.596734), 1)),
			(cv((7.03132, 2.288114, -0.596734), 1)),
			(cv((7.03132, 2.964677, -0.596734), 1)),
			(cv((7.072435, 2.964677, -0.596734), 1)),
			(cv((7.072435, 2.288114, 0.596731), 1)),
			(cv((7.072435, 2.964677, 0.596734), 1)),
			(cv((7.03132, 2.964677, 0.596734), 1)),
			(cv((7.053118, 2.355915, -0.162836), 1)),
			(cv((7.053118, 2.617597, -0.19919), 1)),
			(cv((7.053118, 2.3197, -0.19919), 1)),
			(cv((7.020486, 2.199556, 0.684449), 1)),
			(cv((7.020486, 2.259842, 0.627439), 1)),
			(cv((7.072435, 3.026545, -0.658603), 1)),
			(cv((7.072435, 2.226245, -0.658603), 1)),
			(cv((7.020243, 2.199557, -0.682247), 1)),
			(cv((7.020243, 2.259842, -0.62524), 1)),
			(cv((7.072435, 2.226245, 0.6586), 1)),
			(cv((7.072435, 3.026545, 0.658603), 1)),
			(cv((7.03132, 2.226245, 0.6586), 1)),
			(cv((7.03132, 2.226245, -0.658603), 1)),
			(cv((7.084058, 2.259842, -0.62524), 1)),
			(cv((7.03132, 3.026545, -0.658603), 1)),
			(cv((7.084058, 2.199557, -0.682247), 1)),
			(cv((7.084058, 2.199556, 0.684449), 1)),
			(cv((7.03132, 3.026545, 0.658603), 1)),
			(cv((7.03132, 2.288114, 0.596731), 1)),
			(cv((7.084058, 2.259842, 0.627439), 1)),
			(cv((7.053118, 2.581363, -0.162836), 1)),
			(cv((7.050124, 2.355915, -0.162836), 1)),
			(cv((7.050124, 2.355915, 0.162956), 1)),
			(cv((7.050124, 2.3197, 0.19919), 1)),
			(cv((7.053118, 2.3197, 0.19919), 1)),
			(cv((7.053118, 2.355915, 0.162956), 1)),
			(cv((7.050124, 2.3197, -0.19919), 1)),
			(cv((7.050124, 2.617597, -0.19919), 1)),
			(cv((7.053118, 2.617597, 0.19919), 1)),
			(cv((7.053118, 2.581363, 0.162956), 1)),
			(cv((7.050124, 2.581363, -0.162836), 1)),
			(cv((7.050124, 2.581363, 0.162956), 1)),
			(cv((7.050124, 2.617597, 0.19919), 1)),
			(cv((7.020323, 2.627634, -0.62524), 1)),
			(cv((7.020323, 2.627634, -0.684502), 1)),
			(cv((7.084058, 2.627634, -0.684502), 1)),
			(cv((7.084058, 2.627634, -0.62524), 1)),
			(cv((7.020323, 2.627634, 0.627439), 1)),
			(cv((7.084058, 2.627634, 0.627439), 1)),
			(cv((7.084058, 2.627634, 0.685076), 1)),
			(cv((7.020323, 2.627634, 0.685076), 1))	),
	texture_vertices = (
			st( 1.000000, 0.000000 ),
			st( 0.010265, 0.513449 ),
			st( 0.010265, 0.513449 ),
			st( 0.006843, 0.559621 ),
			st( 0.006843, 0.559621 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.989735, 0.521597 ),
			st( 0.993157, 0.516165 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.991446, 0.521597 ),
			st( 0.996578, 0.540609 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.006843, 0.524313 ),
			st( 0.008554, 0.535177 ),
			st( 0.006843, 0.524313 ),
			st( 0.008554, 0.535177 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.750000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 0.000000 ),
			st( 0.250000, 0.000000 ),
			st( 0.750000, 1.000000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.993157, 0.005954 ),
			st( 0.991446, 0.008670 ),
			st( 0.991446, 0.008670 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.010265, 0.005954 ),
			st( 0.001711, 0.008670 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.250000, 0.500000 ),
			st( 0.750000, 0.000000 ),
			st( 0.750000, 0.000000 ),
			st( 0.250000, 1.000000 ),
			st( 0.750000, 0.500000 ),
			st( 0.750000, 0.500000 ),
			st( 0.750000, 0.500000 ),
			st( 0.991446, 0.011386 ),
			st( 0.993157, 0.011386 ),
			st( 0.993157, 0.011386 ),
			st( 0.991446, 0.011386 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.010265, 0.014102 ),
			st( 0.010265, 0.016818 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.750000, 1.000000 ),
			st( 0.750000, 0.000000 ),
			st( 0.750000, 0.000000 ),
			st( 0.750000, 0.000000 ),
			st( 1.000000, 0.500000 ),
			st( 0.750000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 0.000000 ),
			st( 0.250000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.250000, 1.000000 ),
			st( 0.250000, 0.000000 ),
			st( 0.250000, 0.000000 ),
			st( 0.250000, 0.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.032450, 0.489109 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.030905, 0.061622 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.270643, 0.058326 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.270643, 0.485812 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.270643, 0.485812 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.500000 ),
			st( 0.032450, 0.489109 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.030905, 0.061622 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.270643, 0.058326 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.500000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 6, 7), 0 ),
		polygon ((2, 3, 0),(7, 11, 0), 0 ),
		polygon ((4, 5, 6),(16, 22, 28), 0 ),
		polygon ((7, 8, 9),(29, 30, 31), 1 ),
		polygon ((0, 3, 12),(1, 12, 41), 2 ),
		polygon ((12, 13, 0),(41, 47, 2), 2 ),
		polygon ((5, 4, 16),(23, 17, 58), 2 ),
		polygon ((5, 17, 12),(24, 64, 42), 2 ),
		polygon ((0, 13, 16),(3, 48, 59), 2 ),
		polygon ((0, 16, 4),(4, 60, 18), 2 ),
		polygon ((16, 17, 5),(61, 65, 25), 2 ),
		polygon ((12, 3, 5),(43, 13, 26), 2 ),
		polygon ((18, 19, 1),(68, 69, 6), 2 ),
		polygon ((21, 2, 1),(74, 8, 6), 2 ),
		polygon ((6, 24, 18),(28, 79, 68), 2 ),
		polygon ((25, 18, 1),(80, 68, 6), 2 ),
		polygon ((13, 12, 21),(49, 44, 74), 2 ),
		polygon ((24, 21, 12),(79, 74, 45), 2 ),
		polygon ((21, 19, 13),(74, 69, 50), 2 ),
		polygon ((12, 17, 24),(46, 66, 79), 2 ),
		polygon ((24, 17, 16),(79, 67, 62), 2 ),
		polygon ((0, 4, 1),(5, 19, 6), 0 ),
		polygon ((6, 25, 4),(28, 81, 20), 0 ),
		polygon ((16, 18, 24),(63, 68, 79), 2 ),
		polygon ((18, 25, 6),(68, 82, 28), 2 ),
		polygon ((21, 24, 6),(74, 79, 28), 2 ),
		polygon ((6, 2, 21),(28, 9, 74), 2 ),
		polygon ((1, 19, 21),(6, 69, 74), 2 ),
		polygon ((27, 8, 7),(88, 30, 29), 1 ),
		polygon ((28, 29, 30),(89, 90, 91), 1 ),
		polygon ((31, 32, 7),(92, 93, 29), 1 ),
		polygon ((33, 34, 28),(94, 95, 89), 1 ),
		polygon ((35, 36, 32),(96, 97, 93), 1 ),
		polygon ((35, 8, 36),(96, 30, 97), 1 ),
		polygon ((32, 31, 35),(93, 92, 96), 1 ),
		polygon ((37, 34, 38),(98, 95, 99), 1 ),
		polygon ((29, 38, 39),(90, 99, 100), 1 ),
		polygon ((39, 30, 29),(100, 91, 90), 1 ),
		polygon ((38, 34, 39),(99, 95, 100), 1 ),
		polygon ((36, 8, 27),(97, 30, 88), 1 ),
		polygon ((7, 9, 31),(29, 31, 92), 1 ),
		polygon ((28, 34, 37),(89, 95, 98), 1 ),
		polygon ((3, 2, 6),(14, 10, 28), 0 ),
		polygon ((6, 5, 3),(28, 27, 15), 0 ),
		polygon ((4, 25, 1),(21, 83, 6), 0 ),
		polygon ((30, 33, 28),(91, 94, 89), 1 ),
		polygon ((40, 41, 42),(101, 105, 110), 3 ),
		polygon ((42, 43, 40),(110, 114, 101), 3 ),
		polygon ((44, 45, 46),(117, 121, 126), 3 ),
		polygon ((46, 47, 44),(126, 130, 117), 3 ),
		polygon ((44, 47, 10),(118, 131, 32), 3 ),
		polygon ((10, 11, 44),(32, 37, 119), 3 ),
		polygon ((11, 10, 14),(37, 32, 51), 3 ),
		polygon ((14, 15, 11),(51, 54, 37), 3 ),
		polygon ((15, 14, 41),(54, 51, 106), 3 ),
		polygon ((41, 40, 15),(107, 102, 54), 3 ),
		polygon ((20, 43, 42),(70, 115, 111), 3 ),
		polygon ((42, 22, 20),(112, 75, 70), 3 ),
		polygon ((23, 46, 45),(76, 127, 122), 3 ),
		polygon ((45, 26, 23),(123, 84, 76), 3 ),
		polygon ((20, 22, 23),(70, 75, 76), 3 ),
		polygon ((23, 26, 20),(76, 84, 70), 3 ),
		polygon ((41, 14, 22),(108, 52, 75), 3 ),
		polygon ((22, 42, 41),(75, 113, 109), 3 ),
		polygon ((10, 47, 46),(33, 132, 128), 3 ),
		polygon ((46, 23, 10),(129, 77, 34), 3 ),
		polygon ((10, 23, 22),(35, 78, 75), 3 ),
		polygon ((22, 14, 10),(75, 53, 36), 3 ),
		polygon ((45, 44, 11),(124, 120, 38), 3 ),
		polygon ((11, 26, 45),(39, 85, 125), 3 ),
		polygon ((15, 20, 26),(55, 71, 86), 3 ),
		polygon ((26, 11, 15),(87, 40, 56), 3 ),
		polygon ((20, 15, 40),(72, 57, 103), 3 ),
		polygon ((40, 43, 20),(104, 116, 73), 3 )
	)
); /* end of polyset 'BackBoard2' */

polyset goal_base2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (WHITEPOST ),
	shader = (cush4 ),
	casts_shadow = TRUE,
	vertices = ((cv((9.557302, 0.81147, 0.195815), 1)),
			(cv((9.557302, 0.81147, -0.195588), 1)),
			(cv((9.557302, 0.915917, -0.195664), 1)),
			(cv((9.557302, 0.915917, 0.195891), 1)),
			(cv((9.662306, 0.81147, 0.195815), 1)),
			(cv((9.662306, 0.915917, 0.195891), 1)),
			(cv((9.662306, 0.915917, -0.195664), 1)),
			(cv((9.662306, 0.81147, -0.195588), 1)),
			(cv((9.542052, 0.811042, -0.23185), 1)),
			(cv((9.542052, 0.399368, -0.401548), 1)),
			(cv((9.686209, 0.399368, -0.401548), 1)),
			(cv((9.686209, 0.811042, -0.23185), 1)),
			(cv((9.686209, 0.811042, -0.106521), 1)),
			(cv((9.686209, 0.399368, -0.276219), 1)),
			(cv((9.542052, 0.811042, -0.106521), 1)),
			(cv((9.542052, 0.399368, -0.276219), 1)),
			(cv((9.686209, 0.399368, 0.401548), 1)),
			(cv((9.542052, 0.399368, 0.401548), 1)),
			(cv((9.542052, 0.811042, 0.23185), 1)),
			(cv((9.686209, 0.811042, 0.23185), 1)),
			(cv((9.686209, 0.811042, 0.106521), 1)),
			(cv((9.686209, 0.399368, 0.276219), 1)),
			(cv((9.542052, 0.811042, 0.106521), 1)),
			(cv((9.542052, 0.399368, 0.276219), 1)),
			(cv((9.013845, 0.883183, -0.201984), 1)),
			(cv((9.013845, 0.883183, 0.198972), 1)),
			(cv((9.013845, 1.31545, 0.198972), 1)),
			(cv((9.013845, 1.31545, -0.201984), 1)),
			(cv((9.013845, 0.399459, -0.402842), 1)),
			(cv((9.013845, 0.399459, 0.39983), 1)),
			(cv((8.814133, 1.31545, 0.0), 1)),
			(cv((8.814133, 1.31545, -0.201984), 1)),
			(cv((9.013845, 1.31545, 0.0), 1)),
			(cv((8.814133, 1.31545, 0.198972), 1)),
			(cv((10.670945, 0.000006, -0.403329), 1)),
			(cv((10.670946, 0.000006, 0.0), 1)),
			(cv((10.670945, 0.39915, 0.0), 1)),
			(cv((10.670945, 0.39915, -0.403329), 1)),
			(cv((10.670945, 0.000006, 0.400317), 1)),
			(cv((10.670945, 0.39915, 0.400317), 1)),
			(cv((8.814133, 0.000006, 0.400317), 1)),
			(cv((8.814133, 0.399459, -0.402842), 1)),
			(cv((8.814133, 0.399459, 0.39983), 1)),
			(cv((8.814133, 0.883183, -0.201984), 1)),
			(cv((8.814133, 0.883183, 0.198972), 1)),
			(cv((8.814133, 0.000006, -0.403329), 1)),
			(cv((8.953893, 1.315352, -0.083869), 1)),
			(cv((9.005751, 1.315352, -0.083869), 1)),
			(cv((8.953893, 1.760046, -0.083869), 1)),
			(cv((9.005751, 1.760046, -0.083869), 1)),
			(cv((9.005751, 1.315352, 0.052033), 1)),
			(cv((9.005751, 1.760046, 0.052033), 1)),
			(cv((8.953893, 1.760046, 0.052033), 1)),
			(cv((8.953893, 1.315352, 0.052033), 1)),
			(cv((8.953893, 1.760046, 0.083855), 1)),
			(cv((9.005751, 1.760046, 0.083855), 1)),
			(cv((8.953893, 1.760046, -0.052047), 1)),
			(cv((9.005751, 1.760046, -0.052047), 1)),
			(cv((9.005751, 1.315352, -0.052047), 1)),
			(cv((8.953893, 1.315352, -0.052047), 1)),
			(cv((9.005751, 1.315352, 0.083855), 1)),
			(cv((8.953893, 1.315352, 0.083855), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 0.316431, 0.027525 ),
			st( 1.000000, 0.000000 ),
			st( 0.316431, 0.027525 ),
			st( 1.000000, 0.250000 ),
			st( 0.316431, 0.267143 ),
			st( 0.316431, 0.267143 ),
			st( 0.000000, 0.250000 ),
			st( 0.316431, 0.267143 ),
			st( 0.316431, 0.267143 ),
			st( 0.000000, 0.750000 ),
			st( 0.705243, 0.027525 ),
			st( 0.705243, 0.027525 ),
			st( 0.000000, 0.500000 ),
			st( 0.705243, 0.267143 ),
			st( 1.000000, 0.500000 ),
			st( 0.705243, 0.267143 ),
			st( 1.000000, 0.750000 ),
			st( 0.705243, 0.027525 ),
			st( 0.705243, 0.027525 ),
			st( 1.000000, 0.250000 ),
			st( 0.364112, 0.542395 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.364112, 0.233964 ),
			st( 0.364112, 0.233964 ),
			st( 1.000000, 1.000000 ),
			st( 0.568701, 0.233964 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 1.000000 ),
			st( 0.993662, 0.010634 ),
			st( 0.575203, 0.549276 ),
			st( 0.575203, 0.549276 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.364112, 0.542395 ),
			st( 1.000000, 0.500000 ),
			st( 0.364112, 0.233964 ),
			st( 0.364112, 0.233964 ),
			st( 1.000000, 0.750000 ),
			st( 0.568701, 0.233964 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 1.000000 ),
			st( 0.997887, 0.000573 ),
			st( 0.575203, 0.549276 ),
			st( 0.575203, 0.549276 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 0.961765, 0.682541 ),
			st( 0.571782, 0.731341 ),
			st( 0.571782, 0.731341 ),
			st( 0.570110, 0.731341 ),
			st( 0.726952, 0.683213 ),
			st( 0.574240, 0.700595 ),
			st( 0.574240, 0.700595 ),
			st( 0.726952, 0.997310 ),
			st( 0.574648, 0.996116 ),
			st( 0.574900, 0.997798 ),
			st( 0.574900, 0.997798 ),
			st( 0.964496, 0.997774 ),
			st( 0.574648, 0.996116 ),
			st( 0.574648, 0.996116 ),
			st( 0.570957, 0.999119 ),
			st( 0.964496, 0.345047 ),
			st( 0.570110, 0.355653 ),
			st( 0.570110, 0.355653 ),
			st( 0.560652, 0.364603 ),
			st( 0.725662, 0.345634 ),
			st( 0.561841, 1.000000 ),
			st( 0.561841, 1.000000 ),
			st( 0.571405, 0.364065 ),
			st( 0.571405, 0.364065 ),
			st( 0.704249, 0.871387 ),
			st( 0.704190, 0.996506 ),
			st( 0.699159, 1.000000 ),
			st( 0.699580, 0.999791 ),
			st( 0.699580, 0.999791 ),
			st( 0.574479, 0.870934 ),
			st( 0.704190, 0.996506 ),
			st( 0.962701, 0.997573 ),
			st( 0.962701, 0.997573 ),
			st( 0.699455, 0.997775 ),
			st( 0.005248, 0.002385 ),
			st( 0.002926, 0.000000 ),
			st( 0.295500, 0.002385 ),
			st( 0.295500, 0.370420 ),
			st( 0.005248, 0.370420 ),
			st( 0.002926, 0.355494 ),
			st( 0.002926, 0.355494 ),
			st( 0.002228, 0.365902 ),
			st( 0.002228, 0.365902 ),
			st( 0.005248, 0.002385 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.005248, 0.370420 ),
			st( 0.000000, 1.000000 ),
			st( 0.002049, 0.365119 ),
			st( 0.996744, 0.001706 ),
			st( 0.699212, 0.000000 ),
			st( 0.697936, 0.365525 ),
			st( 0.695623, 0.352699 ),
			st( 0.699580, 0.355653 ),
			st( 0.995530, 0.365291 ),
			st( 0.699436, 0.365980 ),
			st( 0.699436, 0.365980 ),
			st( 0.700346, 0.364938 ),
			st( 0.697937, 0.699329 ),
			st( 0.699580, 0.731341 ),
			st( 0.699580, 0.731341 ),
			st( 0.699580, 0.731341 ),
			st( 0.967997, 0.698498 ),
			st( 0.967801, 0.698498 ),
			st( 0.700393, 0.700648 ),
			st( 0.700393, 0.700648 ),
			st( 0.700393, 0.700648 ),
			st( 0.700393, 0.700648 ),
			st( 0.699159, 0.001900 ),
			st( 0.695623, 0.001347 ),
			st( 0.695623, 0.001347 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 0.500000 ),
			st( 0.457387, 0.133831 ),
			st( 0.457387, 0.133831 ),
			st( 1.000000, 0.750000 ),
			st( 0.455496, 0.647953 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 0.002832, 0.003999 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.996219, 0.009542 ),
			st( 0.797702, 0.651839 ),
			st( 0.797702, 0.651839 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.790139, 0.147953 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.457387, 0.133831 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.455496, 0.647953 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.250000 ),
			st( 0.790139, 0.147953 ),
			st( 0.996219, 0.009542 ),
			st( 0.797702, 0.651839 ),
			st( 0.797702, 0.651839 ),
			st( 1.000000, 1.000000 ),
			st( 0.002832, 0.003999 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.750000 ),
			st( 0.000000, 0.500000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 2, 4), 0 ),
		polygon ((2, 3, 0),(4, 7, 0), 0 ),
		polygon ((4, 5, 6),(10, 13, 15), 0 ),
		polygon ((6, 7, 4),(15, 17, 10), 0 ),
		polygon ((5, 3, 2),(13, 7, 4), 0 ),
		polygon ((2, 6, 5),(4, 15, 13), 0 ),
		polygon ((8, 9, 10),(20, 22, 23), 0 ),
		polygon ((10, 11, 8),(23, 24, 20), 0 ),
		polygon ((12, 11, 10),(27, 24, 23), 0 ),
		polygon ((10, 13, 12),(23, 29, 27), 0 ),
		polygon ((14, 12, 13),(30, 27, 29), 0 ),
		polygon ((13, 15, 14),(29, 34, 30), 0 ),
		polygon ((8, 14, 15),(20, 31, 35), 0 ),
		polygon ((15, 9, 8),(36, 22, 20), 0 ),
		polygon ((16, 17, 18),(37, 38, 39), 0 ),
		polygon ((18, 19, 16),(39, 41, 37), 0 ),
		polygon ((16, 19, 20),(37, 41, 44), 0 ),
		polygon ((20, 21, 16),(44, 46, 37), 0 ),
		polygon ((21, 20, 22),(46, 44, 47), 0 ),
		polygon ((22, 23, 21),(47, 51, 46), 0 ),
		polygon ((23, 22, 18),(52, 48, 39), 0 ),
		polygon ((18, 17, 23),(39, 38, 53), 0 ),
		polygon ((7, 6, 2),(18, 16, 5), 0 ),
		polygon ((2, 1, 7),(6, 3, 19), 0 ),
		polygon ((3, 5, 4),(8, 14, 11), 0 ),
		polygon ((4, 0, 3),(12, 1, 9), 0 ),
		polygon ((19, 18, 22),(42, 40, 49), 0 ),
		polygon ((20, 19, 22),(45, 43, 50), 0 ),
		polygon ((14, 8, 11),(32, 21, 25), 0 ),
		polygon ((14, 11, 12),(33, 26, 28), 0 ),
		polygon ((24, 25, 26),(54, 58, 61), 1 ),
		polygon ((26, 27, 24),(61, 65, 54), 1 ),
		polygon ((28, 29, 25),(69, 73, 58), 1 ),
		polygon ((25, 24, 28),(58, 54, 69), 1 ),
		polygon ((30, 31, 27),(78, 79, 66), 1 ),
		polygon ((27, 32, 30),(67, 83, 78), 1 ),
		polygon ((33, 30, 32),(84, 78, 83), 1 ),
		polygon ((32, 26, 33),(83, 62, 84), 1 ),
		polygon ((34, 35, 36),(88, 90, 91), 1 ),
		polygon ((36, 37, 34),(91, 92, 88), 1 ),
		polygon ((35, 38, 39),(90, 97, 100), 1 ),
		polygon ((39, 36, 35),(100, 91, 90), 1 ),
		polygon ((40, 41, 42),(103, 105, 108), 1 ),
		polygon ((41, 43, 44),(105, 112, 116), 1 ),
		polygon ((44, 42, 41),(116, 108, 105), 1 ),
		polygon ((45, 41, 40),(122, 105, 103), 1 ),
		polygon ((33, 44, 43),(85, 117, 112), 1 ),
		polygon ((43, 31, 33),(112, 80, 86), 1 ),
		polygon ((45, 34, 37),(123, 89, 93), 1 ),
		polygon ((45, 37, 41),(124, 94, 106), 1 ),
		polygon ((24, 27, 31),(55, 68, 81), 1 ),
		polygon ((31, 43, 24),(82, 113, 56), 1 ),
		polygon ((28, 24, 43),(70, 57, 114), 1 ),
		polygon ((43, 41, 28),(115, 107, 71), 1 ),
		polygon ((29, 28, 37),(74, 72, 95), 1 ),
		polygon ((37, 39, 29),(96, 101, 75), 1 ),
		polygon ((26, 25, 44),(63, 59, 118), 1 ),
		polygon ((44, 33, 26),(119, 87, 64), 1 ),
		polygon ((42, 39, 38),(109, 102, 98), 1 ),
		polygon ((38, 40, 42),(99, 104, 110), 1 ),
		polygon ((44, 25, 29),(120, 60, 76), 1 ),
		polygon ((29, 42, 44),(77, 111, 121), 1 ),
		polygon ((46, 47, 48),(125, 126, 127), 0 ),
		polygon ((47, 49, 48),(126, 130, 127), 0 ),
		polygon ((50, 51, 52),(134, 137, 141), 0 ),
		polygon ((52, 53, 50),(141, 144, 134), 0 ),
		polygon ((54, 52, 51),(145, 142, 138), 0 ),
		polygon ((51, 55, 54),(139, 150, 145), 0 ),
		polygon ((56, 57, 58),(154, 156, 160), 0 ),
		polygon ((58, 59, 56),(160, 163, 154), 0 ),
		polygon ((59, 46, 48),(163, 125, 127), 0 ),
		polygon ((48, 56, 59),(127, 154, 163), 0 ),
		polygon ((55, 51, 50),(151, 140, 135), 0 ),
		polygon ((50, 60, 55),(136, 164, 152), 0 ),
		polygon ((54, 60, 61),(146, 164, 165), 0 ),
		polygon ((54, 55, 60),(147, 153, 164), 0 ),
		polygon ((54, 61, 53),(148, 165, 144), 0 ),
		polygon ((53, 52, 54),(144, 143, 149), 0 ),
		polygon ((57, 56, 48),(157, 155, 128), 0 ),
		polygon ((48, 49, 57),(129, 131, 158), 0 ),
		polygon ((58, 57, 49),(161, 159, 132), 0 ),
		polygon ((49, 47, 58),(133, 126, 162), 0 )
	)
); /* end of polyset 'goal_base2' */

polyset glass2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (GLASS ),
	casts_shadow = TRUE,
	vertices = ((cv((7.051873, 2.96465, -0.596686), 1)),
			(cv((7.051873, 2.288141, -0.596686), 1)),
			(cv((7.051873, 2.288141, 0.596683), 1)),
			(cv((7.051873, 2.96465, 0.596683), 1)),
			(cv((7.050895, 2.288141, 0.596683), 1)),
			(cv((7.050895, 2.288141, -0.596686), 1)),
			(cv((7.050895, 2.96465, -0.596686), 1)),
			(cv((7.050895, 2.96465, 0.596683), 1))	),
	texture_vertices = (
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 0 ),
		polygon ((6, 7, 4),(6, 7, 4), 0 )
	)
); /* end of polyset 'glass2' */

polyset Net (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (NET ),
	casts_shadow = TRUE,
	vertices = ((cv((-6.740266, 2.301843, -0.170015), 1)),
			(cv((-6.750349, 2.200817, -0.131484), 1)),
			(cv((-6.830049, 2.301843, -0.170015), 1)),
			(cv((-6.819516, 2.200817, -0.131604), 1)),
			(cv((-6.879477, 2.200817, -0.097125), 1)),
			(cv((-6.844802, 1.946636, -0.06212), 1)),
			(cv((-6.866633, 1.946636, -0.024307), 1)),
			(cv((-6.854283, 2.044886, -0.071843), 1)),
			(cv((-6.879705, 2.044886, -0.027987), 1)),
			(cv((-6.66251, 2.301843, -0.125123), 1)),
			(cv((-6.690508, 2.200817, -0.096795), 1)),
			(cv((-6.656029, 2.200817, -0.036834), 1)),
			(cv((-6.617618, 2.301843, -0.047368), 1)),
			(cv((-6.907805, 2.301843, -0.125123), 1)),
			(cv((-6.952697, 2.301843, -0.047368), 1)),
			(cv((-6.914165, 2.200817, -0.037285), 1)),
			(cv((-6.892498, 2.117504, -0.031238), 1)),
			(cv((-6.863736, 2.117504, -0.081055), 1)),
			(cv((-6.813919, 2.117504, -0.109816), 1)),
			(cv((-6.756396, 2.117504, -0.109816), 1)),
			(cv((-6.706579, 2.117504, -0.081055), 1)),
			(cv((-6.759647, 2.044886, -0.097023), 1)),
			(cv((-6.810338, 2.044886, -0.097112), 1)),
			(cv((-6.71579, 2.044886, -0.071601), 1)),
			(cv((-6.725514, 1.946636, -0.06212), 1)),
			(cv((-6.763326, 1.946636, -0.083951), 1)),
			(cv((-6.806989, 1.946636, -0.083951), 1)),
			(cv((-6.914286, 2.200817, 0.031883), 1)),
			(cv((-6.952697, 2.301843, 0.042416), 1)),
			(cv((-6.907805, 2.301843, 0.120171), 1)),
			(cv((-6.892498, 2.117504, 0.026286), 1)),
			(cv((-6.863736, 2.117504, 0.076103), 1)),
			(cv((-6.879807, 2.200817, 0.091844), 1)),
			(cv((-6.879794, 2.044886, 0.022705), 1)),
			(cv((-6.854525, 2.044886, 0.066649), 1)),
			(cv((-6.866633, 1.946636, 0.019355), 1)),
			(cv((-6.844802, 1.946636, 0.057168), 1)),
			(cv((-6.810669, 2.044886, 0.092072), 1)),
			(cv((-6.819967, 2.200817, 0.126532), 1)),
			(cv((-6.83005, 2.301843, 0.165063), 1)),
			(cv((-6.65615, 2.200817, 0.032333), 1)),
			(cv((-6.677817, 2.117504, 0.026286), 1)),
			(cv((-6.677817, 2.117504, -0.031238), 1)),
			(cv((-6.740266, 2.301843, 0.165063), 1)),
			(cv((-6.750799, 2.200817, 0.126653), 1)),
			(cv((-6.690838, 2.200817, 0.092174), 1)),
			(cv((-6.66251, 2.301843, 0.120171), 1)),
			(cv((-6.617618, 2.301843, 0.042416), 1)),
			(cv((-6.706579, 2.117504, 0.076103), 1)),
			(cv((-6.756396, 2.117504, 0.104865), 1)),
			(cv((-6.813919, 2.117504, 0.104865), 1)),
			(cv((-6.759977, 2.044886, 0.09216), 1)),
			(cv((-6.716032, 2.044886, 0.066891), 1)),
			(cv((-6.69061, 2.044886, 0.023035), 1)),
			(cv((-6.690521, 2.044886, -0.027656), 1)),
			(cv((-6.806989, 1.946636, 0.078999), 1)),
			(cv((-6.763326, 1.946636, 0.078999), 1)),
			(cv((-6.725514, 1.946636, 0.057168), 1)),
			(cv((-6.703682, 1.946636, 0.019355), 1)),
			(cv((-6.703682, 1.946636, -0.024307), 1)),
			(cv((-6.830049, 2.301843, -0.170015), 1)),
			(cv((-6.750349, 2.200817, -0.131484), 1)),
			(cv((-6.740266, 2.301843, -0.170015), 1)),
			(cv((-6.879477, 2.200817, -0.097125), 1)),
			(cv((-6.819516, 2.200817, -0.131604), 1)),
			(cv((-6.854283, 2.044886, -0.071843), 1)),
			(cv((-6.866633, 1.946636, -0.024307), 1)),
			(cv((-6.844802, 1.946636, -0.06212), 1)),
			(cv((-6.879705, 2.044886, -0.027987), 1)),
			(cv((-6.66251, 2.301843, -0.125123), 1)),
			(cv((-6.690508, 2.200817, -0.096795), 1)),
			(cv((-6.656029, 2.200817, -0.036834), 1)),
			(cv((-6.617618, 2.301843, -0.047368), 1)),
			(cv((-6.907805, 2.301843, -0.125123), 1)),
			(cv((-6.952697, 2.301843, -0.047368), 1)),
			(cv((-6.914165, 2.200817, -0.037285), 1)),
			(cv((-6.892498, 2.117504, -0.031238), 1)),
			(cv((-6.863736, 2.117504, -0.081055), 1)),
			(cv((-6.813919, 2.117504, -0.109816), 1)),
			(cv((-6.756396, 2.117504, -0.109816), 1)),
			(cv((-6.706579, 2.117504, -0.081055), 1)),
			(cv((-6.810338, 2.044886, -0.097112), 1)),
			(cv((-6.759647, 2.044886, -0.097023), 1)),
			(cv((-6.71579, 2.044886, -0.071601), 1)),
			(cv((-6.725514, 1.946636, -0.06212), 1)),
			(cv((-6.763326, 1.946636, -0.083951), 1)),
			(cv((-6.806989, 1.946636, -0.083951), 1)),
			(cv((-6.914286, 2.200817, 0.031883), 1)),
			(cv((-6.952697, 2.301843, 0.042416), 1)),
			(cv((-6.907805, 2.301843, 0.120171), 1)),
			(cv((-6.892498, 2.117504, 0.026286), 1)),
			(cv((-6.863736, 2.117504, 0.076103), 1)),
			(cv((-6.879807, 2.200817, 0.091844), 1)),
			(cv((-6.854525, 2.044886, 0.066649), 1)),
			(cv((-6.879794, 2.044886, 0.022705), 1)),
			(cv((-6.866633, 1.946636, 0.019355), 1)),
			(cv((-6.844802, 1.946636, 0.057168), 1)),
			(cv((-6.810669, 2.044886, 0.092072), 1)),
			(cv((-6.819967, 2.200817, 0.126532), 1)),
			(cv((-6.83005, 2.301843, 0.165063), 1)),
			(cv((-6.677817, 2.117504, 0.026286), 1)),
			(cv((-6.65615, 2.200817, 0.032333), 1)),
			(cv((-6.677817, 2.117504, -0.031238), 1)),
			(cv((-6.740266, 2.301843, 0.165063), 1)),
			(cv((-6.750799, 2.200817, 0.126653), 1)),
			(cv((-6.690838, 2.200817, 0.092174), 1)),
			(cv((-6.66251, 2.301843, 0.120171), 1)),
			(cv((-6.617618, 2.301843, 0.042416), 1)),
			(cv((-6.706579, 2.117504, 0.076103), 1)),
			(cv((-6.756396, 2.117504, 0.104865), 1)),
			(cv((-6.813919, 2.117504, 0.104865), 1)),
			(cv((-6.759977, 2.044886, 0.09216), 1)),
			(cv((-6.716032, 2.044886, 0.066891), 1)),
			(cv((-6.69061, 2.044886, 0.023035), 1)),
			(cv((-6.690521, 2.044886, -0.027656), 1)),
			(cv((-6.806989, 1.946636, 0.078999), 1)),
			(cv((-6.763326, 1.946636, 0.078999), 1)),
			(cv((-6.725514, 1.946636, 0.057168), 1)),
			(cv((-6.703682, 1.946636, 0.019355), 1)),
			(cv((-6.703682, 1.946636, -0.024307), 1))	),
	texture_vertices = (
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.704342 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.704342 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((3, 4, 2),(3, 4, 2), 0 ),
		polygon ((3, 2, 1),(3, 2, 1), 0 ),
		polygon ((5, 6, 7),(5, 6, 7), 0 ),
		polygon ((8, 7, 6),(8, 7, 6), 0 ),
		polygon ((1, 0, 9),(1, 0, 9), 0 ),
		polygon ((9, 10, 1),(9, 10, 1), 0 ),
		polygon ((9, 11, 10),(9, 11, 10), 0 ),
		polygon ((11, 9, 12),(11, 9, 12), 0 ),
		polygon ((4, 13, 2),(4, 13, 2), 0 ),
		polygon ((4, 14, 13),(4, 14, 13), 0 ),
		polygon ((14, 4, 15),(14, 4, 15), 0 ),
		polygon ((4, 16, 15),(4, 16, 15), 0 ),
		polygon ((16, 4, 17),(16, 4, 17), 0 ),
		polygon ((4, 18, 17),(4, 18, 17), 0 ),
		polygon ((4, 3, 18),(4, 3, 18), 0 ),
		polygon ((18, 1, 19),(18, 1, 19), 0 ),
		polygon ((1, 18, 3),(1, 18, 3), 0 ),
		polygon ((20, 19, 1),(20, 19, 1), 0 ),
		polygon ((20, 1, 10),(20, 1, 10), 0 ),
		polygon ((18, 21, 22),(18, 21, 22), 0 ),
		polygon ((22, 7, 18),(22, 7, 18), 0 ),
		polygon ((17, 18, 7),(17, 18, 7), 0 ),
		polygon ((8, 16, 7),(8, 16, 7), 0 ),
		polygon ((21, 18, 19),(21, 18, 19), 0 ),
		polygon ((21, 20, 23),(21, 20, 23), 0 ),
		polygon ((20, 21, 19),(20, 21, 19), 0 ),
		polygon ((23, 24, 21),(23, 24, 21), 0 ),
		polygon ((24, 25, 21),(24, 25, 21), 0 ),
		polygon ((25, 26, 21),(25, 26, 21), 0 ),
		polygon ((22, 21, 26),(22, 21, 26), 0 ),
		polygon ((7, 22, 26),(7, 22, 26), 0 ),
		polygon ((7, 26, 5),(7, 26, 5), 0 ),
		polygon ((27, 14, 15),(27, 14, 15), 0 ),
		polygon ((28, 14, 27),(28, 14, 27), 0 ),
		polygon ((27, 29, 28),(27, 29, 28), 0 ),
		polygon ((27, 15, 16),(27, 15, 16), 0 ),
		polygon ((30, 27, 16),(30, 27, 16), 0 ),
		polygon ((30, 31, 27),(30, 31, 27), 0 ),
		polygon ((32, 27, 31),(32, 27, 31), 0 ),
		polygon ((31, 33, 34),(31, 33, 34), 0 ),
		polygon ((33, 31, 30),(33, 31, 30), 0 ),
		polygon ((33, 30, 16),(33, 30, 16), 0 ),
		polygon ((8, 33, 16),(8, 33, 16), 0 ),
		polygon ((17, 7, 16),(17, 7, 16), 0 ),
		polygon ((33, 6, 35),(33, 6, 35), 0 ),
		polygon ((6, 33, 8),(6, 33, 8), 0 ),
		polygon ((35, 36, 33),(35, 36, 33), 0 ),
		polygon ((34, 33, 36),(34, 33, 36), 0 ),
		polygon ((37, 34, 36),(37, 34, 36), 0 ),
		polygon ((31, 34, 37),(31, 34, 37), 0 ),
		polygon ((38, 32, 31),(38, 32, 31), 0 ),
		polygon ((39, 29, 38),(39, 29, 38), 0 ),
		polygon ((11, 40, 41),(11, 40, 41), 0 ),
		polygon ((29, 27, 32),(29, 27, 32), 0 ),
		polygon ((38, 29, 32),(38, 29, 32), 0 ),
		polygon ((20, 11, 42),(20, 11, 42), 0 ),
		polygon ((38, 43, 39),(38, 43, 39), 0 ),
		polygon ((43, 38, 44),(43, 38, 44), 0 ),
		polygon ((43, 44, 45),(43, 44, 45), 0 ),
		polygon ((46, 43, 45),(46, 43, 45), 0 ),
		polygon ((40, 47, 45),(40, 47, 45), 0 ),
		polygon ((46, 45, 47),(46, 45, 47), 0 ),
		polygon ((11, 47, 40),(11, 47, 40), 0 ),
		polygon ((12, 47, 11),(12, 47, 11), 0 ),
		polygon ((41, 45, 48),(41, 45, 48), 0 ),
		polygon ((45, 41, 40),(45, 41, 40), 0 ),
		polygon ((49, 48, 45),(49, 48, 45), 0 ),
		polygon ((49, 45, 44),(49, 45, 44), 0 ),
		polygon ((44, 38, 49),(44, 38, 49), 0 ),
		polygon ((50, 49, 38),(50, 49, 38), 0 ),
		polygon ((31, 50, 38),(31, 50, 38), 0 ),
		polygon ((37, 50, 31),(37, 50, 31), 0 ),
		polygon ((37, 49, 50),(37, 49, 50), 0 ),
		polygon ((49, 37, 51),(49, 37, 51), 0 ),
		polygon ((49, 51, 52),(49, 51, 52), 0 ),
		polygon ((48, 49, 52),(48, 49, 52), 0 ),
		polygon ((53, 41, 52),(53, 41, 52), 0 ),
		polygon ((48, 52, 41),(48, 52, 41), 0 ),
		polygon ((53, 54, 41),(53, 54, 41), 0 ),
		polygon ((36, 55, 37),(36, 55, 37), 0 ),
		polygon ((55, 56, 37),(55, 56, 37), 0 ),
		polygon ((51, 37, 56),(51, 37, 56), 0 ),
		polygon ((52, 51, 56),(52, 51, 56), 0 ),
		polygon ((52, 56, 57),(52, 56, 57), 0 ),
		polygon ((52, 58, 53),(52, 58, 53), 0 ),
		polygon ((58, 52, 57),(58, 52, 57), 0 ),
		polygon ((54, 53, 58),(54, 53, 58), 0 ),
		polygon ((58, 59, 54),(58, 59, 54), 0 ),
		polygon ((54, 24, 23),(54, 24, 23), 0 ),
		polygon ((24, 54, 59),(24, 54, 59), 0 ),
		polygon ((20, 54, 23),(20, 54, 23), 0 ),
		polygon ((42, 41, 54),(42, 41, 54), 0 ),
		polygon ((42, 11, 41),(42, 11, 41), 0 ),
		polygon ((11, 20, 10),(11, 20, 10), 0 ),
		polygon ((54, 20, 42),(54, 20, 42), 0 ),
		polygon ((60, 61, 62),(60, 61, 62), 0 ),
		polygon ((60, 63, 64),(60, 63, 64), 0 ),
		polygon ((61, 60, 64),(61, 60, 64), 0 ),
		polygon ((65, 66, 67),(65, 66, 67), 0 ),
		polygon ((66, 65, 68),(66, 65, 68), 0 ),
		polygon ((69, 62, 61),(69, 62, 61), 0 ),
		polygon ((61, 70, 69),(61, 70, 69), 0 ),
		polygon ((70, 71, 69),(70, 71, 69), 0 ),
		polygon ((72, 69, 71),(72, 69, 71), 0 ),
		polygon ((60, 73, 63),(60, 73, 63), 0 ),
		polygon ((73, 74, 63),(73, 74, 63), 0 ),
		polygon ((75, 63, 74),(75, 63, 74), 0 ),
		polygon ((75, 76, 63),(75, 76, 63), 0 ),
		polygon ((77, 63, 76),(77, 63, 76), 0 ),
		polygon ((77, 78, 63),(77, 78, 63), 0 ),
		polygon ((78, 64, 63),(78, 64, 63), 0 ),
		polygon ((79, 61, 78),(79, 61, 78), 0 ),
		polygon ((64, 78, 61),(64, 78, 61), 0 ),
		polygon ((61, 79, 80),(61, 79, 80), 0 ),
		polygon ((70, 61, 80),(70, 61, 80), 0 ),
		polygon ((81, 82, 78),(81, 82, 78), 0 ),
		polygon ((78, 65, 81),(78, 65, 81), 0 ),
		polygon ((65, 78, 77),(65, 78, 77), 0 ),
		polygon ((65, 76, 68),(65, 76, 68), 0 ),
		polygon ((79, 78, 82),(79, 78, 82), 0 ),
		polygon ((83, 80, 82),(83, 80, 82), 0 ),
		polygon ((79, 82, 80),(79, 82, 80), 0 ),
		polygon ((82, 84, 83),(82, 84, 83), 0 ),
		polygon ((82, 85, 84),(82, 85, 84), 0 ),
		polygon ((82, 86, 85),(82, 86, 85), 0 ),
		polygon ((86, 82, 81),(86, 82, 81), 0 ),
		polygon ((86, 81, 65),(86, 81, 65), 0 ),
		polygon ((67, 86, 65),(67, 86, 65), 0 ),
		polygon ((75, 74, 87),(75, 74, 87), 0 ),
		polygon ((87, 74, 88),(87, 74, 88), 0 ),
		polygon ((88, 89, 87),(88, 89, 87), 0 ),
		polygon ((76, 75, 87),(76, 75, 87), 0 ),
		polygon ((76, 87, 90),(76, 87, 90), 0 ),
		polygon ((87, 91, 90),(87, 91, 90), 0 ),
		polygon ((91, 87, 92),(91, 87, 92), 0 ),
		polygon ((93, 94, 91),(93, 94, 91), 0 ),
		polygon ((90, 91, 94),(90, 91, 94), 0 ),
		polygon ((76, 90, 94),(76, 90, 94), 0 ),
		polygon ((76, 94, 68),(76, 94, 68), 0 ),
		polygon ((76, 65, 77),(76, 65, 77), 0 ),
		polygon ((95, 66, 94),(95, 66, 94), 0 ),
		polygon ((68, 94, 66),(68, 94, 66), 0 ),
		polygon ((94, 96, 95),(94, 96, 95), 0 ),
		polygon ((96, 94, 93),(96, 94, 93), 0 ),
		polygon ((96, 93, 97),(96, 93, 97), 0 ),
		polygon ((97, 93, 91),(97, 93, 91), 0 ),
		polygon ((91, 92, 98),(91, 92, 98), 0 ),
		polygon ((98, 89, 99),(98, 89, 99), 0 ),
		polygon ((100, 101, 71),(100, 101, 71), 0 ),
		polygon ((92, 87, 89),(92, 87, 89), 0 ),
		polygon ((92, 89, 98),(92, 89, 98), 0 ),
		polygon ((102, 71, 80),(102, 71, 80), 0 ),
		polygon ((99, 103, 98),(99, 103, 98), 0 ),
		polygon ((104, 98, 103),(104, 98, 103), 0 ),
		polygon ((105, 104, 103),(105, 104, 103), 0 ),
		polygon ((105, 103, 106),(105, 103, 106), 0 ),
		polygon ((105, 107, 101),(105, 107, 101), 0 ),
		polygon ((107, 105, 106),(107, 105, 106), 0 ),
		polygon ((101, 107, 71),(101, 107, 71), 0 ),
		polygon ((71, 107, 72),(71, 107, 72), 0 ),
		polygon ((108, 105, 100),(108, 105, 100), 0 ),
		polygon ((101, 100, 105),(101, 100, 105), 0 ),
		polygon ((105, 108, 109),(105, 108, 109), 0 ),
		polygon ((104, 105, 109),(104, 105, 109), 0 ),
		polygon ((109, 98, 104),(109, 98, 104), 0 ),
		polygon ((98, 109, 110),(98, 109, 110), 0 ),
		polygon ((98, 110, 91),(98, 110, 91), 0 ),
		polygon ((91, 110, 97),(91, 110, 97), 0 ),
		polygon ((110, 109, 97),(110, 109, 97), 0 ),
		polygon ((111, 97, 109),(111, 97, 109), 0 ),
		polygon ((112, 111, 109),(112, 111, 109), 0 ),
		polygon ((112, 109, 108),(112, 109, 108), 0 ),
		polygon ((112, 100, 113),(112, 100, 113), 0 ),
		polygon ((100, 112, 108),(100, 112, 108), 0 ),
		polygon ((100, 114, 113),(100, 114, 113), 0 ),
		polygon ((97, 115, 96),(97, 115, 96), 0 ),
		polygon ((97, 116, 115),(97, 116, 115), 0 ),
		polygon ((116, 97, 111),(116, 97, 111), 0 ),
		polygon ((116, 111, 112),(116, 111, 112), 0 ),
		polygon ((117, 116, 112),(117, 116, 112), 0 ),
		polygon ((113, 118, 112),(113, 118, 112), 0 ),
		polygon ((117, 112, 118),(117, 112, 118), 0 ),
		polygon ((118, 113, 114),(118, 113, 114), 0 ),
		polygon ((114, 119, 118),(114, 119, 118), 0 ),
		polygon ((83, 84, 114),(83, 84, 114), 0 ),
		polygon ((119, 114, 84),(119, 114, 84), 0 ),
		polygon ((83, 114, 80),(83, 114, 80), 0 ),
		polygon ((114, 100, 102),(114, 100, 102), 0 ),
		polygon ((100, 71, 102),(100, 71, 102), 0 ),
		polygon ((70, 80, 71),(70, 80, 71), 0 ),
		polygon ((102, 80, 114),(102, 80, 114), 0 )
	)
); /* end of polyset 'Net' */

polyset goal_post (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = ON,
	opposite = OFF,
	shader = (cush4 ),
	shader = (BUMPER ),
	shader = (WHITEPOST ),
	casts_shadow = TRUE,
	vertices = ((cv((-8.197212, 2.501257, -0.0543), 1)),
			(cv((-8.197212, 2.501257, 0.0543), 1)),
			(cv((-8.197212, 2.296687, 0.0543), 1)),
			(cv((-9.370133, 1.238626, 0.0), 1)),
			(cv((-9.393289, 1.272513, -0.027879), 1)),
			(cv((-9.472546, 1.049741, -0.027879), 1)),
			(cv((-8.196284, 2.499232, 0.027879), 1)),
			(cv((-9.393289, 1.272513, 0.027879), 1)),
			(cv((-9.419302, 1.090958, 0.0), 1)),
			(cv((-8.196284, 2.499232, -0.027879), 1)),
			(cv((-8.196284, 2.452516, 0.0), 1)),
			(cv((-9.472546, 1.049741, 0.027879), 1)),
			(cv((-8.197212, 2.296687, -0.0543), 1)),
			(cv((-9.621683, 0.869078, -0.053223), 1)),
			(cv((-9.621683, 0.869078, 0.053223), 1)),
			(cv((-8.196284, 2.296739, 0.053223), 1)),
			(cv((-9.653454, 0.916448, 0.053223), 1)),
			(cv((-9.653454, 0.916448, -0.053223), 1)),
			(cv((-8.196284, 2.36443, -0.053223), 1)),
			(cv((-8.196284, 2.296739, -0.053223), 1)),
			(cv((-8.196284, 2.36443, 0.053223), 1))	),
	texture_vertices = (
			st( 0.006843, 0.986420 ),
			st( 0.006843, 0.986420 ),
			st( 0.993157, 0.989136 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.900000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 0.008669, 0.283240 ),
			st( 0.008669, 0.283240 ),
			st( 1.000000, 0.500000 ),
			st( 0.984829, 0.283240 ),
			st( 0.984829, 0.283240 ),
			st( 1.000000, 0.500000 ),
			st( 0.900000, 0.000000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 0.902167, 0.279799 ),
			st( 0.900000, 0.500000 ),
			st( 0.902167, 0.279799 ),
			st( 0.900000, 0.500000 ),
			st( 0.993157, 0.752716 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 1.000000 ),
			st( 0.995775, 0.003926 ),
			st( 0.995775, 0.003926 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.750000 ),
			st( 0.000000, 0.250000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 2 ),
		polygon ((3, 4, 5),(3, 4, 5), 2 ),
		polygon ((6, 7, 4),(6, 9, 4), 2 ),
		polygon ((5, 8, 3),(5, 13, 3), 2 ),
		polygon ((4, 9, 6),(4, 14, 6), 2 ),
		polygon ((4, 3, 10),(4, 3, 15), 2 ),
		polygon ((11, 7, 3),(16, 10, 3), 2 ),
		polygon ((11, 5, 4),(17, 5, 4), 2 ),
		polygon ((10, 9, 4),(15, 14, 4), 2 ),
		polygon ((6, 10, 3),(7, 15, 3), 2 ),
		polygon ((3, 7, 6),(3, 11, 8), 2 ),
		polygon ((8, 11, 3),(13, 18, 3), 2 ),
		polygon ((4, 7, 11),(4, 12, 19), 2 ),
		polygon ((2, 12, 0),(2, 20, 0), 2 ),
		polygon ((13, 14, 15),(21, 22, 25), 2 ),
		polygon ((16, 17, 18),(27, 28, 29), 2 ),
		polygon ((13, 15, 19),(21, 25, 30), 2 ),
		polygon ((18, 20, 16),(29, 31, 27), 2 ),
		polygon ((14, 20, 15),(23, 31, 26), 2 ),
		polygon ((18, 17, 13),(29, 28, 21), 2 ),
		polygon ((14, 16, 20),(24, 27, 31), 2 ),
		polygon ((13, 19, 18),(21, 30, 29), 2 )
	)
); /* end of polyset 'goal_post' */

polyset goal_support (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (BUMPER ),
	shader = (WHITEPOST ),
	shader = (METAL2 ),
	shader = (METAL3 ),
	casts_shadow = TRUE,
	vertices = ((cv((-7.082415, 2.286497, -0.679735), 1)),
			(cv((-7.082363, 2.286801, -0.545211), 1)),
			(cv((-7.211315, 2.374054, 0.679737), 1)),
			(cv((-7.211263, 2.286801, 0.545213), 1)),
			(cv((-7.211263, 2.286801, -0.545211), 1)),
			(cv((-7.211315, 2.286497, -0.679735), 1)),
			(cv((-7.22606, 2.296435, -0.666122), 1)),
			(cv((-7.211315, 2.374054, -0.679735), 1)),
			(cv((-7.22606, 2.36443, -0.666122), 1)),
			(cv((-7.082415, 2.374054, -0.679735), 1)),
			(cv((-7.082363, 2.374368, -0.545211), 1)),
			(cv((-7.082415, 2.374054, 0.679737), 1)),
			(cv((-7.082363, 2.374368, 0.545213), 1)),
			(cv((-7.226008, 2.296435, -0.562631), 1)),
			(cv((-7.211263, 2.374368, -0.545211), 1)),
			(cv((-7.226008, 2.36443, -0.562631), 1)),
			(cv((-8.116349, 2.296687, 0.0), 1)),
			(cv((-8.197212, 2.501257, 0.0543), 1)),
			(cv((-8.116349, 2.501257, 0.0), 1)),
			(cv((-8.197212, 2.501257, -0.0543), 1)),
			(cv((-7.424442, 2.828735, 0.415384), 1)),
			(cv((-7.424342, 2.828735, -0.415364), 1)),
			(cv((-7.447857, 2.794138, -0.407182), 1)),
			(cv((-7.466752, 2.827309, -0.399), 1)),
			(cv((-7.466852, 2.827309, 0.399), 1)),
			(cv((-7.447957, 2.794138, 0.407202), 1)),
			(cv((-8.197212, 2.296687, 0.0543), 1)),
			(cv((-8.197212, 2.296687, -0.0543), 1)),
			(cv((-7.058497, 2.98681, 0.630248), 1)),
			(cv((-8.136043, 2.449849, -0.013271), 1)),
			(cv((-8.117266, 2.499806, 0.0), 1)),
			(cv((-7.069627, 3.024762, 0.633567), 1)),
			(cv((-8.11653, 2.449137, 0.0), 1)),
			(cv((-7.22606, 2.296435, 0.666124), 1)),
			(cv((-7.22597, 2.36443, -0.562533), 1)),
			(cv((-8.196284, 2.36443, 0.053223), 1)),
			(cv((-8.196284, 2.36443, -0.053223), 1)),
			(cv((-7.211315, 2.286497, 0.679737), 1)),
			(cv((-8.196284, 2.296739, -0.053223), 1)),
			(cv((-7.226021, 2.296435, -0.666512), 1)),
			(cv((-7.226021, 2.364115, -0.666512), 1)),
			(cv((-7.069627, 3.025357, -0.635946), 1)),
			(cv((-7.058497, 2.987405, -0.632627), 1)),
			(cv((-8.196284, 2.296739, 0.053223), 1)),
			(cv((-7.22597, 2.296739, -0.562533), 1)),
			(cv((-7.226008, 2.36443, 0.562633), 1)),
			(cv((-7.22606, 2.36443, 0.666124), 1)),
			(cv((-7.211263, 2.374368, 0.545213), 1)),
			(cv((-7.071269, 2.979346, 0.655532), 1)),
			(cv((-8.136043, 2.449849, 0.013271), 1)),
			(cv((-7.226008, 2.296435, 0.562633), 1)),
			(cv((-7.071269, 2.979941, -0.657911), 1)),
			(cv((-7.082415, 2.286497, 0.679737), 1)),
			(cv((-7.082363, 2.286801, 0.545213), 1))	),
	texture_vertices = (
			st( 0.200000, 0.250000 ),
			st( 0.200000, 0.000000 ),
			st( 0.200000, 0.997730 ),
			st( 0.200000, 0.997730 ),
			st( 0.200000, 0.997730 ),
			st( 0.800000, 0.500000 ),
			st( 0.799502, 0.997902 ),
			st( 0.800000, 0.000000 ),
			st( 0.800000, 0.000000 ),
			st( 0.800000, 0.000000 ),
			st( 0.800000, 0.000000 ),
			st( 0.799502, 0.997902 ),
			st( 0.799502, 0.997902 ),
			st( 0.799502, 0.997902 ),
			st( 0.800000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.800000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.200000, 0.500000 ),
			st( 0.200000, 0.750000 ),
			st( 0.200000, 0.500000 ),
			st( 0.200000, 0.750000 ),
			st( 1.000000, 0.000000 ),
			st( 0.999003, 0.998521 ),
			st( 0.999003, 0.998521 ),
			st( 0.800000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 0.989735, 0.515183 ),
			st( 0.008669, 0.745393 ),
			st( 0.570868, 0.708712 ),
			st( 0.011976, 0.513580 ),
			st( 0.015628, 0.516296 ),
			st( 0.244909, 0.504547 ),
			st( 0.017339, 0.735071 ),
			st( 0.023841, 0.705272 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 0.008669, 0.756941 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.984829, 0.763822 ),
			st( 1.000000, 0.000000 ),
			st( 0.984829, 0.763822 ),
			st( 0.989163, 0.745393 ),
			st( 0.393147, 0.732797 ),
			st( 0.000000, 0.750000 ),
			st( 0.997833, 0.745393 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.995775, 0.003926 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.505432 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.800000, 0.250000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.750000 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 1.000000, 1.000000 ),
			st( 0.995775, 0.003926 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.505432 ),
			st( 1.000000, 0.505432 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.500000 ),
			st( 0.800000, 0.750000 ),
			st( 0.006502, 0.738511 ),
			st( 0.000000, 1.000000 ),
			st( 0.982661, 0.745393 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.982661, 0.745393 ),
			st( 0.999003, 0.998521 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.002167, 0.752274 ),
			st( 0.000000, 1.000000 ),
			st( 0.200000, 0.250000 ),
			st( 0.200000, 0.997730 ),
			st( 0.200000, 0.000000 ),
			st( 0.200000, 0.000000 ),
			st( 0.200000, 0.997730 ) ),
	polygons = (
		polygon ((0, 1),(0, 1), 0 ),
		polygon ((0),(0), 0 ),
		polygon ((4, 1, 0),(10, 1, 0), 0 ),
		polygon ((0, 5, 4),(0, 14, 10), 0 ),
		polygon ((6, 5, 7),(15, 14, 16), 0 ),
		polygon ((7, 8, 6),(16, 17, 15), 0 ),
		polygon ((9, 7, 5),(18, 16, 14), 0 ),
		polygon ((5, 0, 9),(14, 0, 18), 0 ),
		polygon ((10, 9),(19, 18), 0 ),
		polygon ((10),(19), 0 ),
		polygon ((13, 4, 5),(22, 10, 14), 0 ),
		polygon ((5, 6, 13),(14, 15, 22), 0 ),
		polygon ((9, 0),(18, 0), 0 ),
		polygon ((0),(0), 0 ),
		polygon ((14, 7, 9),(25, 16, 18), 0 ),
		polygon ((14, 9, 10),(25, 18, 19), 0 ),
		polygon ((1, 10),(2, 19), 0 ),
		polygon ((1),(3), 0 ),
		polygon ((10, 1, 4),(19, 4, 11), 0 ),
		polygon ((4, 14, 10),(12, 25, 19), 0 ),
		polygon ((14, 4, 13),(25, 13, 23), 0 ),
		polygon ((13, 15, 14),(24, 26, 25), 0 ),
		polygon ((14, 15, 8),(25, 26, 17), 0 ),
		polygon ((8, 7, 14),(17, 16, 25), 0 ),
		polygon ((16, 17, 18),(27, 28, 30), 1 ),
		polygon ((16, 18, 19),(27, 31, 33), 1 ),
		polygon ((20, 21, 22),(35, 36, 37), 1 ),
		polygon ((23, 24, 25),(39, 40, 41), 1 ),
		polygon ((20, 24, 23),(35, 40, 39), 1 ),
		polygon ((23, 21, 20),(39, 36, 35), 1 ),
		polygon ((52, 11),(105, 20), 0 ),
		polygon ((19, 27, 16),(33, 45, 27), 1 ),
		polygon ((22, 25, 20),(37, 42, 35), 1 ),
		polygon ((22, 23, 25),(38, 39, 43), 1 ),
		polygon ((43, 35, 46),(71, 60, 85), 1 ),
		polygon ((50, 3, 47),(98, 6, 91), 0 ),
		polygon ((53),(106), 0 ),
		polygon ((34, 35, 36),(59, 60, 61), 1 ),
		polygon ((47, 45, 50),(91, 80, 98), 0 ),
		polygon ((38, 39, 40),(66, 67, 68), 1 ),
		polygon ((3, 53, 12),(6, 106, 21), 0 ),
		polygon ((40, 36, 38),(68, 61, 66), 1 ),
		polygon ((12, 47, 3),(21, 91, 6), 0 ),
		polygon ((43, 44, 39),(72, 78, 67), 1 ),
		polygon ((47, 2, 46),(91, 5, 86), 0 ),
		polygon ((39, 38, 43),(67, 66, 73), 1 ),
		polygon ((46, 45, 47),(87, 80, 91), 0 ),
		polygon ((41, 42, 32),(69, 70, 52), 1 ),
		polygon ((17, 16, 26),(28, 27, 44), 1 ),
		polygon ((32, 28, 31),(52, 46, 51), 1 ),
		polygon ((45, 46, 35),(81, 88, 60), 1 ),
		polygon ((35, 36, 45),(60, 62, 82), 1 ),
		polygon ((38, 43, 33),(66, 74, 53), 1 ),
		polygon ((38, 50, 45),(66, 99, 83), 1 ),
		polygon ((45, 36, 38),(84, 63, 66), 1 ),
		polygon ((29, 51, 41),(47, 103, 69), 1 ),
		polygon ((17, 19, 18),(29, 34, 32), 1 ),
		polygon ((41, 30, 29),(69, 50, 47), 1 ),
		polygon ((2, 37, 33),(5, 65, 54), 0 ),
		polygon ((31, 48, 49),(51, 92, 94), 1 ),
		polygon ((49, 48, 28),(95, 93, 46), 1 ),
		polygon ((46, 33, 43),(89, 55, 75), 1 ),
		polygon ((33, 46, 2),(56, 90, 5), 0 ),
		polygon ((29, 32, 42),(48, 52, 70), 1 ),
		polygon ((34, 44, 43),(59, 79, 76), 1 ),
		polygon ((52),(105), 0 ),
		polygon ((42, 51, 29),(70, 104, 49), 1 ),
		polygon ((32, 30, 41),(52, 50, 69), 1 ),
		polygon ((11, 2, 47),(20, 5, 91), 0 ),
		polygon ((12, 11, 47),(21, 20, 91), 0 ),
		polygon ((33, 50, 38),(57, 100, 66), 1 ),
		polygon ((28, 32, 49),(46, 52, 96), 1 ),
		polygon ((31, 30, 32),(51, 50, 52), 1 ),
		polygon ((49, 30, 31),(97, 50, 51), 1 ),
		polygon ((53, 52),(107, 105), 0 ),
		polygon ((52),(105), 0 ),
		polygon ((37, 2, 11),(65, 5, 20), 0 ),
		polygon ((11, 52, 37),(20, 105, 65), 0 ),
		polygon ((3, 37, 52),(7, 65, 105), 0 ),
		polygon ((52, 53, 3),(105, 108, 8), 0 ),
		polygon ((11, 12),(20, 21), 0 ),
		polygon ((12),(21), 0 ),
		polygon ((37, 3, 50),(65, 9, 101), 0 ),
		polygon ((50, 33, 37),(102, 58, 65), 0 ),
		polygon ((43, 35, 34),(77, 60, 59), 1 ),
		polygon ((36, 40, 34),(64, 68, 59), 1 ),
		polygon ((12, 53),(21, 109), 0 )
	)
); /* end of polyset 'goal_support' */

polyset Rim (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (ORANGE ),
	shader = (HOOP ),
	casts_shadow = TRUE,
	vertices = ((cv((-7.040017, 2.322238, 0.0), 1)),
			(cv((-6.971679, 2.322238, 0.0), 1)),
			(cv((-7.040017, 2.277873, 0.0), 1)),
			(cv((-6.971679, 2.322238, -0.047477), 1)),
			(cv((-6.971679, 2.322238, 0.042514), 1)),
			(cv((-7.040017, 2.322238, 0.042416), 1)),
			(cv((-7.040017, 2.322238, -0.047368), 1)),
			(cv((-6.834876, 2.322238, -0.189638), 1)),
			(cv((-6.952697, 2.301843, 0.042416), 1)),
			(cv((-6.921606, 2.322238, -0.139564), 1)),
			(cv((-6.921606, 2.322238, 0.134041), 1)),
			(cv((-6.907805, 2.301843, 0.120171), 1)),
			(cv((-6.952697, 2.301843, -0.047368), 1)),
			(cv((-6.830049, 2.301843, 0.165063), 1)),
			(cv((-6.830049, 2.342989, 0.165063), 1)),
			(cv((-6.907805, 2.342989, 0.120171), 1)),
			(cv((-6.952697, 2.342989, 0.042416), 1)),
			(cv((-6.952697, 2.342989, -0.047368), 1)),
			(cv((-6.907805, 2.342989, -0.125123), 1)),
			(cv((-6.907805, 2.301843, -0.125123), 1)),
			(cv((-6.830049, 2.342989, -0.170015), 1)),
			(cv((-6.830049, 2.301843, -0.170015), 1)),
			(cv((-6.66251, 2.342989, 0.120171), 1)),
			(cv((-6.740266, 2.342989, 0.165063), 1)),
			(cv((-6.740266, 2.301843, 0.165063), 1)),
			(cv((-6.740266, 2.342989, -0.170015), 1)),
			(cv((-6.740266, 2.301843, -0.170015), 1)),
			(cv((-6.66251, 2.301843, -0.125123), 1)),
			(cv((-6.66251, 2.342989, -0.125123), 1)),
			(cv((-6.617618, 2.301843, -0.047368), 1)),
			(cv((-6.617618, 2.342989, -0.047368), 1)),
			(cv((-6.617618, 2.342989, 0.042416), 1)),
			(cv((-6.617618, 2.301843, 0.042416), 1)),
			(cv((-6.66251, 2.301843, 0.120171), 1)),
			(cv((-6.834876, 2.322238, 0.184115), 1)),
			(cv((-6.73473, 2.322238, 0.184115), 1)),
			(cv((-6.648001, 2.322238, 0.134041), 1)),
			(cv((-6.597927, 2.322238, 0.047312), 1)),
			(cv((-6.597927, 2.322238, -0.052835), 1)),
			(cv((-6.648001, 2.322238, -0.139564), 1)),
			(cv((-6.73473, 2.322238, -0.189638), 1))	),
	texture_vertices = (
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.500000, 0.000000 ),
			st( 0.967775, 0.749460 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.002079, 0.759382 ),
			st( 1.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 0.005198, 0.006656 ),
			st( 0.967775, 0.008639 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ) ),
	polygons = (
		polygon ((2, 1, 0),(2, 1, 0), 0 ),
		polygon ((3, 4, 5),(3, 12, 17), 0 ),
		polygon ((5, 6, 3),(17, 18, 3), 0 ),
		polygon ((13, 11, 10),(25, 23, 22), 1 ),
		polygon ((4, 8, 3),(13, 20, 4), 1 ),
		polygon ((10, 11, 8),(22, 23, 20), 1 ),
		polygon ((8, 4, 10),(20, 14, 22), 1 ),
		polygon ((3, 8, 12),(5, 20, 24), 1 ),
		polygon ((13, 14, 11),(25, 26, 23), 1 ),
		polygon ((11, 14, 15),(23, 26, 27), 1 ),
		polygon ((15, 8, 11),(27, 20, 23), 1 ),
		polygon ((15, 16, 8),(27, 28, 20), 1 ),
		polygon ((16, 17, 8),(28, 29, 20), 1 ),
		polygon ((8, 17, 12),(20, 29, 24), 1 ),
		polygon ((12, 17, 18),(24, 29, 30), 1 ),
		polygon ((18, 19, 12),(30, 31, 24), 1 ),
		polygon ((19, 18, 20),(31, 30, 32), 1 ),
		polygon ((20, 21, 19),(32, 33, 31), 1 ),
		polygon ((22, 23, 24),(34, 35, 36), 1 ),
		polygon ((25, 21, 20),(37, 33, 32), 1 ),
		polygon ((21, 25, 26),(33, 37, 38), 1 ),
		polygon ((23, 13, 24),(35, 25, 36), 1 ),
		polygon ((23, 14, 13),(35, 26, 25), 1 ),
		polygon ((25, 27, 26),(37, 39, 38), 1 ),
		polygon ((25, 28, 27),(37, 40, 39), 1 ),
		polygon ((27, 28, 29),(39, 40, 41), 1 ),
		polygon ((29, 28, 30),(41, 40, 42), 1 ),
		polygon ((29, 30, 31),(41, 42, 43), 1 ),
		polygon ((31, 32, 29),(43, 44, 41), 1 ),
		polygon ((32, 31, 33),(44, 43, 45), 1 ),
		polygon ((33, 31, 22),(45, 43, 34), 1 ),
		polygon ((22, 24, 33),(34, 36, 45), 1 ),
		polygon ((16, 10, 4),(28, 22, 15), 1 ),
		polygon ((10, 16, 15),(22, 28, 27), 1 ),
		polygon ((10, 15, 14),(22, 27, 26), 1 ),
		polygon ((14, 34, 10),(26, 46, 22), 1 ),
		polygon ((14, 35, 34),(26, 47, 46), 1 ),
		polygon ((35, 14, 23),(47, 26, 35), 1 ),
		polygon ((35, 23, 22),(47, 35, 34), 1 ),
		polygon ((22, 36, 35),(34, 48, 47), 1 ),
		polygon ((22, 37, 36),(34, 49, 48), 1 ),
		polygon ((37, 22, 31),(49, 34, 43), 1 ),
		polygon ((37, 31, 30),(49, 43, 42), 1 ),
		polygon ((30, 38, 37),(42, 50, 49), 1 ),
		polygon ((30, 39, 38),(42, 51, 50), 1 ),
		polygon ((39, 30, 28),(51, 42, 40), 1 ),
		polygon ((39, 28, 25),(51, 40, 37), 1 ),
		polygon ((25, 40, 39),(37, 52, 51), 1 ),
		polygon ((25, 7, 40),(37, 19, 52), 1 ),
		polygon ((7, 25, 20),(19, 37, 32), 1 ),
		polygon ((7, 20, 18),(19, 32, 30), 1 ),
		polygon ((18, 9, 7),(30, 21, 19), 1 ),
		polygon ((18, 3, 9),(30, 6, 21), 1 ),
		polygon ((3, 18, 17),(7, 30, 29), 1 ),
		polygon ((3, 17, 16),(8, 29, 28), 1 ),
		polygon ((16, 4, 3),(28, 16, 9), 1 ),
		polygon ((19, 9, 3),(31, 21, 10), 1 ),
		polygon ((3, 12, 19),(11, 24, 31), 1 ),
		polygon ((19, 7, 9),(31, 19, 21), 1 ),
		polygon ((19, 21, 7),(31, 33, 19), 1 ),
		polygon ((21, 26, 7),(33, 38, 19), 1 ),
		polygon ((40, 7, 26),(52, 19, 38), 1 ),
		polygon ((26, 27, 39),(38, 39, 51), 1 ),
		polygon ((39, 40, 26),(51, 52, 38), 1 ),
		polygon ((39, 27, 29),(51, 39, 41), 1 ),
		polygon ((29, 38, 39),(41, 50, 51), 1 ),
		polygon ((38, 29, 37),(50, 41, 49), 1 ),
		polygon ((37, 29, 32),(49, 41, 44), 1 ),
		polygon ((33, 37, 32),(45, 49, 44), 1 ),
		polygon ((37, 33, 36),(49, 45, 48), 1 ),
		polygon ((35, 33, 24),(47, 45, 36), 1 ),
		polygon ((33, 35, 36),(45, 47, 48), 1 ),
		polygon ((13, 35, 24),(25, 47, 36), 1 ),
		polygon ((35, 13, 34),(47, 25, 46), 1 ),
		polygon ((10, 34, 13),(22, 46, 25), 1 )
	)
); /* end of polyset 'Rim' */

polyset decals (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (NBAdecal ),
	casts_shadow = TRUE,
	vertices = ((cv((-7.055801, 2.308076, 0.505139), 1)),
			(cv((-7.055801, 2.470653, 0.505139), 1)),
			(cv((-7.055801, 2.470653, 0.576603), 1)),
			(cv((-7.055801, 2.308076, 0.576603), 1)),
			(cv((-7.046639, 2.308076, 0.576436), 1)),
			(cv((-7.046639, 2.470653, 0.576436), 1)),
			(cv((-7.046639, 2.470653, 0.504972), 1)),
			(cv((-7.046639, 2.308076, 0.504972), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 0 ),
		polygon ((6, 7, 4),(6, 7, 4), 0 )
	)
); /* end of polyset 'decals' */

polyset BackBoard (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (seal ),
	shader = (TARGET ),
	shader = (METAL4 ),
	shader = (BackPad ),
	casts_shadow = TRUE,
	vertices = ((cv((-7.07207, 2.288114, 0.596734), 1)),
			(cv((-7.030955, 2.288114, 0.596734), 1)),
			(cv((-7.030955, 2.964677, 0.596734), 1)),
			(cv((-7.07207, 2.964677, 0.596734), 1)),
			(cv((-7.07207, 2.288114, -0.596731), 1)),
			(cv((-7.07207, 2.964677, -0.596734), 1)),
			(cv((-7.030955, 2.964677, -0.596734), 1)),
			(cv((-7.052754, 2.355915, 0.162836), 1)),
			(cv((-7.052754, 2.617597, 0.19919), 1)),
			(cv((-7.052754, 2.3197, 0.19919), 1)),
			(cv((-7.020122, 2.199556, -0.684449), 1)),
			(cv((-7.020122, 2.259842, -0.627439), 1)),
			(cv((-7.072071, 3.026545, 0.658603), 1)),
			(cv((-7.072071, 2.226245, 0.658603), 1)),
			(cv((-7.019879, 2.199557, 0.682247), 1)),
			(cv((-7.019879, 2.259842, 0.62524), 1)),
			(cv((-7.07207, 2.226245, -0.6586), 1)),
			(cv((-7.07207, 3.026545, -0.658603), 1)),
			(cv((-7.030955, 2.226245, -0.6586), 1)),
			(cv((-7.030955, 2.226245, 0.658603), 1)),
			(cv((-7.083693, 2.259842, 0.62524), 1)),
			(cv((-7.030955, 3.026545, 0.658603), 1)),
			(cv((-7.083693, 2.199557, 0.682247), 1)),
			(cv((-7.083693, 2.199556, -0.684449), 1)),
			(cv((-7.030955, 3.026545, -0.658603), 1)),
			(cv((-7.030955, 2.288114, -0.596731), 1)),
			(cv((-7.083693, 2.259842, -0.627439), 1)),
			(cv((-7.052754, 2.581363, 0.162836), 1)),
			(cv((-7.049759, 2.355915, 0.162836), 1)),
			(cv((-7.049759, 2.355915, -0.162956), 1)),
			(cv((-7.049759, 2.3197, -0.19919), 1)),
			(cv((-7.052754, 2.3197, -0.19919), 1)),
			(cv((-7.052754, 2.355915, -0.162956), 1)),
			(cv((-7.049759, 2.3197, 0.19919), 1)),
			(cv((-7.049759, 2.617597, 0.19919), 1)),
			(cv((-7.052754, 2.617597, -0.19919), 1)),
			(cv((-7.052754, 2.581363, -0.162956), 1)),
			(cv((-7.049759, 2.581363, 0.162836), 1)),
			(cv((-7.049759, 2.581363, -0.162956), 1)),
			(cv((-7.049759, 2.617597, -0.19919), 1)),
			(cv((-7.019959, 2.627634, 0.62524), 1)),
			(cv((-7.019959, 2.627634, 0.684502), 1)),
			(cv((-7.083693, 2.627634, 0.684502), 1)),
			(cv((-7.083693, 2.627634, 0.62524), 1)),
			(cv((-7.019959, 2.627634, -0.627439), 1)),
			(cv((-7.083693, 2.627634, -0.627439), 1)),
			(cv((-7.083693, 2.627634, -0.685076), 1)),
			(cv((-7.019959, 2.627634, -0.685076), 1))	),
	texture_vertices = (
			st( 1.000000, 0.000000 ),
			st( 0.010265, 0.513449 ),
			st( 0.010265, 0.513449 ),
			st( 0.006843, 0.559621 ),
			st( 0.006843, 0.559621 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.989735, 0.521597 ),
			st( 0.993157, 0.516165 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.991446, 0.521597 ),
			st( 0.996578, 0.540609 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.006843, 0.524313 ),
			st( 0.008554, 0.535177 ),
			st( 0.006843, 0.524313 ),
			st( 0.008554, 0.535177 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.750000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 0.000000 ),
			st( 0.250000, 0.000000 ),
			st( 0.750000, 1.000000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.993157, 0.005954 ),
			st( 0.991446, 0.008670 ),
			st( 0.991446, 0.008670 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.010265, 0.005954 ),
			st( 0.001711, 0.008670 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.250000, 0.500000 ),
			st( 0.750000, 0.000000 ),
			st( 0.750000, 0.000000 ),
			st( 0.250000, 1.000000 ),
			st( 0.750000, 0.500000 ),
			st( 0.750000, 0.500000 ),
			st( 0.750000, 0.500000 ),
			st( 0.991446, 0.011386 ),
			st( 0.993157, 0.011386 ),
			st( 0.993157, 0.011386 ),
			st( 0.991446, 0.011386 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.010265, 0.014102 ),
			st( 0.010265, 0.016818 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.750000, 1.000000 ),
			st( 0.750000, 0.000000 ),
			st( 0.750000, 0.000000 ),
			st( 0.750000, 0.000000 ),
			st( 1.000000, 0.500000 ),
			st( 0.750000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 0.000000 ),
			st( 0.250000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.250000, 1.000000 ),
			st( 0.250000, 0.000000 ),
			st( 0.250000, 0.000000 ),
			st( 0.250000, 0.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.032450, 0.489109 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.030905, 0.061622 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.270643, 0.058326 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.270643, 0.485812 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.270643, 0.485812 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.500000 ),
			st( 0.032450, 0.489109 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.030905, 0.061622 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.270643, 0.058326 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.500000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 6, 7), 0 ),
		polygon ((2, 3, 0),(7, 11, 0), 0 ),
		polygon ((4, 5, 6),(16, 22, 28), 0 ),
		polygon ((7, 8, 9),(29, 30, 31), 1 ),
		polygon ((0, 3, 12),(1, 12, 41), 2 ),
		polygon ((12, 13, 0),(41, 47, 2), 2 ),
		polygon ((5, 4, 16),(23, 17, 58), 2 ),
		polygon ((5, 17, 12),(24, 64, 42), 2 ),
		polygon ((0, 13, 16),(3, 48, 59), 2 ),
		polygon ((0, 16, 4),(4, 60, 18), 2 ),
		polygon ((16, 17, 5),(61, 65, 25), 2 ),
		polygon ((12, 3, 5),(43, 13, 26), 2 ),
		polygon ((18, 19, 1),(68, 69, 6), 2 ),
		polygon ((21, 2, 1),(74, 8, 6), 2 ),
		polygon ((6, 24, 18),(28, 79, 68), 2 ),
		polygon ((25, 18, 1),(80, 68, 6), 2 ),
		polygon ((13, 12, 21),(49, 44, 74), 2 ),
		polygon ((24, 21, 12),(79, 74, 45), 2 ),
		polygon ((21, 19, 13),(74, 69, 50), 2 ),
		polygon ((12, 17, 24),(46, 66, 79), 2 ),
		polygon ((24, 17, 16),(79, 67, 62), 2 ),
		polygon ((0, 4, 1),(5, 19, 6), 0 ),
		polygon ((6, 25, 4),(28, 81, 20), 0 ),
		polygon ((16, 18, 24),(63, 68, 79), 2 ),
		polygon ((18, 25, 6),(68, 82, 28), 2 ),
		polygon ((21, 24, 6),(74, 79, 28), 2 ),
		polygon ((6, 2, 21),(28, 9, 74), 2 ),
		polygon ((1, 19, 21),(6, 69, 74), 2 ),
		polygon ((27, 8, 7),(88, 30, 29), 1 ),
		polygon ((28, 29, 30),(89, 90, 91), 1 ),
		polygon ((31, 32, 7),(92, 93, 29), 1 ),
		polygon ((33, 34, 28),(94, 95, 89), 1 ),
		polygon ((35, 36, 32),(96, 97, 93), 1 ),
		polygon ((35, 8, 36),(96, 30, 97), 1 ),
		polygon ((32, 31, 35),(93, 92, 96), 1 ),
		polygon ((37, 34, 38),(98, 95, 99), 1 ),
		polygon ((29, 38, 39),(90, 99, 100), 1 ),
		polygon ((39, 30, 29),(100, 91, 90), 1 ),
		polygon ((38, 34, 39),(99, 95, 100), 1 ),
		polygon ((36, 8, 27),(97, 30, 88), 1 ),
		polygon ((7, 9, 31),(29, 31, 92), 1 ),
		polygon ((28, 34, 37),(89, 95, 98), 1 ),
		polygon ((3, 2, 6),(14, 10, 28), 0 ),
		polygon ((6, 5, 3),(28, 27, 15), 0 ),
		polygon ((4, 25, 1),(21, 83, 6), 0 ),
		polygon ((30, 33, 28),(91, 94, 89), 1 ),
		polygon ((40, 41, 42),(101, 105, 110), 3 ),
		polygon ((42, 43, 40),(110, 114, 101), 3 ),
		polygon ((44, 45, 46),(117, 121, 126), 3 ),
		polygon ((46, 47, 44),(126, 130, 117), 3 ),
		polygon ((44, 47, 10),(118, 131, 32), 3 ),
		polygon ((10, 11, 44),(32, 37, 119), 3 ),
		polygon ((11, 10, 14),(37, 32, 51), 3 ),
		polygon ((14, 15, 11),(51, 54, 37), 3 ),
		polygon ((15, 14, 41),(54, 51, 106), 3 ),
		polygon ((41, 40, 15),(107, 102, 54), 3 ),
		polygon ((20, 43, 42),(70, 115, 111), 3 ),
		polygon ((42, 22, 20),(112, 75, 70), 3 ),
		polygon ((23, 46, 45),(76, 127, 122), 3 ),
		polygon ((45, 26, 23),(123, 84, 76), 3 ),
		polygon ((20, 22, 23),(70, 75, 76), 3 ),
		polygon ((23, 26, 20),(76, 84, 70), 3 ),
		polygon ((41, 14, 22),(108, 52, 75), 3 ),
		polygon ((22, 42, 41),(75, 113, 109), 3 ),
		polygon ((10, 47, 46),(33, 132, 128), 3 ),
		polygon ((46, 23, 10),(129, 77, 34), 3 ),
		polygon ((10, 23, 22),(35, 78, 75), 3 ),
		polygon ((22, 14, 10),(75, 53, 36), 3 ),
		polygon ((45, 44, 11),(124, 120, 38), 3 ),
		polygon ((11, 26, 45),(39, 85, 125), 3 ),
		polygon ((15, 20, 26),(55, 71, 86), 3 ),
		polygon ((26, 11, 15),(87, 40, 56), 3 ),
		polygon ((20, 15, 40),(72, 57, 103), 3 ),
		polygon ((40, 43, 20),(104, 116, 73), 3 )
	)
); /* end of polyset 'BackBoard' */

polyset goal_base (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (WHITEPOST ),
	shader = (cush4 ),
	casts_shadow = TRUE,
	vertices = ((cv((-9.556937, 0.81147, -0.195815), 1)),
			(cv((-9.556937, 0.81147, 0.195588), 1)),
			(cv((-9.556937, 0.915917, 0.195664), 1)),
			(cv((-9.556937, 0.915917, -0.195891), 1)),
			(cv((-9.661941, 0.81147, -0.195815), 1)),
			(cv((-9.661941, 0.915917, -0.195891), 1)),
			(cv((-9.661941, 0.915917, 0.195664), 1)),
			(cv((-9.661941, 0.81147, 0.195588), 1)),
			(cv((-9.541688, 0.811042, 0.23185), 1)),
			(cv((-9.541688, 0.399368, 0.401548), 1)),
			(cv((-9.685844, 0.399368, 0.401548), 1)),
			(cv((-9.685844, 0.811042, 0.23185), 1)),
			(cv((-9.685844, 0.811042, 0.106521), 1)),
			(cv((-9.685844, 0.399368, 0.276219), 1)),
			(cv((-9.541688, 0.811042, 0.106521), 1)),
			(cv((-9.541688, 0.399368, 0.276219), 1)),
			(cv((-9.685844, 0.399368, -0.401548), 1)),
			(cv((-9.541688, 0.399368, -0.401548), 1)),
			(cv((-9.541688, 0.811042, -0.23185), 1)),
			(cv((-9.685844, 0.811042, -0.23185), 1)),
			(cv((-9.685844, 0.811042, -0.106521), 1)),
			(cv((-9.685844, 0.399368, -0.276219), 1)),
			(cv((-9.541688, 0.811042, -0.106521), 1)),
			(cv((-9.541688, 0.399368, -0.276219), 1)),
			(cv((-9.01348, 0.883183, 0.201984), 1)),
			(cv((-9.01348, 0.883183, -0.198972), 1)),
			(cv((-9.01348, 1.31545, -0.198972), 1)),
			(cv((-9.01348, 1.31545, 0.201984), 1)),
			(cv((-9.01348, 0.399459, 0.402842), 1)),
			(cv((-9.01348, 0.399459, -0.39983), 1)),
			(cv((-8.813769, 1.31545, 0.0), 1)),
			(cv((-8.813769, 1.31545, 0.201984), 1)),
			(cv((-9.01348, 1.31545, 0.0), 1)),
			(cv((-8.813769, 1.31545, -0.198972), 1)),
			(cv((-10.670581, 0.000006, 0.403329), 1)),
			(cv((-10.670581, 0.000006, 0.0), 1)),
			(cv((-10.670581, 0.39915, 0.0), 1)),
			(cv((-10.670581, 0.39915, 0.403329), 1)),
			(cv((-10.670581, 0.000006, -0.400317), 1)),
			(cv((-10.670581, 0.39915, -0.400317), 1)),
			(cv((-8.813769, 0.000006, -0.400317), 1)),
			(cv((-8.813769, 0.399459, 0.402842), 1)),
			(cv((-8.813769, 0.399459, -0.39983), 1)),
			(cv((-8.813769, 0.883183, 0.201984), 1)),
			(cv((-8.813769, 0.883183, -0.198972), 1)),
			(cv((-8.813769, 0.000006, 0.403329), 1)),
			(cv((-8.953528, 1.315352, 0.083869), 1)),
			(cv((-9.005387, 1.315352, 0.083869), 1)),
			(cv((-8.953528, 1.760046, 0.083869), 1)),
			(cv((-9.005387, 1.760046, 0.083869), 1)),
			(cv((-9.005387, 1.315352, -0.052033), 1)),
			(cv((-9.005387, 1.760046, -0.052033), 1)),
			(cv((-8.953528, 1.760046, -0.052033), 1)),
			(cv((-8.953528, 1.315352, -0.052033), 1)),
			(cv((-8.953528, 1.760046, -0.083855), 1)),
			(cv((-9.005387, 1.760046, -0.083855), 1)),
			(cv((-8.953528, 1.760046, 0.052047), 1)),
			(cv((-9.005387, 1.760046, 0.052047), 1)),
			(cv((-9.005387, 1.315352, 0.052047), 1)),
			(cv((-8.953528, 1.315352, 0.052047), 1)),
			(cv((-9.005387, 1.315352, -0.083855), 1)),
			(cv((-8.953528, 1.315352, -0.083855), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 0.316431, 0.027525 ),
			st( 1.000000, 0.000000 ),
			st( 0.316431, 0.027525 ),
			st( 1.000000, 0.250000 ),
			st( 0.316431, 0.267143 ),
			st( 0.316431, 0.267143 ),
			st( 0.000000, 0.250000 ),
			st( 0.316431, 0.267143 ),
			st( 0.316431, 0.267143 ),
			st( 0.000000, 0.750000 ),
			st( 0.705243, 0.027525 ),
			st( 0.705243, 0.027525 ),
			st( 0.000000, 0.500000 ),
			st( 0.705243, 0.267143 ),
			st( 1.000000, 0.500000 ),
			st( 0.705243, 0.267143 ),
			st( 1.000000, 0.750000 ),
			st( 0.705243, 0.027525 ),
			st( 0.705243, 0.027525 ),
			st( 1.000000, 0.250000 ),
			st( 0.364112, 0.542395 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.364112, 0.233964 ),
			st( 0.364112, 0.233964 ),
			st( 1.000000, 1.000000 ),
			st( 0.568701, 0.233964 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 1.000000 ),
			st( 0.993662, 0.010634 ),
			st( 0.575203, 0.549276 ),
			st( 0.575203, 0.549276 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.364112, 0.542395 ),
			st( 1.000000, 0.500000 ),
			st( 0.364112, 0.233964 ),
			st( 0.364112, 0.233964 ),
			st( 1.000000, 0.750000 ),
			st( 0.568701, 0.233964 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 1.000000 ),
			st( 0.997887, 0.000573 ),
			st( 0.575203, 0.549276 ),
			st( 0.575203, 0.549276 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 0.961765, 0.682541 ),
			st( 0.571782, 0.731341 ),
			st( 0.571782, 0.731341 ),
			st( 0.570110, 0.731341 ),
			st( 0.726952, 0.683213 ),
			st( 0.574240, 0.700595 ),
			st( 0.574240, 0.700595 ),
			st( 0.726952, 0.997310 ),
			st( 0.574648, 0.996116 ),
			st( 0.574900, 0.997798 ),
			st( 0.574900, 0.997798 ),
			st( 0.964496, 0.997774 ),
			st( 0.574648, 0.996116 ),
			st( 0.574648, 0.996116 ),
			st( 0.570957, 0.999119 ),
			st( 0.964496, 0.345047 ),
			st( 0.570110, 0.355653 ),
			st( 0.570110, 0.355653 ),
			st( 0.560652, 0.364603 ),
			st( 0.725662, 0.345634 ),
			st( 0.561841, 1.000000 ),
			st( 0.561841, 1.000000 ),
			st( 0.571405, 0.364065 ),
			st( 0.571405, 0.364065 ),
			st( 0.704249, 0.871387 ),
			st( 0.704190, 0.996506 ),
			st( 0.699159, 1.000000 ),
			st( 0.699580, 0.999791 ),
			st( 0.699580, 0.999791 ),
			st( 0.574479, 0.870934 ),
			st( 0.704190, 0.996506 ),
			st( 0.962701, 0.997573 ),
			st( 0.962701, 0.997573 ),
			st( 0.699455, 0.997775 ),
			st( 0.005248, 0.002385 ),
			st( 0.002926, 0.000000 ),
			st( 0.295500, 0.002385 ),
			st( 0.295500, 0.370420 ),
			st( 0.005248, 0.370420 ),
			st( 0.002926, 0.355494 ),
			st( 0.002926, 0.355494 ),
			st( 0.002228, 0.365902 ),
			st( 0.002228, 0.365902 ),
			st( 0.005248, 0.002385 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.005248, 0.370420 ),
			st( 0.000000, 1.000000 ),
			st( 0.002049, 0.365119 ),
			st( 0.996744, 0.001706 ),
			st( 0.699212, 0.000000 ),
			st( 0.697936, 0.365525 ),
			st( 0.695623, 0.352699 ),
			st( 0.699580, 0.355653 ),
			st( 0.995530, 0.365291 ),
			st( 0.699436, 0.365980 ),
			st( 0.699436, 0.365980 ),
			st( 0.700346, 0.364938 ),
			st( 0.697937, 0.699329 ),
			st( 0.699580, 0.731341 ),
			st( 0.699580, 0.731341 ),
			st( 0.699580, 0.731341 ),
			st( 0.967997, 0.698498 ),
			st( 0.967801, 0.698498 ),
			st( 0.700393, 0.700648 ),
			st( 0.700393, 0.700648 ),
			st( 0.700393, 0.700648 ),
			st( 0.700393, 0.700648 ),
			st( 0.699159, 0.001900 ),
			st( 0.695623, 0.001347 ),
			st( 0.695623, 0.001347 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 0.500000 ),
			st( 0.457387, 0.133831 ),
			st( 0.457387, 0.133831 ),
			st( 1.000000, 0.750000 ),
			st( 0.455496, 0.647953 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 0.002832, 0.003999 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.996219, 0.009542 ),
			st( 0.797702, 0.651839 ),
			st( 0.797702, 0.651839 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.790139, 0.147953 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.457387, 0.133831 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.455496, 0.647953 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.250000 ),
			st( 0.790139, 0.147953 ),
			st( 0.996219, 0.009542 ),
			st( 0.797702, 0.651839 ),
			st( 0.797702, 0.651839 ),
			st( 1.000000, 1.000000 ),
			st( 0.002832, 0.003999 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.750000 ),
			st( 0.000000, 0.500000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 2, 4), 0 ),
		polygon ((2, 3, 0),(4, 7, 0), 0 ),
		polygon ((4, 5, 6),(10, 13, 15), 0 ),
		polygon ((6, 7, 4),(15, 17, 10), 0 ),
		polygon ((5, 3, 2),(13, 7, 4), 0 ),
		polygon ((2, 6, 5),(4, 15, 13), 0 ),
		polygon ((8, 9, 10),(20, 22, 23), 0 ),
		polygon ((10, 11, 8),(23, 24, 20), 0 ),
		polygon ((12, 11, 10),(27, 24, 23), 0 ),
		polygon ((10, 13, 12),(23, 29, 27), 0 ),
		polygon ((14, 12, 13),(30, 27, 29), 0 ),
		polygon ((13, 15, 14),(29, 34, 30), 0 ),
		polygon ((8, 14, 15),(20, 31, 35), 0 ),
		polygon ((15, 9, 8),(36, 22, 20), 0 ),
		polygon ((16, 17, 18),(37, 38, 39), 0 ),
		polygon ((18, 19, 16),(39, 41, 37), 0 ),
		polygon ((16, 19, 20),(37, 41, 44), 0 ),
		polygon ((20, 21, 16),(44, 46, 37), 0 ),
		polygon ((21, 20, 22),(46, 44, 47), 0 ),
		polygon ((22, 23, 21),(47, 51, 46), 0 ),
		polygon ((23, 22, 18),(52, 48, 39), 0 ),
		polygon ((18, 17, 23),(39, 38, 53), 0 ),
		polygon ((7, 6, 2),(18, 16, 5), 0 ),
		polygon ((2, 1, 7),(6, 3, 19), 0 ),
		polygon ((3, 5, 4),(8, 14, 11), 0 ),
		polygon ((4, 0, 3),(12, 1, 9), 0 ),
		polygon ((19, 18, 22),(42, 40, 49), 0 ),
		polygon ((20, 19, 22),(45, 43, 50), 0 ),
		polygon ((14, 8, 11),(32, 21, 25), 0 ),
		polygon ((14, 11, 12),(33, 26, 28), 0 ),
		polygon ((24, 25, 26),(54, 58, 61), 1 ),
		polygon ((26, 27, 24),(61, 65, 54), 1 ),
		polygon ((28, 29, 25),(69, 73, 58), 1 ),
		polygon ((25, 24, 28),(58, 54, 69), 1 ),
		polygon ((30, 31, 27),(78, 79, 66), 1 ),
		polygon ((27, 32, 30),(67, 83, 78), 1 ),
		polygon ((33, 30, 32),(84, 78, 83), 1 ),
		polygon ((32, 26, 33),(83, 62, 84), 1 ),
		polygon ((34, 35, 36),(88, 90, 91), 1 ),
		polygon ((36, 37, 34),(91, 92, 88), 1 ),
		polygon ((35, 38, 39),(90, 97, 100), 1 ),
		polygon ((39, 36, 35),(100, 91, 90), 1 ),
		polygon ((40, 41, 42),(103, 105, 108), 1 ),
		polygon ((41, 43, 44),(105, 112, 116), 1 ),
		polygon ((44, 42, 41),(116, 108, 105), 1 ),
		polygon ((45, 41, 40),(122, 105, 103), 1 ),
		polygon ((33, 44, 43),(85, 117, 112), 1 ),
		polygon ((43, 31, 33),(112, 80, 86), 1 ),
		polygon ((45, 34, 37),(123, 89, 93), 1 ),
		polygon ((45, 37, 41),(124, 94, 106), 1 ),
		polygon ((24, 27, 31),(55, 68, 81), 1 ),
		polygon ((31, 43, 24),(82, 113, 56), 1 ),
		polygon ((28, 24, 43),(70, 57, 114), 1 ),
		polygon ((43, 41, 28),(115, 107, 71), 1 ),
		polygon ((29, 28, 37),(74, 72, 95), 1 ),
		polygon ((37, 39, 29),(96, 101, 75), 1 ),
		polygon ((26, 25, 44),(63, 59, 118), 1 ),
		polygon ((44, 33, 26),(119, 87, 64), 1 ),
		polygon ((42, 39, 38),(109, 102, 98), 1 ),
		polygon ((38, 40, 42),(99, 104, 110), 1 ),
		polygon ((44, 25, 29),(120, 60, 76), 1 ),
		polygon ((29, 42, 44),(77, 111, 121), 1 ),
		polygon ((46, 47, 48),(125, 126, 127), 0 ),
		polygon ((47, 49, 48),(126, 130, 127), 0 ),
		polygon ((50, 51, 52),(134, 137, 141), 0 ),
		polygon ((52, 53, 50),(141, 144, 134), 0 ),
		polygon ((54, 52, 51),(145, 142, 138), 0 ),
		polygon ((51, 55, 54),(139, 150, 145), 0 ),
		polygon ((56, 57, 58),(154, 156, 160), 0 ),
		polygon ((58, 59, 56),(160, 163, 154), 0 ),
		polygon ((59, 46, 48),(163, 125, 127), 0 ),
		polygon ((48, 56, 59),(127, 154, 163), 0 ),
		polygon ((55, 51, 50),(151, 140, 135), 0 ),
		polygon ((50, 60, 55),(136, 164, 152), 0 ),
		polygon ((54, 60, 61),(146, 164, 165), 0 ),
		polygon ((54, 55, 60),(147, 153, 164), 0 ),
		polygon ((54, 61, 53),(148, 165, 144), 0 ),
		polygon ((53, 52, 54),(144, 143, 149), 0 ),
		polygon ((57, 56, 48),(157, 155, 128), 0 ),
		polygon ((48, 49, 57),(129, 131, 158), 0 ),
		polygon ((58, 57, 49),(161, 159, 132), 0 ),
		polygon ((49, 47, 58),(133, 126, 162), 0 )
	)
); /* end of polyset 'goal_base' */

polyset glass (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (GLASS ),
	casts_shadow = TRUE,
	vertices = ((cv((-7.051508, 2.96465, 0.596686), 1)),
			(cv((-7.051508, 2.288141, 0.596686), 1)),
			(cv((-7.051508, 2.288141, -0.596683), 1)),
			(cv((-7.051508, 2.96465, -0.596683), 1)),
			(cv((-7.05053, 2.288141, -0.596683), 1)),
			(cv((-7.05053, 2.288141, 0.596686), 1)),
			(cv((-7.05053, 2.96465, 0.596686), 1)),
			(cv((-7.05053, 2.96465, -0.596683), 1))	),
	texture_vertices = (
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 0 ),
		polygon ((6, 7, 4),(6, 7, 4), 0 )
	)
); /* end of polyset 'glass' */

ENVIRONMENT
background ( 
        color = (0.0, 0.0, 0.0)
);
shader_glow ( 
,
        glow_type =  LINEAR_GLOW,
        halo_type =  LINEAR_GLOW,
        auto_exposure = ON,
        quality = 0.5,
        threshold = 0.0,
        glow_color = (100.0, 100.0, 100.0),
        glow_intensity = 1.0,
        glow_spread = 0.05,
        glow_eccentricity = 0.1,
        glow_radial_noise = 0.0,
        glow_star_level = 0.0,
        glow_opacity = 0.0,
        halo_color = (100.0, 100.0, 100.0),
        halo_intensity = 1.0,
        halo_spread = 0.3,
        halo_eccentricity = 0.1,
        halo_radial_noise = 0.0,
        halo_star_level = 0.0,
        halo_lens_flare = 0.0,
        rotation = 0.0,
        radial_noise_frequency = 0.5,
        star_points = 4.0
);
photo_effects ( 
,
        film_grain = 0.0,
        filter = (255.0, 255.0, 255.0)
);
master_light ( 
,
        intensity = 1.0,
        light_color = (255.0, 255.0, 255.0)
);
dynamics ( 
,
        gravity = 1.0,
        air_density = 0.05,
        Floor = ON,
        floor_offset = 0.0,
        ceiling = OFF,
        ceiling_offset = 20.0,
        left = OFF,
        left_offset = -10.0,
        right = OFF,
        right_offset = 10.0,
        front = OFF,
        front_offset = -10.0,
        back = OFF,
        back_offset = 10.0,
        wall_friction = 0.0,
        wall_elasticity = 0.707,
        turbulence_intensity = 0.0,
        turbulence_spread = 0.5,
        turbulence_persistence = 5.0,
        turbulence_animated = ON,
        turbulence_space_resolution =  16,
        turbulence_time_resolution =  16,
        turbulence_roughness = 0.5,
        turbulence_variability = 0.5,
        turbulence_granularity = 0.0
);

MODEL
/* Only expression assignments should appear above this line and below the MODEL directive. */
/* Placing any other commands in the above section will produce incorrect expression behaviour. */
{
	trn_ro(9.388165, 0.0, 0.0);
	trn_ri(-9.388165, 0.0, 0.0);
	trn_so(9.388165, 0.0, 0.0);
	trn_si(-9.388165, 0.0, 0.0);
	{
		trn_ro(6.785765, 2.3018, 0.0);
		trn_ri(-6.785765, -2.3018, 0.0);
		trn_so(6.785765, 2.3018, 0.0);
		trn_si(-6.785765, -2.3018, 0.0);
		instance Net2();
	}
	{
		trn_ro(0.000065, 0.0, 0.0);
		trn_ri(-0.000065, 0.0, 0.0);
		trn_so(0.000065, 0.0, 0.0);
		trn_si(-0.000065, 0.0, 0.0);
		instance goal_post2();
	}
	{
		trn_ro(0.000065, 0.0, 0.0);
		trn_ri(-0.000065, 0.0, 0.0);
		trn_so(0.000065, 0.0, 0.0);
		trn_si(-0.000065, 0.0, 0.0);
		instance goal_support2();
	}
	{
		trn_ro(7.040381, 2.238399, -0.000001);
		trn_ri(-7.040381, -2.238399, 0.000001);
		trn_so(7.040381, 2.238399, -0.000001);
		trn_si(-7.040381, -2.238399, 0.000001);
		instance Rim2();
	}
	{
		trn_ro(-0.003253, 0.0, 0.0);
		trn_ri(0.003253, 0.0, 0.0);
		trn_so(-0.003253, 0.0, 0.0);
		trn_si(0.003253, 0.0, 0.0);
		instance decals2();
	}
	{
		trn_ro(0.000065, 0.0, 0.0);
		trn_ri(-0.000065, 0.0, 0.0);
		trn_so(0.000065, 0.0, 0.0);
		trn_si(-0.000065, 0.0, 0.0);
		instance BackBoard2();
	}
	{
		trn_ro(9.388165, 0.0, 0.0);
		trn_ri(-9.388165, 0.0, 0.0);
		trn_so(9.388165, 0.0, 0.0);
		trn_si(-9.388165, 0.0, 0.0);
		instance goal_base2();
	}
	{
		trn_ro(0.000065, 0.0, 0.0);
		trn_ri(-0.000065, 0.0, 0.0);
		trn_so(0.000065, 0.0, 0.0);
		trn_si(-0.000065, 0.0, 0.0);
		instance glass2();
	}
}
{
	trn_ro(-9.3878, 0.0, 0.0);
	trn_ri(9.3878, 0.0, 0.0);
	trn_so(-9.3878, 0.0, 0.0);
	trn_si(9.3878, 0.0, 0.0);
	{
		trn_ro(-6.7854, 2.3018, 0.0);
		trn_ri(6.7854, -2.3018, 0.0);
		trn_so(-6.785401, 2.3018, 0.0);
		trn_si(6.785401, -2.3018, 0.0);
		instance Net();
	}
	{
		trn_ro(0.000299, 0.0, -0.000001);
		trn_ri(-0.000299, 0.0, 0.000001);
		trn_so(0.000299, 0.0, -0.000001);
		trn_si(-0.000299, 0.0, 0.000001);
		instance goal_post();
	}
	{
		trn_ro(0.000299, 0.0, -0.000001);
		trn_ri(-0.000299, 0.0, 0.000001);
		trn_so(0.000299, 0.0, -0.000001);
		trn_si(-0.000299, 0.0, 0.000001);
		instance goal_support();
	}
	{
		trn_ro(-7.040017, 2.238399, 0.0);
		trn_ri(7.040017, -2.238399, 0.0);
		trn_so(-7.040017, 2.238399, 0.0);
		trn_si(7.040017, -2.238399, 0.0);
		instance Rim();
	}
	{
		trn_ro(0.003617, 0.0, -0.000001);
		trn_ri(-0.003617, 0.0, 0.000001);
		trn_so(0.003618, 0.0, -0.000001);
		trn_si(-0.003618, 0.0, 0.000001);
		instance decals();
	}
	{
		trn_ro(0.000299, 0.0, -0.000001);
		trn_ri(-0.000299, 0.0, 0.000001);
		trn_so(0.000299, 0.0, -0.000001);
		trn_si(-0.000299, 0.0, 0.000001);
		instance BackBoard();
	}
	{
		trn_ro(-9.3878, 0.0, 0.0);
		trn_ri(9.3878, 0.0, 0.0);
		trn_so(-9.3878, 0.0, 0.0);
		trn_si(9.3878, 0.0, 0.0);
		instance goal_base();
	}
	{
		trn_ro(0.000299, 0.0, -0.000001);
		trn_ri(-0.000299, 0.0, 0.000001);
		trn_so(0.000299, 0.0, -0.000001);
		trn_si(-0.000299, 0.0, 0.000001);
		instance glass();
	}
}
{
	{
		trn(3.95543, 3.750935, 10.427835);
		camera (
			perspective = TRUE,
			eye   = ( 0.0,  0.0,  0.0),
			active = ON,
			pix   = "pix/Goalbits.sdl",
			view  = Camera#2_view,
			up  = Camera#2_up,
			aov = 55.0,
			filmaperture_x = 0.4,
			filmaperture_y = 0.285,
			filmoffset_x = 0.0,
			filmoffset_y = 0.0,
			placement_fit_code = 0,
			placement_shift = 0.0,
			aspect   = pixel_aspect,
			aspect_ratio_pixel = pixel_aspect,
			near = 0.1,
			far = 200.0,
			depth_of_field = 0.0,
			scaling_factor = 1.0,
			f_stop = 3.5,
			focal_distance = 12.0,
			auto_focus = OFF,
			motion_blur = 0.0
		);
	}
	{
		trn(4.932682, 1.945664, 3.229339);
		Camera#2_view = current_position( (0, 0, 0) );
	}
	{
		trn(3.987873, 4.721417, 10.188859);
		Camera#2_up = current_position( (0, 0, 0) );
	}
}
{
	{
		trn(4.800518, 3.456828, 3.02819);
		camera (
			perspective = TRUE,
			eye   = ( 0.0,  0.0,  0.0),
			active = ON,
			pix   = "pix/Goalbits.sdl_Camera",
			view  = Camera_view,
			up  = Camera_up,
			aov = 55.0,
			filmaperture_x = 0.4,
			filmaperture_y = 0.285,
			filmoffset_x = 0.0,
			filmoffset_y = 0.0,
			placement_fit_code = 0,
			placement_shift = 0.0,
			aspect   = pixel_aspect,
			aspect_ratio_pixel = pixel_aspect,
			near = 0.1,
			far = 200.0,
			depth_of_field = 0.0,
			scaling_factor = 1.0,
			f_stop = 3.5,
			focal_distance = 12.0,
			auto_focus = OFF,
			motion_blur = 0.0
		);
	}
	{
		trn(6.080639, 2.774873, 1.603672);
		Camera_view = current_position( (0, 0, 0) );
	}
	{
		trn(5.024731, 4.398885, 2.778686);
		Camera_up = current_position( (0, 0, 0) );
	}
}

