DEFINITION	/* ALIAS SDL File Version 8.5 */
			/* Apparently from wire file '/usr/people/mgilmore/user_data/NBAonNBC/wire/Nets/GOALS7a'. */
	version = 8.5;

	xleft  = 0;
	xright = 1279;
	ylow   = 0;
	yhigh  = 1023;
	resolution = 1280 1024;
	aalevelmin   = 3;
	aalevelmax   = 12;
	aathreshold  = 0.6;
	post_filter   = OFF;
	post_center   = 8;    /* Values for a bartlet filter. */
	post_adjacent = 1;
	post_diagonal = 1;

	composite_rendering = OFF;
	invisible_objects_cast_shadows = OFF;
	image_format = ALIAS;
	jitter       = ON;
	reduced_samples = OFF;
	textures_active    = ON;

	clamp_bumpsize = 0.0;

	up = yaxis;

	motion_blur_on = OFF;
	shutter_angle  = 144.0;
	animation  = OFF;
	startframe = 0.0;
	endframe = 0.0;
	fields          = FALSE;
	odd             = FALSE;
	even            = FALSE;
	odd_field_first = TRUE;

	triple Camera_view(0.0, 0.0, 0.0);
	triple Camera_up(0.0, 0.0, 0.0);

	subdivision_recursion_limit = 2;
	grid_cache = 4000;
	bbox_memory = FULL;
	rt_voxel_res_type = AUTOMATIC;

	max_reflections             = 10;
	max_refractions             = 10;
	max_shadow_level            = 10;
	preview_ray_trace           = OFF;

	scalar pixel_aspect ( 1.0 );
	hline_to_fill_color  = FALSE;
	hline_fill_color     = (255.0, 255.0, 255.0);
	hline_line_color     = (0.0, 255.0, 255.0);
	hline_isoparam_u     = 0;
	hline_isoparam_v     = 0;

	show_particles       = TRUE;
	simulation_substeps  = 1;
	simulation_frames_per_second = 30;


texture File#2 (
        procedure = file,
        rgbout = (18.497383, 0.0, 255.0),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/cush4.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.05814,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = OFF,
        vwrap = OFF,
        invert = OFF
);

shader cush4 ( model = lambert,
        diffuse = 0.8,
        color = File#2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture WHITEPOSTtexture (
        procedure = file,
        rgbout = (241.787567, 249.559586, 255.0),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/whitpost.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader WHITEPOST ( model = lambert,
        diffuse = 0.8,
        color = WHITEPOSTtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture NETtexture#5 (
        procedure = file,
        rgbout = (133.048538, 136.964493, 151.943008),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/seal.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = -0.01,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader seal ( model = lambert,
        diffuse = 0.8,
        color = NETtexture#5,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture NETtexture#6 (
        procedure = file,
        rgbout = (151.943008, 143.597137, 99.983223),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/metal4.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = -0.01,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader METAL4 ( model = lambert,
        diffuse = 0.8,
        color = NETtexture#6,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture METAL2texture (
        procedure = file,
        rgbout = (113.120346, 120.298462, 134.76683),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/metal2.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.05814,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader METAL2 ( model = lambert,
        diffuse = 0.8,
        color = METAL2texture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture METAL3texture (
        procedure = file,
        rgbout = (113.120346, 120.298462, 134.76683),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/metal3.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.05814,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader METAL3 ( model = lambert,
        diffuse = 0.8,
        color = METAL3texture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture METAL1texture (
        procedure = file,
        rgbout = (113.120346, 120.298462, 134.76683),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/metal1.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.05814,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader METAL1 ( model = lambert,
        diffuse = 0.8,
        color = METAL1texture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture BUMPERtexture (
        procedure = file,
        rgbout = (43.813255, 73.097771, 132.124359),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/bumper.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader BUMPER ( model = lambert,
        diffuse = 0.8,
        color = BUMPERtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture NETtexture#2 (
        procedure = file,
        rgbout = (130.618286, 133.159958, 140.051819),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/backpad.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader BackPad ( model = lambert,
        diffuse = 0.8,
        color = NETtexture#2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture TARGETtexture (
        procedure = file,
        rgbout = (255.0, 254.555023, 248.393784),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/target.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader TARGET ( model = lambert,
        diffuse = 0.8,
        color = TARGETtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture GLASStexture (
        procedure = file,
        rgbout = (0.0, 55.813946, 94.88372),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/glass.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader GLASS ( model = lambert,
        diffuse = 0.8,
        color = GLASStexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (201.627914, 201.627914, 201.627914),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture nbalog (
        procedure = file,
        rgbout = (0.0, 150.0, 255.0),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/NBAlog.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = OFF,
        vwrap = OFF,
        invert = OFF
);

shader NBAdecal ( model = lambert,
        diffuse = 0.8,
        color = nbalog,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture ORANGEtexture (
        procedure = file,
        rgbout = (255.0, 71.347153, 0.0),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/bracket.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader ORANGE ( model = lambert,
        diffuse = 0.8,
        color = ORANGEtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture HOOPtexture (
        procedure = file,
        rgbout = (255.0, 71.347153, 0.0),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/hoop.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader HOOP ( model = lambert,
        diffuse = 0.8,
        color = HOOPtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture NETtexture (
        procedure = file,
        rgbout = (151.943008, 143.597137, 99.983223),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/net.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = -0.01,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader NET ( model = lambert,
        diffuse = 0.8,
        color = NETtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

polyset GoalStand (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (seal ),
	shader = (METAL4 ),
	shader = (WHITEPOST ),
	shader = (METAL2 ),
	shader = (METAL3 ),
	shader = (METAL1 ),
	shader = (BUMPER ),
	casts_shadow = TRUE,
	vertices = ((cv((-8.197511, 2.176789, 0.0543), 1)),
			(cv((-8.197511, 2.176789, -0.0543), 1)),
			(cv((-8.116648, 2.176789, 0.0), 1)),
			(cv((-8.197511, 1.972219, 0.0543), 1)),
			(cv((-8.197511, 1.972219, -0.0543), 1)),
			(cv((-8.197511, 2.176789, -0.0543), 1)),
			(cv((-8.197511, 2.176789, 0.0543), 1)),
			(cv((-8.116648, 1.972219, 0.0), 1)),
			(cv((-8.116648, 2.176789, 0.0), 1)),
			(cv((-7.467051, 2.504268, -0.399), 1)),
			(cv((-7.438888, 2.504268, -0.415364), 1)),
			(cv((-7.438988, 2.504268, 0.415384), 1)),
			(cv((-7.453855, 2.483936, -0.407182), 1)),
			(cv((-7.453955, 2.483936, 0.407202), 1)),
			(cv((-7.467151, 2.504268, 0.399), 1)),
			(cv((-9.370433, 1.238626, 0.0), 1)),
			(cv((-9.393589, 1.272513, -0.027879), 1)),
			(cv((-9.472845, 1.049741, -0.027879), 1)),
			(cv((-8.196584, 2.174765, 0.027879), 1)),
			(cv((-9.393589, 1.272513, 0.027879), 1)),
			(cv((-8.196584, 2.128048, 0.0), 1)),
			(cv((-8.196584, 2.174765, -0.027879), 1)),
			(cv((-9.419602, 1.090958, 0.0), 1)),
			(cv((-9.472845, 1.049741, 0.027879), 1)),
			(cv((-9.557237, 0.863209, -0.160139), 1)),
			(cv((-9.557237, 0.863209, 0.159953), 1)),
			(cv((-9.557237, 0.967656, 0.159953), 1)),
			(cv((-9.557237, 0.967656, -0.160139), 1)),
			(cv((-9.662241, 0.863209, -0.160139), 1)),
			(cv((-9.662241, 0.967656, -0.160139), 1)),
			(cv((-9.662241, 0.967656, 0.159953), 1)),
			(cv((-9.662241, 0.863209, 0.159953), 1)),
			(cv((-9.541987, 0.811042, 0.23185), 1)),
			(cv((-9.541987, 0.399368, 0.401548), 1)),
			(cv((-9.686143, 0.399368, 0.401548), 1)),
			(cv((-9.686143, 0.811042, 0.23185), 1)),
			(cv((-9.686143, 0.811042, 0.106521), 1)),
			(cv((-9.686143, 0.399368, 0.276219), 1)),
			(cv((-9.541987, 0.811042, 0.106521), 1)),
			(cv((-9.541987, 0.399368, 0.276219), 1)),
			(cv((-9.686143, 0.399368, -0.401548), 1)),
			(cv((-9.541987, 0.399368, -0.401548), 1)),
			(cv((-9.541987, 0.811042, -0.23185), 1)),
			(cv((-9.686143, 0.811042, -0.23185), 1)),
			(cv((-9.686143, 0.811042, -0.106521), 1)),
			(cv((-9.686143, 0.399368, -0.276219), 1)),
			(cv((-9.541987, 0.811042, -0.106521), 1)),
			(cv((-9.541987, 0.399368, -0.276219), 1)),
			(cv((-9.64083, 0.884822, -0.23349), 1)),
			(cv((-9.64083, 0.944657, -0.23349), 1)),
			(cv((-9.64083, 0.944657, -0.160003), 1)),
			(cv((-9.64083, 0.884822, -0.160003), 1)),
			(cv((-9.580675, 0.884822, -0.23349), 1)),
			(cv((-9.580675, 0.944657, -0.23349), 1)),
			(cv((-9.596149, 0.884773, -0.199835), 1)),
			(cv((-9.596149, 0.809609, -0.199835), 1)),
			(cv((-9.596149, 0.809609, -0.160231), 1)),
			(cv((-9.596149, 0.884773, -0.160231), 1)),
			(cv((-9.580675, 0.884822, -0.160003), 1)),
			(cv((-9.580675, 0.944657, -0.160003), 1)),
			(cv((-9.625843, 0.809609, -0.160231), 1)),
			(cv((-9.625843, 0.809609, -0.199835), 1)),
			(cv((-9.625843, 0.884773, -0.199835), 1)),
			(cv((-9.625843, 0.884773, -0.160231), 1)),
			(cv((-9.64083, 0.944657, 0.160003), 1)),
			(cv((-9.64083, 0.944657, 0.23349), 1)),
			(cv((-9.64083, 0.884822, 0.23349), 1)),
			(cv((-9.64083, 0.884822, 0.160003), 1)),
			(cv((-9.580675, 0.884822, 0.23349), 1)),
			(cv((-9.580675, 0.944657, 0.23349), 1)),
			(cv((-9.596149, 0.809609, 0.160231), 1)),
			(cv((-9.596149, 0.809609, 0.199835), 1)),
			(cv((-9.596149, 0.884773, 0.199835), 1)),
			(cv((-9.596149, 0.884773, 0.160231), 1)),
			(cv((-9.580675, 0.944657, 0.160003), 1)),
			(cv((-9.580675, 0.884822, 0.160003), 1)),
			(cv((-9.625843, 0.884773, 0.199835), 1)),
			(cv((-9.625843, 0.809609, 0.199835), 1)),
			(cv((-9.625843, 0.809609, 0.160231), 1)),
			(cv((-9.625843, 0.884773, 0.160231), 1)),
			(cv((-9.64083, 0.944657, -0.160003), 1)),
			(cv((-9.64083, 0.944657, -0.23349), 1)),
			(cv((-9.580675, 0.944657, -0.23349), 1)),
			(cv((-9.580675, 0.944657, -0.160003), 1)),
			(cv((-9.580675, 0.944657, 0.23349), 1)),
			(cv((-9.64083, 0.944657, 0.23349), 1)),
			(cv((-9.64083, 0.944657, 0.160003), 1)),
			(cv((-9.580675, 0.944657, 0.160003), 1)),
			(cv((-9.662241, 0.863209, 0.159953), 1)),
			(cv((-9.662241, 0.967656, 0.159953), 1)),
			(cv((-9.557237, 0.967656, 0.159953), 1)),
			(cv((-9.557237, 0.863209, 0.159953), 1)),
			(cv((-9.557237, 0.967656, -0.160139), 1)),
			(cv((-9.662241, 0.967656, -0.160139), 1)),
			(cv((-9.662241, 0.863209, -0.160139), 1)),
			(cv((-9.557237, 0.863209, -0.160139), 1)),
			(cv((-9.686143, 0.811042, -0.23185), 1)),
			(cv((-9.541987, 0.811042, -0.23185), 1)),
			(cv((-9.541987, 0.811042, -0.106521), 1)),
			(cv((-9.686143, 0.811042, -0.106521), 1)),
			(cv((-9.541987, 0.811042, 0.106521), 1)),
			(cv((-9.541987, 0.811042, 0.23185), 1)),
			(cv((-9.686143, 0.811042, 0.23185), 1)),
			(cv((-9.686143, 0.811042, 0.106521), 1)),
			(cv((-7.230716, 2.032687, -0.583106), 1)),
			(cv((-7.246569, 2.039962, -0.575831), 1)),
			(cv((-7.24662, 2.039648, -0.682268), 1)),
			(cv((-7.230768, 2.032373, -0.674993), 1)),
			(cv((-7.24662, 1.971967, -0.682268), 1)),
			(cv((-7.230768, 1.979242, -0.674993), 1)),
			(cv((-7.230716, 1.979546, -0.583106), 1)),
			(cv((-7.246569, 1.972271, -0.575831), 1)),
			(cv((-7.209343, 1.979242, -0.674993), 1)),
			(cv((-7.209291, 1.979546, -0.583106), 1)),
			(cv((-7.209291, 2.032687, -0.583106), 1)),
			(cv((-7.209343, 2.032373, -0.674993), 1)),
			(cv((-7.082235, 2.032373, -0.674993), 1)),
			(cv((-7.110013, 2.032373, -0.674993), 1)),
			(cv((-7.110013, 1.979242, -0.674993), 1)),
			(cv((-7.082235, 1.979242, -0.674993), 1)),
			(cv((-7.082183, 2.032687, -0.583106), 1)),
			(cv((-7.109961, 2.032687, -0.583106), 1)),
			(cv((-7.082183, 1.979546, -0.583106), 1)),
			(cv((-7.109961, 1.979546, -0.583106), 1)),
			(cv((-7.24662, 2.039648, 0.682268), 1)),
			(cv((-7.246569, 2.039962, 0.575831), 1)),
			(cv((-7.230716, 2.032687, 0.583106), 1)),
			(cv((-7.230768, 2.032373, 0.674993), 1)),
			(cv((-7.230768, 1.979242, 0.674993), 1)),
			(cv((-7.24662, 1.971967, 0.682268), 1)),
			(cv((-7.246569, 1.972271, 0.575831), 1)),
			(cv((-7.230716, 1.979546, 0.583106), 1)),
			(cv((-7.209343, 1.979242, 0.674993), 1)),
			(cv((-7.209291, 1.979546, 0.583106), 1)),
			(cv((-7.209291, 2.032687, 0.583106), 1)),
			(cv((-7.209343, 2.032373, 0.674993), 1)),
			(cv((-7.110013, 1.979242, 0.674993), 1)),
			(cv((-7.110013, 2.032373, 0.674993), 1)),
			(cv((-7.082235, 2.032373, 0.674993), 1)),
			(cv((-7.082235, 1.979242, 0.674993), 1)),
			(cv((-7.109961, 2.032687, 0.583106), 1)),
			(cv((-7.082183, 2.032687, 0.583106), 1)),
			(cv((-7.109961, 1.979546, 0.583106), 1)),
			(cv((-7.082183, 1.979546, 0.583106), 1)),
			(cv((-7.115804, 1.962333, -0.565893), 1)),
			(cv((-7.115804, 2.049901, -0.565893), 1)),
			(cv((-7.109961, 2.032687, -0.583106), 1)),
			(cv((-7.109961, 1.979546, -0.583106), 1)),
			(cv((-7.200527, 1.962333, -0.565893), 1)),
			(cv((-7.200527, 2.049901, -0.565893), 1)),
			(cv((-7.209291, 2.032687, -0.583106), 1)),
			(cv((-7.209343, 2.032373, -0.674993), 1)),
			(cv((-7.200579, 2.049586, -0.692206), 1)),
			(cv((-7.209291, 1.979546, -0.583106), 1)),
			(cv((-7.200579, 1.962029, -0.692206), 1)),
			(cv((-7.209343, 1.979242, -0.674993), 1)),
			(cv((-7.200579, 2.049586, 0.692206), 1)),
			(cv((-7.200579, 1.962029, 0.692206), 1)),
			(cv((-7.209343, 1.979242, 0.674993), 1)),
			(cv((-7.209343, 2.032373, 0.674993), 1)),
			(cv((-7.115856, 2.049586, 0.692206), 1)),
			(cv((-7.115856, 1.962029, 0.692206), 1)),
			(cv((-7.110013, 2.032373, 0.674993), 1)),
			(cv((-7.110013, 1.979242, 0.674993), 1)),
			(cv((-7.115804, 2.049901, 0.565893), 1)),
			(cv((-7.109961, 2.032687, 0.583106), 1)),
			(cv((-7.200527, 2.049901, 0.565893), 1)),
			(cv((-7.109961, 1.979546, 0.583106), 1)),
			(cv((-7.115804, 1.962333, 0.565893), 1)),
			(cv((-7.200527, 1.962333, 0.565893), 1)),
			(cv((-7.209291, 2.032687, 0.583106), 1)),
			(cv((-7.209291, 1.979546, 0.583106), 1)),
			(cv((-7.110013, 2.032373, -0.674993), 1)),
			(cv((-7.115856, 2.049586, -0.692206), 1)),
			(cv((-7.115856, 1.962029, -0.692206), 1)),
			(cv((-7.110013, 1.979242, -0.674993), 1)),
			(cv((-7.069927, 2.700294, 0.633567), 1)),
			(cv((-8.117565, 2.175339, 0.0), 1)),
			(cv((-8.116829, 2.144641, 0.0), 1)),
			(cv((-8.136342, 2.145353, 0.013271), 1)),
			(cv((-7.069927, 2.700889, -0.635946), 1)),
			(cv((-7.058797, 2.682909, -0.632627), 1)),
			(cv((-7.058797, 2.682314, 0.630248), 1)),
			(cv((-8.136342, 2.145353, -0.013271), 1)),
			(cv((-7.071569, 2.675445, -0.657911), 1)),
			(cv((-7.071569, 2.67485, 0.655532), 1)),
			(cv((-8.289685, 1.967779, 0.027879), 1)),
			(cv((-8.335312, 2.023017, 0.0), 1)),
			(cv((-8.289685, 1.967779, -0.027879), 1)),
			(cv((-9.317144, 1.27913, 0.0), 1)),
			(cv((-9.354931, 1.250405, 0.0), 1)),
			(cv((-9.300897, 1.182963, -0.027879), 1)),
			(cv((-8.327299, 1.938539, 0.027879), 1)),
			(cv((-8.373133, 1.994397, 0.0), 1)),
			(cv((-8.327299, 1.938539, -0.027879), 1)),
			(cv((-9.300897, 1.182963, 0.027879), 1)),
			(cv((-9.263983, 1.211593, -0.027879), 1)),
			(cv((-9.263983, 1.211593, 0.027879), 1)),
			(cv((-7.24662, 1.971967, 0.682268), 1)),
			(cv((-7.246569, 1.972271, 0.575831), 1)),
			(cv((-8.196584, 1.972271, -0.053223), 1)),
			(cv((-8.196584, 1.972271, 0.053223), 1)),
			(cv((-8.196584, 2.039962, -0.053223), 1)),
			(cv((-8.196584, 2.039962, 0.053223), 1)),
			(cv((-9.619609, 0.935557, 0.053223), 1)),
			(cv((-9.619609, 0.935557, -0.053223), 1)),
			(cv((-9.578799, 0.897741, -0.053223), 1)),
			(cv((-9.578799, 0.897741, 0.053223), 1)),
			(cv((-7.24662, 2.039648, 0.682268), 1)),
			(cv((-7.246569, 2.039962, -0.575831), 1)),
			(cv((-7.246569, 1.972271, -0.575831), 1)),
			(cv((-8.196584, 1.972271, 0.053223), 1)),
			(cv((-8.196584, 2.039962, 0.053223), 1)),
			(cv((-8.196584, 2.039962, -0.053223), 1)),
			(cv((-7.24662, 2.039648, -0.682268), 1)),
			(cv((-8.196584, 1.972271, -0.053223), 1)),
			(cv((-7.24662, 1.971967, -0.682268), 1)),
			(cv((-7.246569, 2.039962, 0.575831), 1))	),
	texture_vertices = (
			st( 0.570868, 0.708712 ),
			st( 0.023841, 0.705272 ),
			st( 0.244909, 0.504547 ),
			st( 0.993157, 0.989136 ),
			st( 0.989163, 0.745393 ),
			st( 0.393147, 0.732797 ),
			st( 0.993157, 0.752716 ),
			st( 0.017339, 0.735071 ),
			st( 0.006843, 0.986420 ),
			st( 0.017339, 0.735071 ),
			st( 0.006843, 0.986420 ),
			st( 0.008669, 0.745393 ),
			st( 0.006843, 0.986420 ),
			st( 0.008669, 0.745393 ),
			st( 0.989735, 0.515183 ),
			st( 0.011976, 0.513580 ),
			st( 0.015628, 0.516296 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 0.008669, 0.756941 ),
			st( 0.984829, 0.763822 ),
			st( 1.000000, 0.000000 ),
			st( 0.984829, 0.763822 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.900000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 0.008669, 0.283240 ),
			st( 0.008669, 0.283240 ),
			st( 0.008669, 0.283240 ),
			st( 0.008669, 0.283240 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.984829, 0.283240 ),
			st( 0.984829, 0.283240 ),
			st( 0.984829, 0.283240 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.250000 ),
			st( 0.900000, 0.000000 ),
			st( 0.902167, 0.279799 ),
			st( 0.900000, 0.500000 ),
			st( 0.902167, 0.279799 ),
			st( 0.902167, 0.279799 ),
			st( 0.900000, 0.500000 ),
			st( 0.900000, 0.500000 ),
			st( 0.902167, 0.279799 ),
			st( 0.900000, 0.500000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.750000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 1.000000 ),
			st( 0.993662, 0.010634 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.750000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 1.000000 ),
			st( 0.997887, 0.000573 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 0.666600, 0.000000 ),
			st( 0.666600, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.333300, 0.000000 ),
			st( 0.333330, 1.000000 ),
			st( 0.333000, 1.000000 ),
			st( 0.333300, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.666000, 0.000000 ),
			st( 0.666000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.333300, 1.000000 ),
			st( 0.333330, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.666600, 0.000000 ),
			st( 0.666660, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.666000, 0.000000 ),
			st( 0.666600, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.333330, 1.000000 ),
			st( 0.333333, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.705243, 0.027525 ),
			st( 0.705243, 0.267143 ),
			st( 0.316431, 0.267143 ),
			st( 0.316431, 0.027525 ),
			st( 0.316431, 0.267143 ),
			st( 0.705243, 0.267143 ),
			st( 0.705243, 0.027525 ),
			st( 0.316431, 0.027525 ),
			st( 0.364112, 0.233964 ),
			st( 0.364112, 0.542395 ),
			st( 0.575203, 0.549276 ),
			st( 0.568701, 0.233964 ),
			st( 0.575203, 0.549276 ),
			st( 0.364112, 0.542395 ),
			st( 0.364112, 0.233964 ),
			st( 0.568701, 0.233964 ),
			st( 0.967821, 0.391299 ),
			st( 0.966813, 0.021922 ),
			st( 0.019481, 0.050212 ),
			st( 0.020489, 0.419590 ),
			st( 0.966813, 0.021922 ),
			st( 0.967821, 0.391299 ),
			st( 0.020489, 0.419590 ),
			st( 0.019481, 0.050212 ),
			st( 0.969333, 0.945366 ),
			st( 0.022001, 0.973656 ),
			st( 0.969333, 0.945366 ),
			st( 0.022001, 0.973656 ),
			st( 0.965400, 0.195634 ),
			st( 0.907985, 0.093690 ),
			st( 0.036821, 0.584682 ),
			st( 0.094089, 0.686364 ),
			st( 0.094089, 0.686364 ),
			st( 0.036673, 0.584421 ),
			st( 0.965400, 0.195634 ),
			st( 0.908132, 0.093952 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.400000 ),
			st( 0.000000, 0.400000 ),
			st( 1.000000, 0.400000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.400000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.903597, 0.822071 ),
			st( 0.191043, 0.120454 ),
			st( 0.085800, 0.227337 ),
			st( 0.798354, 0.928954 ),
			st( 0.903597, 0.822071 ),
			st( 0.798354, 0.928954 ),
			st( 0.191043, 0.120454 ),
			st( 0.085800, 0.227337 ),
			st( 0.200000, 0.997730 ),
			st( 0.200000, 0.000000 ),
			st( 0.200000, 0.000000 ),
			st( 0.200000, 0.750000 ),
			st( 0.000000, 0.750000 ),
			st( 0.000997, 0.997111 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.799502, 0.997902 ),
			st( 0.800000, 0.000000 ),
			st( 0.800000, 0.000000 ),
			st( 0.800000, 0.000000 ),
			st( 0.800000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.500000 ),
			st( 0.800000, 0.500000 ),
			st( 0.999003, 0.998521 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.800000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.800000, 0.500000 ),
			st( 0.800000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.500000 ),
			st( 0.200000, 0.500000 ),
			st( 0.200000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.250000 ),
			st( 0.200000, 0.750000 ),
			st( 0.000000, 0.750000 ),
			st( 0.800000, 0.750000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000881, 0.997983 ),
			st( 0.200000, 0.000000 ),
			st( 0.200000, 0.998625 ),
			st( 0.200000, 0.998625 ),
			st( 0.200000, 0.998625 ),
			st( 0.800000, 0.000000 ),
			st( 0.800220, 0.998682 ),
			st( 0.800220, 0.998682 ),
			st( 0.800220, 0.998682 ),
			st( 0.800000, 0.000000 ),
			st( 1.000000, 0.750000 ),
			st( 0.999339, 0.999382 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.500000 ),
			st( 0.200000, 0.500000 ),
			st( 0.200000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.750000 ),
			st( 0.982661, 0.745393 ),
			st( 1.000000, 1.000000 ),
			st( 0.982661, 0.745393 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.750000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 1.000000 ),
			st( 0.997833, 0.745393 ),
			st( 0.997833, 0.745393 ),
			st( 0.000000, 1.000000 ),
			st( 0.002167, 0.752274 ),
			st( 0.006502, 0.738511 ),
			st( 0.000000, 1.000000 ),
			st( 0.396622, 0.017203 ),
			st( 0.399686, 0.027000 ),
			st( 0.379283, 0.301550 ),
			st( 0.396622, 0.017203 ),
			st( 0.069355, 0.267143 ),
			st( 0.373641, 0.256821 ),
			st( 0.375808, 0.013763 ),
			st( 0.715117, 0.027000 ),
			st( 0.709577, 0.017203 ),
			st( 0.724749, 0.287787 ),
			st( 0.709577, 0.017203 ),
			st( 0.375808, 0.013763 ),
			st( 0.069355, 0.013763 ),
			st( 0.069355, 0.013763 ),
			st( 1.000000, 1.000000 ),
			st( 0.995775, 0.003926 ),
			st( 1.000000, 0.750000 ),
			st( 0.000000, 0.750000 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.505432 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.750000 ),
			st( 0.995775, 0.003926 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.995775, 0.003926 ),
			st( 1.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.505432 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ) ),
	polygons = (
		polygon ((7, 6, 8),(14, 11, 15), 2 ),
		polygon ((7, 8, 5),(14, 16, 7), 2 ),
		polygon ((11, 10, 12),(19, 18, 20), 2 ),
		polygon ((9, 14, 13),(17, 25, 22), 2 ),
		polygon ((11, 14, 9),(19, 25, 17), 2 ),
		polygon ((9, 10, 11),(17, 18, 19), 2 ),
		polygon ((5, 6, 3),(8, 12, 3), 2 ),
		polygon ((5, 4, 7),(9, 5, 14), 2 ),
		polygon ((12, 13, 11),(20, 23, 19), 2 ),
		polygon ((12, 9, 13),(21, 17, 24), 2 ),
		polygon ((15, 16, 17),(26, 27, 28), 2 ),
		polygon ((18, 19, 16),(29, 35, 27), 2 ),
		polygon ((17, 22, 15),(28, 43, 26), 2 ),
		polygon ((21, 20),(42, 41), 2 ),
		polygon ((16, 21, 18),(27, 42, 29), 2 ),
		polygon ((20),(41), 2 ),
		polygon ((16, 15, 20),(27, 26, 41), 2 ),
		polygon ((20, 18),(41, 30), 2 ),
		polygon ((23, 19, 15),(44, 36, 26), 2 ),
		polygon ((15, 16, 17),(26, 27, 28), 2 ),
		polygon ((23, 17, 16),(45, 28, 27), 2 ),
		polygon ((23, 19, 15),(46, 37, 26), 2 ),
		polygon ((20, 21, 16),(41, 42, 27), 2 ),
		polygon ((18, 20, 15),(31, 41, 26), 2 ),
		polygon ((21),(42), 2 ),
		polygon ((15, 19, 18),(26, 38, 32), 2 ),
		polygon ((22, 15, 17),(43, 26, 28), 2 ),
		polygon ((18),(33), 2 ),
		polygon ((22, 23, 15),(43, 47, 26), 2 ),
		polygon ((18, 21),(34, 42), 2 ),
		polygon ((23, 17, 16),(48, 28, 27), 2 ),
		polygon ((16, 19, 23),(27, 39, 49), 2 ),
		polygon ((15, 22, 23),(26, 43, 50), 2 ),
		polygon ((16, 19, 23),(27, 40, 51), 2 ),
		polygon ((24, 25, 26),(52, 53, 54), 2 ),
		polygon ((26, 27, 24),(54, 55, 52), 2 ),
		polygon ((28, 29, 30),(56, 57, 58), 2 ),
		polygon ((30, 31, 28),(58, 59, 56), 2 ),
		polygon ((29, 27, 26),(57, 55, 54), 2 ),
		polygon ((26, 30, 29),(54, 58, 57), 2 ),
		polygon ((32, 33, 34),(60, 61, 62), 2 ),
		polygon ((34, 35, 32),(62, 63, 60), 2 ),
		polygon ((36, 35, 34),(64, 63, 62), 2 ),
		polygon ((34, 37, 36),(62, 65, 64), 2 ),
		polygon ((38, 36, 37),(66, 64, 65), 2 ),
		polygon ((37, 39, 38),(65, 68, 66), 2 ),
		polygon ((32, 38, 39),(60, 67, 69), 2 ),
		polygon ((39, 33, 32),(70, 61, 60), 2 ),
		polygon ((40, 41, 42),(71, 72, 73), 2 ),
		polygon ((42, 43, 40),(73, 74, 71), 2 ),
		polygon ((40, 43, 44),(71, 74, 75), 2 ),
		polygon ((44, 45, 40),(75, 76, 71), 2 ),
		polygon ((45, 44, 46),(76, 75, 77), 2 ),
		polygon ((46, 47, 45),(77, 79, 76), 2 ),
		polygon ((47, 46, 42),(80, 78, 73), 2 ),
		polygon ((42, 41, 47),(73, 72, 81), 2 ),
		polygon ((48, 49, 50),(82, 83, 84), 3 ),
		polygon ((50, 51, 48),(84, 85, 82), 3 ),
		polygon ((52, 49, 48),(86, 83, 82), 3 ),
		polygon ((53, 49, 52),(87, 83, 86), 3 ),
		polygon ((54, 55, 56),(88, 89, 90), 3 ),
		polygon ((56, 57, 54),(90, 91, 88), 3 ),
		polygon ((53, 58, 59),(87, 92, 93), 3 ),
		polygon ((53, 52, 58),(87, 86, 92), 3 ),
		polygon ((60, 61, 62),(94, 95, 96), 3 ),
		polygon ((62, 63, 60),(96, 97, 94), 3 ),
		polygon ((54, 62, 61),(88, 96, 95), 3 ),
		polygon ((61, 55, 54),(95, 89, 88), 3 ),
		polygon ((64, 65, 66),(98, 99, 100), 3 ),
		polygon ((66, 67, 64),(100, 101, 98), 3 ),
		polygon ((66, 65, 68),(100, 99, 102), 3 ),
		polygon ((68, 65, 69),(102, 99, 103), 3 ),
		polygon ((70, 71, 72),(104, 105, 106), 3 ),
		polygon ((72, 73, 70),(106, 107, 104), 3 ),
		polygon ((74, 75, 69),(108, 109, 103), 3 ),
		polygon ((75, 68, 69),(109, 102, 103), 3 ),
		polygon ((76, 77, 78),(110, 111, 112), 3 ),
		polygon ((78, 79, 76),(112, 113, 110), 3 ),
		polygon ((77, 76, 72),(111, 110, 106), 3 ),
		polygon ((72, 71, 77),(106, 105, 111), 3 ),
		polygon ((80, 81, 82),(114, 115, 116), 4 ),
		polygon ((80, 82, 83),(114, 116, 117), 4 ),
		polygon ((84, 85, 86),(118, 119, 120), 4 ),
		polygon ((87, 84, 86),(121, 118, 120), 4 ),
		polygon ((88, 89, 90),(122, 123, 124), 2 ),
		polygon ((90, 91, 88),(124, 125, 122), 2 ),
		polygon ((92, 93, 94),(126, 127, 128), 2 ),
		polygon ((94, 95, 92),(128, 129, 126), 2 ),
		polygon ((96, 97, 98),(130, 131, 132), 2 ),
		polygon ((99, 96, 98),(133, 130, 132), 2 ),
		polygon ((100, 101, 102),(134, 135, 136), 2 ),
		polygon ((100, 102, 103),(134, 136, 137), 2 ),
		polygon ((104, 105, 106),(138, 139, 140), 5 ),
		polygon ((106, 107, 104),(140, 141, 138), 5 ),
		polygon ((106, 108, 109),(140, 142, 143), 5 ),
		polygon ((107, 106, 109),(141, 140, 143), 5 ),
		polygon ((110, 111, 105),(144, 145, 139), 5 ),
		polygon ((105, 104, 110),(139, 138, 144), 5 ),
		polygon ((109, 108, 111),(143, 142, 145), 5 ),
		polygon ((109, 111, 110),(143, 145, 144), 5 ),
		polygon ((112, 109, 110),(146, 143, 144), 5 ),
		polygon ((110, 113, 112),(144, 147, 146), 5 ),
		polygon ((110, 104, 113),(144, 138, 147), 5 ),
		polygon ((104, 114, 113),(138, 148, 147), 5 ),
		polygon ((104, 107, 114),(138, 141, 148), 5 ),
		polygon ((107, 115, 114),(141, 149, 148), 5 ),
		polygon ((107, 109, 112),(141, 143, 146), 5 ),
		polygon ((112, 115, 107),(146, 149, 141), 5 ),
		polygon ((116, 117, 118),(150, 151, 152), 5 ),
		polygon ((118, 119, 116),(152, 153, 150), 5 ),
		polygon ((120, 121, 117),(154, 155, 151), 5 ),
		polygon ((117, 116, 120),(151, 150, 154), 5 ),
		polygon ((120, 122, 123),(154, 156, 157), 5 ),
		polygon ((123, 121, 120),(157, 155, 154), 5 ),
		polygon ((122, 119, 118),(156, 153, 152), 5 ),
		polygon ((118, 123, 122),(152, 157, 156), 5 ),
		polygon ((124, 125, 126),(158, 159, 160), 5 ),
		polygon ((126, 127, 124),(160, 161, 158), 5 ),
		polygon ((128, 129, 124),(162, 163, 158), 5 ),
		polygon ((128, 124, 127),(162, 158, 161), 5 ),
		polygon ((125, 130, 131),(159, 164, 165), 5 ),
		polygon ((131, 126, 125),(165, 160, 159), 5 ),
		polygon ((130, 129, 128),(164, 163, 162), 5 ),
		polygon ((131, 130, 128),(165, 164, 162), 5 ),
		polygon ((131, 128, 132),(165, 162, 166), 5 ),
		polygon ((132, 133, 131),(166, 167, 165), 5 ),
		polygon ((133, 126, 131),(167, 160, 165), 5 ),
		polygon ((133, 134, 126),(167, 168, 160), 5 ),
		polygon ((134, 127, 126),(168, 161, 160), 5 ),
		polygon ((134, 135, 127),(168, 169, 161), 5 ),
		polygon ((132, 128, 127),(166, 162, 161), 5 ),
		polygon ((127, 135, 132),(161, 169, 166), 5 ),
		polygon ((136, 137, 138),(170, 171, 172), 5 ),
		polygon ((138, 139, 136),(172, 173, 170), 5 ),
		polygon ((137, 140, 141),(171, 174, 175), 5 ),
		polygon ((141, 138, 137),(175, 172, 171), 5 ),
		polygon ((142, 143, 141),(176, 177, 175), 5 ),
		polygon ((141, 140, 142),(175, 174, 176), 5 ),
		polygon ((136, 139, 143),(170, 173, 177), 5 ),
		polygon ((143, 142, 136),(177, 176, 170), 5 ),
		polygon ((144, 145, 146),(178, 181, 182), 6 ),
		polygon ((146, 147, 144),(182, 183, 178), 6 ),
		polygon ((148, 149, 145),(186, 190, 181), 6 ),
		polygon ((145, 144, 148),(181, 178, 186), 6 ),
		polygon ((149, 150, 151),(190, 191, 192), 6 ),
		polygon ((151, 152, 149),(192, 193, 190), 6 ),
		polygon ((149, 148, 153),(190, 186, 194), 6 ),
		polygon ((153, 150, 149),(194, 191, 190), 6 ),
		polygon ((153, 148, 154),(195, 187, 197), 6 ),
		polygon ((154, 155, 153),(197, 198, 196), 6 ),
		polygon ((156, 157, 158),(199, 200, 201), 6 ),
		polygon ((158, 159, 156),(201, 202, 199), 6 ),
		polygon ((157, 156, 160),(200, 199, 203), 6 ),
		polygon ((160, 161, 157),(203, 204, 200), 6 ),
		polygon ((161, 160, 162),(204, 203, 205), 6 ),
		polygon ((162, 163, 161),(205, 206, 204), 6 ),
		polygon ((162, 160, 164),(205, 203, 207), 6 ),
		polygon ((164, 165, 162),(207, 208, 205), 6 ),
		polygon ((160, 156, 166),(203, 199, 209), 6 ),
		polygon ((164, 160, 166),(207, 203, 209), 6 ),
		polygon ((167, 168, 161),(210, 212, 204), 6 ),
		polygon ((161, 163, 167),(204, 206, 210), 6 ),
		polygon ((161, 168, 169),(204, 212, 216), 6 ),
		polygon ((169, 157, 161),(216, 200, 204), 6 ),
		polygon ((165, 164, 168),(208, 207, 213), 6 ),
		polygon ((168, 167, 165),(214, 211, 208), 6 ),
		polygon ((164, 166, 169),(207, 209, 217), 6 ),
		polygon ((169, 168, 164),(218, 215, 207), 6 ),
		polygon ((166, 170, 171),(209, 221, 222), 6 ),
		polygon ((171, 169, 166),(222, 219, 209), 6 ),
		polygon ((156, 159, 170),(199, 202, 221), 6 ),
		polygon ((170, 166, 156),(221, 209, 199), 6 ),
		polygon ((171, 158, 157),(223, 201, 200), 6 ),
		polygon ((157, 169, 171),(200, 220, 224), 6 ),
		polygon ((172, 173, 174),(225, 226, 227), 6 ),
		polygon ((174, 175, 172),(227, 228, 225), 6 ),
		polygon ((149, 152, 173),(190, 193, 226), 6 ),
		polygon ((149, 173, 145),(190, 226, 181), 6 ),
		polygon ((145, 173, 172),(181, 226, 225), 6 ),
		polygon ((172, 146, 145),(225, 182, 181), 6 ),
		polygon ((174, 144, 147),(227, 179, 184), 6 ),
		polygon ((147, 175, 174),(185, 228, 227), 6 ),
		polygon ((148, 144, 174),(188, 180, 227), 6 ),
		polygon ((174, 154, 148),(227, 197, 189), 6 ),
		polygon ((155, 154, 152),(198, 197, 193), 6 ),
		polygon ((152, 151, 155),(193, 192, 198), 6 ),
		polygon ((173, 152, 154),(226, 193, 197), 6 ),
		polygon ((154, 174, 173),(197, 227, 226), 6 ),
		polygon ((176, 177, 178),(229, 230, 231), 2 ),
		polygon ((179, 177, 176),(232, 230, 229), 2 ),
		polygon ((180, 181, 178),(236, 237, 231), 2 ),
		polygon ((182, 178, 179),(238, 231, 233), 2 ),
		polygon ((183, 178, 181),(239, 231, 237), 2 ),
		polygon ((181, 184, 183),(237, 242, 239), 2 ),
		polygon ((178, 177, 180),(231, 230, 236), 2 ),
		polygon ((178, 182, 176),(231, 238, 229), 2 ),
		polygon ((176, 185, 179),(229, 244, 234), 2 ),
		polygon ((179, 185, 182),(235, 245, 238), 2 ),
		polygon ((183, 184, 180),(240, 243, 236), 2 ),
		polygon ((180, 177, 183),(236, 230, 241), 2 ),
		polygon ((186, 187, 188),(246, 248, 249), 2 ),
		polygon ((189, 190, 191),(250, 251, 252), 2 ),
		polygon ((187, 186, 192),(248, 247, 253), 2 ),
		polygon ((192, 193, 187),(253, 255, 248), 2 ),
		polygon ((194, 193, 192),(256, 255, 254), 2 ),
		polygon ((195, 190, 189),(257, 251, 250), 2 ),
		polygon ((191, 190, 195),(252, 251, 257), 2 ),
		polygon ((191, 196, 189),(252, 258, 250), 2 ),
		polygon ((187, 193, 194),(248, 255, 256), 2 ),
		polygon ((197, 189, 196),(259, 250, 258), 2 ),
		polygon ((194, 188, 187),(256, 249, 248), 2 ),
		polygon ((189, 197, 195),(250, 259, 257), 2 ),
		polygon ((198, 199, 200),(260, 262, 263), 2 ),
		polygon ((200, 201, 198),(263, 264, 260), 2 ),
		polygon ((202, 203, 204),(270, 273, 274), 2 ),
		polygon ((204, 205, 202),(274, 275, 270), 2 ),
		polygon ((202, 205, 206),(270, 275, 276), 2 ),
		polygon ((206, 200, 202),(276, 263, 270), 2 ),
		polygon ((207, 204, 203),(277, 274, 273), 2 ),
		polygon ((207, 203, 201),(277, 273, 265), 2 ),
		polygon ((206, 207, 201),(276, 278, 266), 2 ),
		polygon ((206, 201, 200),(276, 267, 263), 2 ),
		polygon ((208, 198, 201),(279, 261, 268), 2 ),
		polygon ((201, 203, 208),(269, 273, 279), 2 ),
		polygon ((209, 210, 211),(280, 281, 283), 2 ),
		polygon ((211, 212, 209),(283, 288, 280), 2 ),
		polygon ((213, 214, 209),(289, 290, 280), 2 ),
		polygon ((209, 212, 213),(280, 288, 289), 2 ),
		polygon ((215, 216, 214),(291, 292, 290), 2 ),
		polygon ((214, 213, 215),(290, 289, 291), 2 ),
		polygon ((211, 210, 216),(284, 282, 292), 2 ),
		polygon ((216, 215, 211),(292, 291, 285), 2 ),
		polygon ((212, 213),(288, 289), 2 ),
		polygon ((212),(288), 2 ),
		polygon ((212),(288), 2 ),
		polygon ((211, 212),(286, 288), 2 ),
		polygon ((215, 211),(291, 287), 2 ),
		polygon ((215),(291), 2 ),
		polygon ((213, 215),(289, 291), 2 ),
		polygon ((213),(289), 2 ),
		polygon ((217, 208, 203),(293, 279, 273), 2 ),
		polygon ((203, 202, 217),(273, 271, 293), 2 ),
		polygon ((200, 199, 217),(263, 262, 294), 2 ),
		polygon ((217, 202, 200),(295, 272, 263), 2 ),
		polygon ((0, 1, 2),(0, 1, 2), 2 ),
		polygon ((3, 4, 5),(3, 6, 10), 2 ),
		polygon ((6, 7, 3),(13, 14, 4), 2 )
	)
); /* end of polyset 'GoalStand' */

polyset BackBoard (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (BackPad ),
	shader = (seal ),
	shader = (METAL4 ),
	shader = (TARGET ),
	casts_shadow = TRUE,
	vertices = ((cv((-7.020258, 2.303167, -0.627439), 1)),
			(cv((-7.020258, 2.303167, -0.685076), 1)),
			(cv((-7.020421, 1.875089, -0.684449), 1)),
			(cv((-7.020421, 1.935375, -0.627439), 1)),
			(cv((-7.020178, 1.875089, 0.682247), 1)),
			(cv((-7.020178, 1.935375, 0.62524), 1)),
			(cv((-7.020258, 2.303167, 0.684502), 1)),
			(cv((-7.020258, 2.303167, 0.62524), 1)),
			(cv((-7.083992, 1.935375, 0.62524), 1)),
			(cv((-7.083992, 2.303167, 0.62524), 1)),
			(cv((-7.083992, 2.303167, 0.684502), 1)),
			(cv((-7.083992, 1.875089, 0.682247), 1)),
			(cv((-7.083992, 1.875089, -0.684449), 1)),
			(cv((-7.083992, 2.303167, -0.685076), 1)),
			(cv((-7.083992, 2.303167, -0.627439), 1)),
			(cv((-7.083992, 1.935375, -0.627439), 1)),
			(cv((-7.031176, 2.303167, 0.658633), 1)),
			(cv((-7.031176, 2.303167, 0.62524), 1)),
			(cv((-7.020258, 2.303167, 0.62524), 1)),
			(cv((-7.020258, 2.303167, 0.684502), 1)),
			(cv((-7.083992, 2.303167, 0.684502), 1)),
			(cv((-7.0725, 2.303167, 0.658633), 1)),
			(cv((-7.083992, 2.303167, 0.62524), 1)),
			(cv((-7.0725, 2.303167, 0.62524), 1)),
			(cv((-7.031176, 2.303167, -0.659206), 1)),
			(cv((-7.020258, 2.303167, -0.685076), 1)),
			(cv((-7.020258, 2.303167, -0.627439), 1)),
			(cv((-7.031176, 2.303167, -0.627439), 1)),
			(cv((-7.0725, 2.303167, -0.659206), 1)),
			(cv((-7.0725, 2.303167, -0.627439), 1)),
			(cv((-7.083992, 2.303167, -0.627439), 1)),
			(cv((-7.083992, 2.303167, -0.685076), 1)),
			(cv((-7.020258, 2.303167, 0.684502), 1)),
			(cv((-7.020178, 1.875089, 0.682247), 1)),
			(cv((-7.083992, 1.875089, 0.682247), 1)),
			(cv((-7.083992, 2.303167, 0.684502), 1)),
			(cv((-7.083992, 2.303167, -0.685076), 1)),
			(cv((-7.083992, 1.875089, -0.684449), 1)),
			(cv((-7.020421, 1.875089, -0.684449), 1)),
			(cv((-7.020258, 2.303167, -0.685076), 1)),
			(cv((-7.020421, 1.875089, -0.684449), 1)),
			(cv((-7.083992, 1.875089, -0.684449), 1)),
			(cv((-7.083992, 1.875089, 0.682247), 1)),
			(cv((-7.020178, 1.875089, 0.682247), 1)),
			(cv((-7.083992, 1.935375, 0.62524), 1)),
			(cv((-7.083992, 1.935375, -0.627439), 1)),
			(cv((-7.072522, 1.935375, -0.627439), 1)),
			(cv((-7.072489, 1.935375, 0.62524), 1)),
			(cv((-7.020178, 1.935375, 0.62524), 1)),
			(cv((-7.031107, 1.935375, 0.62524), 1)),
			(cv((-7.031318, 1.935375, -0.627439), 1)),
			(cv((-7.020421, 1.935375, -0.627439), 1)),
			(cv((-7.020258, 2.303167, 0.62524), 1)),
			(cv((-7.031176, 2.303167, 0.62524), 1)),
			(cv((-7.031176, 2.303167, -0.627439), 1)),
			(cv((-7.020258, 2.303167, -0.627439), 1)),
			(cv((-7.083992, 2.303167, 0.62524), 1)),
			(cv((-7.0725, 2.303167, 0.62524), 1)),
			(cv((-7.083992, 2.303167, -0.627439), 1)),
			(cv((-7.0725, 2.303167, -0.627439), 1)),
			(cv((-7.07237, 2.640209, 0.596734), 1)),
			(cv((-7.031255, 2.640209, 0.596734), 1)),
			(cv((-7.031255, 2.640209, -0.596734), 1)),
			(cv((-7.07237, 2.640209, -0.596734), 1)),
			(cv((-7.07237, 1.963646, -0.596731), 1)),
			(cv((-7.031255, 1.963646, -0.596731), 1)),
			(cv((-7.031255, 1.963646, 0.596734), 1)),
			(cv((-7.07237, 1.963646, 0.596734), 1)),
			(cv((-7.07237, 1.963646, 0.596734), 1)),
			(cv((-7.07237, 2.640209, 0.596734), 1)),
			(cv((-7.07237, 2.702078, 0.658603), 1)),
			(cv((-7.07237, 1.901778, 0.658603), 1)),
			(cv((-7.07237, 2.640209, -0.596734), 1)),
			(cv((-7.07237, 1.963646, -0.596731), 1)),
			(cv((-7.07237, 1.901778, -0.6586), 1)),
			(cv((-7.07237, 2.702078, -0.658603), 1)),
			(cv((-7.031255, 1.901778, -0.6586), 1)),
			(cv((-7.031255, 1.901778, 0.658603), 1)),
			(cv((-7.031255, 1.963646, 0.596734), 1)),
			(cv((-7.031255, 2.702078, 0.658603), 1)),
			(cv((-7.031255, 2.640209, 0.596734), 1)),
			(cv((-7.031255, 2.640209, -0.596734), 1)),
			(cv((-7.031255, 2.702078, -0.658603), 1)),
			(cv((-7.031255, 1.963646, -0.596731), 1)),
			(cv((-7.053053, 2.256895, 0.162836), 1)),
			(cv((-7.053053, 2.29313, 0.19919), 1)),
			(cv((-7.053053, 2.031447, 0.162836), 1)),
			(cv((-7.050059, 2.031447, 0.162836), 1)),
			(cv((-7.050059, 2.031447, -0.162956), 1)),
			(cv((-7.050059, 1.995232, -0.19919), 1)),
			(cv((-7.053053, 1.995232, -0.19919), 1)),
			(cv((-7.053053, 2.031447, -0.162956), 1)),
			(cv((-7.050059, 1.995232, 0.19919), 1)),
			(cv((-7.050059, 2.29313, 0.19919), 1)),
			(cv((-7.050059, 2.256895, -0.162956), 1)),
			(cv((-7.050059, 2.29313, -0.19919), 1)),
			(cv((-7.053053, 1.995232, 0.19919), 1)),
			(cv((-7.050059, 2.256895, 0.162836), 1)),
			(cv((-7.053053, 2.256895, -0.162956), 1)),
			(cv((-7.053053, 2.29313, -0.19919), 1))	),
	texture_vertices = (
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.500000 ),
			st( 0.750000, 0.500000 ),
			st( 0.750000, 1.000000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 1.000000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 1.000000 ),
			st( 0.750000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.500000 ),
			st( 0.750000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 1.000000 ),
			st( 0.250000, 1.000000 ),
			st( 0.839876, 0.745397 ),
			st( 0.839876, 0.495397 ),
			st( 0.889876, 0.495397 ),
			st( 0.889876, 0.995397 ),
			st( 0.389876, 0.995397 ),
			st( 0.439876, 0.745397 ),
			st( 0.389876, 0.495397 ),
			st( 0.439876, 0.495397 ),
			st( 0.422934, 0.738492 ),
			st( 0.372934, 0.988492 ),
			st( 0.372934, 0.488492 ),
			st( 0.422934, 0.488492 ),
			st( 0.822934, 0.738492 ),
			st( 0.822934, 0.488492 ),
			st( 0.872934, 0.488492 ),
			st( 0.872934, 0.988492 ),
			st( 1.000000, 0.000000 ),
			st( 0.750000, 0.000000 ),
			st( 0.750000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.000000 ),
			st( 0.250000, 0.000000 ),
			st( 0.250000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.250000, 0.000000 ),
			st( 0.250000, 0.500000 ),
			st( 0.750000, 0.500000 ),
			st( 0.750000, 0.000000 ),
			st( 0.000000, 0.900000 ),
			st( 1.000000, 0.100000 ),
			st( 1.000000, 0.900000 ),
			st( 0.000000, 0.900000 ),
			st( 0.000000, 0.100000 ),
			st( 0.000000, 0.900000 ),
			st( 1.000000, 0.900000 ),
			st( 1.000000, 0.900000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.900000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.900000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.010265, 0.513449 ),
			st( 0.006843, 0.559621 ),
			st( 0.006843, 0.559621 ),
			st( 0.989735, 0.521597 ),
			st( 0.993157, 0.516165 ),
			st( 0.993157, 0.005954 ),
			st( 0.991446, 0.008670 ),
			st( 0.991446, 0.008670 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.010265, 0.005954 ),
			st( 0.001711, 0.008670 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.006843, 0.524313 ),
			st( 0.008554, 0.535177 ),
			st( 0.006843, 0.524313 ),
			st( 0.008554, 0.535177 ),
			st( 0.991446, 0.521597 ),
			st( 0.996578, 0.540609 ),
			st( 0.991446, 0.011386 ),
			st( 0.993157, 0.011386 ),
			st( 0.993157, 0.011386 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.010265, 0.014102 ),
			st( 0.010265, 0.016818 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 1.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((3, 2, 4),(3, 2, 4), 0 ),
		polygon ((4, 5, 3),(4, 5, 3), 0 ),
		polygon ((5, 4, 6),(5, 4, 6), 0 ),
		polygon ((6, 7, 5),(6, 7, 5), 0 ),
		polygon ((8, 9, 10),(8, 9, 10), 0 ),
		polygon ((10, 11, 8),(10, 11, 8), 0 ),
		polygon ((12, 13, 14),(12, 13, 14), 0 ),
		polygon ((14, 15, 12),(14, 15, 12), 0 ),
		polygon ((8, 11, 12),(8, 11, 12), 0 ),
		polygon ((12, 15, 8),(12, 15, 8), 0 ),
		polygon ((16, 17, 18),(16, 17, 18), 0 ),
		polygon ((18, 19, 16),(18, 19, 16), 0 ),
		polygon ((16, 19, 20),(16, 19, 20), 0 ),
		polygon ((20, 21, 16),(20, 21, 16), 0 ),
		polygon ((21, 20, 22),(21, 20, 22), 0 ),
		polygon ((22, 23, 21),(22, 23, 21), 0 ),
		polygon ((24, 25, 26),(24, 25, 26), 0 ),
		polygon ((26, 27, 24),(26, 27, 24), 0 ),
		polygon ((28, 29, 30),(28, 29, 30), 0 ),
		polygon ((30, 31, 28),(30, 31, 28), 0 ),
		polygon ((28, 31, 25),(28, 31, 25), 0 ),
		polygon ((25, 24, 28),(25, 24, 28), 0 ),
		polygon ((32, 33, 34),(32, 33, 34), 0 ),
		polygon ((34, 35, 32),(34, 35, 32), 0 ),
		polygon ((36, 37, 38),(36, 37, 38), 0 ),
		polygon ((38, 39, 36),(38, 39, 36), 0 ),
		polygon ((40, 41, 42),(40, 41, 42), 0 ),
		polygon ((42, 43, 40),(42, 43, 40), 0 ),
		polygon ((44, 45, 46),(44, 45, 46), 0 ),
		polygon ((46, 47, 44),(46, 47, 44), 0 ),
		polygon ((48, 49, 50),(48, 49, 50), 0 ),
		polygon ((50, 51, 48),(50, 51, 48), 0 ),
		polygon ((49, 48, 52),(49, 48, 52), 0 ),
		polygon ((52, 53, 49),(52, 53, 49), 0 ),
		polygon ((54, 55, 51),(54, 55, 51), 0 ),
		polygon ((51, 50, 54),(51, 50, 54), 0 ),
		polygon ((56, 44, 47),(56, 44, 47), 0 ),
		polygon ((47, 57, 56),(47, 57, 56), 0 ),
		polygon ((45, 58, 59),(45, 58, 59), 0 ),
		polygon ((59, 46, 45),(59, 46, 45), 0 ),
		polygon ((60, 61, 62),(60, 61, 62), 1 ),
		polygon ((62, 63, 60),(62, 63, 60), 1 ),
		polygon ((64, 65, 66),(64, 65, 66), 1 ),
		polygon ((64),(64), 1 ),
		polygon ((67, 64, 66),(67, 64, 66), 1 ),
		polygon ((62, 65, 64),(62, 65, 64), 1 ),
		polygon ((67, 66, 61),(67, 66, 61), 1 ),
		polygon ((61, 60, 67),(61, 60, 67), 1 ),
		polygon ((64, 63, 62),(64, 63, 62), 1 ),
		polygon ((66, 67),(66, 67), 1 ),
		polygon ((68, 69, 70),(68, 71, 73), 2 ),
		polygon ((70, 71, 68),(73, 79, 68), 2 ),
		polygon ((72, 73, 74),(85, 89, 91), 2 ),
		polygon ((72, 75, 70),(86, 97, 74), 2 ),
		polygon ((74, 75, 72),(91, 98, 87), 2 ),
		polygon ((70, 69, 72),(75, 72, 88), 2 ),
		polygon ((68, 71, 74),(69, 80, 92), 2 ),
		polygon ((68, 74, 73),(70, 93, 90), 2 ),
		polygon ((76, 77, 78),(101, 102, 103), 2 ),
		polygon ((79, 80, 78),(104, 105, 103), 2 ),
		polygon ((81, 82, 76),(106, 107, 101), 2 ),
		polygon ((83, 76, 78),(108, 101, 103), 2 ),
		polygon ((71, 70, 79),(81, 76, 104), 2 ),
		polygon ((82, 79, 70),(107, 104, 77), 2 ),
		polygon ((79, 77, 71),(104, 102, 82), 2 ),
		polygon ((70, 75, 82),(78, 99, 107), 2 ),
		polygon ((74, 76, 82),(94, 101, 107), 2 ),
		polygon ((76, 74, 71),(101, 95, 83), 2 ),
		polygon ((82, 75, 74),(107, 100, 96), 2 ),
		polygon ((71, 77, 76),(84, 102, 101), 2 ),
		polygon ((76, 83, 81),(101, 108, 106), 2 ),
		polygon ((79, 82, 81),(104, 107, 106), 2 ),
		polygon ((81, 80, 79),(106, 105, 104), 2 ),
		polygon ((78, 77, 79),(103, 102, 104), 2 ),
		polygon ((84, 85, 86),(109, 110, 111), 3 ),
		polygon ((87, 88, 89),(112, 113, 114), 3 ),
		polygon ((90, 91, 86),(115, 116, 111), 3 ),
		polygon ((92, 93, 87),(117, 118, 112), 3 ),
		polygon ((94, 93, 95),(119, 118, 120), 3 ),
		polygon ((86, 96, 90),(111, 121, 115), 3 ),
		polygon ((87, 93, 97),(112, 118, 122), 3 ),
		polygon ((98, 85, 84),(123, 110, 109), 3 ),
		polygon ((99, 98, 91),(124, 123, 116), 3 ),
		polygon ((99, 85, 98),(124, 110, 123), 3 ),
		polygon ((91, 90, 99),(116, 115, 124), 3 ),
		polygon ((97, 93, 94),(122, 118, 119), 3 ),
		polygon ((95, 89, 88),(120, 114, 113), 3 ),
		polygon ((88, 94, 95),(113, 119, 120), 3 ),
		polygon ((89, 92, 87),(114, 117, 112), 3 ),
		polygon ((86, 85, 96),(111, 110, 121), 3 )
	)
); /* end of polyset 'BackBoard' */

polyset glass (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (GLASS ),
	casts_shadow = TRUE,
	vertices = ((cv((-7.051808, 2.640182, 0.596686), 1)),
			(cv((-7.051808, 1.963674, 0.596686), 1)),
			(cv((-7.051808, 1.963674, -0.596683), 1)),
			(cv((-7.051808, 2.640182, -0.596683), 1)),
			(cv((-7.05083, 1.963674, -0.596683), 1)),
			(cv((-7.05083, 1.963674, 0.596686), 1)),
			(cv((-7.05083, 2.640182, 0.596686), 1)),
			(cv((-7.05083, 2.640182, -0.596683), 1))	),
	texture_vertices = (
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 0 ),
		polygon ((6, 7, 4),(6, 7, 4), 0 )
	)
); /* end of polyset 'glass' */

polyset decals (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (NBAdecal ),
	casts_shadow = TRUE,
	vertices = ((cv((-7.053612, 1.983608, 0.505139), 1)),
			(cv((-7.053612, 2.146186, 0.505139), 1)),
			(cv((-7.053612, 2.146186, 0.576603), 1)),
			(cv((-7.053612, 1.983608, 0.576603), 1)),
			(cv((-7.050256, 1.983608, 0.576436), 1)),
			(cv((-7.050256, 2.146186, 0.576436), 1)),
			(cv((-7.050256, 2.146186, 0.504972), 1)),
			(cv((-7.050256, 1.983608, 0.504972), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 0 ),
		polygon ((6, 7, 4),(6, 7, 4), 0 )
	)
); /* end of polyset 'decals' */

polyset Rim (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (ORANGE ),
	shader = (HOOP ),
	casts_shadow = TRUE,
	vertices = ((cv((-7.040316, 2.001721, 0.0), 1)),
			(cv((-6.945086, 2.001721, 0.0), 1)),
			(cv((-7.040316, 1.963674, 0.0), 1)),
			(cv((-6.945086, 2.001721, -0.040716), 1)),
			(cv((-6.945086, 2.001721, 0.036459), 1)),
			(cv((-7.040316, 2.001721, 0.036376), 1)),
			(cv((-7.040316, 2.001721, -0.040622), 1)),
			(cv((-6.945086, 2.001721, 0.036459), 1)),
			(cv((-6.928807, 1.98423, 0.036376), 1)),
			(cv((-6.945086, 2.001721, -0.040716), 1)),
			(cv((-6.902143, 2.001721, 0.114953), 1)),
			(cv((-6.890308, 1.98423, 0.103058), 1)),
			(cv((-6.928807, 1.98423, -0.040622), 1)),
			(cv((-6.823625, 1.98423, 0.141557), 1)),
			(cv((-6.823625, 2.019517, 0.141557), 1)),
			(cv((-6.890308, 2.019517, 0.103058), 1)),
			(cv((-6.928807, 2.019517, 0.036376), 1)),
			(cv((-6.928807, 2.019517, -0.040622), 1)),
			(cv((-6.890308, 2.019517, -0.107305), 1)),
			(cv((-6.890308, 1.98423, -0.107305), 1)),
			(cv((-6.823625, 2.019517, -0.145804), 1)),
			(cv((-6.823625, 1.98423, -0.145804), 1)),
			(cv((-6.679945, 2.019517, 0.103058), 1)),
			(cv((-6.746627, 2.019517, 0.141557), 1)),
			(cv((-6.746627, 1.98423, 0.141557), 1)),
			(cv((-6.746627, 2.019517, -0.145804), 1)),
			(cv((-6.746627, 1.98423, -0.145804), 1)),
			(cv((-6.679945, 1.98423, -0.107305), 1)),
			(cv((-6.679945, 2.019517, -0.107305), 1)),
			(cv((-6.641446, 1.98423, -0.040622), 1)),
			(cv((-6.641446, 2.019517, -0.040622), 1)),
			(cv((-6.641446, 2.019517, 0.036376), 1)),
			(cv((-6.641446, 1.98423, 0.036376), 1)),
			(cv((-6.679945, 1.98423, 0.103058), 1)),
			(cv((-6.827765, 2.001721, 0.157895), 1)),
			(cv((-6.74188, 2.001721, 0.157895), 1)),
			(cv((-6.667502, 2.001721, 0.114953), 1)),
			(cv((-6.624559, 2.001721, 0.040574), 1)),
			(cv((-6.624559, 2.001721, -0.045311), 1)),
			(cv((-6.667502, 2.001721, -0.119689), 1)),
			(cv((-6.74188, 2.001721, -0.162632), 1)),
			(cv((-6.827765, 2.001721, -0.162632), 1)),
			(cv((-6.902143, 2.001721, -0.119689), 1))	),
	texture_vertices = (
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.500000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.450000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ) ),
	polygons = (
		polygon ((2, 1, 0),(2, 1, 0), 0 ),
		polygon ((3, 4, 5),(3, 4, 5), 0 ),
		polygon ((5, 6, 3),(5, 6, 3), 0 ),
		polygon ((13, 11, 10),(13, 11, 10), 1 ),
		polygon ((7, 8, 9),(7, 8, 9), 1 ),
		polygon ((10, 11, 8),(10, 11, 8), 1 ),
		polygon ((8, 7, 10),(8, 7, 10), 1 ),
		polygon ((9, 8, 12),(9, 8, 12), 1 ),
		polygon ((13, 14, 11),(13, 14, 11), 1 ),
		polygon ((11, 14, 15),(11, 14, 15), 1 ),
		polygon ((15, 8, 11),(15, 8, 11), 1 ),
		polygon ((15, 16, 8),(15, 16, 8), 1 ),
		polygon ((16, 17, 8),(16, 17, 8), 1 ),
		polygon ((8, 17, 12),(8, 17, 12), 1 ),
		polygon ((12, 17, 18),(12, 17, 18), 1 ),
		polygon ((18, 19, 12),(18, 19, 12), 1 ),
		polygon ((19, 18, 20),(19, 18, 20), 1 ),
		polygon ((20, 21, 19),(20, 21, 19), 1 ),
		polygon ((22, 23, 24),(22, 23, 24), 1 ),
		polygon ((25, 21, 20),(25, 21, 20), 1 ),
		polygon ((21, 25, 26),(21, 25, 26), 1 ),
		polygon ((23, 13, 24),(23, 13, 24), 1 ),
		polygon ((23, 14, 13),(23, 14, 13), 1 ),
		polygon ((25, 27, 26),(25, 27, 26), 1 ),
		polygon ((25, 28, 27),(25, 28, 27), 1 ),
		polygon ((27, 28, 29),(27, 28, 29), 1 ),
		polygon ((29, 28, 30),(29, 28, 30), 1 ),
		polygon ((29, 30, 31),(29, 30, 31), 1 ),
		polygon ((31, 32, 29),(31, 32, 29), 1 ),
		polygon ((32, 31, 33),(32, 31, 33), 1 ),
		polygon ((33, 31, 22),(33, 31, 22), 1 ),
		polygon ((22, 24, 33),(22, 24, 33), 1 ),
		polygon ((16, 10, 7),(16, 10, 7), 1 ),
		polygon ((10, 16, 15),(10, 16, 15), 1 ),
		polygon ((10, 15, 14),(10, 15, 14), 1 ),
		polygon ((14, 34, 10),(14, 34, 10), 1 ),
		polygon ((14, 35, 34),(14, 35, 34), 1 ),
		polygon ((35, 14, 23),(35, 14, 23), 1 ),
		polygon ((35, 23, 22),(35, 23, 22), 1 ),
		polygon ((22, 36, 35),(22, 36, 35), 1 ),
		polygon ((22, 37, 36),(22, 37, 36), 1 ),
		polygon ((37, 22, 31),(37, 22, 31), 1 ),
		polygon ((37, 31, 30),(37, 31, 30), 1 ),
		polygon ((30, 38, 37),(30, 38, 37), 1 ),
		polygon ((30, 39, 38),(30, 39, 38), 1 ),
		polygon ((39, 30, 28),(39, 30, 28), 1 ),
		polygon ((39, 28, 25),(39, 28, 25), 1 ),
		polygon ((25, 40, 39),(25, 40, 39), 1 ),
		polygon ((25, 41, 40),(25, 41, 40), 1 ),
		polygon ((41, 25, 20),(41, 25, 20), 1 ),
		polygon ((41, 20, 18),(41, 20, 18), 1 ),
		polygon ((18, 42, 41),(18, 42, 41), 1 ),
		polygon ((18, 9, 42),(18, 9, 42), 1 ),
		polygon ((9, 18, 17),(9, 18, 17), 1 ),
		polygon ((9, 17, 16),(9, 17, 16), 1 ),
		polygon ((16, 7, 9),(16, 7, 9), 1 ),
		polygon ((19, 42, 9),(19, 42, 9), 1 ),
		polygon ((9, 12, 19),(9, 12, 19), 1 ),
		polygon ((19, 41, 42),(19, 41, 42), 1 ),
		polygon ((19, 21, 41),(19, 21, 41), 1 ),
		polygon ((21, 26, 41),(21, 26, 41), 1 ),
		polygon ((40, 41, 26),(40, 41, 26), 1 ),
		polygon ((26, 27, 39),(26, 27, 39), 1 ),
		polygon ((39, 40, 26),(39, 40, 26), 1 ),
		polygon ((39, 27, 29),(39, 27, 29), 1 ),
		polygon ((29, 38, 39),(29, 38, 39), 1 ),
		polygon ((38, 29, 37),(38, 29, 37), 1 ),
		polygon ((37, 29, 32),(37, 29, 32), 1 ),
		polygon ((33, 37, 32),(33, 37, 32), 1 ),
		polygon ((37, 33, 36),(37, 33, 36), 1 ),
		polygon ((35, 33, 24),(35, 33, 24), 1 ),
		polygon ((33, 35, 36),(33, 35, 36), 1 ),
		polygon ((13, 35, 24),(13, 35, 24), 1 ),
		polygon ((35, 13, 34),(35, 13, 34), 1 ),
		polygon ((10, 34, 13),(10, 34, 13), 1 ),
		polygon ((5, 4, 3),(5, 4, 3), 0 ),
		polygon ((3, 6, 5),(3, 6, 5), 0 ),
		polygon ((2, 0, 1),(2, 0, 1), 0 )
	)
); /* end of polyset 'Rim' */

polyset Net (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (NET ),
	casts_shadow = TRUE,
	vertices = ((cv((-6.746627, 1.98423, -0.145804), 1)),
			(cv((-6.755274, 1.897591, -0.112759), 1)),
			(cv((-6.823625, 1.98423, -0.145804), 1)),
			(cv((-6.814592, 1.897591, -0.112863), 1)),
			(cv((-6.866014, 1.897591, -0.083294), 1)),
			(cv((-6.836276, 1.679607, -0.053273), 1)),
			(cv((-6.854999, 1.679607, -0.020845), 1)),
			(cv((-6.844407, 1.763866, -0.061612), 1)),
			(cv((-6.86621, 1.763866, -0.024001), 1)),
			(cv((-6.679945, 1.98423, -0.107305), 1)),
			(cv((-6.703956, 1.897591, -0.083011), 1)),
			(cv((-6.674387, 1.897591, -0.031589), 1)),
			(cv((-6.641446, 1.98423, -0.040622), 1)),
			(cv((-6.890308, 1.98423, -0.107305), 1)),
			(cv((-6.928807, 1.98423, -0.040622), 1)),
			(cv((-6.895762, 1.897591, -0.031975), 1)),
			(cv((-6.877181, 1.826143, -0.026789), 1)),
			(cv((-6.852515, 1.826143, -0.069512), 1)),
			(cv((-6.809792, 1.826143, -0.094178), 1)),
			(cv((-6.76046, 1.826143, -0.094178), 1)),
			(cv((-6.717738, 1.826143, -0.069512), 1)),
			(cv((-6.763248, 1.763866, -0.083207), 1)),
			(cv((-6.806721, 1.763866, -0.083282), 1)),
			(cv((-6.725638, 1.763866, -0.061404), 1)),
			(cv((-6.733976, 1.679607, -0.053273), 1)),
			(cv((-6.766404, 1.679607, -0.071996), 1)),
			(cv((-6.803849, 1.679607, -0.071996), 1)),
			(cv((-6.895866, 1.897591, 0.027342), 1)),
			(cv((-6.928807, 1.98423, 0.036376), 1)),
			(cv((-6.890308, 1.98423, 0.103058), 1)),
			(cv((-6.877181, 1.826143, 0.022543), 1)),
			(cv((-6.852515, 1.826143, 0.065265), 1)),
			(cv((-6.866297, 1.897591, 0.078765), 1)),
			(cv((-6.866286, 1.763866, 0.019472), 1)),
			(cv((-6.844615, 1.763866, 0.057158), 1)),
			(cv((-6.854999, 1.679607, 0.016599), 1)),
			(cv((-6.836276, 1.679607, 0.049027), 1)),
			(cv((-6.807004, 1.763866, 0.07896), 1)),
			(cv((-6.814978, 1.897591, 0.108513), 1)),
			(cv((-6.823625, 1.98423, 0.141557), 1)),
			(cv((-6.67449, 1.897591, 0.027729), 1)),
			(cv((-6.693072, 1.826143, 0.022543), 1)),
			(cv((-6.693072, 1.826143, -0.026789), 1)),
			(cv((-6.746627, 1.98423, 0.141557), 1)),
			(cv((-6.755661, 1.897591, 0.108616), 1)),
			(cv((-6.704239, 1.897591, 0.079047), 1)),
			(cv((-6.679945, 1.98423, 0.103058), 1)),
			(cv((-6.641446, 1.98423, 0.036376), 1)),
			(cv((-6.717738, 1.826143, 0.065265), 1)),
			(cv((-6.76046, 1.826143, 0.089931), 1)),
			(cv((-6.809792, 1.826143, 0.089931), 1)),
			(cv((-6.763531, 1.763866, 0.079036), 1)),
			(cv((-6.725845, 1.763866, 0.057365), 1)),
			(cv((-6.704043, 1.763866, 0.019755), 1)),
			(cv((-6.703967, 1.763866, -0.023718), 1)),
			(cv((-6.803849, 1.679607, 0.067749), 1)),
			(cv((-6.766404, 1.679607, 0.067749), 1)),
			(cv((-6.733976, 1.679607, 0.049027), 1)),
			(cv((-6.715254, 1.679607, 0.016599), 1)),
			(cv((-6.715254, 1.679607, -0.020845), 1)),
			(cv((-6.823625, 1.98423, -0.145804), 1)),
			(cv((-6.755274, 1.897591, -0.112759), 1)),
			(cv((-6.746627, 1.98423, -0.145804), 1)),
			(cv((-6.866014, 1.897591, -0.083294), 1)),
			(cv((-6.814592, 1.897591, -0.112863), 1)),
			(cv((-6.844407, 1.763866, -0.061612), 1)),
			(cv((-6.854999, 1.679607, -0.020845), 1)),
			(cv((-6.836276, 1.679607, -0.053273), 1)),
			(cv((-6.86621, 1.763866, -0.024001), 1)),
			(cv((-6.679945, 1.98423, -0.107305), 1)),
			(cv((-6.703956, 1.897591, -0.083011), 1)),
			(cv((-6.674387, 1.897591, -0.031589), 1)),
			(cv((-6.641446, 1.98423, -0.040622), 1)),
			(cv((-6.890308, 1.98423, -0.107305), 1)),
			(cv((-6.928807, 1.98423, -0.040622), 1)),
			(cv((-6.895762, 1.897591, -0.031975), 1)),
			(cv((-6.877181, 1.826143, -0.026789), 1)),
			(cv((-6.852515, 1.826143, -0.069512), 1)),
			(cv((-6.809792, 1.826143, -0.094178), 1)),
			(cv((-6.76046, 1.826143, -0.094178), 1)),
			(cv((-6.717738, 1.826143, -0.069512), 1)),
			(cv((-6.806721, 1.763866, -0.083282), 1)),
			(cv((-6.763248, 1.763866, -0.083207), 1)),
			(cv((-6.725638, 1.763866, -0.061404), 1)),
			(cv((-6.733976, 1.679607, -0.053273), 1)),
			(cv((-6.766404, 1.679607, -0.071996), 1)),
			(cv((-6.803849, 1.679607, -0.071996), 1)),
			(cv((-6.895866, 1.897591, 0.027342), 1)),
			(cv((-6.928807, 1.98423, 0.036376), 1)),
			(cv((-6.890308, 1.98423, 0.103058), 1)),
			(cv((-6.877181, 1.826143, 0.022543), 1)),
			(cv((-6.852515, 1.826143, 0.065265), 1)),
			(cv((-6.866297, 1.897591, 0.078765), 1)),
			(cv((-6.844615, 1.763866, 0.057158), 1)),
			(cv((-6.866286, 1.763866, 0.019472), 1)),
			(cv((-6.854999, 1.679607, 0.016599), 1)),
			(cv((-6.836276, 1.679607, 0.049027), 1)),
			(cv((-6.807004, 1.763866, 0.07896), 1)),
			(cv((-6.814978, 1.897591, 0.108513), 1)),
			(cv((-6.823625, 1.98423, 0.141557), 1)),
			(cv((-6.693072, 1.826143, 0.022543), 1)),
			(cv((-6.67449, 1.897591, 0.027729), 1)),
			(cv((-6.693072, 1.826143, -0.026789), 1)),
			(cv((-6.746627, 1.98423, 0.141557), 1)),
			(cv((-6.755661, 1.897591, 0.108616), 1)),
			(cv((-6.704239, 1.897591, 0.079047), 1)),
			(cv((-6.679945, 1.98423, 0.103058), 1)),
			(cv((-6.641446, 1.98423, 0.036376), 1)),
			(cv((-6.717738, 1.826143, 0.065265), 1)),
			(cv((-6.76046, 1.826143, 0.089931), 1)),
			(cv((-6.809792, 1.826143, 0.089931), 1)),
			(cv((-6.763531, 1.763866, 0.079036), 1)),
			(cv((-6.725845, 1.763866, 0.057365), 1)),
			(cv((-6.704043, 1.763866, 0.019755), 1)),
			(cv((-6.703967, 1.763866, -0.023718), 1)),
			(cv((-6.803849, 1.679607, 0.067749), 1)),
			(cv((-6.766404, 1.679607, 0.067749), 1)),
			(cv((-6.733976, 1.679607, 0.049027), 1)),
			(cv((-6.715254, 1.679607, 0.016599), 1)),
			(cv((-6.715254, 1.679607, -0.020845), 1))	),
	texture_vertices = (
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.704342 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.704342 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((3, 4, 2),(3, 4, 2), 0 ),
		polygon ((3, 2, 1),(3, 2, 1), 0 ),
		polygon ((5, 6, 7),(5, 6, 7), 0 ),
		polygon ((8, 7, 6),(8, 7, 6), 0 ),
		polygon ((1, 0, 9),(1, 0, 9), 0 ),
		polygon ((9, 10, 1),(9, 10, 1), 0 ),
		polygon ((9, 11, 10),(9, 11, 10), 0 ),
		polygon ((11, 9, 12),(11, 9, 12), 0 ),
		polygon ((4, 13, 2),(4, 13, 2), 0 ),
		polygon ((4, 14, 13),(4, 14, 13), 0 ),
		polygon ((14, 4, 15),(14, 4, 15), 0 ),
		polygon ((4, 16, 15),(4, 16, 15), 0 ),
		polygon ((16, 4, 17),(16, 4, 17), 0 ),
		polygon ((4, 18, 17),(4, 18, 17), 0 ),
		polygon ((4, 3, 18),(4, 3, 18), 0 ),
		polygon ((18, 1, 19),(18, 1, 19), 0 ),
		polygon ((1, 18, 3),(1, 18, 3), 0 ),
		polygon ((20, 19, 1),(20, 19, 1), 0 ),
		polygon ((20, 1, 10),(20, 1, 10), 0 ),
		polygon ((18, 21, 22),(18, 21, 22), 0 ),
		polygon ((22, 7, 18),(22, 7, 18), 0 ),
		polygon ((17, 18, 7),(17, 18, 7), 0 ),
		polygon ((8, 16, 7),(8, 16, 7), 0 ),
		polygon ((21, 18, 19),(21, 18, 19), 0 ),
		polygon ((21, 20, 23),(21, 20, 23), 0 ),
		polygon ((20, 21, 19),(20, 21, 19), 0 ),
		polygon ((23, 24, 21),(23, 24, 21), 0 ),
		polygon ((24, 25, 21),(24, 25, 21), 0 ),
		polygon ((25, 26, 21),(25, 26, 21), 0 ),
		polygon ((22, 21, 26),(22, 21, 26), 0 ),
		polygon ((7, 22, 26),(7, 22, 26), 0 ),
		polygon ((7, 26, 5),(7, 26, 5), 0 ),
		polygon ((27, 14, 15),(27, 14, 15), 0 ),
		polygon ((28, 14, 27),(28, 14, 27), 0 ),
		polygon ((27, 29, 28),(27, 29, 28), 0 ),
		polygon ((27, 15, 16),(27, 15, 16), 0 ),
		polygon ((30, 27, 16),(30, 27, 16), 0 ),
		polygon ((30, 31, 27),(30, 31, 27), 0 ),
		polygon ((32, 27, 31),(32, 27, 31), 0 ),
		polygon ((31, 33, 34),(31, 33, 34), 0 ),
		polygon ((33, 31, 30),(33, 31, 30), 0 ),
		polygon ((33, 30, 16),(33, 30, 16), 0 ),
		polygon ((8, 33, 16),(8, 33, 16), 0 ),
		polygon ((17, 7, 16),(17, 7, 16), 0 ),
		polygon ((33, 6, 35),(33, 6, 35), 0 ),
		polygon ((6, 33, 8),(6, 33, 8), 0 ),
		polygon ((35, 36, 33),(35, 36, 33), 0 ),
		polygon ((34, 33, 36),(34, 33, 36), 0 ),
		polygon ((37, 34, 36),(37, 34, 36), 0 ),
		polygon ((31, 34, 37),(31, 34, 37), 0 ),
		polygon ((38, 32, 31),(38, 32, 31), 0 ),
		polygon ((39, 29, 38),(39, 29, 38), 0 ),
		polygon ((11, 40, 41),(11, 40, 41), 0 ),
		polygon ((29, 27, 32),(29, 27, 32), 0 ),
		polygon ((38, 29, 32),(38, 29, 32), 0 ),
		polygon ((20, 11, 42),(20, 11, 42), 0 ),
		polygon ((38, 43, 39),(38, 43, 39), 0 ),
		polygon ((43, 38, 44),(43, 38, 44), 0 ),
		polygon ((43, 44, 45),(43, 44, 45), 0 ),
		polygon ((46, 43, 45),(46, 43, 45), 0 ),
		polygon ((40, 47, 45),(40, 47, 45), 0 ),
		polygon ((46, 45, 47),(46, 45, 47), 0 ),
		polygon ((11, 47, 40),(11, 47, 40), 0 ),
		polygon ((12, 47, 11),(12, 47, 11), 0 ),
		polygon ((41, 45, 48),(41, 45, 48), 0 ),
		polygon ((45, 41, 40),(45, 41, 40), 0 ),
		polygon ((49, 48, 45),(49, 48, 45), 0 ),
		polygon ((49, 45, 44),(49, 45, 44), 0 ),
		polygon ((44, 38, 49),(44, 38, 49), 0 ),
		polygon ((50, 49, 38),(50, 49, 38), 0 ),
		polygon ((31, 50, 38),(31, 50, 38), 0 ),
		polygon ((37, 50, 31),(37, 50, 31), 0 ),
		polygon ((37, 49, 50),(37, 49, 50), 0 ),
		polygon ((49, 37, 51),(49, 37, 51), 0 ),
		polygon ((49, 51, 52),(49, 51, 52), 0 ),
		polygon ((48, 49, 52),(48, 49, 52), 0 ),
		polygon ((53, 41, 52),(53, 41, 52), 0 ),
		polygon ((48, 52, 41),(48, 52, 41), 0 ),
		polygon ((53, 54, 41),(53, 54, 41), 0 ),
		polygon ((36, 55, 37),(36, 55, 37), 0 ),
		polygon ((55, 56, 37),(55, 56, 37), 0 ),
		polygon ((51, 37, 56),(51, 37, 56), 0 ),
		polygon ((52, 51, 56),(52, 51, 56), 0 ),
		polygon ((52, 56, 57),(52, 56, 57), 0 ),
		polygon ((52, 58, 53),(52, 58, 53), 0 ),
		polygon ((58, 52, 57),(58, 52, 57), 0 ),
		polygon ((54, 53, 58),(54, 53, 58), 0 ),
		polygon ((58, 59, 54),(58, 59, 54), 0 ),
		polygon ((54, 24, 23),(54, 24, 23), 0 ),
		polygon ((24, 54, 59),(24, 54, 59), 0 ),
		polygon ((20, 54, 23),(20, 54, 23), 0 ),
		polygon ((42, 41, 54),(42, 41, 54), 0 ),
		polygon ((42, 11, 41),(42, 11, 41), 0 ),
		polygon ((11, 20, 10),(11, 20, 10), 0 ),
		polygon ((54, 20, 42),(54, 20, 42), 0 ),
		polygon ((60, 61, 62),(60, 61, 62), 0 ),
		polygon ((60, 63, 64),(60, 63, 64), 0 ),
		polygon ((61, 60, 64),(61, 60, 64), 0 ),
		polygon ((65, 66, 67),(65, 66, 67), 0 ),
		polygon ((66, 65, 68),(66, 65, 68), 0 ),
		polygon ((69, 62, 61),(69, 62, 61), 0 ),
		polygon ((61, 70, 69),(61, 70, 69), 0 ),
		polygon ((70, 71, 69),(70, 71, 69), 0 ),
		polygon ((72, 69, 71),(72, 69, 71), 0 ),
		polygon ((60, 73, 63),(60, 73, 63), 0 ),
		polygon ((73, 74, 63),(73, 74, 63), 0 ),
		polygon ((75, 63, 74),(75, 63, 74), 0 ),
		polygon ((75, 76, 63),(75, 76, 63), 0 ),
		polygon ((77, 63, 76),(77, 63, 76), 0 ),
		polygon ((77, 78, 63),(77, 78, 63), 0 ),
		polygon ((78, 64, 63),(78, 64, 63), 0 ),
		polygon ((79, 61, 78),(79, 61, 78), 0 ),
		polygon ((64, 78, 61),(64, 78, 61), 0 ),
		polygon ((61, 79, 80),(61, 79, 80), 0 ),
		polygon ((70, 61, 80),(70, 61, 80), 0 ),
		polygon ((81, 82, 78),(81, 82, 78), 0 ),
		polygon ((78, 65, 81),(78, 65, 81), 0 ),
		polygon ((65, 78, 77),(65, 78, 77), 0 ),
		polygon ((65, 76, 68),(65, 76, 68), 0 ),
		polygon ((79, 78, 82),(79, 78, 82), 0 ),
		polygon ((83, 80, 82),(83, 80, 82), 0 ),
		polygon ((79, 82, 80),(79, 82, 80), 0 ),
		polygon ((82, 84, 83),(82, 84, 83), 0 ),
		polygon ((82, 85, 84),(82, 85, 84), 0 ),
		polygon ((82, 86, 85),(82, 86, 85), 0 ),
		polygon ((86, 82, 81),(86, 82, 81), 0 ),
		polygon ((86, 81, 65),(86, 81, 65), 0 ),
		polygon ((67, 86, 65),(67, 86, 65), 0 ),
		polygon ((75, 74, 87),(75, 74, 87), 0 ),
		polygon ((87, 74, 88),(87, 74, 88), 0 ),
		polygon ((88, 89, 87),(88, 89, 87), 0 ),
		polygon ((76, 75, 87),(76, 75, 87), 0 ),
		polygon ((76, 87, 90),(76, 87, 90), 0 ),
		polygon ((87, 91, 90),(87, 91, 90), 0 ),
		polygon ((91, 87, 92),(91, 87, 92), 0 ),
		polygon ((93, 94, 91),(93, 94, 91), 0 ),
		polygon ((90, 91, 94),(90, 91, 94), 0 ),
		polygon ((76, 90, 94),(76, 90, 94), 0 ),
		polygon ((76, 94, 68),(76, 94, 68), 0 ),
		polygon ((76, 65, 77),(76, 65, 77), 0 ),
		polygon ((95, 66, 94),(95, 66, 94), 0 ),
		polygon ((68, 94, 66),(68, 94, 66), 0 ),
		polygon ((94, 96, 95),(94, 96, 95), 0 ),
		polygon ((96, 94, 93),(96, 94, 93), 0 ),
		polygon ((96, 93, 97),(96, 93, 97), 0 ),
		polygon ((97, 93, 91),(97, 93, 91), 0 ),
		polygon ((91, 92, 98),(91, 92, 98), 0 ),
		polygon ((98, 89, 99),(98, 89, 99), 0 ),
		polygon ((100, 101, 71),(100, 101, 71), 0 ),
		polygon ((92, 87, 89),(92, 87, 89), 0 ),
		polygon ((92, 89, 98),(92, 89, 98), 0 ),
		polygon ((102, 71, 80),(102, 71, 80), 0 ),
		polygon ((99, 103, 98),(99, 103, 98), 0 ),
		polygon ((104, 98, 103),(104, 98, 103), 0 ),
		polygon ((105, 104, 103),(105, 104, 103), 0 ),
		polygon ((105, 103, 106),(105, 103, 106), 0 ),
		polygon ((105, 107, 101),(105, 107, 101), 0 ),
		polygon ((107, 105, 106),(107, 105, 106), 0 ),
		polygon ((101, 107, 71),(101, 107, 71), 0 ),
		polygon ((71, 107, 72),(71, 107, 72), 0 ),
		polygon ((108, 105, 100),(108, 105, 100), 0 ),
		polygon ((101, 100, 105),(101, 100, 105), 0 ),
		polygon ((105, 108, 109),(105, 108, 109), 0 ),
		polygon ((104, 105, 109),(104, 105, 109), 0 ),
		polygon ((109, 98, 104),(109, 98, 104), 0 ),
		polygon ((98, 109, 110),(98, 109, 110), 0 ),
		polygon ((98, 110, 91),(98, 110, 91), 0 ),
		polygon ((91, 110, 97),(91, 110, 97), 0 ),
		polygon ((110, 109, 97),(110, 109, 97), 0 ),
		polygon ((111, 97, 109),(111, 97, 109), 0 ),
		polygon ((112, 111, 109),(112, 111, 109), 0 ),
		polygon ((112, 109, 108),(112, 109, 108), 0 ),
		polygon ((112, 100, 113),(112, 100, 113), 0 ),
		polygon ((100, 112, 108),(100, 112, 108), 0 ),
		polygon ((100, 114, 113),(100, 114, 113), 0 ),
		polygon ((97, 115, 96),(97, 115, 96), 0 ),
		polygon ((97, 116, 115),(97, 116, 115), 0 ),
		polygon ((116, 97, 111),(116, 97, 111), 0 ),
		polygon ((116, 111, 112),(116, 111, 112), 0 ),
		polygon ((117, 116, 112),(117, 116, 112), 0 ),
		polygon ((113, 118, 112),(113, 118, 112), 0 ),
		polygon ((117, 112, 118),(117, 112, 118), 0 ),
		polygon ((118, 113, 114),(118, 113, 114), 0 ),
		polygon ((114, 119, 118),(114, 119, 118), 0 ),
		polygon ((83, 84, 114),(83, 84, 114), 0 ),
		polygon ((119, 114, 84),(119, 114, 84), 0 ),
		polygon ((83, 114, 80),(83, 114, 80), 0 ),
		polygon ((114, 100, 102),(114, 100, 102), 0 ),
		polygon ((100, 71, 102),(100, 71, 102), 0 ),
		polygon ((70, 80, 71),(70, 80, 71), 0 ),
		polygon ((102, 80, 114),(102, 80, 114), 0 )
	)
); /* end of polyset 'Net' */

polyset GoalBase (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (cush4 ),
	shader = (WHITEPOST ),
	casts_shadow = TRUE,
	vertices = ((cv((-9.01378, 0.883183, 0.201984), 1)),
			(cv((-9.01378, 0.883183, -0.198972), 1)),
			(cv((-9.01378, 1.31545, -0.198972), 1)),
			(cv((-9.01378, 1.31545, 0.201984), 1)),
			(cv((-9.01378, 0.399459, 0.402842), 1)),
			(cv((-9.01378, 0.399459, -0.39983), 1)),
			(cv((-8.814068, 1.31545, 0.0), 1)),
			(cv((-8.814068, 1.31545, 0.201984), 1)),
			(cv((-8.953828, 1.760046, -0.052033), 1)),
			(cv((-9.01378, 1.31545, 0.0), 1)),
			(cv((-8.814068, 1.31545, -0.198972), 1)),
			(cv((-8.953828, 1.315352, -0.052033), 1)),
			(cv((-10.67088, 0.000006, 0.403329), 1)),
			(cv((-10.670881, 0.000006, 0.0), 1)),
			(cv((-10.67088, 0.39915, 0.0), 1)),
			(cv((-10.67088, 0.39915, 0.403329), 1)),
			(cv((-10.67088, 0.000006, -0.400317), 1)),
			(cv((-10.67088, 0.39915, -0.400317), 1)),
			(cv((-8.814068, 0.000006, -0.400317), 1)),
			(cv((-8.814068, 0.399459, 0.402842), 1)),
			(cv((-8.814068, 0.399459, -0.39983), 1)),
			(cv((-8.814068, 0.883183, 0.201984), 1)),
			(cv((-8.814068, 0.883183, -0.198972), 1)),
			(cv((-8.814068, 0.000006, 0.403329), 1)),
			(cv((-8.953828, 1.760046, -0.083855), 1)),
			(cv((-9.005686, 1.760046, -0.083855), 1)),
			(cv((-8.953828, 1.760046, 0.052047), 1)),
			(cv((-9.005686, 1.760046, 0.052047), 1)),
			(cv((-9.005686, 1.315352, 0.052047), 1)),
			(cv((-8.953828, 1.315352, 0.052047), 1)),
			(cv((-9.005686, 1.315352, -0.083855), 1)),
			(cv((-8.953828, 1.315352, -0.083855), 1)),
			(cv((-8.953828, 1.315352, 0.083869), 1)),
			(cv((-9.005686, 1.315352, 0.083869), 1)),
			(cv((-8.953828, 1.760046, 0.083869), 1)),
			(cv((-9.005686, 1.760046, 0.083869), 1)),
			(cv((-9.005686, 1.315352, -0.052033), 1)),
			(cv((-9.005686, 1.760046, -0.052033), 1))	),
	texture_vertices = (
			st( 1.000000, 0.500000 ),
			st( 0.961765, 0.682541 ),
			st( 0.961765, 0.682541 ),
			st( 0.961765, 0.682541 ),
			st( 0.571782, 0.731341 ),
			st( 0.571782, 0.731341 ),
			st( 0.570110, 0.731341 ),
			st( 0.500000, 0.500000 ),
			st( 0.726952, 0.683213 ),
			st( 0.726952, 0.683213 ),
			st( 0.726952, 0.683213 ),
			st( 0.574240, 0.700595 ),
			st( 0.574240, 0.700595 ),
			st( 0.500000, 1.000000 ),
			st( 0.726952, 0.997310 ),
			st( 0.726952, 0.997310 ),
			st( 0.574648, 0.996116 ),
			st( 0.574900, 0.997798 ),
			st( 0.574900, 0.997798 ),
			st( 1.000000, 1.000000 ),
			st( 0.964496, 0.997774 ),
			st( 0.574648, 0.996116 ),
			st( 0.574648, 0.996116 ),
			st( 0.570957, 0.999119 ),
			st( 1.000000, 0.000000 ),
			st( 0.964496, 0.345047 ),
			st( 0.964496, 0.345047 ),
			st( 0.570110, 0.355653 ),
			st( 0.570110, 0.355653 ),
			st( 0.560652, 0.364603 ),
			st( 0.500000, 0.000000 ),
			st( 0.725662, 0.345634 ),
			st( 0.561841, 1.000000 ),
			st( 0.561841, 1.000000 ),
			st( 0.571405, 0.364065 ),
			st( 0.571405, 0.364065 ),
			st( 1.000000, 1.000000 ),
			st( 0.704249, 0.871387 ),
			st( 0.704249, 0.871387 ),
			st( 0.704249, 0.871387 ),
			st( 1.000000, 0.000000 ),
			st( 0.704190, 0.996506 ),
			st( 0.699159, 1.000000 ),
			st( 0.699580, 0.999791 ),
			st( 0.699580, 0.999791 ),
			st( 1.000000, 0.250000 ),
			st( 0.790139, 0.147953 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 1.000000 ),
			st( 0.574479, 0.870934 ),
			st( 0.574479, 0.870934 ),
			st( 0.574479, 0.870934 ),
			st( 1.000000, 0.000000 ),
			st( 0.704190, 0.996506 ),
			st( 0.704190, 0.996506 ),
			st( 0.962701, 0.997573 ),
			st( 0.962701, 0.997573 ),
			st( 0.699455, 0.997775 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.005248, 0.002385 ),
			st( 0.005248, 0.002385 ),
			st( 0.002926, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.295500, 0.002385 ),
			st( 0.295500, 0.002385 ),
			st( 0.295500, 0.002385 ),
			st( 0.000000, 1.000000 ),
			st( 0.295500, 0.370420 ),
			st( 0.295500, 0.370420 ),
			st( 0.295500, 0.370420 ),
			st( 1.000000, 1.000000 ),
			st( 0.005248, 0.370420 ),
			st( 0.002926, 0.355494 ),
			st( 0.002926, 0.355494 ),
			st( 0.002228, 0.365902 ),
			st( 0.002228, 0.365902 ),
			st( 1.000000, 0.000000 ),
			st( 0.005248, 0.002385 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.005248, 0.370420 ),
			st( 0.005248, 0.370420 ),
			st( 0.000000, 1.000000 ),
			st( 0.002049, 0.365119 ),
			st( 1.000000, 0.000000 ),
			st( 0.996744, 0.001706 ),
			st( 0.996744, 0.001706 ),
			st( 0.699212, 0.000000 ),
			st( 0.000000, 0.300000 ),
			st( 0.697936, 0.365525 ),
			st( 0.697936, 0.365525 ),
			st( 0.697936, 0.365525 ),
			st( 0.697936, 0.365525 ),
			st( 0.695623, 0.352699 ),
			st( 0.699580, 0.355653 ),
			st( 1.000000, 0.300000 ),
			st( 0.995530, 0.365291 ),
			st( 0.995530, 0.365291 ),
			st( 0.699436, 0.365980 ),
			st( 0.699436, 0.365980 ),
			st( 0.700346, 0.364938 ),
			st( 0.000000, 0.660000 ),
			st( 0.697937, 0.699329 ),
			st( 0.697937, 0.699329 ),
			st( 0.697937, 0.699329 ),
			st( 0.699580, 0.731341 ),
			st( 0.699580, 0.731341 ),
			st( 0.699580, 0.731341 ),
			st( 1.000000, 0.660000 ),
			st( 0.967997, 0.698498 ),
			st( 0.967997, 0.698498 ),
			st( 0.967801, 0.698498 ),
			st( 0.700393, 0.700648 ),
			st( 0.700393, 0.700648 ),
			st( 0.700393, 0.700648 ),
			st( 0.700393, 0.700648 ),
			st( 0.000000, 0.000000 ),
			st( 0.699159, 0.001900 ),
			st( 0.695623, 0.001347 ),
			st( 0.695623, 0.001347 ),
			st( 0.457387, 0.133831 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.455496, 0.647953 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.250000 ),
			st( 0.790139, 0.147953 ),
			st( 0.996219, 0.009542 ),
			st( 0.797702, 0.651839 ),
			st( 0.797702, 0.651839 ),
			st( 1.000000, 1.000000 ),
			st( 0.002832, 0.003999 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.750000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 0.500000 ),
			st( 0.457387, 0.133831 ),
			st( 0.457387, 0.133831 ),
			st( 1.000000, 0.750000 ),
			st( 0.455496, 0.647953 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 0.002832, 0.003999 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.996219, 0.009542 ),
			st( 0.797702, 0.651839 ),
			st( 0.797702, 0.651839 ),
			st( 1.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(1, 8, 14), 0 ),
		polygon ((2, 3, 0),(15, 20, 2), 0 ),
		polygon ((4, 5, 1),(25, 31, 9), 0 ),
		polygon ((1, 0, 4),(10, 3, 26), 0 ),
		polygon ((6, 7, 3),(37, 41, 21), 0 ),
		polygon ((3, 9, 6),(22, 49, 38), 0 ),
		polygon ((10, 6, 9),(53, 39, 50), 0 ),
		polygon ((9, 2, 10),(51, 16, 54), 0 ),
		polygon ((12, 13, 14),(60, 64, 68), 0 ),
		polygon ((14, 15, 12),(69, 72, 61), 0 ),
		polygon ((13, 16, 17),(65, 78, 82), 0 ),
		polygon ((17, 14, 13),(83, 70, 66), 0 ),
		polygon ((18, 19, 20),(87, 91, 98), 0 ),
		polygon ((19, 21, 22),(92, 104, 111), 0 ),
		polygon ((22, 20, 19),(112, 99, 93), 0 ),
		polygon ((23, 19, 18),(119, 94, 88), 0 ),
		polygon ((10, 22, 21),(55, 113, 105), 0 ),
		polygon ((21, 7, 10),(106, 42, 56), 0 ),
		polygon ((23, 12, 15),(120, 62, 73), 0 ),
		polygon ((23, 15, 19),(121, 74, 95), 0 ),
		polygon ((0, 3, 7),(4, 23, 43), 0 ),
		polygon ((7, 21, 0),(44, 107, 5), 0 ),
		polygon ((4, 0, 21),(27, 6, 108), 0 ),
		polygon ((21, 19, 4),(109, 96, 28), 0 ),
		polygon ((5, 4, 15),(32, 29, 75), 0 ),
		polygon ((15, 17, 5),(76, 84, 33), 0 ),
		polygon ((2, 1, 22),(17, 11, 114), 0 ),
		polygon ((22, 10, 2),(115, 57, 18), 0 ),
		polygon ((20, 17, 16),(100, 85, 79), 0 ),
		polygon ((16, 18, 20),(80, 89, 101), 0 ),
		polygon ((22, 1, 5),(116, 12, 34), 0 ),
		polygon ((5, 20, 22),(35, 102, 117), 0 ),
		polygon ((32, 33, 34),(143, 144, 145), 1 ),
		polygon ((33, 35, 34),(144, 148, 145), 1 ),
		polygon ((36, 37, 8),(152, 155, 45), 1 ),
		polygon ((8, 11, 36),(45, 58, 152), 1 ),
		polygon ((24, 8, 37),(122, 46, 156), 1 ),
		polygon ((37, 25, 24),(157, 127, 122), 1 ),
		polygon ((26, 27, 28),(131, 133, 137), 1 ),
		polygon ((28, 29, 26),(137, 140, 131), 1 ),
		polygon ((29, 32, 34),(140, 143, 145), 1 ),
		polygon ((34, 26, 29),(145, 131, 140), 1 ),
		polygon ((25, 37, 36),(128, 158, 153), 1 ),
		polygon ((36, 30, 25),(154, 141, 129), 1 ),
		polygon ((24, 30, 31),(123, 141, 142), 1 ),
		polygon ((24, 25, 30),(124, 130, 141), 1 ),
		polygon ((24, 31, 11),(125, 142, 58), 1 ),
		polygon ((11, 8, 24),(58, 47, 126), 1 ),
		polygon ((27, 26, 34),(134, 132, 146), 1 ),
		polygon ((34, 35, 27),(147, 149, 135), 1 ),
		polygon ((28, 27, 35),(138, 136, 150), 1 ),
		polygon ((35, 33, 28),(151, 144, 139), 1 )
	)
); /* end of polyset 'GoalBase' */

polyset GoalStand2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (seal ),
	shader = (METAL4 ),
	shader = (WHITEPOST ),
	shader = (METAL2 ),
	shader = (METAL3 ),
	shader = (METAL1 ),
	shader = (BUMPER ),
	casts_shadow = TRUE,
	vertices = ((cv((8.197511, 2.176789, -0.0543), 1)),
			(cv((8.197511, 2.176789, 0.0543), 1)),
			(cv((8.116648, 2.176789, 0.0), 1)),
			(cv((8.197511, 1.972219, -0.0543), 1)),
			(cv((8.197511, 1.972219, 0.0543), 1)),
			(cv((8.197511, 2.176789, 0.0543), 1)),
			(cv((8.197511, 2.176789, -0.0543), 1)),
			(cv((8.116648, 1.972219, 0.0), 1)),
			(cv((8.116648, 2.176789, 0.0), 1)),
			(cv((7.467051, 2.504268, 0.399), 1)),
			(cv((7.438888, 2.504268, 0.415364), 1)),
			(cv((7.438988, 2.504268, -0.415384), 1)),
			(cv((7.453855, 2.483936, 0.407182), 1)),
			(cv((7.453955, 2.483936, -0.407202), 1)),
			(cv((7.467151, 2.504268, -0.399), 1)),
			(cv((9.370433, 1.238626, 0.0), 1)),
			(cv((9.393589, 1.272513, 0.027879), 1)),
			(cv((9.472845, 1.049741, 0.027879), 1)),
			(cv((8.196584, 2.174765, -0.027879), 1)),
			(cv((9.393589, 1.272513, -0.027879), 1)),
			(cv((8.196584, 2.128048, 0.0), 1)),
			(cv((8.196584, 2.174765, 0.027879), 1)),
			(cv((9.419602, 1.090958, 0.0), 1)),
			(cv((9.472845, 1.049741, -0.027879), 1)),
			(cv((9.557237, 0.863209, 0.160139), 1)),
			(cv((9.557237, 0.863209, -0.159953), 1)),
			(cv((9.557237, 0.967656, -0.159953), 1)),
			(cv((9.557237, 0.967656, 0.160139), 1)),
			(cv((9.662241, 0.863209, 0.160139), 1)),
			(cv((9.662241, 0.967656, 0.160139), 1)),
			(cv((9.662241, 0.967656, -0.159953), 1)),
			(cv((9.662241, 0.863209, -0.159953), 1)),
			(cv((9.541987, 0.811042, -0.23185), 1)),
			(cv((9.541987, 0.399368, -0.401548), 1)),
			(cv((9.686143, 0.399368, -0.401548), 1)),
			(cv((9.686143, 0.811042, -0.23185), 1)),
			(cv((9.686143, 0.811042, -0.106521), 1)),
			(cv((9.686143, 0.399368, -0.276219), 1)),
			(cv((9.541987, 0.811042, -0.106521), 1)),
			(cv((9.541987, 0.399368, -0.276219), 1)),
			(cv((9.686143, 0.399368, 0.401548), 1)),
			(cv((9.541987, 0.399368, 0.401548), 1)),
			(cv((9.541987, 0.811042, 0.23185), 1)),
			(cv((9.686143, 0.811042, 0.23185), 1)),
			(cv((9.686143, 0.811042, 0.106521), 1)),
			(cv((9.686143, 0.399368, 0.276219), 1)),
			(cv((9.541987, 0.811042, 0.106521), 1)),
			(cv((9.541987, 0.399368, 0.276219), 1)),
			(cv((9.64083, 0.884822, 0.23349), 1)),
			(cv((9.64083, 0.944657, 0.23349), 1)),
			(cv((9.64083, 0.944657, 0.160003), 1)),
			(cv((9.64083, 0.884822, 0.160003), 1)),
			(cv((9.580675, 0.884822, 0.23349), 1)),
			(cv((9.580675, 0.944657, 0.23349), 1)),
			(cv((9.596149, 0.884773, 0.199835), 1)),
			(cv((9.596149, 0.809609, 0.199835), 1)),
			(cv((9.596149, 0.809609, 0.160231), 1)),
			(cv((9.596149, 0.884773, 0.160231), 1)),
			(cv((9.580675, 0.884822, 0.160003), 1)),
			(cv((9.580675, 0.944657, 0.160003), 1)),
			(cv((9.625843, 0.809609, 0.160231), 1)),
			(cv((9.625843, 0.809609, 0.199835), 1)),
			(cv((9.625843, 0.884773, 0.199835), 1)),
			(cv((9.625843, 0.884773, 0.160231), 1)),
			(cv((9.64083, 0.944657, -0.160003), 1)),
			(cv((9.64083, 0.944657, -0.23349), 1)),
			(cv((9.64083, 0.884822, -0.23349), 1)),
			(cv((9.64083, 0.884822, -0.160003), 1)),
			(cv((9.580675, 0.884822, -0.23349), 1)),
			(cv((9.580675, 0.944657, -0.23349), 1)),
			(cv((9.596149, 0.809609, -0.160231), 1)),
			(cv((9.596149, 0.809609, -0.199835), 1)),
			(cv((9.596149, 0.884773, -0.199835), 1)),
			(cv((9.596149, 0.884773, -0.160231), 1)),
			(cv((9.580675, 0.944657, -0.160003), 1)),
			(cv((9.580675, 0.884822, -0.160003), 1)),
			(cv((9.625843, 0.884773, -0.199835), 1)),
			(cv((9.625843, 0.809609, -0.199835), 1)),
			(cv((9.625843, 0.809609, -0.160231), 1)),
			(cv((9.625843, 0.884773, -0.160231), 1)),
			(cv((9.64083, 0.944657, 0.160003), 1)),
			(cv((9.64083, 0.944657, 0.23349), 1)),
			(cv((9.580675, 0.944657, 0.23349), 1)),
			(cv((9.580675, 0.944657, 0.160003), 1)),
			(cv((9.580675, 0.944657, -0.23349), 1)),
			(cv((9.64083, 0.944657, -0.23349), 1)),
			(cv((9.64083, 0.944657, -0.160003), 1)),
			(cv((9.580675, 0.944657, -0.160003), 1)),
			(cv((9.662241, 0.863209, -0.159953), 1)),
			(cv((9.662241, 0.967656, -0.159953), 1)),
			(cv((9.557237, 0.967656, -0.159953), 1)),
			(cv((9.557237, 0.863209, -0.159953), 1)),
			(cv((9.557237, 0.967656, 0.160139), 1)),
			(cv((9.662241, 0.967656, 0.160139), 1)),
			(cv((9.662241, 0.863209, 0.160139), 1)),
			(cv((9.557237, 0.863209, 0.160139), 1)),
			(cv((9.686143, 0.811042, 0.23185), 1)),
			(cv((9.541987, 0.811042, 0.23185), 1)),
			(cv((9.541987, 0.811042, 0.106521), 1)),
			(cv((9.686143, 0.811042, 0.106521), 1)),
			(cv((9.541987, 0.811042, -0.106521), 1)),
			(cv((9.541987, 0.811042, -0.23185), 1)),
			(cv((9.686143, 0.811042, -0.23185), 1)),
			(cv((9.686143, 0.811042, -0.106521), 1)),
			(cv((7.230716, 2.032687, 0.583106), 1)),
			(cv((7.246569, 2.039962, 0.575831), 1)),
			(cv((7.24662, 2.039648, 0.682268), 1)),
			(cv((7.230768, 2.032373, 0.674993), 1)),
			(cv((7.24662, 1.971967, 0.682268), 1)),
			(cv((7.230768, 1.979242, 0.674993), 1)),
			(cv((7.230716, 1.979546, 0.583106), 1)),
			(cv((7.246569, 1.972271, 0.575831), 1)),
			(cv((7.209343, 1.979242, 0.674993), 1)),
			(cv((7.209291, 1.979546, 0.583106), 1)),
			(cv((7.209291, 2.032687, 0.583106), 1)),
			(cv((7.209343, 2.032373, 0.674993), 1)),
			(cv((7.082235, 2.032373, 0.674993), 1)),
			(cv((7.110013, 2.032373, 0.674993), 1)),
			(cv((7.110013, 1.979242, 0.674993), 1)),
			(cv((7.082235, 1.979242, 0.674993), 1)),
			(cv((7.082183, 2.032687, 0.583106), 1)),
			(cv((7.109961, 2.032687, 0.583106), 1)),
			(cv((7.082183, 1.979546, 0.583106), 1)),
			(cv((7.109961, 1.979546, 0.583106), 1)),
			(cv((7.24662, 2.039648, -0.682268), 1)),
			(cv((7.246569, 2.039962, -0.575831), 1)),
			(cv((7.230716, 2.032687, -0.583106), 1)),
			(cv((7.230768, 2.032373, -0.674993), 1)),
			(cv((7.230768, 1.979242, -0.674993), 1)),
			(cv((7.24662, 1.971967, -0.682268), 1)),
			(cv((7.246569, 1.972271, -0.575831), 1)),
			(cv((7.230716, 1.979546, -0.583106), 1)),
			(cv((7.209343, 1.979242, -0.674993), 1)),
			(cv((7.209291, 1.979546, -0.583106), 1)),
			(cv((7.209291, 2.032687, -0.583106), 1)),
			(cv((7.209343, 2.032373, -0.674993), 1)),
			(cv((7.110013, 1.979242, -0.674993), 1)),
			(cv((7.110013, 2.032373, -0.674993), 1)),
			(cv((7.082235, 2.032373, -0.674993), 1)),
			(cv((7.082235, 1.979242, -0.674993), 1)),
			(cv((7.109961, 2.032687, -0.583106), 1)),
			(cv((7.082183, 2.032687, -0.583106), 1)),
			(cv((7.109961, 1.979546, -0.583106), 1)),
			(cv((7.082183, 1.979546, -0.583106), 1)),
			(cv((7.115804, 1.962333, 0.565893), 1)),
			(cv((7.115804, 2.049901, 0.565893), 1)),
			(cv((7.109961, 2.032687, 0.583106), 1)),
			(cv((7.109961, 1.979546, 0.583106), 1)),
			(cv((7.200527, 1.962333, 0.565893), 1)),
			(cv((7.200527, 2.049901, 0.565893), 1)),
			(cv((7.209291, 2.032687, 0.583106), 1)),
			(cv((7.209343, 2.032373, 0.674993), 1)),
			(cv((7.200579, 2.049586, 0.692206), 1)),
			(cv((7.209291, 1.979546, 0.583106), 1)),
			(cv((7.200579, 1.962029, 0.692206), 1)),
			(cv((7.209343, 1.979242, 0.674993), 1)),
			(cv((7.200579, 2.049586, -0.692206), 1)),
			(cv((7.200579, 1.962029, -0.692206), 1)),
			(cv((7.209343, 1.979242, -0.674993), 1)),
			(cv((7.209343, 2.032373, -0.674993), 1)),
			(cv((7.115856, 2.049586, -0.692206), 1)),
			(cv((7.115856, 1.962029, -0.692206), 1)),
			(cv((7.110013, 2.032373, -0.674993), 1)),
			(cv((7.110013, 1.979242, -0.674993), 1)),
			(cv((7.115804, 2.049901, -0.565893), 1)),
			(cv((7.109961, 2.032687, -0.583106), 1)),
			(cv((7.200527, 2.049901, -0.565893), 1)),
			(cv((7.109961, 1.979546, -0.583106), 1)),
			(cv((7.115804, 1.962333, -0.565893), 1)),
			(cv((7.200527, 1.962333, -0.565893), 1)),
			(cv((7.209291, 2.032687, -0.583106), 1)),
			(cv((7.209291, 1.979546, -0.583106), 1)),
			(cv((7.110013, 2.032373, 0.674993), 1)),
			(cv((7.115856, 2.049586, 0.692206), 1)),
			(cv((7.115856, 1.962029, 0.692206), 1)),
			(cv((7.110013, 1.979242, 0.674993), 1)),
			(cv((7.069927, 2.700294, -0.633567), 1)),
			(cv((8.117565, 2.175339, 0.0), 1)),
			(cv((8.116829, 2.144641, 0.0), 1)),
			(cv((8.136342, 2.145353, -0.013271), 1)),
			(cv((7.069927, 2.700889, 0.635946), 1)),
			(cv((7.058797, 2.682909, 0.632627), 1)),
			(cv((7.058797, 2.682314, -0.630248), 1)),
			(cv((8.136342, 2.145353, 0.013271), 1)),
			(cv((7.071569, 2.675445, 0.657911), 1)),
			(cv((7.071569, 2.67485, -0.655532), 1)),
			(cv((8.289685, 1.967779, -0.027879), 1)),
			(cv((8.335312, 2.023017, 0.0), 1)),
			(cv((8.289685, 1.967779, 0.027879), 1)),
			(cv((9.317144, 1.27913, 0.0), 1)),
			(cv((9.354931, 1.250405, 0.0), 1)),
			(cv((9.300897, 1.182963, 0.027879), 1)),
			(cv((8.327299, 1.938539, -0.027879), 1)),
			(cv((8.373133, 1.994397, 0.0), 1)),
			(cv((8.327299, 1.938539, 0.027879), 1)),
			(cv((9.300897, 1.182963, -0.027879), 1)),
			(cv((9.263983, 1.211593, 0.027879), 1)),
			(cv((9.263983, 1.211593, -0.027879), 1)),
			(cv((7.24662, 1.971967, -0.682268), 1)),
			(cv((7.246569, 1.972271, -0.575831), 1)),
			(cv((8.196584, 1.972271, 0.053223), 1)),
			(cv((8.196584, 1.972271, -0.053223), 1)),
			(cv((8.196584, 2.039962, 0.053223), 1)),
			(cv((8.196584, 2.039962, -0.053223), 1)),
			(cv((9.619609, 0.935557, -0.053223), 1)),
			(cv((9.619609, 0.935557, 0.053223), 1)),
			(cv((9.578799, 0.897741, 0.053223), 1)),
			(cv((9.578799, 0.897741, -0.053223), 1)),
			(cv((7.24662, 2.039648, -0.682268), 1)),
			(cv((7.246569, 2.039962, 0.575831), 1)),
			(cv((7.246569, 1.972271, 0.575831), 1)),
			(cv((8.196584, 1.972271, -0.053223), 1)),
			(cv((8.196584, 2.039962, -0.053223), 1)),
			(cv((8.196584, 2.039962, 0.053223), 1)),
			(cv((7.24662, 2.039648, 0.682268), 1)),
			(cv((8.196584, 1.972271, 0.053223), 1)),
			(cv((7.24662, 1.971967, 0.682268), 1)),
			(cv((7.246569, 2.039962, -0.575831), 1))	),
	texture_vertices = (
			st( 0.570868, 0.708712 ),
			st( 0.023841, 0.705272 ),
			st( 0.244909, 0.504547 ),
			st( 0.993157, 0.989136 ),
			st( 0.989163, 0.745393 ),
			st( 0.393147, 0.732797 ),
			st( 0.993157, 0.752716 ),
			st( 0.017339, 0.735071 ),
			st( 0.006843, 0.986420 ),
			st( 0.017339, 0.735071 ),
			st( 0.006843, 0.986420 ),
			st( 0.008669, 0.745393 ),
			st( 0.006843, 0.986420 ),
			st( 0.008669, 0.745393 ),
			st( 0.989735, 0.515183 ),
			st( 0.011976, 0.513580 ),
			st( 0.015628, 0.516296 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 0.008669, 0.756941 ),
			st( 0.984829, 0.763822 ),
			st( 1.000000, 0.000000 ),
			st( 0.984829, 0.763822 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.900000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 0.008669, 0.283240 ),
			st( 0.008669, 0.283240 ),
			st( 0.008669, 0.283240 ),
			st( 0.008669, 0.283240 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.984829, 0.283240 ),
			st( 0.984829, 0.283240 ),
			st( 0.984829, 0.283240 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.250000 ),
			st( 0.900000, 0.000000 ),
			st( 0.902167, 0.279799 ),
			st( 0.900000, 0.500000 ),
			st( 0.902167, 0.279799 ),
			st( 0.902167, 0.279799 ),
			st( 0.900000, 0.500000 ),
			st( 0.900000, 0.500000 ),
			st( 0.902167, 0.279799 ),
			st( 0.900000, 0.500000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.750000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 1.000000 ),
			st( 0.993662, 0.010634 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.750000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 1.000000 ),
			st( 0.997887, 0.000573 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 0.666600, 0.000000 ),
			st( 0.666600, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.333300, 0.000000 ),
			st( 0.333330, 1.000000 ),
			st( 0.333000, 1.000000 ),
			st( 0.333300, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.666000, 0.000000 ),
			st( 0.666000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.333300, 1.000000 ),
			st( 0.333330, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.666600, 0.000000 ),
			st( 0.666660, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.666000, 0.000000 ),
			st( 0.666600, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.333330, 1.000000 ),
			st( 0.333333, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.705243, 0.027525 ),
			st( 0.705243, 0.267143 ),
			st( 0.316431, 0.267143 ),
			st( 0.316431, 0.027525 ),
			st( 0.316431, 0.267143 ),
			st( 0.705243, 0.267143 ),
			st( 0.705243, 0.027525 ),
			st( 0.316431, 0.027525 ),
			st( 0.364112, 0.233964 ),
			st( 0.364112, 0.542395 ),
			st( 0.575203, 0.549276 ),
			st( 0.568701, 0.233964 ),
			st( 0.575203, 0.549276 ),
			st( 0.364112, 0.542395 ),
			st( 0.364112, 0.233964 ),
			st( 0.568701, 0.233964 ),
			st( 0.967821, 0.391299 ),
			st( 0.966813, 0.021922 ),
			st( 0.019481, 0.050212 ),
			st( 0.020489, 0.419590 ),
			st( 0.966813, 0.021922 ),
			st( 0.967821, 0.391299 ),
			st( 0.020489, 0.419590 ),
			st( 0.019481, 0.050212 ),
			st( 0.969333, 0.945366 ),
			st( 0.022001, 0.973656 ),
			st( 0.969333, 0.945366 ),
			st( 0.022001, 0.973656 ),
			st( 0.965400, 0.195634 ),
			st( 0.907985, 0.093690 ),
			st( 0.036821, 0.584682 ),
			st( 0.094089, 0.686364 ),
			st( 0.094089, 0.686364 ),
			st( 0.036673, 0.584421 ),
			st( 0.965400, 0.195634 ),
			st( 0.908132, 0.093952 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.400000 ),
			st( 0.000000, 0.400000 ),
			st( 1.000000, 0.400000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.400000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.903597, 0.822071 ),
			st( 0.191043, 0.120454 ),
			st( 0.085800, 0.227337 ),
			st( 0.798354, 0.928954 ),
			st( 0.903597, 0.822071 ),
			st( 0.798354, 0.928954 ),
			st( 0.191043, 0.120454 ),
			st( 0.085800, 0.227337 ),
			st( 0.200000, 0.997730 ),
			st( 0.200000, 0.000000 ),
			st( 0.200000, 0.000000 ),
			st( 0.200000, 0.750000 ),
			st( 0.000000, 0.750000 ),
			st( 0.000997, 0.997111 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.799502, 0.997902 ),
			st( 0.800000, 0.000000 ),
			st( 0.800000, 0.000000 ),
			st( 0.800000, 0.000000 ),
			st( 0.800000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.500000 ),
			st( 0.800000, 0.500000 ),
			st( 0.999003, 0.998521 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.800000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.800000, 0.500000 ),
			st( 0.800000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.500000 ),
			st( 0.200000, 0.500000 ),
			st( 0.200000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.250000 ),
			st( 0.200000, 0.750000 ),
			st( 0.000000, 0.750000 ),
			st( 0.800000, 0.750000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000881, 0.997983 ),
			st( 0.200000, 0.000000 ),
			st( 0.200000, 0.998625 ),
			st( 0.200000, 0.998625 ),
			st( 0.200000, 0.998625 ),
			st( 0.800000, 0.000000 ),
			st( 0.800220, 0.998682 ),
			st( 0.800220, 0.998682 ),
			st( 0.800220, 0.998682 ),
			st( 0.800000, 0.000000 ),
			st( 1.000000, 0.750000 ),
			st( 0.999339, 0.999382 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.500000 ),
			st( 0.200000, 0.500000 ),
			st( 0.200000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.750000 ),
			st( 0.982661, 0.745393 ),
			st( 1.000000, 1.000000 ),
			st( 0.982661, 0.745393 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.750000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 1.000000 ),
			st( 0.997833, 0.745393 ),
			st( 0.997833, 0.745393 ),
			st( 0.000000, 1.000000 ),
			st( 0.002167, 0.752274 ),
			st( 0.006502, 0.738511 ),
			st( 0.000000, 1.000000 ),
			st( 0.396622, 0.017203 ),
			st( 0.399686, 0.027000 ),
			st( 0.379283, 0.301550 ),
			st( 0.396622, 0.017203 ),
			st( 0.069355, 0.267143 ),
			st( 0.373641, 0.256821 ),
			st( 0.375808, 0.013763 ),
			st( 0.715117, 0.027000 ),
			st( 0.709577, 0.017203 ),
			st( 0.724749, 0.287787 ),
			st( 0.709577, 0.017203 ),
			st( 0.375808, 0.013763 ),
			st( 0.069355, 0.013763 ),
			st( 0.069355, 0.013763 ),
			st( 1.000000, 1.000000 ),
			st( 0.995775, 0.003926 ),
			st( 1.000000, 0.750000 ),
			st( 0.000000, 0.750000 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.505432 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.750000 ),
			st( 0.995775, 0.003926 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.995775, 0.003926 ),
			st( 1.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.505432 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ) ),
	polygons = (
		polygon ((7, 6, 8),(14, 11, 15), 2 ),
		polygon ((7, 8, 5),(14, 16, 7), 2 ),
		polygon ((11, 10, 12),(19, 18, 20), 2 ),
		polygon ((9, 14, 13),(17, 25, 22), 2 ),
		polygon ((11, 14, 9),(19, 25, 17), 2 ),
		polygon ((9, 10, 11),(17, 18, 19), 2 ),
		polygon ((5, 6, 3),(8, 12, 3), 2 ),
		polygon ((5, 4, 7),(9, 5, 14), 2 ),
		polygon ((12, 13, 11),(20, 23, 19), 2 ),
		polygon ((12, 9, 13),(21, 17, 24), 2 ),
		polygon ((15, 16, 17),(26, 27, 28), 2 ),
		polygon ((18, 19, 16),(29, 35, 27), 2 ),
		polygon ((17, 22, 15),(28, 43, 26), 2 ),
		polygon ((21, 20),(42, 41), 2 ),
		polygon ((16, 21, 18),(27, 42, 29), 2 ),
		polygon ((20),(41), 2 ),
		polygon ((16, 15, 20),(27, 26, 41), 2 ),
		polygon ((20, 18),(41, 30), 2 ),
		polygon ((23, 19, 15),(44, 36, 26), 2 ),
		polygon ((15, 16, 17),(26, 27, 28), 2 ),
		polygon ((23, 17, 16),(45, 28, 27), 2 ),
		polygon ((23, 19, 15),(46, 37, 26), 2 ),
		polygon ((20, 21, 16),(41, 42, 27), 2 ),
		polygon ((18, 20, 15),(31, 41, 26), 2 ),
		polygon ((21),(42), 2 ),
		polygon ((15, 19, 18),(26, 38, 32), 2 ),
		polygon ((22, 15, 17),(43, 26, 28), 2 ),
		polygon ((18),(33), 2 ),
		polygon ((22, 23, 15),(43, 47, 26), 2 ),
		polygon ((18, 21),(34, 42), 2 ),
		polygon ((23, 17, 16),(48, 28, 27), 2 ),
		polygon ((16, 19, 23),(27, 39, 49), 2 ),
		polygon ((15, 22, 23),(26, 43, 50), 2 ),
		polygon ((16, 19, 23),(27, 40, 51), 2 ),
		polygon ((24, 25, 26),(52, 53, 54), 2 ),
		polygon ((26, 27, 24),(54, 55, 52), 2 ),
		polygon ((28, 29, 30),(56, 57, 58), 2 ),
		polygon ((30, 31, 28),(58, 59, 56), 2 ),
		polygon ((29, 27, 26),(57, 55, 54), 2 ),
		polygon ((26, 30, 29),(54, 58, 57), 2 ),
		polygon ((32, 33, 34),(60, 61, 62), 2 ),
		polygon ((34, 35, 32),(62, 63, 60), 2 ),
		polygon ((36, 35, 34),(64, 63, 62), 2 ),
		polygon ((34, 37, 36),(62, 65, 64), 2 ),
		polygon ((38, 36, 37),(66, 64, 65), 2 ),
		polygon ((37, 39, 38),(65, 68, 66), 2 ),
		polygon ((32, 38, 39),(60, 67, 69), 2 ),
		polygon ((39, 33, 32),(70, 61, 60), 2 ),
		polygon ((40, 41, 42),(71, 72, 73), 2 ),
		polygon ((42, 43, 40),(73, 74, 71), 2 ),
		polygon ((40, 43, 44),(71, 74, 75), 2 ),
		polygon ((44, 45, 40),(75, 76, 71), 2 ),
		polygon ((45, 44, 46),(76, 75, 77), 2 ),
		polygon ((46, 47, 45),(77, 79, 76), 2 ),
		polygon ((47, 46, 42),(80, 78, 73), 2 ),
		polygon ((42, 41, 47),(73, 72, 81), 2 ),
		polygon ((48, 49, 50),(82, 83, 84), 3 ),
		polygon ((50, 51, 48),(84, 85, 82), 3 ),
		polygon ((52, 49, 48),(86, 83, 82), 3 ),
		polygon ((53, 49, 52),(87, 83, 86), 3 ),
		polygon ((54, 55, 56),(88, 89, 90), 3 ),
		polygon ((56, 57, 54),(90, 91, 88), 3 ),
		polygon ((53, 58, 59),(87, 92, 93), 3 ),
		polygon ((53, 52, 58),(87, 86, 92), 3 ),
		polygon ((60, 61, 62),(94, 95, 96), 3 ),
		polygon ((62, 63, 60),(96, 97, 94), 3 ),
		polygon ((54, 62, 61),(88, 96, 95), 3 ),
		polygon ((61, 55, 54),(95, 89, 88), 3 ),
		polygon ((64, 65, 66),(98, 99, 100), 3 ),
		polygon ((66, 67, 64),(100, 101, 98), 3 ),
		polygon ((66, 65, 68),(100, 99, 102), 3 ),
		polygon ((68, 65, 69),(102, 99, 103), 3 ),
		polygon ((70, 71, 72),(104, 105, 106), 3 ),
		polygon ((72, 73, 70),(106, 107, 104), 3 ),
		polygon ((74, 75, 69),(108, 109, 103), 3 ),
		polygon ((75, 68, 69),(109, 102, 103), 3 ),
		polygon ((76, 77, 78),(110, 111, 112), 3 ),
		polygon ((78, 79, 76),(112, 113, 110), 3 ),
		polygon ((77, 76, 72),(111, 110, 106), 3 ),
		polygon ((72, 71, 77),(106, 105, 111), 3 ),
		polygon ((80, 81, 82),(114, 115, 116), 4 ),
		polygon ((80, 82, 83),(114, 116, 117), 4 ),
		polygon ((84, 85, 86),(118, 119, 120), 4 ),
		polygon ((87, 84, 86),(121, 118, 120), 4 ),
		polygon ((88, 89, 90),(122, 123, 124), 2 ),
		polygon ((90, 91, 88),(124, 125, 122), 2 ),
		polygon ((92, 93, 94),(126, 127, 128), 2 ),
		polygon ((94, 95, 92),(128, 129, 126), 2 ),
		polygon ((96, 97, 98),(130, 131, 132), 2 ),
		polygon ((99, 96, 98),(133, 130, 132), 2 ),
		polygon ((100, 101, 102),(134, 135, 136), 2 ),
		polygon ((100, 102, 103),(134, 136, 137), 2 ),
		polygon ((104, 105, 106),(138, 139, 140), 5 ),
		polygon ((106, 107, 104),(140, 141, 138), 5 ),
		polygon ((106, 108, 109),(140, 142, 143), 5 ),
		polygon ((107, 106, 109),(141, 140, 143), 5 ),
		polygon ((110, 111, 105),(144, 145, 139), 5 ),
		polygon ((105, 104, 110),(139, 138, 144), 5 ),
		polygon ((109, 108, 111),(143, 142, 145), 5 ),
		polygon ((109, 111, 110),(143, 145, 144), 5 ),
		polygon ((112, 109, 110),(146, 143, 144), 5 ),
		polygon ((110, 113, 112),(144, 147, 146), 5 ),
		polygon ((110, 104, 113),(144, 138, 147), 5 ),
		polygon ((104, 114, 113),(138, 148, 147), 5 ),
		polygon ((104, 107, 114),(138, 141, 148), 5 ),
		polygon ((107, 115, 114),(141, 149, 148), 5 ),
		polygon ((107, 109, 112),(141, 143, 146), 5 ),
		polygon ((112, 115, 107),(146, 149, 141), 5 ),
		polygon ((116, 117, 118),(150, 151, 152), 5 ),
		polygon ((118, 119, 116),(152, 153, 150), 5 ),
		polygon ((120, 121, 117),(154, 155, 151), 5 ),
		polygon ((117, 116, 120),(151, 150, 154), 5 ),
		polygon ((120, 122, 123),(154, 156, 157), 5 ),
		polygon ((123, 121, 120),(157, 155, 154), 5 ),
		polygon ((122, 119, 118),(156, 153, 152), 5 ),
		polygon ((118, 123, 122),(152, 157, 156), 5 ),
		polygon ((124, 125, 126),(158, 159, 160), 5 ),
		polygon ((126, 127, 124),(160, 161, 158), 5 ),
		polygon ((128, 129, 124),(162, 163, 158), 5 ),
		polygon ((128, 124, 127),(162, 158, 161), 5 ),
		polygon ((125, 130, 131),(159, 164, 165), 5 ),
		polygon ((131, 126, 125),(165, 160, 159), 5 ),
		polygon ((130, 129, 128),(164, 163, 162), 5 ),
		polygon ((131, 130, 128),(165, 164, 162), 5 ),
		polygon ((131, 128, 132),(165, 162, 166), 5 ),
		polygon ((132, 133, 131),(166, 167, 165), 5 ),
		polygon ((133, 126, 131),(167, 160, 165), 5 ),
		polygon ((133, 134, 126),(167, 168, 160), 5 ),
		polygon ((134, 127, 126),(168, 161, 160), 5 ),
		polygon ((134, 135, 127),(168, 169, 161), 5 ),
		polygon ((132, 128, 127),(166, 162, 161), 5 ),
		polygon ((127, 135, 132),(161, 169, 166), 5 ),
		polygon ((136, 137, 138),(170, 171, 172), 5 ),
		polygon ((138, 139, 136),(172, 173, 170), 5 ),
		polygon ((137, 140, 141),(171, 174, 175), 5 ),
		polygon ((141, 138, 137),(175, 172, 171), 5 ),
		polygon ((142, 143, 141),(176, 177, 175), 5 ),
		polygon ((141, 140, 142),(175, 174, 176), 5 ),
		polygon ((136, 139, 143),(170, 173, 177), 5 ),
		polygon ((143, 142, 136),(177, 176, 170), 5 ),
		polygon ((144, 145, 146),(178, 181, 182), 6 ),
		polygon ((146, 147, 144),(182, 183, 178), 6 ),
		polygon ((148, 149, 145),(186, 190, 181), 6 ),
		polygon ((145, 144, 148),(181, 178, 186), 6 ),
		polygon ((149, 150, 151),(190, 191, 192), 6 ),
		polygon ((151, 152, 149),(192, 193, 190), 6 ),
		polygon ((149, 148, 153),(190, 186, 194), 6 ),
		polygon ((153, 150, 149),(194, 191, 190), 6 ),
		polygon ((153, 148, 154),(195, 187, 197), 6 ),
		polygon ((154, 155, 153),(197, 198, 196), 6 ),
		polygon ((156, 157, 158),(199, 200, 201), 6 ),
		polygon ((158, 159, 156),(201, 202, 199), 6 ),
		polygon ((157, 156, 160),(200, 199, 203), 6 ),
		polygon ((160, 161, 157),(203, 204, 200), 6 ),
		polygon ((161, 160, 162),(204, 203, 205), 6 ),
		polygon ((162, 163, 161),(205, 206, 204), 6 ),
		polygon ((162, 160, 164),(205, 203, 207), 6 ),
		polygon ((164, 165, 162),(207, 208, 205), 6 ),
		polygon ((160, 156, 166),(203, 199, 209), 6 ),
		polygon ((164, 160, 166),(207, 203, 209), 6 ),
		polygon ((167, 168, 161),(210, 212, 204), 6 ),
		polygon ((161, 163, 167),(204, 206, 210), 6 ),
		polygon ((161, 168, 169),(204, 212, 216), 6 ),
		polygon ((169, 157, 161),(216, 200, 204), 6 ),
		polygon ((165, 164, 168),(208, 207, 213), 6 ),
		polygon ((168, 167, 165),(214, 211, 208), 6 ),
		polygon ((164, 166, 169),(207, 209, 217), 6 ),
		polygon ((169, 168, 164),(218, 215, 207), 6 ),
		polygon ((166, 170, 171),(209, 221, 222), 6 ),
		polygon ((171, 169, 166),(222, 219, 209), 6 ),
		polygon ((156, 159, 170),(199, 202, 221), 6 ),
		polygon ((170, 166, 156),(221, 209, 199), 6 ),
		polygon ((171, 158, 157),(223, 201, 200), 6 ),
		polygon ((157, 169, 171),(200, 220, 224), 6 ),
		polygon ((172, 173, 174),(225, 226, 227), 6 ),
		polygon ((174, 175, 172),(227, 228, 225), 6 ),
		polygon ((149, 152, 173),(190, 193, 226), 6 ),
		polygon ((149, 173, 145),(190, 226, 181), 6 ),
		polygon ((145, 173, 172),(181, 226, 225), 6 ),
		polygon ((172, 146, 145),(225, 182, 181), 6 ),
		polygon ((174, 144, 147),(227, 179, 184), 6 ),
		polygon ((147, 175, 174),(185, 228, 227), 6 ),
		polygon ((148, 144, 174),(188, 180, 227), 6 ),
		polygon ((174, 154, 148),(227, 197, 189), 6 ),
		polygon ((155, 154, 152),(198, 197, 193), 6 ),
		polygon ((152, 151, 155),(193, 192, 198), 6 ),
		polygon ((173, 152, 154),(226, 193, 197), 6 ),
		polygon ((154, 174, 173),(197, 227, 226), 6 ),
		polygon ((176, 177, 178),(229, 230, 231), 2 ),
		polygon ((179, 177, 176),(232, 230, 229), 2 ),
		polygon ((180, 181, 178),(236, 237, 231), 2 ),
		polygon ((182, 178, 179),(238, 231, 233), 2 ),
		polygon ((183, 178, 181),(239, 231, 237), 2 ),
		polygon ((181, 184, 183),(237, 242, 239), 2 ),
		polygon ((178, 177, 180),(231, 230, 236), 2 ),
		polygon ((178, 182, 176),(231, 238, 229), 2 ),
		polygon ((176, 185, 179),(229, 244, 234), 2 ),
		polygon ((179, 185, 182),(235, 245, 238), 2 ),
		polygon ((183, 184, 180),(240, 243, 236), 2 ),
		polygon ((180, 177, 183),(236, 230, 241), 2 ),
		polygon ((186, 187, 188),(246, 248, 249), 2 ),
		polygon ((189, 190, 191),(250, 251, 252), 2 ),
		polygon ((187, 186, 192),(248, 247, 253), 2 ),
		polygon ((192, 193, 187),(253, 255, 248), 2 ),
		polygon ((194, 193, 192),(256, 255, 254), 2 ),
		polygon ((195, 190, 189),(257, 251, 250), 2 ),
		polygon ((191, 190, 195),(252, 251, 257), 2 ),
		polygon ((191, 196, 189),(252, 258, 250), 2 ),
		polygon ((187, 193, 194),(248, 255, 256), 2 ),
		polygon ((197, 189, 196),(259, 250, 258), 2 ),
		polygon ((194, 188, 187),(256, 249, 248), 2 ),
		polygon ((189, 197, 195),(250, 259, 257), 2 ),
		polygon ((198, 199, 200),(260, 262, 263), 2 ),
		polygon ((200, 201, 198),(263, 264, 260), 2 ),
		polygon ((202, 203, 204),(270, 273, 274), 2 ),
		polygon ((204, 205, 202),(274, 275, 270), 2 ),
		polygon ((202, 205, 206),(270, 275, 276), 2 ),
		polygon ((206, 200, 202),(276, 263, 270), 2 ),
		polygon ((207, 204, 203),(277, 274, 273), 2 ),
		polygon ((207, 203, 201),(277, 273, 265), 2 ),
		polygon ((206, 207, 201),(276, 278, 266), 2 ),
		polygon ((206, 201, 200),(276, 267, 263), 2 ),
		polygon ((208, 198, 201),(279, 261, 268), 2 ),
		polygon ((201, 203, 208),(269, 273, 279), 2 ),
		polygon ((209, 210, 211),(280, 281, 283), 2 ),
		polygon ((211, 212, 209),(283, 288, 280), 2 ),
		polygon ((213, 214, 209),(289, 290, 280), 2 ),
		polygon ((209, 212, 213),(280, 288, 289), 2 ),
		polygon ((215, 216, 214),(291, 292, 290), 2 ),
		polygon ((214, 213, 215),(290, 289, 291), 2 ),
		polygon ((211, 210, 216),(284, 282, 292), 2 ),
		polygon ((216, 215, 211),(292, 291, 285), 2 ),
		polygon ((212, 213),(288, 289), 2 ),
		polygon ((212),(288), 2 ),
		polygon ((212),(288), 2 ),
		polygon ((211, 212),(286, 288), 2 ),
		polygon ((215, 211),(291, 287), 2 ),
		polygon ((215),(291), 2 ),
		polygon ((213, 215),(289, 291), 2 ),
		polygon ((213),(289), 2 ),
		polygon ((217, 208, 203),(293, 279, 273), 2 ),
		polygon ((203, 202, 217),(273, 271, 293), 2 ),
		polygon ((200, 199, 217),(263, 262, 294), 2 ),
		polygon ((217, 202, 200),(295, 272, 263), 2 ),
		polygon ((0, 1, 2),(0, 1, 2), 2 ),
		polygon ((3, 4, 5),(3, 6, 10), 2 ),
		polygon ((6, 7, 3),(13, 14, 4), 2 )
	)
); /* end of polyset 'GoalStand2' */

polyset BackBoard2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (BackPad ),
	shader = (seal ),
	shader = (METAL4 ),
	shader = (TARGET ),
	casts_shadow = TRUE,
	vertices = ((cv((7.020258, 2.303167, 0.627439), 1)),
			(cv((7.020258, 2.303167, 0.685076), 1)),
			(cv((7.020421, 1.875089, 0.684449), 1)),
			(cv((7.020421, 1.935375, 0.627439), 1)),
			(cv((7.020178, 1.875089, -0.682247), 1)),
			(cv((7.020178, 1.935375, -0.62524), 1)),
			(cv((7.020258, 2.303167, -0.684502), 1)),
			(cv((7.020258, 2.303167, -0.62524), 1)),
			(cv((7.083992, 1.935375, -0.62524), 1)),
			(cv((7.083992, 2.303167, -0.62524), 1)),
			(cv((7.083992, 2.303167, -0.684502), 1)),
			(cv((7.083992, 1.875089, -0.682247), 1)),
			(cv((7.083992, 1.875089, 0.684449), 1)),
			(cv((7.083992, 2.303167, 0.685076), 1)),
			(cv((7.083992, 2.303167, 0.627439), 1)),
			(cv((7.083992, 1.935375, 0.627439), 1)),
			(cv((7.031176, 2.303167, -0.658633), 1)),
			(cv((7.031176, 2.303167, -0.62524), 1)),
			(cv((7.020258, 2.303167, -0.62524), 1)),
			(cv((7.020258, 2.303167, -0.684502), 1)),
			(cv((7.083992, 2.303167, -0.684502), 1)),
			(cv((7.0725, 2.303167, -0.658633), 1)),
			(cv((7.083992, 2.303167, -0.62524), 1)),
			(cv((7.0725, 2.303167, -0.62524), 1)),
			(cv((7.031176, 2.303167, 0.659206), 1)),
			(cv((7.020258, 2.303167, 0.685076), 1)),
			(cv((7.020258, 2.303167, 0.627439), 1)),
			(cv((7.031176, 2.303167, 0.627439), 1)),
			(cv((7.0725, 2.303167, 0.659206), 1)),
			(cv((7.0725, 2.303167, 0.627439), 1)),
			(cv((7.083992, 2.303167, 0.627439), 1)),
			(cv((7.083992, 2.303167, 0.685076), 1)),
			(cv((7.020258, 2.303167, -0.684502), 1)),
			(cv((7.020178, 1.875089, -0.682247), 1)),
			(cv((7.083992, 1.875089, -0.682247), 1)),
			(cv((7.083992, 2.303167, -0.684502), 1)),
			(cv((7.083992, 2.303167, 0.685076), 1)),
			(cv((7.083992, 1.875089, 0.684449), 1)),
			(cv((7.020421, 1.875089, 0.684449), 1)),
			(cv((7.020258, 2.303167, 0.685076), 1)),
			(cv((7.020421, 1.875089, 0.684449), 1)),
			(cv((7.083992, 1.875089, 0.684449), 1)),
			(cv((7.083992, 1.875089, -0.682247), 1)),
			(cv((7.020178, 1.875089, -0.682247), 1)),
			(cv((7.083992, 1.935375, -0.62524), 1)),
			(cv((7.083992, 1.935375, 0.627439), 1)),
			(cv((7.072522, 1.935375, 0.627439), 1)),
			(cv((7.072489, 1.935375, -0.62524), 1)),
			(cv((7.020178, 1.935375, -0.62524), 1)),
			(cv((7.031107, 1.935375, -0.62524), 1)),
			(cv((7.031318, 1.935375, 0.627439), 1)),
			(cv((7.020421, 1.935375, 0.627439), 1)),
			(cv((7.020258, 2.303167, -0.62524), 1)),
			(cv((7.031176, 2.303167, -0.62524), 1)),
			(cv((7.031176, 2.303167, 0.627439), 1)),
			(cv((7.020258, 2.303167, 0.627439), 1)),
			(cv((7.083992, 2.303167, -0.62524), 1)),
			(cv((7.0725, 2.303167, -0.62524), 1)),
			(cv((7.083992, 2.303167, 0.627439), 1)),
			(cv((7.0725, 2.303167, 0.627439), 1)),
			(cv((7.07237, 2.640209, -0.596734), 1)),
			(cv((7.031255, 2.640209, -0.596734), 1)),
			(cv((7.031255, 2.640209, 0.596734), 1)),
			(cv((7.07237, 2.640209, 0.596734), 1)),
			(cv((7.07237, 1.963646, 0.596731), 1)),
			(cv((7.031255, 1.963646, 0.596731), 1)),
			(cv((7.031255, 1.963646, -0.596734), 1)),
			(cv((7.07237, 1.963646, -0.596734), 1)),
			(cv((7.07237, 1.963646, -0.596734), 1)),
			(cv((7.07237, 2.640209, -0.596734), 1)),
			(cv((7.07237, 2.702078, -0.658603), 1)),
			(cv((7.07237, 1.901778, -0.658603), 1)),
			(cv((7.07237, 2.640209, 0.596734), 1)),
			(cv((7.07237, 1.963646, 0.596731), 1)),
			(cv((7.07237, 1.901778, 0.6586), 1)),
			(cv((7.07237, 2.702078, 0.658603), 1)),
			(cv((7.031255, 1.901778, 0.6586), 1)),
			(cv((7.031255, 1.901778, -0.658603), 1)),
			(cv((7.031255, 1.963646, -0.596734), 1)),
			(cv((7.031255, 2.702078, -0.658603), 1)),
			(cv((7.031255, 2.640209, -0.596734), 1)),
			(cv((7.031255, 2.640209, 0.596734), 1)),
			(cv((7.031255, 2.702078, 0.658603), 1)),
			(cv((7.031255, 1.963646, 0.596731), 1)),
			(cv((7.053053, 2.256895, -0.162836), 1)),
			(cv((7.053053, 2.29313, -0.19919), 1)),
			(cv((7.053053, 2.031447, -0.162836), 1)),
			(cv((7.050059, 2.031447, -0.162836), 1)),
			(cv((7.050059, 2.031447, 0.162956), 1)),
			(cv((7.050059, 1.995232, 0.19919), 1)),
			(cv((7.053053, 1.995232, 0.19919), 1)),
			(cv((7.053053, 2.031447, 0.162956), 1)),
			(cv((7.050059, 1.995232, -0.19919), 1)),
			(cv((7.050059, 2.29313, -0.19919), 1)),
			(cv((7.050059, 2.256895, 0.162956), 1)),
			(cv((7.050059, 2.29313, 0.19919), 1)),
			(cv((7.053053, 1.995232, -0.19919), 1)),
			(cv((7.050059, 2.256895, -0.162836), 1)),
			(cv((7.053053, 2.256895, 0.162956), 1)),
			(cv((7.053053, 2.29313, 0.19919), 1))	),
	texture_vertices = (
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.500000 ),
			st( 0.750000, 0.500000 ),
			st( 0.750000, 1.000000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 1.000000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 1.000000 ),
			st( 0.750000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.500000 ),
			st( 0.750000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 1.000000 ),
			st( 0.250000, 1.000000 ),
			st( 0.839876, 0.745397 ),
			st( 0.839876, 0.495397 ),
			st( 0.889876, 0.495397 ),
			st( 0.889876, 0.995397 ),
			st( 0.389876, 0.995397 ),
			st( 0.439876, 0.745397 ),
			st( 0.389876, 0.495397 ),
			st( 0.439876, 0.495397 ),
			st( 0.422934, 0.738492 ),
			st( 0.372934, 0.988492 ),
			st( 0.372934, 0.488492 ),
			st( 0.422934, 0.488492 ),
			st( 0.822934, 0.738492 ),
			st( 0.822934, 0.488492 ),
			st( 0.872934, 0.488492 ),
			st( 0.872934, 0.988492 ),
			st( 1.000000, 0.000000 ),
			st( 0.750000, 0.000000 ),
			st( 0.750000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.000000 ),
			st( 0.250000, 0.000000 ),
			st( 0.250000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.250000, 0.000000 ),
			st( 0.250000, 0.500000 ),
			st( 0.750000, 0.500000 ),
			st( 0.750000, 0.000000 ),
			st( 0.000000, 0.900000 ),
			st( 1.000000, 0.100000 ),
			st( 1.000000, 0.900000 ),
			st( 0.000000, 0.900000 ),
			st( 0.000000, 0.100000 ),
			st( 0.000000, 0.900000 ),
			st( 1.000000, 0.900000 ),
			st( 1.000000, 0.900000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.900000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.900000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.010265, 0.513449 ),
			st( 0.006843, 0.559621 ),
			st( 0.006843, 0.559621 ),
			st( 0.989735, 0.521597 ),
			st( 0.993157, 0.516165 ),
			st( 0.993157, 0.005954 ),
			st( 0.991446, 0.008670 ),
			st( 0.991446, 0.008670 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.010265, 0.005954 ),
			st( 0.001711, 0.008670 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.006843, 0.524313 ),
			st( 0.008554, 0.535177 ),
			st( 0.006843, 0.524313 ),
			st( 0.008554, 0.535177 ),
			st( 0.991446, 0.521597 ),
			st( 0.996578, 0.540609 ),
			st( 0.991446, 0.011386 ),
			st( 0.993157, 0.011386 ),
			st( 0.993157, 0.011386 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.010265, 0.014102 ),
			st( 0.010265, 0.016818 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 1.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((3, 2, 4),(3, 2, 4), 0 ),
		polygon ((4, 5, 3),(4, 5, 3), 0 ),
		polygon ((5, 4, 6),(5, 4, 6), 0 ),
		polygon ((6, 7, 5),(6, 7, 5), 0 ),
		polygon ((8, 9, 10),(8, 9, 10), 0 ),
		polygon ((10, 11, 8),(10, 11, 8), 0 ),
		polygon ((12, 13, 14),(12, 13, 14), 0 ),
		polygon ((14, 15, 12),(14, 15, 12), 0 ),
		polygon ((8, 11, 12),(8, 11, 12), 0 ),
		polygon ((12, 15, 8),(12, 15, 8), 0 ),
		polygon ((16, 17, 18),(16, 17, 18), 0 ),
		polygon ((18, 19, 16),(18, 19, 16), 0 ),
		polygon ((16, 19, 20),(16, 19, 20), 0 ),
		polygon ((20, 21, 16),(20, 21, 16), 0 ),
		polygon ((21, 20, 22),(21, 20, 22), 0 ),
		polygon ((22, 23, 21),(22, 23, 21), 0 ),
		polygon ((24, 25, 26),(24, 25, 26), 0 ),
		polygon ((26, 27, 24),(26, 27, 24), 0 ),
		polygon ((28, 29, 30),(28, 29, 30), 0 ),
		polygon ((30, 31, 28),(30, 31, 28), 0 ),
		polygon ((28, 31, 25),(28, 31, 25), 0 ),
		polygon ((25, 24, 28),(25, 24, 28), 0 ),
		polygon ((32, 33, 34),(32, 33, 34), 0 ),
		polygon ((34, 35, 32),(34, 35, 32), 0 ),
		polygon ((36, 37, 38),(36, 37, 38), 0 ),
		polygon ((38, 39, 36),(38, 39, 36), 0 ),
		polygon ((40, 41, 42),(40, 41, 42), 0 ),
		polygon ((42, 43, 40),(42, 43, 40), 0 ),
		polygon ((44, 45, 46),(44, 45, 46), 0 ),
		polygon ((46, 47, 44),(46, 47, 44), 0 ),
		polygon ((48, 49, 50),(48, 49, 50), 0 ),
		polygon ((50, 51, 48),(50, 51, 48), 0 ),
		polygon ((49, 48, 52),(49, 48, 52), 0 ),
		polygon ((52, 53, 49),(52, 53, 49), 0 ),
		polygon ((54, 55, 51),(54, 55, 51), 0 ),
		polygon ((51, 50, 54),(51, 50, 54), 0 ),
		polygon ((56, 44, 47),(56, 44, 47), 0 ),
		polygon ((47, 57, 56),(47, 57, 56), 0 ),
		polygon ((45, 58, 59),(45, 58, 59), 0 ),
		polygon ((59, 46, 45),(59, 46, 45), 0 ),
		polygon ((60, 61, 62),(60, 61, 62), 1 ),
		polygon ((62, 63, 60),(62, 63, 60), 1 ),
		polygon ((64, 65, 66),(64, 65, 66), 1 ),
		polygon ((64),(64), 1 ),
		polygon ((67, 64, 66),(67, 64, 66), 1 ),
		polygon ((62, 65, 64),(62, 65, 64), 1 ),
		polygon ((67, 66, 61),(67, 66, 61), 1 ),
		polygon ((61, 60, 67),(61, 60, 67), 1 ),
		polygon ((64, 63, 62),(64, 63, 62), 1 ),
		polygon ((66, 67),(66, 67), 1 ),
		polygon ((68, 69, 70),(68, 71, 73), 2 ),
		polygon ((70, 71, 68),(73, 79, 68), 2 ),
		polygon ((72, 73, 74),(85, 89, 91), 2 ),
		polygon ((72, 75, 70),(86, 97, 74), 2 ),
		polygon ((74, 75, 72),(91, 98, 87), 2 ),
		polygon ((70, 69, 72),(75, 72, 88), 2 ),
		polygon ((68, 71, 74),(69, 80, 92), 2 ),
		polygon ((68, 74, 73),(70, 93, 90), 2 ),
		polygon ((76, 77, 78),(101, 102, 103), 2 ),
		polygon ((79, 80, 78),(104, 105, 103), 2 ),
		polygon ((81, 82, 76),(106, 107, 101), 2 ),
		polygon ((83, 76, 78),(108, 101, 103), 2 ),
		polygon ((71, 70, 79),(81, 76, 104), 2 ),
		polygon ((82, 79, 70),(107, 104, 77), 2 ),
		polygon ((79, 77, 71),(104, 102, 82), 2 ),
		polygon ((70, 75, 82),(78, 99, 107), 2 ),
		polygon ((74, 76, 82),(94, 101, 107), 2 ),
		polygon ((76, 74, 71),(101, 95, 83), 2 ),
		polygon ((82, 75, 74),(107, 100, 96), 2 ),
		polygon ((71, 77, 76),(84, 102, 101), 2 ),
		polygon ((76, 83, 81),(101, 108, 106), 2 ),
		polygon ((79, 82, 81),(104, 107, 106), 2 ),
		polygon ((81, 80, 79),(106, 105, 104), 2 ),
		polygon ((78, 77, 79),(103, 102, 104), 2 ),
		polygon ((84, 85, 86),(109, 110, 111), 3 ),
		polygon ((87, 88, 89),(112, 113, 114), 3 ),
		polygon ((90, 91, 86),(115, 116, 111), 3 ),
		polygon ((92, 93, 87),(117, 118, 112), 3 ),
		polygon ((94, 93, 95),(119, 118, 120), 3 ),
		polygon ((86, 96, 90),(111, 121, 115), 3 ),
		polygon ((87, 93, 97),(112, 118, 122), 3 ),
		polygon ((98, 85, 84),(123, 110, 109), 3 ),
		polygon ((99, 98, 91),(124, 123, 116), 3 ),
		polygon ((99, 85, 98),(124, 110, 123), 3 ),
		polygon ((91, 90, 99),(116, 115, 124), 3 ),
		polygon ((97, 93, 94),(122, 118, 119), 3 ),
		polygon ((95, 89, 88),(120, 114, 113), 3 ),
		polygon ((88, 94, 95),(113, 119, 120), 3 ),
		polygon ((89, 92, 87),(114, 117, 112), 3 ),
		polygon ((86, 85, 96),(111, 110, 121), 3 )
	)
); /* end of polyset 'BackBoard2' */

polyset glass2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (GLASS ),
	casts_shadow = TRUE,
	vertices = ((cv((7.051808, 2.640182, -0.596686), 1)),
			(cv((7.051808, 1.963674, -0.596686), 1)),
			(cv((7.051808, 1.963674, 0.596683), 1)),
			(cv((7.051808, 2.640182, 0.596683), 1)),
			(cv((7.05083, 1.963674, 0.596683), 1)),
			(cv((7.05083, 1.963674, -0.596686), 1)),
			(cv((7.05083, 2.640182, -0.596686), 1)),
			(cv((7.05083, 2.640182, 0.596683), 1))	),
	texture_vertices = (
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 0 ),
		polygon ((6, 7, 4),(6, 7, 4), 0 )
	)
); /* end of polyset 'glass2' */

polyset decals2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (NBAdecal ),
	casts_shadow = TRUE,
	vertices = ((cv((7.053612, 1.983608, -0.505139), 1)),
			(cv((7.053612, 2.146186, -0.505139), 1)),
			(cv((7.053612, 2.146186, -0.576603), 1)),
			(cv((7.053612, 1.983608, -0.576603), 1)),
			(cv((7.050256, 1.983608, -0.576436), 1)),
			(cv((7.050256, 2.146186, -0.576436), 1)),
			(cv((7.050256, 2.146186, -0.504972), 1)),
			(cv((7.050256, 1.983608, -0.504972), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 0 ),
		polygon ((6, 7, 4),(6, 7, 4), 0 )
	)
); /* end of polyset 'decals2' */

polyset Rim2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (ORANGE ),
	shader = (HOOP ),
	casts_shadow = TRUE,
	vertices = ((cv((7.040316, 2.001721, 0.0), 1)),
			(cv((6.945086, 2.001721, 0.0), 1)),
			(cv((7.040316, 1.963674, 0.0), 1)),
			(cv((6.945086, 2.001721, 0.040716), 1)),
			(cv((6.945086, 2.001721, -0.036459), 1)),
			(cv((7.040316, 2.001721, -0.036376), 1)),
			(cv((7.040316, 2.001721, 0.040622), 1)),
			(cv((6.945086, 2.001721, -0.036459), 1)),
			(cv((6.928807, 1.98423, -0.036376), 1)),
			(cv((6.945086, 2.001721, 0.040716), 1)),
			(cv((6.902143, 2.001721, -0.114953), 1)),
			(cv((6.890308, 1.98423, -0.103058), 1)),
			(cv((6.928807, 1.98423, 0.040622), 1)),
			(cv((6.823625, 1.98423, -0.141557), 1)),
			(cv((6.823625, 2.019517, -0.141557), 1)),
			(cv((6.890308, 2.019517, -0.103058), 1)),
			(cv((6.928807, 2.019517, -0.036376), 1)),
			(cv((6.928807, 2.019517, 0.040622), 1)),
			(cv((6.890308, 2.019517, 0.107305), 1)),
			(cv((6.890308, 1.98423, 0.107305), 1)),
			(cv((6.823625, 2.019517, 0.145804), 1)),
			(cv((6.823625, 1.98423, 0.145804), 1)),
			(cv((6.679945, 2.019517, -0.103058), 1)),
			(cv((6.746627, 2.019517, -0.141557), 1)),
			(cv((6.746627, 1.98423, -0.141557), 1)),
			(cv((6.746627, 2.019517, 0.145804), 1)),
			(cv((6.746627, 1.98423, 0.145804), 1)),
			(cv((6.679945, 1.98423, 0.107305), 1)),
			(cv((6.679945, 2.019517, 0.107305), 1)),
			(cv((6.641446, 1.98423, 0.040622), 1)),
			(cv((6.641446, 2.019517, 0.040622), 1)),
			(cv((6.641446, 2.019517, -0.036376), 1)),
			(cv((6.641446, 1.98423, -0.036376), 1)),
			(cv((6.679945, 1.98423, -0.103058), 1)),
			(cv((6.827765, 2.001721, -0.157895), 1)),
			(cv((6.74188, 2.001721, -0.157895), 1)),
			(cv((6.667502, 2.001721, -0.114953), 1)),
			(cv((6.624559, 2.001721, -0.040574), 1)),
			(cv((6.624559, 2.001721, 0.045311), 1)),
			(cv((6.667502, 2.001721, 0.119689), 1)),
			(cv((6.74188, 2.001721, 0.162632), 1)),
			(cv((6.827765, 2.001721, 0.162632), 1)),
			(cv((6.902143, 2.001721, 0.119689), 1))	),
	texture_vertices = (
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.500000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.450000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ) ),
	polygons = (
		polygon ((2, 1, 0),(2, 1, 0), 0 ),
		polygon ((3, 4, 5),(3, 4, 5), 0 ),
		polygon ((5, 6, 3),(5, 6, 3), 0 ),
		polygon ((13, 11, 10),(13, 11, 10), 1 ),
		polygon ((7, 8, 9),(7, 8, 9), 1 ),
		polygon ((10, 11, 8),(10, 11, 8), 1 ),
		polygon ((8, 7, 10),(8, 7, 10), 1 ),
		polygon ((9, 8, 12),(9, 8, 12), 1 ),
		polygon ((13, 14, 11),(13, 14, 11), 1 ),
		polygon ((11, 14, 15),(11, 14, 15), 1 ),
		polygon ((15, 8, 11),(15, 8, 11), 1 ),
		polygon ((15, 16, 8),(15, 16, 8), 1 ),
		polygon ((16, 17, 8),(16, 17, 8), 1 ),
		polygon ((8, 17, 12),(8, 17, 12), 1 ),
		polygon ((12, 17, 18),(12, 17, 18), 1 ),
		polygon ((18, 19, 12),(18, 19, 12), 1 ),
		polygon ((19, 18, 20),(19, 18, 20), 1 ),
		polygon ((20, 21, 19),(20, 21, 19), 1 ),
		polygon ((22, 23, 24),(22, 23, 24), 1 ),
		polygon ((25, 21, 20),(25, 21, 20), 1 ),
		polygon ((21, 25, 26),(21, 25, 26), 1 ),
		polygon ((23, 13, 24),(23, 13, 24), 1 ),
		polygon ((23, 14, 13),(23, 14, 13), 1 ),
		polygon ((25, 27, 26),(25, 27, 26), 1 ),
		polygon ((25, 28, 27),(25, 28, 27), 1 ),
		polygon ((27, 28, 29),(27, 28, 29), 1 ),
		polygon ((29, 28, 30),(29, 28, 30), 1 ),
		polygon ((29, 30, 31),(29, 30, 31), 1 ),
		polygon ((31, 32, 29),(31, 32, 29), 1 ),
		polygon ((32, 31, 33),(32, 31, 33), 1 ),
		polygon ((33, 31, 22),(33, 31, 22), 1 ),
		polygon ((22, 24, 33),(22, 24, 33), 1 ),
		polygon ((16, 10, 7),(16, 10, 7), 1 ),
		polygon ((10, 16, 15),(10, 16, 15), 1 ),
		polygon ((10, 15, 14),(10, 15, 14), 1 ),
		polygon ((14, 34, 10),(14, 34, 10), 1 ),
		polygon ((14, 35, 34),(14, 35, 34), 1 ),
		polygon ((35, 14, 23),(35, 14, 23), 1 ),
		polygon ((35, 23, 22),(35, 23, 22), 1 ),
		polygon ((22, 36, 35),(22, 36, 35), 1 ),
		polygon ((22, 37, 36),(22, 37, 36), 1 ),
		polygon ((37, 22, 31),(37, 22, 31), 1 ),
		polygon ((37, 31, 30),(37, 31, 30), 1 ),
		polygon ((30, 38, 37),(30, 38, 37), 1 ),
		polygon ((30, 39, 38),(30, 39, 38), 1 ),
		polygon ((39, 30, 28),(39, 30, 28), 1 ),
		polygon ((39, 28, 25),(39, 28, 25), 1 ),
		polygon ((25, 40, 39),(25, 40, 39), 1 ),
		polygon ((25, 41, 40),(25, 41, 40), 1 ),
		polygon ((41, 25, 20),(41, 25, 20), 1 ),
		polygon ((41, 20, 18),(41, 20, 18), 1 ),
		polygon ((18, 42, 41),(18, 42, 41), 1 ),
		polygon ((18, 9, 42),(18, 9, 42), 1 ),
		polygon ((9, 18, 17),(9, 18, 17), 1 ),
		polygon ((9, 17, 16),(9, 17, 16), 1 ),
		polygon ((16, 7, 9),(16, 7, 9), 1 ),
		polygon ((19, 42, 9),(19, 42, 9), 1 ),
		polygon ((9, 12, 19),(9, 12, 19), 1 ),
		polygon ((19, 41, 42),(19, 41, 42), 1 ),
		polygon ((19, 21, 41),(19, 21, 41), 1 ),
		polygon ((21, 26, 41),(21, 26, 41), 1 ),
		polygon ((40, 41, 26),(40, 41, 26), 1 ),
		polygon ((26, 27, 39),(26, 27, 39), 1 ),
		polygon ((39, 40, 26),(39, 40, 26), 1 ),
		polygon ((39, 27, 29),(39, 27, 29), 1 ),
		polygon ((29, 38, 39),(29, 38, 39), 1 ),
		polygon ((38, 29, 37),(38, 29, 37), 1 ),
		polygon ((37, 29, 32),(37, 29, 32), 1 ),
		polygon ((33, 37, 32),(33, 37, 32), 1 ),
		polygon ((37, 33, 36),(37, 33, 36), 1 ),
		polygon ((35, 33, 24),(35, 33, 24), 1 ),
		polygon ((33, 35, 36),(33, 35, 36), 1 ),
		polygon ((13, 35, 24),(13, 35, 24), 1 ),
		polygon ((35, 13, 34),(35, 13, 34), 1 ),
		polygon ((10, 34, 13),(10, 34, 13), 1 ),
		polygon ((5, 4, 3),(5, 4, 3), 0 ),
		polygon ((3, 6, 5),(3, 6, 5), 0 ),
		polygon ((2, 0, 1),(2, 0, 1), 0 )
	)
); /* end of polyset 'Rim2' */

polyset Net2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (NET ),
	casts_shadow = TRUE,
	vertices = ((cv((6.746627, 1.98423, 0.145804), 1)),
			(cv((6.755274, 1.897591, 0.112759), 1)),
			(cv((6.823625, 1.98423, 0.145804), 1)),
			(cv((6.814592, 1.897591, 0.112863), 1)),
			(cv((6.866014, 1.897591, 0.083294), 1)),
			(cv((6.836276, 1.679607, 0.053273), 1)),
			(cv((6.854999, 1.679607, 0.020845), 1)),
			(cv((6.844407, 1.763866, 0.061612), 1)),
			(cv((6.86621, 1.763866, 0.024001), 1)),
			(cv((6.679945, 1.98423, 0.107305), 1)),
			(cv((6.703956, 1.897591, 0.083011), 1)),
			(cv((6.674387, 1.897591, 0.031589), 1)),
			(cv((6.641446, 1.98423, 0.040622), 1)),
			(cv((6.890308, 1.98423, 0.107305), 1)),
			(cv((6.928807, 1.98423, 0.040622), 1)),
			(cv((6.895762, 1.897591, 0.031975), 1)),
			(cv((6.877181, 1.826143, 0.026789), 1)),
			(cv((6.852515, 1.826143, 0.069512), 1)),
			(cv((6.809792, 1.826143, 0.094178), 1)),
			(cv((6.76046, 1.826143, 0.094178), 1)),
			(cv((6.717738, 1.826143, 0.069512), 1)),
			(cv((6.763248, 1.763866, 0.083207), 1)),
			(cv((6.806721, 1.763866, 0.083282), 1)),
			(cv((6.725638, 1.763866, 0.061404), 1)),
			(cv((6.733976, 1.679607, 0.053273), 1)),
			(cv((6.766404, 1.679607, 0.071996), 1)),
			(cv((6.803849, 1.679607, 0.071996), 1)),
			(cv((6.895866, 1.897591, -0.027342), 1)),
			(cv((6.928807, 1.98423, -0.036376), 1)),
			(cv((6.890308, 1.98423, -0.103058), 1)),
			(cv((6.877181, 1.826143, -0.022543), 1)),
			(cv((6.852515, 1.826143, -0.065265), 1)),
			(cv((6.866297, 1.897591, -0.078765), 1)),
			(cv((6.866286, 1.763866, -0.019472), 1)),
			(cv((6.844615, 1.763866, -0.057158), 1)),
			(cv((6.854999, 1.679607, -0.016599), 1)),
			(cv((6.836276, 1.679607, -0.049027), 1)),
			(cv((6.807004, 1.763866, -0.07896), 1)),
			(cv((6.814978, 1.897591, -0.108513), 1)),
			(cv((6.823625, 1.98423, -0.141557), 1)),
			(cv((6.67449, 1.897591, -0.027729), 1)),
			(cv((6.693072, 1.826143, -0.022543), 1)),
			(cv((6.693072, 1.826143, 0.026789), 1)),
			(cv((6.746627, 1.98423, -0.141557), 1)),
			(cv((6.755661, 1.897591, -0.108616), 1)),
			(cv((6.704239, 1.897591, -0.079047), 1)),
			(cv((6.679945, 1.98423, -0.103058), 1)),
			(cv((6.641446, 1.98423, -0.036376), 1)),
			(cv((6.717738, 1.826143, -0.065265), 1)),
			(cv((6.76046, 1.826143, -0.089931), 1)),
			(cv((6.809792, 1.826143, -0.089931), 1)),
			(cv((6.763531, 1.763866, -0.079036), 1)),
			(cv((6.725845, 1.763866, -0.057365), 1)),
			(cv((6.704043, 1.763866, -0.019755), 1)),
			(cv((6.703967, 1.763866, 0.023718), 1)),
			(cv((6.803849, 1.679607, -0.067749), 1)),
			(cv((6.766404, 1.679607, -0.067749), 1)),
			(cv((6.733976, 1.679607, -0.049027), 1)),
			(cv((6.715254, 1.679607, -0.016599), 1)),
			(cv((6.715254, 1.679607, 0.020845), 1)),
			(cv((6.823625, 1.98423, 0.145804), 1)),
			(cv((6.755274, 1.897591, 0.112759), 1)),
			(cv((6.746627, 1.98423, 0.145804), 1)),
			(cv((6.866014, 1.897591, 0.083294), 1)),
			(cv((6.814592, 1.897591, 0.112863), 1)),
			(cv((6.844407, 1.763866, 0.061612), 1)),
			(cv((6.854999, 1.679607, 0.020845), 1)),
			(cv((6.836276, 1.679607, 0.053273), 1)),
			(cv((6.86621, 1.763866, 0.024001), 1)),
			(cv((6.679945, 1.98423, 0.107305), 1)),
			(cv((6.703956, 1.897591, 0.083011), 1)),
			(cv((6.674387, 1.897591, 0.031589), 1)),
			(cv((6.641446, 1.98423, 0.040622), 1)),
			(cv((6.890308, 1.98423, 0.107305), 1)),
			(cv((6.928807, 1.98423, 0.040622), 1)),
			(cv((6.895762, 1.897591, 0.031975), 1)),
			(cv((6.877181, 1.826143, 0.026789), 1)),
			(cv((6.852515, 1.826143, 0.069512), 1)),
			(cv((6.809792, 1.826143, 0.094178), 1)),
			(cv((6.76046, 1.826143, 0.094178), 1)),
			(cv((6.717738, 1.826143, 0.069512), 1)),
			(cv((6.806721, 1.763866, 0.083282), 1)),
			(cv((6.763248, 1.763866, 0.083207), 1)),
			(cv((6.725638, 1.763866, 0.061404), 1)),
			(cv((6.733976, 1.679607, 0.053273), 1)),
			(cv((6.766404, 1.679607, 0.071996), 1)),
			(cv((6.803849, 1.679607, 0.071996), 1)),
			(cv((6.895866, 1.897591, -0.027342), 1)),
			(cv((6.928807, 1.98423, -0.036376), 1)),
			(cv((6.890308, 1.98423, -0.103058), 1)),
			(cv((6.877181, 1.826143, -0.022543), 1)),
			(cv((6.852515, 1.826143, -0.065265), 1)),
			(cv((6.866297, 1.897591, -0.078765), 1)),
			(cv((6.844615, 1.763866, -0.057158), 1)),
			(cv((6.866286, 1.763866, -0.019472), 1)),
			(cv((6.854999, 1.679607, -0.016599), 1)),
			(cv((6.836276, 1.679607, -0.049027), 1)),
			(cv((6.807004, 1.763866, -0.07896), 1)),
			(cv((6.814978, 1.897591, -0.108513), 1)),
			(cv((6.823625, 1.98423, -0.141557), 1)),
			(cv((6.693072, 1.826143, -0.022543), 1)),
			(cv((6.67449, 1.897591, -0.027729), 1)),
			(cv((6.693072, 1.826143, 0.026789), 1)),
			(cv((6.746627, 1.98423, -0.141557), 1)),
			(cv((6.755661, 1.897591, -0.108616), 1)),
			(cv((6.704239, 1.897591, -0.079047), 1)),
			(cv((6.679945, 1.98423, -0.103058), 1)),
			(cv((6.641446, 1.98423, -0.036376), 1)),
			(cv((6.717738, 1.826143, -0.065265), 1)),
			(cv((6.76046, 1.826143, -0.089931), 1)),
			(cv((6.809792, 1.826143, -0.089931), 1)),
			(cv((6.763531, 1.763866, -0.079036), 1)),
			(cv((6.725845, 1.763866, -0.057365), 1)),
			(cv((6.704043, 1.763866, -0.019755), 1)),
			(cv((6.703967, 1.763866, 0.023718), 1)),
			(cv((6.803849, 1.679607, -0.067749), 1)),
			(cv((6.766404, 1.679607, -0.067749), 1)),
			(cv((6.733976, 1.679607, -0.049027), 1)),
			(cv((6.715254, 1.679607, -0.016599), 1)),
			(cv((6.715254, 1.679607, 0.020845), 1))	),
	texture_vertices = (
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.704342 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.704342 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((3, 4, 2),(3, 4, 2), 0 ),
		polygon ((3, 2, 1),(3, 2, 1), 0 ),
		polygon ((5, 6, 7),(5, 6, 7), 0 ),
		polygon ((8, 7, 6),(8, 7, 6), 0 ),
		polygon ((1, 0, 9),(1, 0, 9), 0 ),
		polygon ((9, 10, 1),(9, 10, 1), 0 ),
		polygon ((9, 11, 10),(9, 11, 10), 0 ),
		polygon ((11, 9, 12),(11, 9, 12), 0 ),
		polygon ((4, 13, 2),(4, 13, 2), 0 ),
		polygon ((4, 14, 13),(4, 14, 13), 0 ),
		polygon ((14, 4, 15),(14, 4, 15), 0 ),
		polygon ((4, 16, 15),(4, 16, 15), 0 ),
		polygon ((16, 4, 17),(16, 4, 17), 0 ),
		polygon ((4, 18, 17),(4, 18, 17), 0 ),
		polygon ((4, 3, 18),(4, 3, 18), 0 ),
		polygon ((18, 1, 19),(18, 1, 19), 0 ),
		polygon ((1, 18, 3),(1, 18, 3), 0 ),
		polygon ((20, 19, 1),(20, 19, 1), 0 ),
		polygon ((20, 1, 10),(20, 1, 10), 0 ),
		polygon ((18, 21, 22),(18, 21, 22), 0 ),
		polygon ((22, 7, 18),(22, 7, 18), 0 ),
		polygon ((17, 18, 7),(17, 18, 7), 0 ),
		polygon ((8, 16, 7),(8, 16, 7), 0 ),
		polygon ((21, 18, 19),(21, 18, 19), 0 ),
		polygon ((21, 20, 23),(21, 20, 23), 0 ),
		polygon ((20, 21, 19),(20, 21, 19), 0 ),
		polygon ((23, 24, 21),(23, 24, 21), 0 ),
		polygon ((24, 25, 21),(24, 25, 21), 0 ),
		polygon ((25, 26, 21),(25, 26, 21), 0 ),
		polygon ((22, 21, 26),(22, 21, 26), 0 ),
		polygon ((7, 22, 26),(7, 22, 26), 0 ),
		polygon ((7, 26, 5),(7, 26, 5), 0 ),
		polygon ((27, 14, 15),(27, 14, 15), 0 ),
		polygon ((28, 14, 27),(28, 14, 27), 0 ),
		polygon ((27, 29, 28),(27, 29, 28), 0 ),
		polygon ((27, 15, 16),(27, 15, 16), 0 ),
		polygon ((30, 27, 16),(30, 27, 16), 0 ),
		polygon ((30, 31, 27),(30, 31, 27), 0 ),
		polygon ((32, 27, 31),(32, 27, 31), 0 ),
		polygon ((31, 33, 34),(31, 33, 34), 0 ),
		polygon ((33, 31, 30),(33, 31, 30), 0 ),
		polygon ((33, 30, 16),(33, 30, 16), 0 ),
		polygon ((8, 33, 16),(8, 33, 16), 0 ),
		polygon ((17, 7, 16),(17, 7, 16), 0 ),
		polygon ((33, 6, 35),(33, 6, 35), 0 ),
		polygon ((6, 33, 8),(6, 33, 8), 0 ),
		polygon ((35, 36, 33),(35, 36, 33), 0 ),
		polygon ((34, 33, 36),(34, 33, 36), 0 ),
		polygon ((37, 34, 36),(37, 34, 36), 0 ),
		polygon ((31, 34, 37),(31, 34, 37), 0 ),
		polygon ((38, 32, 31),(38, 32, 31), 0 ),
		polygon ((39, 29, 38),(39, 29, 38), 0 ),
		polygon ((11, 40, 41),(11, 40, 41), 0 ),
		polygon ((29, 27, 32),(29, 27, 32), 0 ),
		polygon ((38, 29, 32),(38, 29, 32), 0 ),
		polygon ((20, 11, 42),(20, 11, 42), 0 ),
		polygon ((38, 43, 39),(38, 43, 39), 0 ),
		polygon ((43, 38, 44),(43, 38, 44), 0 ),
		polygon ((43, 44, 45),(43, 44, 45), 0 ),
		polygon ((46, 43, 45),(46, 43, 45), 0 ),
		polygon ((40, 47, 45),(40, 47, 45), 0 ),
		polygon ((46, 45, 47),(46, 45, 47), 0 ),
		polygon ((11, 47, 40),(11, 47, 40), 0 ),
		polygon ((12, 47, 11),(12, 47, 11), 0 ),
		polygon ((41, 45, 48),(41, 45, 48), 0 ),
		polygon ((45, 41, 40),(45, 41, 40), 0 ),
		polygon ((49, 48, 45),(49, 48, 45), 0 ),
		polygon ((49, 45, 44),(49, 45, 44), 0 ),
		polygon ((44, 38, 49),(44, 38, 49), 0 ),
		polygon ((50, 49, 38),(50, 49, 38), 0 ),
		polygon ((31, 50, 38),(31, 50, 38), 0 ),
		polygon ((37, 50, 31),(37, 50, 31), 0 ),
		polygon ((37, 49, 50),(37, 49, 50), 0 ),
		polygon ((49, 37, 51),(49, 37, 51), 0 ),
		polygon ((49, 51, 52),(49, 51, 52), 0 ),
		polygon ((48, 49, 52),(48, 49, 52), 0 ),
		polygon ((53, 41, 52),(53, 41, 52), 0 ),
		polygon ((48, 52, 41),(48, 52, 41), 0 ),
		polygon ((53, 54, 41),(53, 54, 41), 0 ),
		polygon ((36, 55, 37),(36, 55, 37), 0 ),
		polygon ((55, 56, 37),(55, 56, 37), 0 ),
		polygon ((51, 37, 56),(51, 37, 56), 0 ),
		polygon ((52, 51, 56),(52, 51, 56), 0 ),
		polygon ((52, 56, 57),(52, 56, 57), 0 ),
		polygon ((52, 58, 53),(52, 58, 53), 0 ),
		polygon ((58, 52, 57),(58, 52, 57), 0 ),
		polygon ((54, 53, 58),(54, 53, 58), 0 ),
		polygon ((58, 59, 54),(58, 59, 54), 0 ),
		polygon ((54, 24, 23),(54, 24, 23), 0 ),
		polygon ((24, 54, 59),(24, 54, 59), 0 ),
		polygon ((20, 54, 23),(20, 54, 23), 0 ),
		polygon ((42, 41, 54),(42, 41, 54), 0 ),
		polygon ((42, 11, 41),(42, 11, 41), 0 ),
		polygon ((11, 20, 10),(11, 20, 10), 0 ),
		polygon ((54, 20, 42),(54, 20, 42), 0 ),
		polygon ((60, 61, 62),(60, 61, 62), 0 ),
		polygon ((60, 63, 64),(60, 63, 64), 0 ),
		polygon ((61, 60, 64),(61, 60, 64), 0 ),
		polygon ((65, 66, 67),(65, 66, 67), 0 ),
		polygon ((66, 65, 68),(66, 65, 68), 0 ),
		polygon ((69, 62, 61),(69, 62, 61), 0 ),
		polygon ((61, 70, 69),(61, 70, 69), 0 ),
		polygon ((70, 71, 69),(70, 71, 69), 0 ),
		polygon ((72, 69, 71),(72, 69, 71), 0 ),
		polygon ((60, 73, 63),(60, 73, 63), 0 ),
		polygon ((73, 74, 63),(73, 74, 63), 0 ),
		polygon ((75, 63, 74),(75, 63, 74), 0 ),
		polygon ((75, 76, 63),(75, 76, 63), 0 ),
		polygon ((77, 63, 76),(77, 63, 76), 0 ),
		polygon ((77, 78, 63),(77, 78, 63), 0 ),
		polygon ((78, 64, 63),(78, 64, 63), 0 ),
		polygon ((79, 61, 78),(79, 61, 78), 0 ),
		polygon ((64, 78, 61),(64, 78, 61), 0 ),
		polygon ((61, 79, 80),(61, 79, 80), 0 ),
		polygon ((70, 61, 80),(70, 61, 80), 0 ),
		polygon ((81, 82, 78),(81, 82, 78), 0 ),
		polygon ((78, 65, 81),(78, 65, 81), 0 ),
		polygon ((65, 78, 77),(65, 78, 77), 0 ),
		polygon ((65, 76, 68),(65, 76, 68), 0 ),
		polygon ((79, 78, 82),(79, 78, 82), 0 ),
		polygon ((83, 80, 82),(83, 80, 82), 0 ),
		polygon ((79, 82, 80),(79, 82, 80), 0 ),
		polygon ((82, 84, 83),(82, 84, 83), 0 ),
		polygon ((82, 85, 84),(82, 85, 84), 0 ),
		polygon ((82, 86, 85),(82, 86, 85), 0 ),
		polygon ((86, 82, 81),(86, 82, 81), 0 ),
		polygon ((86, 81, 65),(86, 81, 65), 0 ),
		polygon ((67, 86, 65),(67, 86, 65), 0 ),
		polygon ((75, 74, 87),(75, 74, 87), 0 ),
		polygon ((87, 74, 88),(87, 74, 88), 0 ),
		polygon ((88, 89, 87),(88, 89, 87), 0 ),
		polygon ((76, 75, 87),(76, 75, 87), 0 ),
		polygon ((76, 87, 90),(76, 87, 90), 0 ),
		polygon ((87, 91, 90),(87, 91, 90), 0 ),
		polygon ((91, 87, 92),(91, 87, 92), 0 ),
		polygon ((93, 94, 91),(93, 94, 91), 0 ),
		polygon ((90, 91, 94),(90, 91, 94), 0 ),
		polygon ((76, 90, 94),(76, 90, 94), 0 ),
		polygon ((76, 94, 68),(76, 94, 68), 0 ),
		polygon ((76, 65, 77),(76, 65, 77), 0 ),
		polygon ((95, 66, 94),(95, 66, 94), 0 ),
		polygon ((68, 94, 66),(68, 94, 66), 0 ),
		polygon ((94, 96, 95),(94, 96, 95), 0 ),
		polygon ((96, 94, 93),(96, 94, 93), 0 ),
		polygon ((96, 93, 97),(96, 93, 97), 0 ),
		polygon ((97, 93, 91),(97, 93, 91), 0 ),
		polygon ((91, 92, 98),(91, 92, 98), 0 ),
		polygon ((98, 89, 99),(98, 89, 99), 0 ),
		polygon ((100, 101, 71),(100, 101, 71), 0 ),
		polygon ((92, 87, 89),(92, 87, 89), 0 ),
		polygon ((92, 89, 98),(92, 89, 98), 0 ),
		polygon ((102, 71, 80),(102, 71, 80), 0 ),
		polygon ((99, 103, 98),(99, 103, 98), 0 ),
		polygon ((104, 98, 103),(104, 98, 103), 0 ),
		polygon ((105, 104, 103),(105, 104, 103), 0 ),
		polygon ((105, 103, 106),(105, 103, 106), 0 ),
		polygon ((105, 107, 101),(105, 107, 101), 0 ),
		polygon ((107, 105, 106),(107, 105, 106), 0 ),
		polygon ((101, 107, 71),(101, 107, 71), 0 ),
		polygon ((71, 107, 72),(71, 107, 72), 0 ),
		polygon ((108, 105, 100),(108, 105, 100), 0 ),
		polygon ((101, 100, 105),(101, 100, 105), 0 ),
		polygon ((105, 108, 109),(105, 108, 109), 0 ),
		polygon ((104, 105, 109),(104, 105, 109), 0 ),
		polygon ((109, 98, 104),(109, 98, 104), 0 ),
		polygon ((98, 109, 110),(98, 109, 110), 0 ),
		polygon ((98, 110, 91),(98, 110, 91), 0 ),
		polygon ((91, 110, 97),(91, 110, 97), 0 ),
		polygon ((110, 109, 97),(110, 109, 97), 0 ),
		polygon ((111, 97, 109),(111, 97, 109), 0 ),
		polygon ((112, 111, 109),(112, 111, 109), 0 ),
		polygon ((112, 109, 108),(112, 109, 108), 0 ),
		polygon ((112, 100, 113),(112, 100, 113), 0 ),
		polygon ((100, 112, 108),(100, 112, 108), 0 ),
		polygon ((100, 114, 113),(100, 114, 113), 0 ),
		polygon ((97, 115, 96),(97, 115, 96), 0 ),
		polygon ((97, 116, 115),(97, 116, 115), 0 ),
		polygon ((116, 97, 111),(116, 97, 111), 0 ),
		polygon ((116, 111, 112),(116, 111, 112), 0 ),
		polygon ((117, 116, 112),(117, 116, 112), 0 ),
		polygon ((113, 118, 112),(113, 118, 112), 0 ),
		polygon ((117, 112, 118),(117, 112, 118), 0 ),
		polygon ((118, 113, 114),(118, 113, 114), 0 ),
		polygon ((114, 119, 118),(114, 119, 118), 0 ),
		polygon ((83, 84, 114),(83, 84, 114), 0 ),
		polygon ((119, 114, 84),(119, 114, 84), 0 ),
		polygon ((83, 114, 80),(83, 114, 80), 0 ),
		polygon ((114, 100, 102),(114, 100, 102), 0 ),
		polygon ((100, 71, 102),(100, 71, 102), 0 ),
		polygon ((70, 80, 71),(70, 80, 71), 0 ),
		polygon ((102, 80, 114),(102, 80, 114), 0 )
	)
); /* end of polyset 'Net2' */

polyset GoalBase2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (cush4 ),
	shader = (WHITEPOST ),
	casts_shadow = TRUE,
	vertices = ((cv((9.01378, 0.883183, -0.201984), 1)),
			(cv((9.01378, 0.883183, 0.198972), 1)),
			(cv((9.01378, 1.31545, 0.198972), 1)),
			(cv((9.01378, 1.31545, -0.201984), 1)),
			(cv((9.01378, 0.399459, -0.402842), 1)),
			(cv((9.01378, 0.399459, 0.39983), 1)),
			(cv((8.814068, 1.31545, 0.0), 1)),
			(cv((8.814068, 1.31545, -0.201984), 1)),
			(cv((8.953828, 1.760046, 0.052033), 1)),
			(cv((9.01378, 1.31545, 0.0), 1)),
			(cv((8.814068, 1.31545, 0.198972), 1)),
			(cv((8.953828, 1.315352, 0.052033), 1)),
			(cv((10.67088, 0.000006, -0.403329), 1)),
			(cv((10.670881, 0.000006, 0.0), 1)),
			(cv((10.67088, 0.39915, 0.0), 1)),
			(cv((10.67088, 0.39915, -0.403329), 1)),
			(cv((10.67088, 0.000006, 0.400317), 1)),
			(cv((10.67088, 0.39915, 0.400317), 1)),
			(cv((8.814068, 0.000006, 0.400317), 1)),
			(cv((8.814068, 0.399459, -0.402842), 1)),
			(cv((8.814068, 0.399459, 0.39983), 1)),
			(cv((8.814068, 0.883183, -0.201984), 1)),
			(cv((8.814068, 0.883183, 0.198972), 1)),
			(cv((8.814068, 0.000006, -0.403329), 1)),
			(cv((8.953828, 1.760046, 0.083855), 1)),
			(cv((9.005686, 1.760046, 0.083855), 1)),
			(cv((8.953828, 1.760046, -0.052047), 1)),
			(cv((9.005686, 1.760046, -0.052047), 1)),
			(cv((9.005686, 1.315352, -0.052047), 1)),
			(cv((8.953828, 1.315352, -0.052047), 1)),
			(cv((9.005686, 1.315352, 0.083855), 1)),
			(cv((8.953828, 1.315352, 0.083855), 1)),
			(cv((8.953828, 1.315352, -0.083869), 1)),
			(cv((9.005686, 1.315352, -0.083869), 1)),
			(cv((8.953828, 1.760046, -0.083869), 1)),
			(cv((9.005686, 1.760046, -0.083869), 1)),
			(cv((9.005686, 1.315352, 0.052033), 1)),
			(cv((9.005686, 1.760046, 0.052033), 1))	),
	texture_vertices = (
			st( 1.000000, 0.500000 ),
			st( 0.961765, 0.682541 ),
			st( 0.961765, 0.682541 ),
			st( 0.961765, 0.682541 ),
			st( 0.571782, 0.731341 ),
			st( 0.571782, 0.731341 ),
			st( 0.570110, 0.731341 ),
			st( 0.500000, 0.500000 ),
			st( 0.726952, 0.683213 ),
			st( 0.726952, 0.683213 ),
			st( 0.726952, 0.683213 ),
			st( 0.574240, 0.700595 ),
			st( 0.574240, 0.700595 ),
			st( 0.500000, 1.000000 ),
			st( 0.726952, 0.997310 ),
			st( 0.726952, 0.997310 ),
			st( 0.574648, 0.996116 ),
			st( 0.574900, 0.997798 ),
			st( 0.574900, 0.997798 ),
			st( 1.000000, 1.000000 ),
			st( 0.964496, 0.997774 ),
			st( 0.574648, 0.996116 ),
			st( 0.574648, 0.996116 ),
			st( 0.570957, 0.999119 ),
			st( 1.000000, 0.000000 ),
			st( 0.964496, 0.345047 ),
			st( 0.964496, 0.345047 ),
			st( 0.570110, 0.355653 ),
			st( 0.570110, 0.355653 ),
			st( 0.560652, 0.364603 ),
			st( 0.500000, 0.000000 ),
			st( 0.725662, 0.345634 ),
			st( 0.561841, 1.000000 ),
			st( 0.561841, 1.000000 ),
			st( 0.571405, 0.364065 ),
			st( 0.571405, 0.364065 ),
			st( 1.000000, 1.000000 ),
			st( 0.704249, 0.871387 ),
			st( 0.704249, 0.871387 ),
			st( 0.704249, 0.871387 ),
			st( 1.000000, 0.000000 ),
			st( 0.704190, 0.996506 ),
			st( 0.699159, 1.000000 ),
			st( 0.699580, 0.999791 ),
			st( 0.699580, 0.999791 ),
			st( 1.000000, 0.250000 ),
			st( 0.790139, 0.147953 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 1.000000 ),
			st( 0.574479, 0.870934 ),
			st( 0.574479, 0.870934 ),
			st( 0.574479, 0.870934 ),
			st( 1.000000, 0.000000 ),
			st( 0.704190, 0.996506 ),
			st( 0.704190, 0.996506 ),
			st( 0.962701, 0.997573 ),
			st( 0.962701, 0.997573 ),
			st( 0.699455, 0.997775 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.005248, 0.002385 ),
			st( 0.005248, 0.002385 ),
			st( 0.002926, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.295500, 0.002385 ),
			st( 0.295500, 0.002385 ),
			st( 0.295500, 0.002385 ),
			st( 0.000000, 1.000000 ),
			st( 0.295500, 0.370420 ),
			st( 0.295500, 0.370420 ),
			st( 0.295500, 0.370420 ),
			st( 1.000000, 1.000000 ),
			st( 0.005248, 0.370420 ),
			st( 0.002926, 0.355494 ),
			st( 0.002926, 0.355494 ),
			st( 0.002228, 0.365902 ),
			st( 0.002228, 0.365902 ),
			st( 1.000000, 0.000000 ),
			st( 0.005248, 0.002385 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.005248, 0.370420 ),
			st( 0.005248, 0.370420 ),
			st( 0.000000, 1.000000 ),
			st( 0.002049, 0.365119 ),
			st( 1.000000, 0.000000 ),
			st( 0.996744, 0.001706 ),
			st( 0.996744, 0.001706 ),
			st( 0.699212, 0.000000 ),
			st( 0.000000, 0.300000 ),
			st( 0.697936, 0.365525 ),
			st( 0.697936, 0.365525 ),
			st( 0.697936, 0.365525 ),
			st( 0.697936, 0.365525 ),
			st( 0.695623, 0.352699 ),
			st( 0.699580, 0.355653 ),
			st( 1.000000, 0.300000 ),
			st( 0.995530, 0.365291 ),
			st( 0.995530, 0.365291 ),
			st( 0.699436, 0.365980 ),
			st( 0.699436, 0.365980 ),
			st( 0.700346, 0.364938 ),
			st( 0.000000, 0.660000 ),
			st( 0.697937, 0.699329 ),
			st( 0.697937, 0.699329 ),
			st( 0.697937, 0.699329 ),
			st( 0.699580, 0.731341 ),
			st( 0.699580, 0.731341 ),
			st( 0.699580, 0.731341 ),
			st( 1.000000, 0.660000 ),
			st( 0.967997, 0.698498 ),
			st( 0.967997, 0.698498 ),
			st( 0.967801, 0.698498 ),
			st( 0.700393, 0.700648 ),
			st( 0.700393, 0.700648 ),
			st( 0.700393, 0.700648 ),
			st( 0.700393, 0.700648 ),
			st( 0.000000, 0.000000 ),
			st( 0.699159, 0.001900 ),
			st( 0.695623, 0.001347 ),
			st( 0.695623, 0.001347 ),
			st( 0.457387, 0.133831 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.455496, 0.647953 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.250000 ),
			st( 0.790139, 0.147953 ),
			st( 0.996219, 0.009542 ),
			st( 0.797702, 0.651839 ),
			st( 0.797702, 0.651839 ),
			st( 1.000000, 1.000000 ),
			st( 0.002832, 0.003999 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.750000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 0.500000 ),
			st( 0.457387, 0.133831 ),
			st( 0.457387, 0.133831 ),
			st( 1.000000, 0.750000 ),
			st( 0.455496, 0.647953 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 0.002832, 0.003999 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.996219, 0.009542 ),
			st( 0.797702, 0.651839 ),
			st( 0.797702, 0.651839 ),
			st( 1.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(1, 8, 14), 0 ),
		polygon ((2, 3, 0),(15, 20, 2), 0 ),
		polygon ((4, 5, 1),(25, 31, 9), 0 ),
		polygon ((1, 0, 4),(10, 3, 26), 0 ),
		polygon ((6, 7, 3),(37, 41, 21), 0 ),
		polygon ((3, 9, 6),(22, 49, 38), 0 ),
		polygon ((10, 6, 9),(53, 39, 50), 0 ),
		polygon ((9, 2, 10),(51, 16, 54), 0 ),
		polygon ((12, 13, 14),(60, 64, 68), 0 ),
		polygon ((14, 15, 12),(69, 72, 61), 0 ),
		polygon ((13, 16, 17),(65, 78, 82), 0 ),
		polygon ((17, 14, 13),(83, 70, 66), 0 ),
		polygon ((18, 19, 20),(87, 91, 98), 0 ),
		polygon ((19, 21, 22),(92, 104, 111), 0 ),
		polygon ((22, 20, 19),(112, 99, 93), 0 ),
		polygon ((23, 19, 18),(119, 94, 88), 0 ),
		polygon ((10, 22, 21),(55, 113, 105), 0 ),
		polygon ((21, 7, 10),(106, 42, 56), 0 ),
		polygon ((23, 12, 15),(120, 62, 73), 0 ),
		polygon ((23, 15, 19),(121, 74, 95), 0 ),
		polygon ((0, 3, 7),(4, 23, 43), 0 ),
		polygon ((7, 21, 0),(44, 107, 5), 0 ),
		polygon ((4, 0, 21),(27, 6, 108), 0 ),
		polygon ((21, 19, 4),(109, 96, 28), 0 ),
		polygon ((5, 4, 15),(32, 29, 75), 0 ),
		polygon ((15, 17, 5),(76, 84, 33), 0 ),
		polygon ((2, 1, 22),(17, 11, 114), 0 ),
		polygon ((22, 10, 2),(115, 57, 18), 0 ),
		polygon ((20, 17, 16),(100, 85, 79), 0 ),
		polygon ((16, 18, 20),(80, 89, 101), 0 ),
		polygon ((22, 1, 5),(116, 12, 34), 0 ),
		polygon ((5, 20, 22),(35, 102, 117), 0 ),
		polygon ((32, 33, 34),(143, 144, 145), 1 ),
		polygon ((33, 35, 34),(144, 148, 145), 1 ),
		polygon ((36, 37, 8),(152, 155, 45), 1 ),
		polygon ((8, 11, 36),(45, 58, 152), 1 ),
		polygon ((24, 8, 37),(122, 46, 156), 1 ),
		polygon ((37, 25, 24),(157, 127, 122), 1 ),
		polygon ((26, 27, 28),(131, 133, 137), 1 ),
		polygon ((28, 29, 26),(137, 140, 131), 1 ),
		polygon ((29, 32, 34),(140, 143, 145), 1 ),
		polygon ((34, 26, 29),(145, 131, 140), 1 ),
		polygon ((25, 37, 36),(128, 158, 153), 1 ),
		polygon ((36, 30, 25),(154, 141, 129), 1 ),
		polygon ((24, 30, 31),(123, 141, 142), 1 ),
		polygon ((24, 25, 30),(124, 130, 141), 1 ),
		polygon ((24, 31, 11),(125, 142, 58), 1 ),
		polygon ((11, 8, 24),(58, 47, 126), 1 ),
		polygon ((27, 26, 34),(134, 132, 146), 1 ),
		polygon ((34, 35, 27),(147, 149, 135), 1 ),
		polygon ((28, 27, 35),(138, 136, 150), 1 ),
		polygon ((35, 33, 28),(151, 144, 139), 1 )
	)
); /* end of polyset 'GoalBase2' */

ENVIRONMENT
background ( 
        color = (0.0, 0.0, 0.0)
);
shader_glow ( 
,
        glow_type =  LINEAR_GLOW,
        halo_type =  LINEAR_GLOW,
        auto_exposure = ON,
        quality = 0.5,
        threshold = 0.0,
        glow_color = (100.0, 100.0, 100.0),
        glow_intensity = 1.0,
        glow_spread = 0.05,
        glow_eccentricity = 0.1,
        glow_radial_noise = 0.0,
        glow_star_level = 0.0,
        glow_opacity = 0.0,
        halo_color = (100.0, 100.0, 100.0),
        halo_intensity = 1.0,
        halo_spread = 0.3,
        halo_eccentricity = 0.1,
        halo_radial_noise = 0.0,
        halo_star_level = 0.0,
        halo_lens_flare = 0.0,
        rotation = 0.0,
        radial_noise_frequency = 0.5,
        star_points = 4.0
);
photo_effects ( 
,
        film_grain = 0.0,
        filter = (255.0, 255.0, 255.0)
);
master_light ( 
,
        intensity = 1.0,
        light_color = (255.0, 255.0, 255.0)
);
dynamics ( 
,
        gravity = 1.0,
        air_density = 0.05,
        Floor = ON,
        floor_offset = 0.0,
        ceiling = OFF,
        ceiling_offset = 20.0,
        left = OFF,
        left_offset = -10.0,
        right = OFF,
        right_offset = 10.0,
        front = OFF,
        front_offset = -10.0,
        back = OFF,
        back_offset = 10.0,
        wall_friction = 0.0,
        wall_elasticity = 0.707,
        turbulence_intensity = 0.0,
        turbulence_spread = 0.5,
        turbulence_persistence = 5.0,
        turbulence_animated = ON,
        turbulence_space_resolution =  16,
        turbulence_time_resolution =  16,
        turbulence_roughness = 0.5,
        turbulence_variability = 0.5,
        turbulence_granularity = 0.0
);

MODEL
/* Only expression assignments should appear above this line and below the MODEL directive. */
/* Placing any other commands in the above section will produce incorrect expression behaviour. */
{
	{
		trn_ro(-9.541987, 0.399368, 0.0);
		trn_ri(9.541987, -0.399368, 0.0);
		trn_so(-9.541987, 0.399368, 0.0);
		trn_si(9.541987, -0.399368, 0.0);
		instance GoalStand();
	}
	{
		trn_ro(-7.082234, 2.032373, 0.0);
		trn_ri(7.082234, -2.032373, 0.0);
		trn_so(-7.082235, 2.032373, 0.0);
		trn_si(7.082235, -2.032373, 0.0);
		instance BackBoard();
	}
	{
		trn_ro(-7.050829, 1.963674, 0.0);
		trn_ri(7.050829, -1.963674, 0.0);
		trn_so(-7.050829, 1.963674, 0.0);
		trn_si(7.050829, -1.963674, 0.0);
		instance glass();
	}
	{
		trn_ro(-7.052008, 2.064185, 0.54089);
		trn_ri(7.052008, -2.064185, -0.54089);
		trn_so(-7.052008, 2.064185, 0.54089);
		trn_si(7.052008, -2.064185, -0.54089);
		instance decals();
	}
	{
		trn_ro(-7.040316, 2.001721, 0.0);
		trn_ri(7.040316, -2.001721, 0.0);
		trn_so(-7.040316, 2.001721, 0.0);
		trn_si(7.040316, -2.001721, 0.0);
		instance Rim();
	}
	{
		trn_ro(-8.741407, 0.0, 0.0);
		trn_ri(8.741407, 0.0, 0.0);
		trn_so(-8.741408, 0.0, 0.0);
		trn_si(8.741408, 0.0, 0.0);
		instance Net();
	}
	{
		instance GoalBase();
	}
}
{
	{
		trn_ro(9.541987, 0.399368, -0.000001);
		trn_ri(-9.541987, -0.399368, 0.000001);
		trn_so(9.541987, 0.399368, -0.000001);
		trn_si(-9.541987, -0.399368, 0.000001);
		instance GoalStand2();
	}
	{
		trn_ro(7.082234, 2.032373, -0.000001);
		trn_ri(-7.082234, -2.032373, 0.000001);
		trn_so(7.082235, 2.032373, -0.000001);
		trn_si(-7.082235, -2.032373, 0.000001);
		instance BackBoard2();
	}
	{
		trn_ro(7.050829, 1.963674, -0.000001);
		trn_ri(-7.050829, -1.963674, 0.000001);
		trn_so(7.050829, 1.963674, -0.000001);
		trn_si(-7.050829, -1.963674, 0.000001);
		instance glass2();
	}
	{
		trn_ro(7.052008, 2.064185, -0.540891);
		trn_ri(-7.052008, -2.064185, 0.540891);
		trn_so(7.052008, 2.064185, -0.540891);
		trn_si(-7.052008, -2.064185, 0.540891);
		instance decals2();
	}
	{
		trn_ro(7.040316, 2.001721, -0.000001);
		trn_ri(-7.040316, -2.001721, 0.000001);
		trn_so(7.040316, 2.001721, -0.000001);
		trn_si(-7.040316, -2.001721, 0.000001);
		instance Rim2();
	}
	{
		trn_ro(8.741407, 0.0, -0.000001);
		trn_ri(-8.741407, 0.0, 0.000001);
		trn_so(8.741408, 0.0, -0.000001);
		trn_si(-8.741408, 0.0, 0.000001);
		instance Net2();
	}
	{
		instance GoalBase2();
	}
}
{
	{
		trn(11.846187, 6.362023, -11.993906);
		camera (
			perspective = TRUE,
			eye   = ( 0.0,  0.0,  0.0),
			active = ON,
			pix   = "pix/GOALS.sdl",
			view  = Camera_view,
			up  = Camera_up,
			aov = 55.0,
			filmaperture_x = 0.4,
			filmaperture_y = 0.285,
			filmoffset_x = 0.0,
			filmoffset_y = 0.0,
			placement_fit_code = 0,
			placement_shift = 0.0,
			aspect   = pixel_aspect,
			aspect_ratio_pixel = pixel_aspect,
			near = 0.1,
			far = 200.0,
			depth_of_field = 0.0,
			scaling_factor = 1.0,
			f_stop = 3.5,
			focal_distance = 12.0,
			auto_focus = OFF,
			motion_blur = 0.0
		);
	}
	{
		trn(9.83891, 5.035243, -9.054045);
		Camera_view = current_position( (0, 0, 0) );
	}
	{
		trn(11.649249, 7.299057, -11.705487);
		Camera_up = current_position( (0, 0, 0) );
	}
}

