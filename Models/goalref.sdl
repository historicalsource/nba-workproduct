DEFINITION	/* ALIAS SDL File Version 8.5 */
			/* Apparently from wire file '/matt/mgilmore/user_data/NBAonNBC/wire/Nets/GoalRef13b'. */
	version = 8.5;

	xleft  = 0;
	xright = 639;
	ylow   = 0;
	yhigh  = 479;
	resolution = 640 480;
	aalevelmin   = 0;
	aalevelmax   = 4;
	aathreshold  = 0.7;
	post_filter   = OFF;
	post_center   = 8;    /* Values for a bartlet filter. */
	post_adjacent = 1;
	post_diagonal = 1;

	composite_rendering = OFF;
	invisible_objects_cast_shadows = OFF;
	image_format = TIFF;
	jitter       = ON;
	reduced_samples = OFF;
	textures_active    = ON;

	clamp_bumpsize = 0.0;

	up = yaxis;

	motion_blur_on = OFF;
	shutter_angle  = 144.0;
	animation  = OFF;
	startframe = 0.0;
	endframe = 0.0;
	fields          = FALSE;
	odd             = FALSE;
	even            = FALSE;
	odd_field_first = TRUE;

	triple Camera#2_view(0.0, 0.0, 0.0);
	triple Camera#2_up(0.0, 0.0, 0.0);
	triple Camera_view(0.0, 0.0, 0.0);
	triple Camera_up(0.0, 0.0, 0.0);

	subdivision_recursion_limit = 2;
	grid_cache = 4000;
	bbox_memory = FULL;
	rt_voxel_res_type = AUTOMATIC;

	max_reflections             = 10;
	max_refractions             = 10;
	max_shadow_level            = 10;
	preview_ray_trace           = OFF;

	scalar pixel_aspect ( 1.0 );
	hline_to_fill_color  = FALSE;
	hline_fill_color     = (255.0, 255.0, 255.0);
	hline_line_color     = (0.0, 255.0, 255.0);
	hline_isoparam_u     = 0;
	hline_isoparam_v     = 0;

	show_particles       = TRUE;
	simulation_substeps  = 1;
	simulation_frames_per_second = 30;


texture File#2 (
        procedure = file,
        rgbout = (18.497383, 0.0, 255.0),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/atlcush.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.05814,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = OFF,
        vwrap = OFF,
        invert = OFF
);

shader cush4 ( model = lambert,
        diffuse = 0.8,
        color = File#2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture WHITEPOSTtexture (
        procedure = file,
        rgbout = (241.787567, 249.559586, 255.0),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/whitpost.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader WHITEPOST ( model = lambert,
        diffuse = 0.8,
        color = WHITEPOSTtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture NETtexture5 (
        procedure = file,
        rgbout = (133.048538, 136.964493, 151.943008),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/seal.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = -0.01,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader seal ( model = lambert,
        diffuse = 0.8,
        color = NETtexture5,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture NETtexture#6 (
        procedure = file,
        rgbout = (151.943008, 143.597137, 99.983223),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/metal4.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = -0.01,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader METAL4 ( model = lambert,
        diffuse = 0.8,
        color = NETtexture#6,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture NETtexture2 (
        procedure = file,
        rgbout = (130.618286, 133.159958, 140.051819),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/backpad.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader BackPad ( model = lambert,
        diffuse = 0.8,
        color = NETtexture2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture TARGETtexture (
        procedure = file,
        rgbout = (255.0, 254.555023, 248.393784),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/target.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader TARGET ( model = lambert,
        diffuse = 0.8,
        color = TARGETtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture GLASStexture (
        procedure = file,
        rgbout = (0.0, 55.813946, 94.88372),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/glass.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader GLASS ( model = lambert,
        diffuse = 0.8,
        color = GLASStexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (201.627914, 201.627914, 201.627914),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture nbalog (
        procedure = file,
        rgbout = (0.0, 150.0, 255.0),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/NBAlog.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = OFF,
        vwrap = OFF,
        invert = OFF
);

shader NBAdecal ( model = lambert,
        diffuse = 0.8,
        color = nbalog,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture ORANGEtexture (
        procedure = file,
        rgbout = (255.0, 71.347153, 0.0),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/bracket.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader ORANGE ( model = lambert,
        diffuse = 0.8,
        color = ORANGEtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture HOOPtexture (
        procedure = file,
        rgbout = (255.0, 71.347153, 0.0),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/hoop.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader HOOP ( model = lambert,
        diffuse = 0.8,
        color = HOOPtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture NETtexture (
        procedure = file,
        rgbout = (151.943008, 143.597137, 99.983223),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/net.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = -0.01,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader NET ( model = lambert,
        diffuse = 0.8,
        color = NETtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture backreffile (
        procedure = file,
        rgbout = (18.497383, 0.0, 255.0),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/backrefl.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.05814,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = OFF,
        vwrap = OFF,
        invert = OFF
);

shader backrefshader ( model = lambert,
        diffuse = 0.8,
        color = backreffile,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture gbasreflfile (
        procedure = file,
        rgbout = (18.497383, 0.0, 255.0),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/atlgref.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.05814,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = OFF,
        vwrap = OFF,
        invert = OFF
);

shader gbasreflshader ( model = lambert,
        diffuse = 0.8,
        color = gbasreflfile,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture texturefile (
        procedure = file,
        rgbout = (18.497383, 0.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/gpstrefl.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.05814,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = OFF,
        vwrap = OFF,
        invert = OFF
);

shader postref ( model = lambert,
        diffuse = 0.8,
        color = texturefile,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

polyset goalrefl2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (backrefshader ),
	shader = (gbasreflshader ),
	shader = (postref ),
	casts_shadow = TRUE,
	vertices = ((cv((7.711383, -0.605009, 0.731887), 1)),
			(cv((7.711383, -1.66042, 0.731887), 1)),
			(cv((7.711383, -1.66042, -0.726548), 1)),
			(cv((7.711383, -0.605009, -0.726548), 1)),
			(cv((9.490394, -0.399205, 0.397834), 1)),
			(cv((9.490393, 0.000006, 0.397834), 1)),
			(cv((11.354652, 0.000006, 0.397834), 1)),
			(cv((11.354652, -0.399205, 0.397834), 1)),
			(cv((9.490394, -0.399205, -0.406408), 1)),
			(cv((11.354652, -0.399205, -0.406408), 1)),
			(cv((11.354652, 0.000006, -0.406408), 1)),
			(cv((9.490393, 0.000006, -0.406408), 1)),
			(cv((9.490394, -0.861057, -0.408459), 1)),
			(cv((9.490394, 0.000006, -0.406408), 1)),
			(cv((9.490393, 0.000006, 0.397834), 1)),
			(cv((9.490394, -0.86109, 0.39747), 1)),
			(cv((8.766973, -0.763225, -0.003062), 1)),
			(cv((8.848504, -0.86925, 0.05258), 1)),
			(cv((8.848504, -0.86925, -0.058703), 1)),
			(cv((9.488991, -0.693803, -0.058703), 1)),
			(cv((8.848504, -0.86925, 0.05258), 1)),
			(cv((7.714811, -0.869129, 0.710212), 1)),
			(cv((7.714758, -0.86925, 0.598938), 1)),
			(cv((9.491064, -0.572911, -0.058703), 1)),
			(cv((8.848504, -0.763245, -0.058703), 1)),
			(cv((7.71485, -0.86925, -0.71592), 1)),
			(cv((8.849451, -0.763225, -0.059829), 1)),
			(cv((8.849451, -0.763225, 0.053706), 1)),
			(cv((9.491064, -0.572911, 0.05258), 1)),
			(cv((8.848504, -0.763245, 0.05258), 1)),
			(cv((9.488991, -0.693803, 0.05258), 1)),
			(cv((8.848504, -0.763245, -0.058703), 1)),
			(cv((8.848504, -0.86925, -0.058703), 1)),
			(cv((7.71485, -0.763128, -0.71592), 1)),
			(cv((7.714798, -0.763128, -0.605168), 1)),
			(cv((8.848504, -0.763245, 0.05258), 1)),
			(cv((7.714811, -0.763128, 0.710212), 1)),
			(cv((7.714758, -0.763245, 0.598938), 1)),
			(cv((7.714798, -0.86925, -0.605168), 1))	),
	texture_vertices = (
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.652110, 0.417260 ),
			st( 0.653365, 0.018069 ),
			st( 0.004561, 0.018069 ),
			st( 0.004561, 0.417260 ),
			st( 0.661232, 0.382549 ),
			st( 0.000000, 0.387066 ),
			st( 0.000000, 0.009035 ),
			st( 0.662487, 0.009035 ),
			st( 0.665179, 0.990594 ),
			st( 0.665179, 0.000000 ),
			st( 0.982590, 0.009406 ),
			st( 0.981007, 0.987459 ),
			st( 0.989735, 0.515183 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.250000 ),
			st( 0.995775, 0.003926 ),
			st( 1.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.989163, 0.745393 ),
			st( 0.993157, 0.989136 ),
			st( 0.993157, 0.989136 ),
			st( 0.393147, 0.732797 ),
			st( 0.993157, 0.752716 ),
			st( 1.000000, 0.750000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 0.500000 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 1.000000 ),
			st( 0.995775, 0.003926 ),
			st( 1.000000, 0.750000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 1.000000 ),
			st( 0.995775, 0.003926 ),
			st( 1.000000, 0.500000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 1 ),
		polygon ((6, 7, 4),(6, 7, 4), 1 ),
		polygon ((8, 9, 10),(8, 9, 10), 1 ),
		polygon ((10, 11, 8),(10, 11, 8), 1 ),
		polygon ((12, 13, 14),(12, 13, 14), 1 ),
		polygon ((14, 15, 12),(14, 15, 12), 1 ),
		polygon ((16),(16), 2 ),
		polygon ((16),(16), 2 ),
		polygon ((16, 26),(16, 32), 2 ),
		polygon ((38, 34, 29),(52, 47, 38), 2 ),
		polygon ((18, 19, 23),(18, 19, 23), 2 ),
		polygon ((25, 18, 24),(31, 18, 25), 2 ),
		polygon ((26),(33), 2 ),
		polygon ((27, 16),(35, 16), 2 ),
		polygon ((17, 29, 28),(17, 38, 37), 2 ),
		polygon ((28, 30, 17),(37, 39, 17), 2 ),
		polygon ((22, 32, 31),(22, 44, 40), 2 ),
		polygon ((26, 27),(34, 36), 2 ),
		polygon ((33, 24, 29),(45, 26, 38), 2 ),
		polygon ((24, 18, 23),(27, 18, 23), 2 ),
		polygon ((29, 34, 33),(38, 47, 45), 2 ),
		polygon ((21, 36, 35),(21, 49, 48), 2 ),
		polygon ((24, 33, 25),(28, 46, 31), 2 ),
		polygon ((35, 20, 21),(48, 20, 21), 2 ),
		polygon ((29, 24, 28),(38, 29, 37), 2 ),
		polygon ((36, 37, 31),(49, 50, 41), 2 ),
		polygon ((29, 17, 38),(38, 17, 52), 2 ),
		polygon ((31, 35, 36),(42, 48, 49), 2 ),
		polygon ((31, 37, 22),(43, 51, 22), 2 ),
		polygon ((24, 23, 28),(30, 24, 37), 2 )
	)
); /* end of polyset 'goalrefl2' */

polyset goalrefl1 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (backrefshader ),
	shader = (gbasreflshader ),
	shader = (postref ),
	casts_shadow = TRUE,
	vertices = ((cv((-7.711422, -0.605009, -0.734967), 1)),
			(cv((-7.711422, -1.66042, -0.734967), 1)),
			(cv((-7.711422, -1.66042, 0.723469), 1)),
			(cv((-7.711422, -0.605009, 0.723469), 1)),
			(cv((-9.490433, -0.399205, -0.400913), 1)),
			(cv((-9.490433, 0.000006, -0.400913), 1)),
			(cv((-11.354692, 0.000006, -0.400913), 1)),
			(cv((-11.354692, -0.399205, -0.400913), 1)),
			(cv((-9.490433, -0.399205, 0.403329), 1)),
			(cv((-11.354692, -0.399205, 0.403329), 1)),
			(cv((-11.354692, 0.000006, 0.403329), 1)),
			(cv((-9.490433, 0.000006, 0.403329), 1)),
			(cv((-9.490433, -0.861057, 0.405379), 1)),
			(cv((-9.490433, 0.000006, 0.403329), 1)),
			(cv((-9.490433, 0.000006, -0.400913), 1)),
			(cv((-9.490433, -0.86109, -0.400549), 1)),
			(cv((-8.767013, -0.763225, -0.000018), 1)),
			(cv((-8.848544, -0.86925, -0.055659), 1)),
			(cv((-8.848544, -0.86925, 0.055624), 1)),
			(cv((-9.48903, -0.693803, 0.055624), 1)),
			(cv((-8.848544, -0.86925, -0.055659), 1)),
			(cv((-7.714851, -0.869129, -0.713291), 1)),
			(cv((-7.714798, -0.86925, -0.602017), 1)),
			(cv((-9.491103, -0.572911, 0.055624), 1)),
			(cv((-8.848544, -0.763245, 0.055624), 1)),
			(cv((-7.71489, -0.86925, 0.71284), 1)),
			(cv((-8.84949, -0.763225, 0.05675), 1)),
			(cv((-8.84949, -0.763225, -0.056785), 1)),
			(cv((-9.491103, -0.572911, -0.055659), 1)),
			(cv((-8.848544, -0.763245, -0.055659), 1)),
			(cv((-9.48903, -0.693803, -0.055659), 1)),
			(cv((-8.848544, -0.763245, 0.055624), 1)),
			(cv((-8.848544, -0.86925, 0.055624), 1)),
			(cv((-7.71489, -0.763128, 0.71284), 1)),
			(cv((-7.714837, -0.763128, 0.602088), 1)),
			(cv((-8.848544, -0.763245, -0.055659), 1)),
			(cv((-7.714851, -0.763128, -0.713291), 1)),
			(cv((-7.714798, -0.763245, -0.602017), 1)),
			(cv((-7.714837, -0.86925, 0.602088), 1))	),
	texture_vertices = (
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.652110, 0.417260 ),
			st( 0.653365, 0.018069 ),
			st( 0.004561, 0.018069 ),
			st( 0.004561, 0.417260 ),
			st( 0.661232, 0.382549 ),
			st( 0.000000, 0.387066 ),
			st( 0.000000, 0.009035 ),
			st( 0.662487, 0.009035 ),
			st( 0.665179, 0.990594 ),
			st( 0.665179, 0.000000 ),
			st( 0.982590, 0.009406 ),
			st( 0.981007, 0.987459 ),
			st( 0.989735, 0.515183 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.250000 ),
			st( 0.995775, 0.003926 ),
			st( 1.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.989163, 0.745393 ),
			st( 0.993157, 0.989136 ),
			st( 0.993157, 0.989136 ),
			st( 0.393147, 0.732797 ),
			st( 0.993157, 0.752716 ),
			st( 1.000000, 0.750000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 0.500000 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 1.000000 ),
			st( 0.995775, 0.003926 ),
			st( 1.000000, 0.750000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 1.000000 ),
			st( 0.995775, 0.003926 ),
			st( 1.000000, 0.500000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 1 ),
		polygon ((6, 7, 4),(6, 7, 4), 1 ),
		polygon ((8, 9, 10),(8, 9, 10), 1 ),
		polygon ((10, 11, 8),(10, 11, 8), 1 ),
		polygon ((12, 13, 14),(12, 13, 14), 1 ),
		polygon ((14, 15, 12),(14, 15, 12), 1 ),
		polygon ((16),(16), 2 ),
		polygon ((16),(16), 2 ),
		polygon ((16, 26),(16, 32), 2 ),
		polygon ((38, 34, 29),(52, 47, 38), 2 ),
		polygon ((18, 19, 23),(18, 19, 23), 2 ),
		polygon ((25, 18, 24),(31, 18, 25), 2 ),
		polygon ((26),(33), 2 ),
		polygon ((27, 16),(35, 16), 2 ),
		polygon ((17, 29, 28),(17, 38, 37), 2 ),
		polygon ((28, 30, 17),(37, 39, 17), 2 ),
		polygon ((22, 32, 31),(22, 44, 40), 2 ),
		polygon ((26, 27),(34, 36), 2 ),
		polygon ((33, 24, 29),(45, 26, 38), 2 ),
		polygon ((24, 18, 23),(27, 18, 23), 2 ),
		polygon ((29, 34, 33),(38, 47, 45), 2 ),
		polygon ((21, 36, 35),(21, 49, 48), 2 ),
		polygon ((24, 33, 25),(28, 46, 31), 2 ),
		polygon ((35, 20, 21),(48, 20, 21), 2 ),
		polygon ((29, 24, 28),(38, 29, 37), 2 ),
		polygon ((36, 37, 31),(49, 50, 41), 2 ),
		polygon ((29, 17, 38),(38, 17, 52), 2 ),
		polygon ((31, 35, 36),(42, 48, 49), 2 ),
		polygon ((31, 37, 22),(43, 51, 22), 2 ),
		polygon ((24, 23, 28),(30, 24, 37), 2 )
	)
); /* end of polyset 'goalrefl1' */

ENVIRONMENT
background ( 
        color = (0.0, 0.0, 0.0)
);
shader_glow ( 
,
        glow_type =  LINEAR_GLOW,
        halo_type =  LINEAR_GLOW,
        auto_exposure = ON,
        quality = 0.5,
        threshold = 0.0,
        glow_color = (100.0, 100.0, 100.0),
        glow_intensity = 1.0,
        glow_spread = 0.05,
        glow_eccentricity = 0.1,
        glow_radial_noise = 0.0,
        glow_star_level = 0.0,
        glow_opacity = 0.0,
        halo_color = (100.0, 100.0, 100.0),
        halo_intensity = 1.0,
        halo_spread = 0.3,
        halo_eccentricity = 0.1,
        halo_radial_noise = 0.0,
        halo_star_level = 0.0,
        halo_lens_flare = 0.0,
        rotation = 0.0,
        radial_noise_frequency = 0.5,
        star_points = 4.0
);
photo_effects ( 
,
        film_grain = 0.0,
        filter = (255.0, 255.0, 255.0)
);
master_light ( 
,
        intensity = 1.0,
        light_color = (255.0, 255.0, 255.0)
);
dynamics ( 
,
        gravity = 1.0,
        air_density = 0.05,
        Floor = ON,
        floor_offset = 0.0,
        ceiling = OFF,
        ceiling_offset = 20.0,
        left = OFF,
        left_offset = -10.0,
        right = OFF,
        right_offset = 10.0,
        front = OFF,
        front_offset = -10.0,
        back = OFF,
        back_offset = 10.0,
        wall_friction = 0.0,
        wall_elasticity = 0.707,
        turbulence_intensity = 0.0,
        turbulence_spread = 0.5,
        turbulence_persistence = 5.0,
        turbulence_animated = ON,
        turbulence_space_resolution =  16,
        turbulence_time_resolution =  16,
        turbulence_roughness = 0.5,
        turbulence_variability = 0.5,
        turbulence_granularity = 0.0
);

MODEL
/* Only expression assignments should appear above this line and below the MODEL directive. */
/* Placing any other commands in the above section will produce incorrect expression behaviour. */
{
	trn_ro(9.490394, 0.000006, -0.406408);
	trn_ri(-9.490394, -0.000006, 0.406408);
	trn_so(9.490394, 0.000006, -0.406408);
	trn_si(-9.490394, -0.000006, 0.406408);
	instance goalrefl2();
}
{
	trn_ro(-9.490433, 0.000006, 0.403329);
	trn_ri(9.490433, -0.000006, -0.403329);
	trn_so(-9.490433, 0.000006, 0.403329);
	trn_si(9.490433, -0.000006, -0.403329);
	instance goalrefl1();
}
{
	{
		trn(8.379226, 2.275477, 4.08881);
		camera (
			perspective = TRUE,
			eye   = ( 0.0,  0.0,  0.0),
			active = ON,
			pix   = "pix/goalref.sdl",
			view  = Camera#2_view,
			up  = Camera#2_up,
			aov = 55.0,
			filmaperture_x = 0.4,
			filmaperture_y = 0.285,
			filmoffset_x = 0.0,
			filmoffset_y = 0.0,
			placement_fit_code = 0,
			placement_shift = 0.0,
			aspect   = pixel_aspect,
			aspect_ratio_pixel = pixel_aspect,
			near = 0.1,
			far = 200.0,
			depth_of_field = 0.0,
			scaling_factor = 1.0,
			f_stop = 3.5,
			focal_distance = 12.0,
			auto_focus = OFF,
			motion_blur = 0.0
		);
	}
	{
		trn(10.06647, -1.042059, -4.417605);
		Camera#2_view = current_position( (0, 0, 0) );
	}
	{
		trn(8.448742, 3.209467, 3.738339);
		Camera#2_up = current_position( (0, 0, 0) );
	}
}
{
	{
		trn(4.800518, 3.456828, 3.02819);
		camera (
			perspective = TRUE,
			eye   = ( 0.0,  0.0,  0.0),
			active = ON,
			pix   = "pix/goalref.sdl_Camera",
			view  = Camera_view,
			up  = Camera_up,
			aov = 55.0,
			filmaperture_x = 0.4,
			filmaperture_y = 0.285,
			filmoffset_x = 0.0,
			filmoffset_y = 0.0,
			placement_fit_code = 0,
			placement_shift = 0.0,
			aspect   = pixel_aspect,
			aspect_ratio_pixel = pixel_aspect,
			near = 0.1,
			far = 200.0,
			depth_of_field = 0.0,
			scaling_factor = 1.0,
			f_stop = 3.5,
			focal_distance = 12.0,
			auto_focus = OFF,
			motion_blur = 0.0
		);
	}
	{
		trn(6.080639, 2.774873, 1.603672);
		Camera_view = current_position( (0, 0, 0) );
	}
	{
		trn(5.024731, 4.398885, 2.778686);
		Camera_up = current_position( (0, 0, 0) );
	}
}

