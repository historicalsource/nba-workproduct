DEFINITION	/* ALIAS SDL File Version 8.5 */
			/* Apparently from wire file '/matt/mgilmore/user_data/NBAonNBC/wire/BALLS/BALLscaled5'. */
	version = 8.5;

	xleft  = 0;
	xright = 644;
	ylow   = 0;
	yhigh  = 485;
	resolution = 645 486;
	aalevelmin   = 3;
	aalevelmax   = 12;
	aathreshold  = 0.6;
	post_filter   = OFF;
	post_center   = 8;    /* Values for a bartlet filter. */
	post_adjacent = 1;
	post_diagonal = 1;

	composite_rendering = OFF;
	invisible_objects_cast_shadows = OFF;
	image_format = ALIAS;
	jitter       = ON;
	reduced_samples = OFF;
	textures_active    = ON;

	clamp_bumpsize = 0.0;

	up = yaxis;

	motion_blur_on = OFF;
	shutter_angle  = 144.0;
	animation  = OFF;
	startframe = 0.0;
	endframe = 0.0;
	fields          = FALSE;
	odd             = FALSE;
	even            = FALSE;
	odd_field_first = TRUE;

	triple Camera_view(0.0, 0.0, 0.0);
	triple Camera_up(0.0, 0.0, 0.0);

	subdivision_recursion_limit = 2;
	grid_cache = 4000;
	bbox_memory = FULL;
	rt_voxel_res_type = AUTOMATIC;

	max_reflections             = 10;
	max_refractions             = 10;
	max_shadow_level            = 10;
	preview_ray_trace           = OFF;

	scalar pixel_aspect ( 1.0 );
	hline_to_fill_color  = FALSE;
	hline_fill_color     = (255.0, 255.0, 255.0);
	hline_line_color     = (0.0, 255.0, 255.0);
	hline_isoparam_u     = 0;
	hline_isoparam_v     = 0;

	show_particles       = TRUE;
	simulation_substeps  = 1;
	simulation_frames_per_second = 30;

xform     Projection_tform#2;
triple Lightview(0.0, 0.0, 0.0);
triple Lightup(0.0, 0.0, 0.0);

light Light ( model = ambient,
	active = ON,
	exclusive = FALSE,
	light_emission = ON,
	color = (255.0, 255.0, 255.0),
	shadow_color = (0.0, 0.0, 0.0),
	intensity = 1.0,
	force_type = OFF,
	force_intensity = 1.0,
	warp = OFF,
	glow_type = OFF,
	halo_type = OFF,
	fog_type = OFF,
	flare = OFF,
	psys_emission = OFF,
	shadow = FALSE,
	soft_shadows = FALSE,
	light_radius = 1.0,
	shadow_samples = 2.0,
	use_shadow_map = 0.0,
	ambient_shade = 0.0
);

texture shadowfile (
        procedure = file,
        rgbout = (0.0, 150.0, 255.0),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/Bball_A.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader Shadow ( model = lambert,
        diffuse = 0.8,
        color = shadowfile,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture balltexture (
        procedure = file,
        rgbout = (0.0, 150.0, 255.0),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/Bball_1.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader Bball ( model = lambert,
        diffuse = 0.8,
        color = balltexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture Projection (
        procedure = Projection,
        xform_name = Projection_tform#2,
        rgbout = (0.0, 150.0, 255.0),
        active = ON,
        sfile_type =  PLANAR,
        xamplitude = 0.0,
        yamplitude = 0.0,
        ratio = 0.3,
        level_min = 0.0,
        level_max = 10.0,
        xripples = 1.0,
        yripples = 1.0,
        zripples = 1.0,
        stagger = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        wrap = ON,
        blend = 0.0,
        invert = OFF
);

shader projector ( model = lambert,
        diffuse = 0.8,
        color = Projection,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture specular_flie (
        procedure = file,
        rgbout = (0.0, 150.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/bballhlt.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader Ball_Spec ( model = lambert,
        diffuse = 0.8,
        color = specular_flie,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

polyset ballshade (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (Shadow ),
	casts_shadow = TRUE,
	vertices = ((cv((0.0, -0.085219, 0.0), 1)),
			(cv((-0.000114, -0.078642, -0.032574), 1)),
			(cv((0.072467, -0.032574, -0.030313), 1)),
			(cv((-0.00021, -0.060259, -0.060259), 1)),
			(cv((-0.023228, -0.060259, -0.055527), 1)),
			(cv((0.032574, -0.078642, -0.000114), 1)),
			(cv((-0.023114, -0.078642, -0.022953), 1)),
			(cv((-0.042758, -0.060259, -0.042461), 1)),
			(cv((-0.000275, -0.032574, -0.078641), 1)),
			(cv((-0.030313, -0.032574, -0.072467), 1)),
			(cv((-0.000297, 0.0, -0.085219), 1)),
			(cv((-0.032849, 0.0, -0.078528), 1)),
			(cv((-0.055802, -0.032574, -0.055414), 1)),
			(cv((-0.060469, 0.0, -0.060049), 1)),
			(cv((0.042461, -0.060259, -0.042758), 1)),
			(cv((0.000275, -0.032574, 0.078641), 1)),
			(cv((0.000297, 0.0, 0.085219), 1)),
			(cv((0.060469, 0.0, 0.060049), 1)),
			(cv((0.055802, -0.032574, 0.055414), 1)),
			(cv((0.078528, 0.0, -0.032849), 1)),
			(cv((0.055527, -0.060259, -0.023228), 1)),
			(cv((0.032849, 0.0, 0.078528), 1)),
			(cv((0.042758, -0.060259, 0.042461), 1)),
			(cv((0.0323, 0.0, -0.078755), 1)),
			(cv((0.029807, -0.032574, -0.072676), 1)),
			(cv((0.060259, -0.060259, -0.00021), 1)),
			(cv((0.072676, -0.032574, 0.029807), 1)),
			(cv((-0.055688, -0.060259, -0.022839), 1)),
			(cv((0.078755, 0.0, 0.0323), 1)),
			(cv((-0.032574, -0.078642, 0.000114), 1)),
			(cv((-0.060259, -0.060259, 0.00021), 1)),
			(cv((-0.072676, -0.032574, -0.029807), 1)),
			(cv((-0.078755, 0.0, -0.0323), 1)),
			(cv((-0.078641, -0.032574, 0.000275), 1)),
			(cv((-0.085219, 0.0, 0.000298), 1)),
			(cv((0.023228, -0.060259, 0.055527), 1)),
			(cv((0.055414, -0.032574, -0.055802), 1)),
			(cv((-0.022839, -0.060259, 0.055688), 1)),
			(cv((0.000114, -0.078642, 0.032574), 1)),
			(cv((0.023114, -0.078642, 0.022953), 1)),
			(cv((0.022953, -0.078642, -0.023114), 1)),
			(cv((0.055688, -0.060259, 0.022839), 1)),
			(cv((0.030313, -0.032574, 0.072467), 1)),
			(cv((0.078641, -0.032574, -0.000274), 1)),
			(cv((0.085219, 0.0, -0.000297), 1)),
			(cv((-0.055527, -0.060259, 0.023228), 1)),
			(cv((0.022839, -0.060259, -0.055688), 1)),
			(cv((-0.022953, -0.078642, 0.023114), 1)),
			(cv((-0.042461, -0.060259, 0.042758), 1)),
			(cv((-0.072467, -0.032574, 0.030313), 1)),
			(cv((-0.078528, 0.0, 0.032849), 1)),
			(cv((-0.055414, -0.032574, 0.055802), 1)),
			(cv((-0.060049, 0.0, 0.060469), 1)),
			(cv((0.00021, -0.060259, 0.060259), 1)),
			(cv((-0.0323, 0.0, 0.078755), 1)),
			(cv((-0.029807, -0.032574, 0.072676), 1)),
			(cv((0.060049, 0.0, -0.060469), 1))	),
	texture_vertices = (
			st( 0.493457, 0.023288 ),
			st( 0.493775, 0.097040 ),
			st( 0.088393, 0.613572 ),
			st( 0.494045, 0.303156 ),
			st( 0.622656, 0.303156 ),
			st( 0.311509, 0.097040 ),
			st( 0.622339, 0.097040 ),
			st( 0.731874, 0.303156 ),
			st( 0.494224, 0.613572 ),
			st( 0.662069, 0.613572 ),
			st( 0.494288, 0.978815 ),
			st( 0.676172, 0.978815 ),
			st( 0.804605, 0.613572 ),
			st( 0.830629, 0.978815 ),
			st( 0.255872, 0.303156 ),
			st( 0.492691, 0.613572 ),
			st( 0.492627, 0.978815 ),
			st( 0.156286, 0.978815 ),
			st( 0.182310, 0.613572 ),
			st( 0.054513, 0.978815 ),
			st( 0.183077, 0.303156 ),
			st( 0.310742, 0.978815 ),
			st( 0.255041, 0.303156 ),
			st( 0.312276, 0.978815 ),
			st( 0.326260, 0.613572 ),
			st( 0.156873, 0.303156 ),
			st( 0.087806, 0.613572 ),
			st( 0.804287, 0.303156 ),
			st( 0.053878, 0.978815 ),
			st( 0.675406, 0.097040 ),
			st( 0.830041, 0.303156 ),
			st( 0.899108, 0.613572 ),
			st( 0.933037, 0.978815 ),
			st( 0.932719, 0.613572 ),
			st( 0.969459, 0.978815 ),
			st( 0.364258, 0.303156 ),
			st( 0.183394, 0.613572 ),
			st( 0.621572, 0.303156 ),
			st( 0.493140, 0.097040 ),
			st( 0.364576, 0.097040 ),
			st( 0.365025, 0.097040 ),
			st( 0.182628, 0.303156 ),
			st( 0.324845, 0.613572 ),
			st( 0.054195, 0.613572 ),
			st( 0.017455, 0.978815 ),
			st( 0.803838, 0.303156 ),
			st( 0.365343, 0.303156 ),
			st( 0.621890, 0.097040 ),
			st( 0.731043, 0.303156 ),
			st( 0.898522, 0.613572 ),
			st( 0.932402, 0.978815 ),
			st( 0.803520, 0.613572 ),
			st( 0.829454, 0.978815 ),
			st( 0.492870, 0.303156 ),
			st( 0.674639, 0.978815 ),
			st( 0.660655, 0.613572 ),
			st( 0.157461, 0.978815 ) ),
	polygons = (
		polygon ((24, 36, 23),(24, 36, 23), 0 ),
		polygon ((5, 25, 20),(5, 25, 20), 0 ),
		polygon ((1, 3, 4),(1, 3, 4), 0 ),
		polygon ((0, 1, 6),(0, 1, 6), 0 ),
		polygon ((1, 4, 6),(1, 4, 6), 0 ),
		polygon ((6, 4, 7),(6, 4, 7), 0 ),
		polygon ((3, 8, 4),(3, 8, 4), 0 ),
		polygon ((4, 8, 9),(4, 8, 9), 0 ),
		polygon ((10, 11, 8),(10, 11, 8), 0 ),
		polygon ((9, 8, 11),(9, 8, 11), 0 ),
		polygon ((9, 12, 4),(9, 12, 4), 0 ),
		polygon ((7, 4, 12),(7, 4, 12), 0 ),
		polygon ((9, 11, 12),(9, 11, 12), 0 ),
		polygon ((12, 11, 13),(12, 11, 13), 0 ),
		polygon ((10, 11),(10, 11), 0 ),
		polygon ((11),(11), 0 ),
		polygon ((21),(21), 0 ),
		polygon ((25, 43, 20),(25, 43, 20), 0 ),
		polygon ((11),(11), 0 ),
		polygon ((13, 11),(13, 11), 0 ),
		polygon ((20, 43, 2),(20, 43, 2), 0 ),
		polygon ((2, 19, 36),(2, 19, 36), 0 ),
		polygon ((2, 43, 19),(2, 43, 19), 0 ),
		polygon ((24, 23, 8),(24, 23, 8), 0 ),
		polygon ((8, 23, 10),(8, 23, 10), 0 ),
		polygon ((39, 22, 41),(39, 22, 41), 0 ),
		polygon ((0, 39, 5),(0, 39, 5), 0 ),
		polygon ((39, 41, 5),(39, 41, 5), 0 ),
		polygon ((14, 20, 36),(14, 20, 36), 0 ),
		polygon ((19),(19), 0 ),
		polygon ((6, 7, 27),(6, 7, 27), 0 ),
		polygon ((0, 6, 29),(0, 6, 29), 0 ),
		polygon ((6, 27, 29),(6, 27, 29), 0 ),
		polygon ((29, 27, 30),(29, 27, 30), 0 ),
		polygon ((7, 12, 27),(7, 12, 27), 0 ),
		polygon ((27, 12, 31),(27, 12, 31), 0 ),
		polygon ((13, 32, 12),(13, 32, 12), 0 ),
		polygon ((31, 12, 32),(31, 12, 32), 0 ),
		polygon ((31, 33, 27),(31, 33, 27), 0 ),
		polygon ((30, 27, 33),(30, 27, 33), 0 ),
		polygon ((31, 32, 33),(31, 32, 33), 0 ),
		polygon ((33, 32, 34),(33, 32, 34), 0 ),
		polygon ((13, 32),(13, 32), 0 ),
		polygon ((32),(32), 0 ),
		polygon ((36, 19, 56),(36, 19, 56), 0 ),
		polygon ((46, 36, 24),(46, 36, 24), 0 ),
		polygon ((32),(32), 0 ),
		polygon ((34, 32),(34, 32), 0 ),
		polygon ((41, 18, 26),(41, 18, 26), 0 ),
		polygon ((17, 28, 18),(17, 28, 18), 0 ),
		polygon ((44, 19),(44, 19), 0 ),
		polygon ((56, 23),(56, 23), 0 ),
		polygon ((23),(23), 0 ),
		polygon ((26, 28, 43),(26, 28, 43), 0 ),
		polygon ((43, 28, 44),(43, 28, 44), 0 ),
		polygon ((19),(19), 0 ),
		polygon ((24, 8, 46),(24, 8, 46), 0 ),
		polygon ((3, 46, 8),(3, 46, 8), 0 ),
		polygon ((29, 30, 45),(29, 30, 45), 0 ),
		polygon ((0, 29, 47),(0, 29, 47), 0 ),
		polygon ((29, 45, 47),(29, 45, 47), 0 ),
		polygon ((47, 45, 48),(47, 45, 48), 0 ),
		polygon ((30, 33, 45),(30, 33, 45), 0 ),
		polygon ((45, 33, 49),(45, 33, 49), 0 ),
		polygon ((34, 50, 33),(34, 50, 33), 0 ),
		polygon ((49, 33, 50),(49, 33, 50), 0 ),
		polygon ((49, 51, 45),(49, 51, 45), 0 ),
		polygon ((48, 45, 51),(48, 45, 51), 0 ),
		polygon ((49, 50, 51),(49, 50, 51), 0 ),
		polygon ((51, 50, 52),(51, 50, 52), 0 ),
		polygon ((34, 50),(34, 50), 0 ),
		polygon ((50),(50), 0 ),
		polygon ((26, 18, 28),(26, 18, 28), 0 ),
		polygon ((26, 43, 41),(26, 43, 41), 0 ),
		polygon ((50),(50), 0 ),
		polygon ((52, 50),(52, 50), 0 ),
		polygon ((28),(28), 0 ),
		polygon ((56, 23, 36),(56, 23, 36), 0 ),
		polygon ((17, 28),(17, 28), 0 ),
		polygon ((25, 41, 43),(25, 41, 43), 0 ),
		polygon ((22, 18, 41),(22, 18, 41), 0 ),
		polygon ((44, 28),(44, 28), 0 ),
		polygon ((14, 36, 46),(14, 36, 46), 0 ),
		polygon ((0, 5, 40),(0, 5, 40), 0 ),
		polygon ((40, 14, 46),(40, 14, 46), 0 ),
		polygon ((0, 40, 1),(0, 40, 1), 0 ),
		polygon ((47, 48, 37),(47, 48, 37), 0 ),
		polygon ((0, 47, 38),(0, 47, 38), 0 ),
		polygon ((47, 37, 38),(47, 37, 38), 0 ),
		polygon ((38, 37, 53),(38, 37, 53), 0 ),
		polygon ((48, 51, 37),(48, 51, 37), 0 ),
		polygon ((37, 51, 55),(37, 51, 55), 0 ),
		polygon ((52, 54, 51),(52, 54, 51), 0 ),
		polygon ((55, 51, 54),(55, 51, 54), 0 ),
		polygon ((55, 15, 37),(55, 15, 37), 0 ),
		polygon ((53, 37, 15),(53, 37, 15), 0 ),
		polygon ((55, 54, 15),(55, 54, 15), 0 ),
		polygon ((15, 54, 16),(15, 54, 16), 0 ),
		polygon ((52, 54),(52, 54), 0 ),
		polygon ((54),(54), 0 ),
		polygon ((56, 19),(56, 19), 0 ),
		polygon ((28),(28), 0 ),
		polygon ((54),(54), 0 ),
		polygon ((16, 54),(16, 54), 0 ),
		polygon ((5, 20, 40),(5, 20, 40), 0 ),
		polygon ((40, 20, 14),(40, 20, 14), 0 ),
		polygon ((5, 41, 25),(5, 41, 25), 0 ),
		polygon ((23),(23), 0 ),
		polygon ((10, 23),(10, 23), 0 ),
		polygon ((2, 36, 20),(2, 36, 20), 0 ),
		polygon ((17, 21),(17, 21), 0 ),
		polygon ((44, 19, 43),(44, 19, 43), 0 ),
		polygon ((40, 46, 1),(40, 46, 1), 0 ),
		polygon ((1, 46, 3),(1, 46, 3), 0 ),
		polygon ((38, 53, 35),(38, 53, 35), 0 ),
		polygon ((0, 38, 39),(0, 38, 39), 0 ),
		polygon ((38, 35, 39),(38, 35, 39), 0 ),
		polygon ((39, 35, 22),(39, 35, 22), 0 ),
		polygon ((53, 15, 35),(53, 15, 35), 0 ),
		polygon ((35, 15, 42),(35, 15, 42), 0 ),
		polygon ((16, 21, 15),(16, 21, 15), 0 ),
		polygon ((42, 15, 21),(42, 15, 21), 0 ),
		polygon ((42, 18, 35),(42, 18, 35), 0 ),
		polygon ((22, 35, 18),(22, 35, 18), 0 ),
		polygon ((42, 21, 18),(42, 21, 18), 0 ),
		polygon ((18, 21, 17),(18, 21, 17), 0 ),
		polygon ((16, 21),(16, 21), 0 ),
		polygon ((21),(21), 0 )
	)
); /* end of polyset 'ballshade' */

ENVIRONMENT
background ( 
        color = (0.0, 0.0, 0.0)
);
shader_glow ( 
,
        glow_type =  LINEAR_GLOW,
        halo_type =  LINEAR_GLOW,
        auto_exposure = ON,
        quality = 0.5,
        threshold = 0.0,
        glow_color = (100.0, 100.0, 100.0),
        glow_intensity = 1.0,
        glow_spread = 0.05,
        glow_eccentricity = 0.1,
        glow_radial_noise = 0.0,
        glow_star_level = 0.0,
        glow_opacity = 0.0,
        halo_color = (100.0, 100.0, 100.0),
        halo_intensity = 1.0,
        halo_spread = 0.3,
        halo_eccentricity = 0.1,
        halo_radial_noise = 0.0,
        halo_star_level = 0.0,
        halo_lens_flare = 0.0,
        rotation = 0.0,
        radial_noise_frequency = 0.5,
        star_points = 4.0
);
photo_effects ( 
,
        film_grain = 0.0,
        filter = (255.0, 255.0, 255.0)
);
master_light ( 
,
        intensity = 1.0,
        light_color = (255.0, 255.0, 255.0)
);
dynamics ( 
,
        gravity = 1.0,
        air_density = 0.05,
        Floor = ON,
        floor_offset = 0.0,
        ceiling = OFF,
        ceiling_offset = 20.0,
        left = OFF,
        left_offset = -10.0,
        right = OFF,
        right_offset = 10.0,
        front = OFF,
        front_offset = -10.0,
        back = OFF,
        back_offset = 10.0,
        wall_friction = 0.0,
        wall_elasticity = 0.707,
        turbulence_intensity = 0.0,
        turbulence_spread = 0.5,
        turbulence_persistence = 5.0,
        turbulence_animated = ON,
        turbulence_space_resolution =  16,
        turbulence_time_resolution =  16,
        turbulence_roughness = 0.5,
        turbulence_variability = 0.5,
        turbulence_granularity = 0.0
);

MODEL
/* Only expression assignments should appear above this line and below the MODEL directive. */
/* Placing any other commands in the above section will produce incorrect expression behaviour. */
{
	trn(0.0, 0.0, 12.0);
	{
		inst Light();
	}
	{
		trn(-2.0, -2.0, 0.0);
		Lightview = current_position(( 0.0,  0.0,  0.0));
	}
	{
		trn(0.0, 10.0, 0.0);
		Lightup = current_position(( 0.0,  0.0,  0.0));
	}
}
{
	trn(-0.088128, -0.087783, 0.0);
	scale (0.176747, 0.175895, 0.118124);
	Projection_tform#2 = cur_xform();
}
{
	trn_so(0.0, 0.0, 0.0);
	trn_si(0.0, 0.0, 0.0);
	instance ballshade();
}
{
	{
		trn(-0.073889, -0.006705, 0.483075);
		camera (
			perspective = TRUE,
			eye   = ( 0.0,  0.0,  0.0),
			active = ON,
			pix   = "pix/bballshde.sdl",
			view  = Camera_view,
			up  = Camera_up,
			aov = 55.0,
			filmaperture_x = 0.4,
			filmaperture_y = 0.285,
			filmoffset_x = 0.0,
			filmoffset_y = 0.0,
			placement_fit_code = 0,
			placement_shift = 0.0,
			aspect   = pixel_aspect,
			aspect_ratio_pixel = pixel_aspect,
			near = 0.1,
			far = 200.0,
			depth_of_field = 0.0,
			scaling_factor = 1.0,
			f_stop = 3.5,
			focal_distance = 12.0,
			auto_focus = OFF,
			motion_blur = 0.0
		);
	}
	{
		trn(-0.005465, -0.000445, 0.079012);
		Camera_view = current_position( (0, 0, 0) );
	}
	{
		trn(-0.076439, 0.993179, 0.498133);
		Camera_up = current_position( (0, 0, 0) );
	}
}

