DEFINITION	/* ALIAS SDL File Version 8.5 */
			/* Apparently from wire file '/matt/mgilmore/user_data/NBAonNBC/wire/On_Court/on_courtMATT17h'. */
	version = 8.5;

	xleft  = 0;
	xright = 1279;
	ylow   = 0;
	yhigh  = 1023;
	resolution = 1280 1024;
	aalevelmin   = 3;
	aalevelmax   = 12;
	aathreshold  = 0.6;
	post_filter   = OFF;
	post_center   = 8;    /* Values for a bartlet filter. */
	post_adjacent = 1;
	post_diagonal = 1;

	composite_rendering = OFF;
	invisible_objects_cast_shadows = OFF;
	image_format = ALIAS;
	jitter       = ON;
	reduced_samples = OFF;
	textures_active    = ON;

	clamp_bumpsize = 0.0;

	up = yaxis;

	motion_blur_on = OFF;
	shutter_angle  = 144.0;
	animation  = OFF;
	startframe = 17.0;
	endframe = 17.0;
	fields          = FALSE;
	odd             = FALSE;
	even            = FALSE;
	odd_field_first = TRUE;

	triple Camera_view(0.0, 0.0, 0.0);
	triple Camera_up(0.0, 0.0, 0.0);

	subdivision_recursion_limit = 2;
	grid_cache = 4000;
	bbox_memory = FULL;
	rt_voxel_res_type = AUTOMATIC;

	max_reflections             = 10;
	max_refractions             = 10;
	max_shadow_level            = 10;
	preview_ray_trace           = OFF;

	scalar pixel_aspect ( 1.0 );
	hline_to_fill_color  = FALSE;
	hline_fill_color     = (255.0, 255.0, 255.0);
	hline_line_color     = (0.0, 255.0, 255.0);
	hline_isoparam_u     = 0;
	hline_isoparam_v     = 0;

	show_particles       = TRUE;
	simulation_substeps  = 1;
	simulation_frames_per_second = 30;

triple Lightview(0.0, 0.0, 0.0);
triple Lightup(0.0, 0.0, 0.0);

light Light ( model = ambient,
	active = ON,
	exclusive = FALSE,
	light_emission = ON,
	color = (255.0, 255.0, 255.0),
	shadow_color = (0.0, 0.0, 0.0),
	intensity = 1.0,
	force_type = OFF,
	force_intensity = 1.0,
	warp = OFF,
	glow_type = OFF,
	halo_type = OFF,
	fog_type = OFF,
	flare = OFF,
	psys_emission = OFF,
	shadow = FALSE,
	soft_shadows = FALSE,
	light_radius = 1.0,
	shadow_samples = 2.0,
	use_shadow_map = 0.0,
	ambient_shade = 0.0
);

texture crtfile3 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/chibul/8way/chin03.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader court_3 ( model = lambert,
        diffuse = 0.8,
        color = crtfile3,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture scrtxt (
        procedure = file,
        rgbout = (222.383728, 11.522475, 11.522475),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/atltabl.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader scortabl ( model = lambert,
        diffuse = 0.8,
        color = scrtxt,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture paddingtxt (
        procedure = file,
        rgbout = (222.383728, 11.522475, 11.522475),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/atltopc.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader tabletop ( model = lambert,
        diffuse = 0.8,
        color = paddingtxt,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture mictxt (
        procedure = file,
        rgbout = (0.0, 150.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/micphone.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader microphonetxtr ( model = lambert,
        diffuse = 0.8,
        color = mictxt,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture monitortxt (
        procedure = file,
        rgbout = (0.0, 150.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/monitor.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader monitor ( model = lambert,
        diffuse = 0.8,
        color = monitortxt,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture tabletxt2 (
        procedure = file,
        rgbout = (222.383728, 11.522475, 11.522475),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/tabletop.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader tabletop2 ( model = lambert,
        diffuse = 0.8,
        color = tabletxt2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture adverts (
        procedure = file,
        rgbout = (5.899503, 0.0, 142.325592),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/eastadvt.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader smallads ( model = lambert,
        diffuse = 0.8,
        color = adverts,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture FenceAdtexture5 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/nbcspflt.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader Fencead05 ( model = lambert,
        diffuse = 0.8,
        color = FenceAdtexture5,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture FenceAdtexture4 (
        procedure = file,
        rgbout = (58.025177, 60.90255, 68.704659),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/midwyflt.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader Fencead04 ( model = lambert,
        diffuse = 0.8,
        color = FenceAdtexture4,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture FenceAdtexture2 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/nbccmflt.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader Fencead02 ( model = lambert,
        diffuse = 0.8,
        color = FenceAdtexture2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture FenceAdtexture (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/westconf.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader Fencead01 ( model = lambert,
        diffuse = 0.8,
        color = FenceAdtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture teambanner (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/atlbannr.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader Fencead07 ( model = lambert,
        diffuse = 0.8,
        color = teambanner,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture banner8 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/nbnbcflt.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader Fencead08 ( model = lambert,
        diffuse = 0.8,
        color = banner8,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture banner9 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/stuffflt.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader Fencead09 ( model = lambert,
        diffuse = 0.8,
        color = banner9,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture FenceAdtexture10 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/shcomflt.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader Fencead10 ( model = lambert,
        diffuse = 0.8,
        color = FenceAdtexture10,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture fence_blank_texture (
        procedure = file,
        rgbout = (50.406979, 50.406979, 50.406979),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/blankflt.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader Fenceblank ( model = lambert,
        diffuse = 0.8,
        color = fence_blank_texture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture NBAflat (
        procedure = file,
        rgbout = (46.243523, 38.336597, 38.336597),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/nbaflt.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader FenceNBA ( model = lambert,
        diffuse = 0.8,
        color = NBAflat,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

polyset advert1 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (smallads ),
	casts_shadow = TRUE,
	vertices = ((cv((-2.906648, 0.025858, -5.212766), 1)),
			(cv((-2.906648, 0.61333, -5.348137), 1)),
			(cv((-0.998019, 0.025858, -5.212766), 1)),
			(cv((-0.998098, 0.61333, -5.348137), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.200000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.200000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 1, 3),(2, 1, 3), 0 )
	)
); /* end of polyset 'advert1' */

polyset advert2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (smallads ),
	casts_shadow = TRUE,
	vertices = ((cv((-0.957385, 0.025858, -5.212766), 1)),
			(cv((-0.957385, 0.61333, -5.348137), 1)),
			(cv((0.951244, 0.025858, -5.212766), 1)),
			(cv((0.951164, 0.61333, -5.348137), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.200000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.200000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 1, 3),(2, 1, 3), 0 )
	)
); /* end of polyset 'advert2' */

polyset advert3 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (smallads ),
	casts_shadow = TRUE,
	vertices = ((cv((0.992216, 0.025858, -5.212766), 1)),
			(cv((0.992216, 0.61333, -5.348137), 1)),
			(cv((2.900845, 0.025858, -5.212766), 1)),
			(cv((2.900765, 0.61333, -5.348137), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.200000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.200000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 1, 3),(2, 1, 3), 0 )
	)
); /* end of polyset 'advert3' */

polyset advert04 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (smallads ),
	casts_shadow = TRUE,
	vertices = ((cv((9.281259, 0.003171, -3.364521), 1)),
			(cv((9.400614, 0.672685, -3.408198), 1)),
			(cv((10.294763, 0.003171, -0.594989), 1)),
			(cv((10.414118, 0.675173, -0.638667), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.200000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.200000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 1, 3),(2, 1, 3), 0 )
	)
); /* end of polyset 'advert04' */

polyset advert05 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (smallads ),
	casts_shadow = TRUE,
	vertices = ((cv((10.294764, 0.003171, 0.576611), 1)),
			(cv((10.414119, 0.675173, 0.620288), 1)),
			(cv((9.281259, 0.003171, 3.346142), 1)),
			(cv((9.400614, 0.672685, 3.38982), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.200000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.200000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 1, 3),(2, 1, 3), 0 )
	)
); /* end of polyset 'advert05' */

polyset advert06 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (smallads ),
	casts_shadow = TRUE,
	vertices = ((cv((-9.437197, 0.003171, 3.345424), 1)),
			(cv((-9.556552, 0.672685, 3.389102), 1)),
			(cv((-10.450702, 0.003171, 0.575893), 1)),
			(cv((-10.570056, 0.675173, 0.619571), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.200000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.200000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 1, 3),(2, 1, 3), 0 )
	)
); /* end of polyset 'advert06' */

polyset advert07 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (smallads ),
	casts_shadow = TRUE,
	vertices = ((cv((-10.450702, 0.003171, -0.640468), 1)),
			(cv((-10.570057, 0.675173, -0.684146), 1)),
			(cv((-9.437197, 0.003171, -3.409999), 1)),
			(cv((-9.556552, 0.672685, -3.453677), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.200000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.200000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 1, 3),(2, 1, 3), 0 )
	)
); /* end of polyset 'advert07' */

polyset oncourt (
	active = ON,
	motion_blur = ON,
	smooth = OFF,
	doublesided = OFF,
	opposite = OFF,
	shader = (scortabl ),
	shader = (monitor ),
	shader = (microphonetxtr ),
	shader = (tabletop ),
	shader = (tabletop2 ),
	casts_shadow = TRUE,
	vertices = ((cv((0.934451, 0.000112, -5.222693), 1)),
			(cv((0.688466, 0.852368, -5.647393), 1)),
			(cv((0.724579, 0.824614, -5.64945), 1)),
			(cv((0.641966, 0.724822, -5.527785), 1)),
			(cv((-3.047263, 0.0, -5.222693), 1)),
			(cv((-3.047662, 0.674999, -5.377375), 1)),
			(cv((-3.047263, 0.674999, -5.855805), 1)),
			(cv((-2.972973, 0.674999, -5.377375), 1)),
			(cv((-2.972973, 0.674999, -5.565308), 1)),
			(cv((2.9854, 0.674999, -5.377375), 1)),
			(cv((2.9854, 0.674999, -5.565308), 1)),
			(cv((-3.047576, 0.674999, -5.377375), 1)),
			(cv((-3.047576, 0.674999, -5.565308), 1)),
			(cv((3.038438, 0.000112, -5.855805), 1)),
			(cv((3.038438, 0.674999, -5.855805), 1)),
			(cv((3.038438, 0.0, -5.222694), 1)),
			(cv((3.038438, 0.000105, -5.222693), 1)),
			(cv((2.886537, 0.674999, -5.377375), 1)),
			(cv((3.038438, 0.674999, -5.377375), 1)),
			(cv((3.038438, 0.0, -5.222694), 1)),
			(cv((1.086092, 0.677281, -5.614826), 1)),
			(cv((0.852885, 0.677281, -5.614826), 1)),
			(cv((2.886935, 0.0, -5.222693), 1)),
			(cv((-2.897827, 0.000112, -5.222693), 1)),
			(cv((-1.007243, 0.000112, -5.222693), 1)),
			(cv((-2.897827, 0.002622, -5.222693), 1)),
			(cv((-3.047662, 0.674999, -5.377375), 1)),
			(cv((-2.897827, 0.674999, -5.377375), 1)),
			(cv((-3.047263, 0.0, -5.222693), 1)),
			(cv((1.002213, 0.0, -5.222693), 1)),
			(cv((1.002213, 0.674887, -5.377375), 1)),
			(cv((1.002213, 0.0, -5.222693), 1)),
			(cv((0.934451, 0.674999, -5.377375), 1)),
			(cv((0.934451, 0.000112, -5.222693), 1)),
			(cv((-3.047263, 0.000112, -5.855805), 1)),
			(cv((-3.047263, 0.674999, -5.855805), 1)),
			(cv((-3.047662, 0.674999, -5.377375), 1)),
			(cv((-3.047263, 0.0, -5.222693), 1)),
			(cv((3.038438, 0.674999, -5.377375), 1)),
			(cv((-3.047263, 0.000112, -5.855805), 1)),
			(cv((3.038438, 0.674999, -5.855805), 1)),
			(cv((3.038438, 0.000112, -5.855805), 1)),
			(cv((3.038438, 0.674999, -5.377375), 1)),
			(cv((1.086092, 0.930829, -5.812339), 1)),
			(cv((-0.873142, 0.677281, -5.614826), 1)),
			(cv((-0.873142, 0.712154, -5.845411), 1)),
			(cv((-1.10635, 0.677281, -5.614826), 1)),
			(cv((-1.10635, 0.712154, -5.845411), 1)),
			(cv((2.886812, 0.674887, -5.377375), 1)),
			(cv((2.886935, 0.0, -5.222693), 1)),
			(cv((1.002213, 0.674887, -5.377375), 1)),
			(cv((-0.95027, 0.674999, -5.377375), 1)),
			(cv((-0.95027, 0.000112, -5.222693), 1)),
			(cv((-1.007243, 0.674999, -5.377375), 1)),
			(cv((1.086092, 0.712154, -5.845411), 1)),
			(cv((0.852885, 0.712154, -5.845411), 1)),
			(cv((0.934328, 0.674999, -5.377375), 1)),
			(cv((-1.007366, 0.674999, -5.377375), 1)),
			(cv((-1.007243, 0.000112, -5.222693), 1)),
			(cv((-2.897827, 0.674999, -5.377375), 1)),
			(cv((-1.10635, 0.895957, -5.581754), 1)),
			(cv((-1.10635, 0.930829, -5.812339), 1)),
			(cv((-0.873142, 0.930829, -5.812339), 1)),
			(cv((-0.873142, 0.895957, -5.581754), 1)),
			(cv((-1.297732, 0.781203, -5.519078), 1)),
			(cv((-1.241764, 0.796021, -5.687106), 1)),
			(cv((-1.27018, 0.80813, -5.543203), 1)),
			(cv((1.086092, 0.895957, -5.581754), 1)),
			(cv((0.852885, 0.895957, -5.581754), 1)),
			(cv((-0.95027, 0.000112, -5.222693), 1)),
			(cv((3.038438, 0.674999, -5.377375), 1)),
			(cv((-1.214568, 0.829499, -5.672332), 1)),
			(cv((3.038438, 0.674999, -5.565308), 1)),
			(cv((-3.047576, 0.674999, -5.565308), 1)),
			(cv((-1.185147, 0.796021, -5.662723), 1)),
			(cv((-1.268777, 0.781203, -5.506608), 1)),
			(cv((-3.047576, 0.674999, -5.855805), 1)),
			(cv((3.038438, 0.674999, -5.565308), 1)),
			(cv((3.038438, 0.674999, -5.855805), 1)),
			(cv((0.614208, 0.724822, -5.542731), 1)),
			(cv((0.670303, 0.824614, -5.678675), 1)),
			(cv((0.635441, 0.764536, -5.548915), 1)),
			(cv((0.852885, 0.930829, -5.812339), 1)),
			(cv((-0.95027, 0.674999, -5.377375), 1))	),
	texture_vertices = (
			st( 0.314570, -0.001328 ),
			st( 0.500000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.171106, 0.018573 ),
			st( 0.171313, 0.983035 ),
			st( 0.003508, 0.987612 ),
			st( 0.235338, 0.983570 ),
			st( 0.232667, 0.985979 ),
			st( 0.231495, 0.009397 ),
			st( 0.232667, 0.007077 ),
			st( 0.232667, 0.007077 ),
			st( 0.742094, 0.983570 ),
			st( 0.742535, 0.985979 ),
			st( 0.742535, 0.985979 ),
			st( 0.742094, 0.006264 ),
			st( 0.741146, 0.007168 ),
			st( 0.017467, 0.986702 ),
			st( 0.013624, 0.009397 ),
			st( 0.003508, 0.009100 ),
			st( 0.001246, 0.987613 ),
			st( 0.170010, 0.009100 ),
			st( 0.000000, 0.000000 ),
			st( 0.193623, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.170010, 0.009100 ),
			st( 0.978638, 0.007800 ),
			st( 0.500000, 0.000000 ),
			st( 0.500000, 0.000000 ),
			st( 0.492307, 0.007838 ),
			st( 0.500000, 0.000000 ),
			st( 0.500000, 0.000000 ),
			st( 0.193623, 0.000000 ),
			st( 0.485099, 0.002410 ),
			st( 0.511111, 0.000000 ),
			st( 0.193017, 0.002410 ),
			st( 0.000000, 1.000000 ),
			st( 0.193017, 1.000000 ),
			st( 0.000000, 0.002410 ),
			st( 0.485099, 0.002410 ),
			st( 0.633628, 1.000000 ),
			st( 0.633628, 0.000000 ),
			st( 0.508850, 1.000000 ),
			st( 0.508850, 0.000000 ),
			st( 0.005769, 0.018059 ),
			st( 0.003508, 0.987612 ),
			st( 0.171313, 0.983035 ),
			st( 0.171106, 0.018573 ),
			st( 0.170379, 0.983667 ),
			st( 0.005769, 0.018059 ),
			st( 0.001246, 0.987613 ),
			st( 0.003508, 0.009100 ),
			st( 0.170379, 0.983667 ),
			st( 0.500000, 1.000000 ),
			st( 0.002031, 0.992162 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.007800, 0.993730 ),
			st( 0.978638, 0.007800 ),
			st( 0.500000, 0.000000 ),
			st( 0.500000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.500000, 0.500000 ),
			st( 0.492307, 0.007838 ),
			st( 0.500000, 0.000000 ),
			st( 0.500000, 0.000000 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.500000 ),
			st( 0.243377, 1.000000 ),
			st( 0.314570, -0.001328 ),
			st( 0.245033, 1.000000 ),
			st( 0.633628, 1.000000 ),
			st( 0.633628, 0.000000 ),
			st( 0.511111, 1.000000 ),
			st( 0.500000, 0.500000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.000000 ),
			st( 0.243377, 1.000000 ),
			st( 0.243377, 1.000000 ),
			st( 0.314570, -0.001328 ),
			st( 0.245033, 1.000000 ),
			st( 0.488254, 0.507800 ),
			st( 0.490384, 0.500000 ),
			st( 0.490384, 0.500000 ),
			st( 0.500000, 0.500000 ),
			st( 0.003954, 0.507776 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.002031, 0.992162 ),
			st( 0.007800, 0.993730 ),
			st( 0.500000, 1.000000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.500000, 1.000000 ),
			st( 0.488254, 0.993668 ),
			st( 0.978638, 0.500501 ),
			st( 0.500000, 0.500000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.500000, 0.220000 ),
			st( 0.978638, 0.500501 ),
			st( 0.500000, 0.500000 ),
			st( 0.488254, 0.993668 ),
			st( 0.488254, 0.507800 ),
			st( 0.490384, 0.500000 ),
			st( 0.490384, 0.500000 ),
			st( 0.500000, 0.500000 ),
			st( 0.488254, 0.507800 ),
			st( 0.485099, 0.002410 ),
			st( 0.980303, 0.983570 ),
			st( 0.500000, 1.000000 ),
			st( 0.987989, 0.006265 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.500000, 0.220000 ),
			st( 1.000000, 1.000000 ),
			st( 0.003954, 0.507776 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.245033, 1.000000 ) ),
	polygons = (
		polygon ((48, 49, 50),(69, 70, 71), 0 ),
		polygon ((51, 52, 53),(72, 73, 74), 0 ),
		polygon ((54, 43, 55),(75, 53, 77), 1 ),
		polygon ((55, 43, 82),(77, 53, 124), 1 ),
		polygon ((56, 0, 83),(79, 0, 128), 0 ),
		polygon ((60, 61, 62),(83, 87, 91), 1 ),
		polygon ((13, 14, 15),(19, 20, 21), 0 ),
		polygon ((64, 65, 66),(100, 101, 102), 2 ),
		polygon ((57, 58, 59),(80, 81, 82), 0 ),
		polygon ((62, 63, 60),(92, 97, 83), 1 ),
		polygon ((19, 40, 41),(25, 50, 51), 0 ),
		polygon ((71, 66, 65),(113, 102, 101), 2 ),
		polygon ((81, 2, 3),(123, 2, 3), 2 ),
		polygon ((64, 66, 75),(100, 102, 117), 2 ),
		polygon ((74, 66, 71),(116, 102, 113), 2 ),
		polygon ((66, 74, 75),(102, 116, 117), 2 ),
		polygon ((79, 81, 3),(121, 123, 3), 2 ),
		polygon ((9, 10, 70),(12, 15, 112), 3 ),
		polygon ((7, 12, 8),(7, 18, 9), 3 ),
		polygon ((79, 80, 81),(121, 122, 123), 2 ),
		polygon ((68, 82, 43),(106, 125, 54), 1 ),
		polygon ((83, 0, 69),(128, 0, 111), 0 ),
		polygon ((68, 67, 20),(107, 103, 26), 1 ),
		polygon ((20, 21, 68),(26, 29, 108), 1 ),
		polygon ((22, 17, 16),(32, 23, 22), 0 ),
		polygon ((59, 58, 23),(82, 81, 33), 0 ),
		polygon ((20, 67, 43),(27, 104, 55), 1 ),
		polygon ((53, 52, 24),(74, 73, 34), 0 ),
		polygon ((28, 26, 25),(38, 36, 35), 0 ),
		polygon ((21, 82, 68),(30, 126, 109), 1 ),
		polygon ((43, 54, 20),(56, 76, 28), 1 ),
		polygon ((25, 26, 27),(35, 36, 37), 0 ),
		polygon ((50, 49, 29),(71, 70, 39), 0 ),
		polygon ((55, 82, 21),(78, 127, 31), 1 ),
		polygon ((30, 31, 32),(40, 41, 42), 0 ),
		polygon ((35, 36, 37),(45, 46, 47), 0 ),
		polygon ((44, 46, 60),(58, 63, 84), 1 ),
		polygon ((6, 34, 4),(6, 44, 4), 0 ),
		polygon ((32, 31, 33),(42, 41, 43), 0 ),
		polygon ((47, 62, 61),(66, 93, 88), 1 ),
		polygon ((15, 14, 38),(21, 20, 48), 0 ),
		polygon ((37, 39, 35),(47, 49, 45), 0 ),
		polygon ((73, 76, 77),(115, 118, 119), 4 ),
		polygon ((77, 76, 78),(119, 118, 120), 4 ),
		polygon ((11, 12, 7),(17, 18, 7), 3 ),
		polygon ((60, 63, 44),(85, 98, 58), 1 ),
		polygon ((16, 17, 18),(22, 23, 24), 0 ),
		polygon ((1, 81, 80),(1, 123, 122), 2 ),
		polygon ((70, 10, 72),(112, 15, 114), 3 ),
		polygon ((42, 40, 19),(52, 50, 25), 0 ),
		polygon ((43, 67, 68),(57, 105, 110), 1 ),
		polygon ((4, 5, 6),(4, 5, 6), 0 ),
		polygon ((2, 81, 1),(2, 123, 1), 2 ),
		polygon ((44, 63, 62),(59, 99, 94), 1 ),
		polygon ((7, 8, 9),(8, 10, 13), 3 ),
		polygon ((47, 61, 46),(67, 89, 64), 1 ),
		polygon ((62, 45, 44),(95, 61, 60), 1 ),
		polygon ((46, 61, 60),(65, 90, 86), 1 ),
		polygon ((9, 8, 10),(14, 11, 16), 3 ),
		polygon ((45, 62, 47),(62, 96, 68), 1 )
	)
); /* end of polyset 'oncourt' */

polyset billboard_1 (
	active = ON,
	motion_blur = ON,
	smooth = OFF,
	doublesided = OFF,
	opposite = OFF,
	shader = (scortabl ),
	shader = (Fencead04 ),
	casts_shadow = TRUE,
	vertices = ((cv((9.477944, 0.672685, -3.553998), 1)),
			(cv((9.595176, 0.003171, -3.596899), 1)),
			(cv((9.515865, 0.672685, -3.450374), 1)),
			(cv((9.633097, 0.003171, -3.493275), 1)),
			(cv((10.56729, 0.675173, -0.577219), 1)),
			(cv((10.45204, 0.675173, -0.535043), 1)),
			(cv((10.52937, 0.675173, -0.680843), 1)),
			(cv((10.646602, 0.003171, -0.723744), 1)),
			(cv((10.294764, 0.003171, -0.594989), 1)),
			(cv((10.332684, 0.003171, -0.491366), 1)),
			(cv((10.684523, 0.003171, -0.62012), 1)),
			(cv((10.414119, 0.675173, -0.638667), 1)),
			(cv((9.243338, 0.003171, -3.468144), 1)),
			(cv((9.400614, 0.672685, -3.408198), 1)),
			(cv((9.281259, 0.003171, -3.364521), 1)),
			(cv((10.294763, 0.003171, -0.594989), 1)),
			(cv((10.414118, 0.675173, -0.638667), 1)),
			(cv((9.400614, 0.672685, -3.408198), 1)),
			(cv((9.362693, 0.672685, -3.511822), 1)),
			(cv((9.281259, 0.003171, -3.36452), 1))	),
	texture_vertices = (
			st( 0.000000, 0.987952 ),
			st( 0.000000, 0.000000 ),
			st( 0.180000, 0.980723 ),
			st( 0.180000, 0.000000 ),
			st( 0.180000, 0.976260 ),
			st( 0.000000, 0.997858 ),
			st( 0.000000, 0.978106 ),
			st( 0.000000, 0.000000 ),
			st( 0.180000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.180000, 0.000000 ),
			st( 0.180000, 0.999418 ),
			st( 0.180000, 0.000000 ),
			st( 0.994596, 0.204751 ),
			st( 1.000000, -0.003566 ),
			st( 0.000000, -0.003566 ),
			st( 0.005404, 0.204751 ),
			st( 0.000000, 0.980723 ),
			st( 0.180000, 0.987952 ),
			st( 0.000000, 0.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 1, 3),(2, 1, 3), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 0 ),
		polygon ((7, 6, 8),(7, 6, 8), 0 ),
		polygon ((9, 8, 5),(9, 8, 5), 0 ),
		polygon ((9, 4, 10),(9, 4, 10), 0 ),
		polygon ((4, 7, 10),(4, 7, 10), 0 ),
		polygon ((6, 5, 11),(6, 5, 11), 0 ),
		polygon ((5, 4, 9),(5, 4, 9), 0 ),
		polygon ((5, 8, 11),(5, 8, 11), 0 ),
		polygon ((8, 6, 11),(8, 6, 11), 0 ),
		polygon ((6, 7, 4),(6, 7, 4), 0 ),
		polygon ((1, 0, 12),(1, 0, 12), 0 ),
		polygon ((13, 14, 15),(13, 14, 15), 1 ),
		polygon ((15, 16, 13),(15, 16, 13), 1 ),
		polygon ((0, 17, 18),(0, 17, 18), 0 ),
		polygon ((17, 2, 19),(17, 2, 19), 0 ),
		polygon ((19, 2, 3),(19, 2, 3), 0 ),
		polygon ((2, 17, 0),(2, 17, 0), 0 ),
		polygon ((17, 12, 18),(17, 12, 18), 0 ),
		polygon ((12, 0, 18),(12, 0, 18), 0 ),
		polygon ((19, 12, 17),(19, 12, 17), 0 )
	)
); /* end of polyset 'billboard_1' */

polyset billboard_2 (
	active = ON,
	motion_blur = ON,
	smooth = OFF,
	doublesided = OFF,
	opposite = OFF,
	shader = (scortabl ),
	shader = (Fencead04 ),
	casts_shadow = TRUE,
	vertices = ((cv((9.515865, 0.672685, 3.431995), 1)),
			(cv((9.595176, 0.003171, 3.57852), 1)),
			(cv((9.477944, 0.672685, 3.535619), 1)),
			(cv((9.633097, 0.003171, 3.474896), 1)),
			(cv((9.281259, 0.003171, 3.346142), 1)),
			(cv((9.400614, 0.672685, 3.38982), 1)),
			(cv((9.362693, 0.672685, 3.493444), 1)),
			(cv((9.243338, 0.003171, 3.449766), 1)),
			(cv((10.45204, 0.675173, 0.516665), 1)),
			(cv((10.294764, 0.003171, 0.576611), 1)),
			(cv((10.332684, 0.003171, 0.472987), 1)),
			(cv((10.414119, 0.675173, 0.620288), 1)),
			(cv((10.56729, 0.675173, 0.55884), 1)),
			(cv((10.684523, 0.003171, 0.601741), 1)),
			(cv((10.52937, 0.675173, 0.662464), 1)),
			(cv((10.646602, 0.003171, 0.705365), 1)),
			(cv((9.281259, 0.003171, 3.346142), 1)),
			(cv((9.400614, 0.672685, 3.38982), 1)),
			(cv((10.414118, 0.675173, 0.620288), 1)),
			(cv((10.294763, 0.003171, 0.576611), 1))	),
	texture_vertices = (
			st( 0.180000, 0.980723 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.987952 ),
			st( 0.180000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.980723 ),
			st( 0.180000, 0.987952 ),
			st( 0.180000, 0.000000 ),
			st( 0.000000, 0.997858 ),
			st( 0.180000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.180000, 0.999418 ),
			st( 0.180000, 0.976260 ),
			st( 0.180000, 0.000000 ),
			st( 0.000000, 0.978106 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, -0.003566 ),
			st( 0.005404, 0.204751 ),
			st( 0.994596, 0.204751 ),
			st( 1.000000, -0.003566 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((3, 1, 0),(3, 1, 0), 0 ),
		polygon ((4, 0, 5),(4, 0, 5), 0 ),
		polygon ((3, 0, 4),(3, 0, 4), 0 ),
		polygon ((2, 5, 0),(2, 5, 0), 0 ),
		polygon ((6, 5, 2),(6, 5, 2), 0 ),
		polygon ((6, 7, 5),(6, 7, 5), 0 ),
		polygon ((5, 7, 4),(5, 7, 4), 0 ),
		polygon ((7, 2, 1),(7, 2, 1), 0 ),
		polygon ((6, 2, 7),(6, 2, 7), 0 ),
		polygon ((8, 9, 10),(8, 9, 10), 0 ),
		polygon ((11, 9, 8),(11, 9, 8), 0 ),
		polygon ((10, 12, 8),(10, 12, 8), 0 ),
		polygon ((13, 12, 10),(13, 12, 10), 0 ),
		polygon ((9, 14, 15),(9, 14, 15), 0 ),
		polygon ((11, 14, 9),(11, 14, 9), 0 ),
		polygon ((14, 8, 12),(14, 8, 12), 0 ),
		polygon ((11, 8, 14),(11, 8, 14), 0 ),
		polygon ((12, 15, 14),(12, 15, 14), 0 ),
		polygon ((13, 15, 12),(13, 15, 12), 0 ),
		polygon ((16, 17, 18),(16, 17, 18), 1 ),
		polygon ((18, 19, 16),(18, 19, 16), 1 )
	)
); /* end of polyset 'billboard_2' */

polyset billboard_3 (
	active = ON,
	motion_blur = ON,
	smooth = OFF,
	doublesided = OFF,
	opposite = OFF,
	shader = (scortabl ),
	shader = (Fencead04 ),
	casts_shadow = TRUE,
	vertices = ((cv((-9.633882, 0.672685, 3.534902), 1)),
			(cv((-9.751114, 0.003171, 3.577803), 1)),
			(cv((-9.671803, 0.672685, 3.431278), 1)),
			(cv((-9.789035, 0.003171, 3.474179), 1)),
			(cv((-9.556552, 0.672685, 3.389102), 1)),
			(cv((-9.437197, 0.003171, 3.345424), 1)),
			(cv((-9.518631, 0.672685, 3.492726), 1)),
			(cv((-9.399276, 0.003171, 3.449048), 1)),
			(cv((-10.488623, 0.003171, 0.472269), 1)),
			(cv((-10.450702, 0.003171, 0.575893), 1)),
			(cv((-10.607978, 0.675173, 0.515947), 1)),
			(cv((-10.570057, 0.675173, 0.619571), 1)),
			(cv((-10.723229, 0.675173, 0.558123), 1)),
			(cv((-10.840461, 0.003171, 0.601024), 1)),
			(cv((-10.80254, 0.003171, 0.704648), 1)),
			(cv((-10.685308, 0.675173, 0.661747), 1)),
			(cv((-10.450702, 0.003171, 0.575893), 1)),
			(cv((-10.570056, 0.675173, 0.619571), 1)),
			(cv((-9.556552, 0.672685, 3.389102), 1)),
			(cv((-9.437197, 0.003171, 3.345424), 1))	),
	texture_vertices = (
			st( 0.000000, 0.987952 ),
			st( 0.000000, 0.000000 ),
			st( 0.180000, 0.980723 ),
			st( 0.180000, 0.000000 ),
			st( 0.000000, 0.980723 ),
			st( 0.000000, 0.000000 ),
			st( 0.180000, 0.987952 ),
			st( 0.180000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.180000, 0.000000 ),
			st( 0.000000, 0.997858 ),
			st( 0.180000, 0.999418 ),
			st( 0.180000, 0.976260 ),
			st( 0.180000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.978106 ),
			st( -0.001136, 0.001009 ),
			st( 0.006070, 0.197274 ),
			st( 0.992479, 0.204406 ),
			st( 0.992141, 0.003644 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 1, 3),(2, 1, 3), 0 ),
		polygon ((4, 2, 5),(4, 2, 5), 0 ),
		polygon ((5, 2, 3),(5, 2, 3), 0 ),
		polygon ((2, 4, 0),(2, 4, 0), 0 ),
		polygon ((0, 4, 6),(0, 4, 6), 0 ),
		polygon ((4, 7, 6),(4, 7, 6), 0 ),
		polygon ((5, 7, 4),(5, 7, 4), 0 ),
		polygon ((1, 0, 7),(1, 0, 7), 0 ),
		polygon ((7, 0, 6),(7, 0, 6), 0 ),
		polygon ((8, 9, 10),(8, 9, 10), 0 ),
		polygon ((10, 9, 11),(10, 9, 11), 0 ),
		polygon ((10, 12, 8),(10, 12, 8), 0 ),
		polygon ((8, 12, 13),(8, 12, 13), 0 ),
		polygon ((14, 15, 9),(14, 15, 9), 0 ),
		polygon ((9, 15, 11),(9, 15, 11), 0 ),
		polygon ((12, 10, 15),(12, 10, 15), 0 ),
		polygon ((15, 10, 11),(15, 10, 11), 0 ),
		polygon ((15, 14, 12),(15, 14, 12), 0 ),
		polygon ((12, 14, 13),(12, 14, 13), 0 ),
		polygon ((16, 17, 18),(16, 17, 18), 1 ),
		polygon ((18, 19, 16),(18, 19, 16), 1 )
	)
); /* end of polyset 'billboard_3' */

polyset billboard4 (
	active = ON,
	motion_blur = ON,
	smooth = OFF,
	doublesided = OFF,
	opposite = OFF,
	shader = (scortabl ),
	shader = (Fencead04 ),
	casts_shadow = TRUE,
	vertices = ((cv((-9.671803, 0.672685, -3.495853), 1)),
			(cv((-9.751114, 0.003171, -3.642377), 1)),
			(cv((-9.633882, 0.672685, -3.599477), 1)),
			(cv((-9.789035, 0.003171, -3.538753), 1)),
			(cv((-9.437197, 0.003171, -3.409999), 1)),
			(cv((-9.556552, 0.672685, -3.453677), 1)),
			(cv((-9.518631, 0.672685, -3.557301), 1)),
			(cv((-9.399276, 0.003171, -3.513623), 1)),
			(cv((-10.607978, 0.675173, -0.580522), 1)),
			(cv((-10.450702, 0.003171, -0.640468), 1)),
			(cv((-10.488623, 0.003171, -0.536844), 1)),
			(cv((-10.570057, 0.675173, -0.684146), 1)),
			(cv((-10.723229, 0.675173, -0.622698), 1)),
			(cv((-10.840461, 0.003171, -0.665599), 1)),
			(cv((-10.685308, 0.675173, -0.726321), 1)),
			(cv((-10.80254, 0.003171, -0.769222), 1)),
			(cv((-9.437197, 0.003171, -3.409999), 1)),
			(cv((-9.556552, 0.672685, -3.453677), 1)),
			(cv((-10.570056, 0.675173, -0.684146), 1)),
			(cv((-10.450702, 0.003171, -0.640468), 1))	),
	texture_vertices = (
			st( 0.180000, 0.980723 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.987952 ),
			st( 0.180000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.980723 ),
			st( 0.180000, 0.987952 ),
			st( 0.180000, 0.000000 ),
			st( 0.000000, 0.997858 ),
			st( 0.180000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.180000, 0.999418 ),
			st( 0.180000, 0.976260 ),
			st( 0.180000, 0.000000 ),
			st( 0.000000, 0.978106 ),
			st( 0.000000, 0.000000 ),
			st( -0.001136, 0.001009 ),
			st( 0.006070, 0.197274 ),
			st( 0.992479, 0.204406 ),
			st( 0.992141, 0.003644 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((3, 1, 0),(3, 1, 0), 0 ),
		polygon ((4, 0, 5),(4, 0, 5), 0 ),
		polygon ((3, 0, 4),(3, 0, 4), 0 ),
		polygon ((2, 5, 0),(2, 5, 0), 0 ),
		polygon ((6, 5, 2),(6, 5, 2), 0 ),
		polygon ((6, 7, 5),(6, 7, 5), 0 ),
		polygon ((5, 7, 4),(5, 7, 4), 0 ),
		polygon ((7, 2, 1),(7, 2, 1), 0 ),
		polygon ((6, 2, 7),(6, 2, 7), 0 ),
		polygon ((8, 9, 10),(8, 9, 10), 0 ),
		polygon ((11, 9, 8),(11, 9, 8), 0 ),
		polygon ((10, 12, 8),(10, 12, 8), 0 ),
		polygon ((13, 12, 10),(13, 12, 10), 0 ),
		polygon ((9, 14, 15),(9, 14, 15), 0 ),
		polygon ((11, 14, 9),(11, 14, 9), 0 ),
		polygon ((14, 8, 12),(14, 8, 12), 0 ),
		polygon ((11, 8, 14),(11, 8, 14), 0 ),
		polygon ((12, 15, 14),(12, 15, 14), 0 ),
		polygon ((13, 15, 12),(13, 15, 12), 0 ),
		polygon ((16, 17, 18),(16, 17, 18), 1 ),
		polygon ((18, 19, 16),(18, 19, 16), 1 )
	)
); /* end of polyset 'billboard4' */

polyset fence_section_1_a (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (FenceNBA ),
	shader = (Fenceblank ),
	casts_shadow = TRUE,
	vertices = ((cv((-6.534152, 0.000112, -5.855805), 1)),
			(cv((-6.534152, 0.675009, -5.855805), 1)),
			(cv((-4.790708, 0.675009, -5.855805), 1)),
			(cv((-4.790708, 0.000112, -5.855805), 1)),
			(cv((-8.277596, 0.000112, -5.855805), 1)),
			(cv((-8.277596, 0.675009, -5.855805), 1)),
			(cv((-3.047263, 0.675009, -5.855805), 1)),
			(cv((-3.047263, 0.000112, -5.855805), 1))	),
	texture_vertices = (
			st( 0.000000, 0.015625 ),
			st( 1.000000, 0.015625 ),
			st( 0.000000, 0.984375 ),
			st( 1.000000, 0.984375 ),
			st( 1.000000, 0.984375 ),
			st( 0.999746, 0.984375 ),
			st( 0.999746, 0.015625 ),
			st( 0.000000, 0.015625 ),
			st( 0.000000, 0.984375 ),
			st( 0.000254, 0.984375 ),
			st( 0.002055, 0.015625 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 2, 5), 0 ),
		polygon ((2, 3, 0),(5, 6, 0), 0 ),
		polygon ((3, 2, 6),(6, 5, 9), 1 ),
		polygon ((6, 7, 3),(9, 10, 6), 1 ),
		polygon ((4, 5, 1),(7, 8, 3), 1 ),
		polygon ((1, 0, 4),(4, 1, 7), 1 )
	)
); /* end of polyset 'fence_section_1_a' */

polyset fence_section_1_c (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (Fenceblank ),
	shader = (FenceNBA ),
	casts_shadow = TRUE,
	vertices = ((cv((3.038438, 0.000112, -5.855805), 1)),
			(cv((3.038438, 0.675009, -5.855805), 1)),
			(cv((4.781883, 0.675009, -5.855805), 1)),
			(cv((4.781883, 0.000112, -5.855805), 1)),
			(cv((6.491637, 0.000112, -5.855805), 1)),
			(cv((6.491637, 0.675009, -5.855805), 1)),
			(cv((8.245548, 0.675009, -5.855805), 1)),
			(cv((8.245548, 0.000112, -5.855805), 1))	),
	texture_vertices = (
			st( 0.000000, 0.015625 ),
			st( 0.000000, 0.984375 ),
			st( 1.000000, 0.984375 ),
			st( 0.000000, 0.984375 ),
			st( 1.000000, 0.015625 ),
			st( 0.000000, 0.015625 ),
			st( 0.000000, 0.015625 ),
			st( 1.000000, 0.015625 ),
			st( 1.000000, 0.984375 ),
			st( 0.000254, 0.984375 ),
			st( 0.002055, 0.015625 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 4, 0), 0 ),
		polygon ((4, 5, 6),(7, 8, 9), 0 ),
		polygon ((6, 7, 4),(9, 10, 7), 0 ),
		polygon ((3, 2, 5),(5, 3, 8), 1 ),
		polygon ((5, 4, 3),(8, 7, 6), 1 )
	)
); /* end of polyset 'fence_section_1_c' */

polyset fence_section_5_a (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (Fencead10 ),
	shader = (Fencead05 ),
	shader = (Fencead01 ),
	casts_shadow = TRUE,
	vertices = ((cv((4.271862, 0.000102, 5.859261), 1)),
			(cv((4.271862, 0.674999, 5.859261), 1)),
			(cv((2.565663, 0.674999, 5.859261), 1)),
			(cv((2.565663, 0.000102, 5.859261), 1)),
			(cv((7.72506, 0.000102, 5.859261), 1)),
			(cv((7.72506, 0.674999, 5.859261), 1)),
			(cv((5.981616, 0.674999, 5.859261), 1)),
			(cv((5.981616, 0.000102, 5.859261), 1))	),
	texture_vertices = (
			st( 0.000000, 0.015625 ),
			st( 1.000000, 0.015625 ),
			st( 0.000000, 0.984375 ),
			st( 1.000000, 0.984375 ),
			st( 1.000000, 0.984375 ),
			st( 1.000000, 0.984375 ),
			st( 1.000000, 0.015625 ),
			st( 0.000000, 0.015625 ),
			st( 0.000000, 0.984375 ),
			st( 1.000000, 0.984375 ),
			st( 0.000000, 0.984375 ),
			st( 1.000000, 0.015625 ),
			st( 0.000000, 0.015625 ),
			st( 0.000000, 0.015625 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 2, 5), 0 ),
		polygon ((2, 3, 0),(5, 6, 0), 0 ),
		polygon ((4, 5, 6),(7, 8, 9), 1 ),
		polygon ((6, 7, 4),(9, 11, 7), 1 ),
		polygon ((7, 1, 0),(12, 3, 1), 2 ),
		polygon ((1, 7, 6),(4, 13, 10), 2 )
	)
); /* end of polyset 'fence_section_5_a' */

polyset fence_section_5_b (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (Fencead02 ),
	shader = (Fencead08 ),
	shader = (Fencead04 ),
	casts_shadow = TRUE,
	vertices = ((cv((-0.853099, 0.000102, 5.859261), 1)),
			(cv((-0.853099, 0.674999, 5.859261), 1)),
			(cv((-2.562679, 0.674999, 5.859261), 1)),
			(cv((-2.562679, 0.000102, 5.859261), 1)),
			(cv((2.565663, 0.000102, 5.859261), 1)),
			(cv((2.565663, 0.674999, 5.859261), 1)),
			(cv((0.859205, 0.674999, 5.859261), 1)),
			(cv((0.859205, 0.000102, 5.859261), 1))	),
	texture_vertices = (
			st( 0.000000, 0.015625 ),
			st( 1.000000, 0.015625 ),
			st( 0.000000, 0.984375 ),
			st( 1.000000, 0.984375 ),
			st( 1.000000, 0.984375 ),
			st( 1.000000, 0.984375 ),
			st( 1.000000, 0.015625 ),
			st( 0.000000, 0.015625 ),
			st( 0.000000, 0.984375 ),
			st( 1.000000, 0.984375 ),
			st( 0.000000, 0.984375 ),
			st( 1.000000, 0.015625 ),
			st( 0.000000, 0.015625 ),
			st( 0.000000, 0.015625 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 2, 5), 0 ),
		polygon ((2, 3, 0),(5, 6, 0), 0 ),
		polygon ((4, 5, 6),(7, 8, 9), 1 ),
		polygon ((6, 7, 4),(9, 11, 7), 1 ),
		polygon ((7, 6, 1),(12, 10, 3), 2 ),
		polygon ((1, 0, 7),(4, 1, 13), 2 )
	)
); /* end of polyset 'fence_section_5_b' */

polyset fence_section_5_c (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (Fencead05 ),
	shader = (Fencead09 ),
	shader = (Fencead07 ),
	casts_shadow = TRUE,
	vertices = ((cv((-5.985549, 0.000102, 5.859261), 1)),
			(cv((-5.985549, 0.674999, 5.859261), 1)),
			(cv((-7.726443, 0.674999, 5.859261), 1)),
			(cv((-7.726443, 0.000102, 5.859261), 1)),
			(cv((-2.562679, 0.000102, 5.859261), 1)),
			(cv((-2.562679, 0.674999, 5.859261), 1)),
			(cv((-4.273244, 0.674999, 5.859261), 1)),
			(cv((-4.273244, 0.000102, 5.859261), 1))	),
	texture_vertices = (
			st( 0.000000, 0.015625 ),
			st( 1.000000, 0.015625 ),
			st( 0.000000, 0.984375 ),
			st( 1.000000, 0.984375 ),
			st( 1.000000, 0.984375 ),
			st( 1.000000, 0.984375 ),
			st( 1.000000, 0.015625 ),
			st( 0.000000, 0.015625 ),
			st( 0.000000, 0.984375 ),
			st( 1.000000, 0.984375 ),
			st( 0.000000, 0.984375 ),
			st( 1.000000, 0.015625 ),
			st( 0.000000, 0.015625 ),
			st( 0.000000, 0.015625 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 2, 5), 0 ),
		polygon ((2, 3, 0),(5, 6, 0), 0 ),
		polygon ((4, 5, 6),(7, 8, 9), 1 ),
		polygon ((6, 7, 4),(9, 11, 7), 1 ),
		polygon ((7, 6, 1),(12, 10, 3), 2 ),
		polygon ((1, 0, 7),(4, 1, 13), 2 )
	)
); /* end of polyset 'fence_section_5_c' */

ENVIRONMENT
background ( 
        color = (0.0, 0.0, 0.0)
);
shader_glow ( 
,
        glow_type =  LINEAR_GLOW,
        halo_type =  LINEAR_GLOW,
        auto_exposure = ON,
        quality = 0.5,
        threshold = 0.0,
        glow_color = (100.0, 100.0, 100.0),
        glow_intensity = 1.0,
        glow_spread = 0.05,
        glow_eccentricity = 0.1,
        glow_radial_noise = 0.0,
        glow_star_level = 0.0,
        glow_opacity = 0.0,
        halo_color = (100.0, 100.0, 100.0),
        halo_intensity = 1.0,
        halo_spread = 0.3,
        halo_eccentricity = 0.1,
        halo_radial_noise = 0.0,
        halo_star_level = 0.0,
        halo_lens_flare = 0.0,
        rotation = 0.0,
        radial_noise_frequency = 0.5,
        star_points = 4.0
);
photo_effects ( 
,
        film_grain = 0.0,
        filter = (255.0, 255.0, 255.0)
);
master_light ( 
,
        intensity = 1.0,
        light_color = (255.0, 255.0, 255.0)
);
dynamics ( 
,
        gravity = 1.0,
        air_density = 0.05,
        Floor = ON,
        floor_offset = 0.0,
        ceiling = OFF,
        ceiling_offset = 20.0,
        left = OFF,
        left_offset = -10.0,
        right = OFF,
        right_offset = 10.0,
        front = OFF,
        front_offset = -10.0,
        back = OFF,
        back_offset = 10.0,
        wall_friction = 0.0,
        wall_elasticity = 0.707,
        turbulence_intensity = 0.0,
        turbulence_spread = 0.5,
        turbulence_persistence = 5.0,
        turbulence_animated = ON,
        turbulence_space_resolution =  16,
        turbulence_time_resolution =  16,
        turbulence_roughness = 0.5,
        turbulence_variability = 0.5,
        turbulence_granularity = 0.0
);

MODEL
/* Only expression assignments should appear above this line and below the MODEL directive. */
/* Placing any other commands in the above section will produce incorrect expression behaviour. */
{
	instance advert1();
}
{
	instance advert2();
}
{
	instance advert3();
}
{
	instance advert04();
}
{
	instance advert05();
}
{
	instance advert06();
}
{
	instance advert07();
}
{
	instance oncourt();
}
{
	instance billboard_1();
}
{
	instance billboard_2();
}
{
	instance billboard_3();
}
{
	instance billboard4();
}
{
	instance fence_section_1_a();
}
{
	instance fence_section_1_c();
}
{
	instance fence_section_5_a();
}
{
	instance fence_section_5_b();
}
{
	instance fence_section_5_c();
}
{
	trn(0.0, 0.0, 12.0);
	{
		inst Light();
	}
	{
		trn(-2.0, -2.0, 0.0);
		Lightview = current_position(( 0.0,  0.0,  0.0));
	}
	{
		trn(0.0, 10.0, 0.0);
		Lightup = current_position(( 0.0,  0.0,  0.0));
	}
}
{
	{
		trn(-6.098625, 2.62318, 0.559991);
		camera (
			perspective = TRUE,
			eye   = ( 0.0,  0.0,  0.0),
			active = ON,
			pix   = "pix/oncrt4.sdl",
			view  = Camera_view,
			up  = Camera_up,
			aov = 55.0,
			filmaperture_x = 0.4,
			filmaperture_y = 0.285,
			filmoffset_x = 0.0,
			filmoffset_y = 0.0,
			placement_fit_code = 0,
			placement_shift = 0.0,
			aspect   = pixel_aspect,
			aspect_ratio_pixel = pixel_aspect,
			near = 0.1,
			far = 200.0,
			depth_of_field = 0.0,
			scaling_factor = 1.0,
			f_stop = 3.5,
			focal_distance = 12.0,
			auto_focus = OFF,
			motion_blur = 0.0
		);
	}
	{
		trn(-0.004612, 0.075459, -5.534286);
		Camera_view = current_position( (0, 0, 0) );
	}
	{
		trn(-5.898172, 3.582157, 0.359531);
		Camera_up = current_position( (0, 0, 0) );
	}
}

