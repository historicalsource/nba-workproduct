DEFINITION	/* ALIAS SDL File Version 8.5 */
			/* Apparently from wire file '/matt/mgilmore/user_data/NBAonNBC/wire/Nets/GOALS14e'. */
	version = 8.5;

	xleft  = 0;
	xright = 1279;
	ylow   = 0;
	yhigh  = 1023;
	resolution = 1280 1024;
	aalevelmin   = 3;
	aalevelmax   = 12;
	aathreshold  = 0.6;
	post_filter   = OFF;
	post_center   = 8;    /* Values for a bartlet filter. */
	post_adjacent = 1;
	post_diagonal = 1;

	composite_rendering = OFF;
	invisible_objects_cast_shadows = OFF;
	image_format = ALIAS;
	jitter       = ON;
	reduced_samples = OFF;
	textures_active    = ON;

	clamp_bumpsize = 0.0;

	up = yaxis;

	motion_blur_on = OFF;
	shutter_angle  = 144.0;
	animation  = OFF;
	startframe = 0.0;
	endframe = 0.0;
	fields          = FALSE;
	odd             = FALSE;
	even            = FALSE;
	odd_field_first = TRUE;

	triple Camera_view(0.0, 0.0, 0.0);
	triple Camera_up(0.0, 0.0, 0.0);

	subdivision_recursion_limit = 2;
	grid_cache = 4000;
	bbox_memory = FULL;
	rt_voxel_res_type = AUTOMATIC;

	max_reflections             = 10;
	max_refractions             = 10;
	max_shadow_level            = 10;
	preview_ray_trace           = OFF;

	scalar pixel_aspect ( 1.0 );
	hline_to_fill_color  = FALSE;
	hline_fill_color     = (255.0, 255.0, 255.0);
	hline_line_color     = (0.0, 255.0, 255.0);
	hline_isoparam_u     = 0;
	hline_isoparam_v     = 0;

	show_particles       = TRUE;
	simulation_substeps  = 1;
	simulation_frames_per_second = 30;

triple Lightview(0.0, 0.0, 0.0);
triple Lightup(0.0, 0.0, 0.0);

light Light ( model = ambient,
	active = ON,
	exclusive = FALSE,
	light_emission = ON,
	color = (255.0, 255.0, 255.0),
	shadow_color = (0.0, 0.0, 0.0),
	intensity = 1.0,
	force_type = OFF,
	force_intensity = 1.0,
	warp = OFF,
	glow_type = OFF,
	halo_type = OFF,
	fog_type = OFF,
	flare = OFF,
	psys_emission = OFF,
	shadow = FALSE,
	soft_shadows = FALSE,
	light_radius = 1.0,
	shadow_samples = 2.0,
	use_shadow_map = 0.0,
	ambient_shade = 0.011628
);

texture File#2 (
        procedure = file,
        rgbout = (18.497383, 0.0, 255.0),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/atlcush.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.05814,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = OFF,
        vwrap = OFF,
        invert = OFF
);

shader cush4 ( model = lambert,
        diffuse = 0.8,
        color = File#2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture WHITEPOSTtexture (
        procedure = file,
        rgbout = (241.787567, 249.559586, 255.0),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/whitpost.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader WHITEPOST ( model = lambert,
        diffuse = 0.8,
        color = WHITEPOSTtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture NETtexture5 (
        procedure = file,
        rgbout = (133.048538, 136.964493, 151.943008),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/seal.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = -0.01,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader seal ( model = lambert,
        diffuse = 0.8,
        color = NETtexture5,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture NETtexture#6 (
        procedure = file,
        rgbout = (151.943008, 143.597137, 99.983223),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/metal4.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = -0.01,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader METAL4 ( model = lambert,
        diffuse = 0.8,
        color = NETtexture#6,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture NETtexture2 (
        procedure = file,
        rgbout = (130.618286, 133.159958, 140.051819),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/backpad.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader BackPad ( model = lambert,
        diffuse = 0.8,
        color = NETtexture2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture TARGETtexture (
        procedure = file,
        rgbout = (255.0, 254.555023, 248.393784),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/target.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader TARGET ( model = lambert,
        diffuse = 0.8,
        color = TARGETtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture GLASStexture (
        procedure = file,
        rgbout = (0.0, 55.813946, 94.88372),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/glass.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader GLASS ( model = lambert,
        diffuse = 0.8,
        color = GLASStexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (201.627914, 201.627914, 201.627914),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture nbalog (
        procedure = file,
        rgbout = (0.0, 150.0, 255.0),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/NBAlog.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = OFF,
        vwrap = OFF,
        invert = OFF
);

shader NBAdecal ( model = lambert,
        diffuse = 0.8,
        color = nbalog,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture ORANGEtexture (
        procedure = file,
        rgbout = (255.0, 71.347153, 0.0),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/bracket.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader ORANGE ( model = lambert,
        diffuse = 0.8,
        color = ORANGEtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture HOOPtexture (
        procedure = file,
        rgbout = (255.0, 71.347153, 0.0),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/hoop.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader HOOP ( model = lambert,
        diffuse = 0.8,
        color = HOOPtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture NETtexture (
        procedure = file,
        rgbout = (151.943008, 143.597137, 99.983223),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/net.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = -0.01,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader NET ( model = lambert,
        diffuse = 0.8,
        color = NETtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture BUMPERtexture (
        procedure = file,
        rgbout = (43.813255, 73.097771, 132.124359),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/bumper.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader BUMPER ( model = lambert,
        diffuse = 0.8,
        color = BUMPERtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

polyset Rim2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (ORANGE ),
	shader = (HOOP ),
	casts_shadow = TRUE,
	vertices = ((cv((7.716642, 2.322238, -0.003079), 1)),
			(cv((7.648304, 2.322238, -0.003079), 1)),
			(cv((7.716642, 2.277873, -0.003079), 1)),
			(cv((7.648304, 2.322238, 0.044397), 1)),
			(cv((7.648304, 2.322238, -0.045593), 1)),
			(cv((7.716642, 2.322238, -0.045496), 1)),
			(cv((7.716642, 2.322238, 0.044288), 1)),
			(cv((7.511501, 2.322238, 0.186558), 1)),
			(cv((7.629322, 2.301843, -0.045496), 1)),
			(cv((7.598231, 2.322238, 0.136485), 1)),
			(cv((7.598231, 2.322238, -0.137121), 1)),
			(cv((7.58443, 2.301843, -0.123251), 1)),
			(cv((7.629322, 2.301843, 0.044288), 1)),
			(cv((7.506674, 2.301843, -0.168143), 1)),
			(cv((7.506674, 2.342989, -0.168143), 1)),
			(cv((7.58443, 2.342989, -0.123251), 1)),
			(cv((7.629322, 2.342989, -0.045496), 1)),
			(cv((7.629322, 2.342989, 0.044288), 1)),
			(cv((7.58443, 2.342989, 0.122044), 1)),
			(cv((7.58443, 2.301843, 0.122044), 1)),
			(cv((7.506674, 2.342989, 0.166936), 1)),
			(cv((7.506674, 2.301843, 0.166936), 1)),
			(cv((7.339135, 2.342989, -0.123251), 1)),
			(cv((7.416891, 2.342989, -0.168143), 1)),
			(cv((7.416891, 2.301843, -0.168143), 1)),
			(cv((7.416891, 2.342989, 0.166936), 1)),
			(cv((7.416891, 2.301843, 0.166936), 1)),
			(cv((7.339135, 2.301843, 0.122044), 1)),
			(cv((7.339135, 2.342989, 0.122044), 1)),
			(cv((7.294243, 2.301843, 0.044288), 1)),
			(cv((7.294243, 2.342989, 0.044288), 1)),
			(cv((7.294243, 2.342989, -0.045496), 1)),
			(cv((7.294243, 2.301843, -0.045496), 1)),
			(cv((7.339135, 2.301843, -0.123251), 1)),
			(cv((7.511501, 2.322238, -0.187194), 1)),
			(cv((7.411355, 2.322238, -0.187194), 1)),
			(cv((7.324626, 2.322238, -0.137121), 1)),
			(cv((7.274552, 2.322238, -0.050391), 1)),
			(cv((7.274552, 2.322238, 0.049755), 1)),
			(cv((7.324626, 2.322238, 0.136485), 1)),
			(cv((7.411355, 2.322238, 0.186558), 1))	),
	texture_vertices = (
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.500000, 0.000000 ),
			st( 0.967775, 0.749460 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.002079, 0.759382 ),
			st( 1.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 0.005198, 0.006656 ),
			st( 0.967775, 0.008639 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ) ),
	polygons = (
		polygon ((2, 1, 0),(2, 1, 0), 0 ),
		polygon ((3, 4, 5),(3, 12, 17), 0 ),
		polygon ((5, 6, 3),(17, 18, 3), 0 ),
		polygon ((13, 11, 10),(25, 23, 22), 1 ),
		polygon ((4, 8, 3),(13, 20, 4), 1 ),
		polygon ((10, 11, 8),(22, 23, 20), 1 ),
		polygon ((8, 4, 10),(20, 14, 22), 1 ),
		polygon ((3, 8, 12),(5, 20, 24), 1 ),
		polygon ((13, 14, 11),(25, 26, 23), 1 ),
		polygon ((11, 14, 15),(23, 26, 27), 1 ),
		polygon ((15, 8, 11),(27, 20, 23), 1 ),
		polygon ((15, 16, 8),(27, 28, 20), 1 ),
		polygon ((16, 17, 8),(28, 29, 20), 1 ),
		polygon ((8, 17, 12),(20, 29, 24), 1 ),
		polygon ((12, 17, 18),(24, 29, 30), 1 ),
		polygon ((18, 19, 12),(30, 31, 24), 1 ),
		polygon ((19, 18, 20),(31, 30, 32), 1 ),
		polygon ((20, 21, 19),(32, 33, 31), 1 ),
		polygon ((22, 23, 24),(34, 35, 36), 1 ),
		polygon ((25, 21, 20),(37, 33, 32), 1 ),
		polygon ((21, 25, 26),(33, 37, 38), 1 ),
		polygon ((23, 13, 24),(35, 25, 36), 1 ),
		polygon ((23, 14, 13),(35, 26, 25), 1 ),
		polygon ((25, 27, 26),(37, 39, 38), 1 ),
		polygon ((25, 28, 27),(37, 40, 39), 1 ),
		polygon ((27, 28, 29),(39, 40, 41), 1 ),
		polygon ((29, 28, 30),(41, 40, 42), 1 ),
		polygon ((29, 30, 31),(41, 42, 43), 1 ),
		polygon ((31, 32, 29),(43, 44, 41), 1 ),
		polygon ((32, 31, 33),(44, 43, 45), 1 ),
		polygon ((33, 31, 22),(45, 43, 34), 1 ),
		polygon ((22, 24, 33),(34, 36, 45), 1 ),
		polygon ((16, 10, 4),(28, 22, 15), 1 ),
		polygon ((10, 16, 15),(22, 28, 27), 1 ),
		polygon ((10, 15, 14),(22, 27, 26), 1 ),
		polygon ((14, 34, 10),(26, 46, 22), 1 ),
		polygon ((14, 35, 34),(26, 47, 46), 1 ),
		polygon ((35, 14, 23),(47, 26, 35), 1 ),
		polygon ((35, 23, 22),(47, 35, 34), 1 ),
		polygon ((22, 36, 35),(34, 48, 47), 1 ),
		polygon ((22, 37, 36),(34, 49, 48), 1 ),
		polygon ((37, 22, 31),(49, 34, 43), 1 ),
		polygon ((37, 31, 30),(49, 43, 42), 1 ),
		polygon ((30, 38, 37),(42, 50, 49), 1 ),
		polygon ((30, 39, 38),(42, 51, 50), 1 ),
		polygon ((39, 30, 28),(51, 42, 40), 1 ),
		polygon ((39, 28, 25),(51, 40, 37), 1 ),
		polygon ((25, 40, 39),(37, 52, 51), 1 ),
		polygon ((25, 7, 40),(37, 19, 52), 1 ),
		polygon ((7, 25, 20),(19, 37, 32), 1 ),
		polygon ((7, 20, 18),(19, 32, 30), 1 ),
		polygon ((18, 9, 7),(30, 21, 19), 1 ),
		polygon ((18, 3, 9),(30, 6, 21), 1 ),
		polygon ((3, 18, 17),(7, 30, 29), 1 ),
		polygon ((3, 17, 16),(8, 29, 28), 1 ),
		polygon ((16, 4, 3),(28, 16, 9), 1 ),
		polygon ((19, 9, 3),(31, 21, 10), 1 ),
		polygon ((3, 12, 19),(11, 24, 31), 1 ),
		polygon ((19, 7, 9),(31, 19, 21), 1 ),
		polygon ((19, 21, 7),(31, 33, 19), 1 ),
		polygon ((21, 26, 7),(33, 38, 19), 1 ),
		polygon ((40, 7, 26),(52, 19, 38), 1 ),
		polygon ((26, 27, 39),(38, 39, 51), 1 ),
		polygon ((39, 40, 26),(51, 52, 38), 1 ),
		polygon ((39, 27, 29),(51, 39, 41), 1 ),
		polygon ((29, 38, 39),(41, 50, 51), 1 ),
		polygon ((38, 29, 37),(50, 41, 49), 1 ),
		polygon ((37, 29, 32),(49, 41, 44), 1 ),
		polygon ((33, 37, 32),(45, 49, 44), 1 ),
		polygon ((37, 33, 36),(49, 45, 48), 1 ),
		polygon ((35, 33, 24),(47, 45, 36), 1 ),
		polygon ((33, 35, 36),(45, 47, 48), 1 ),
		polygon ((13, 35, 24),(25, 47, 36), 1 ),
		polygon ((35, 13, 34),(47, 25, 46), 1 ),
		polygon ((10, 34, 13),(22, 46, 25), 1 )
	)
); /* end of polyset 'Rim2' */

polyset decals2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (NBAdecal ),
	casts_shadow = TRUE,
	vertices = ((cv((7.732426, 2.308076, -0.508218), 1)),
			(cv((7.732426, 2.470653, -0.508218), 1)),
			(cv((7.732426, 2.470653, -0.579682), 1)),
			(cv((7.732426, 2.308076, -0.579682), 1)),
			(cv((7.723264, 2.308076, -0.579515), 1)),
			(cv((7.723264, 2.470653, -0.579515), 1)),
			(cv((7.723264, 2.470653, -0.508051), 1)),
			(cv((7.723264, 2.308076, -0.508051), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 0 ),
		polygon ((6, 7, 4),(6, 7, 4), 0 )
	)
); /* end of polyset 'decals2' */

polyset BackBoard2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (seal ),
	shader = (TARGET ),
	shader = (METAL4 ),
	shader = (BackPad ),
	casts_shadow = TRUE,
	vertices = ((cv((7.764421, 2.288114, -0.599813), 1)),
			(cv((7.70758, 2.288114, -0.599813), 1)),
			(cv((7.70758, 2.964677, -0.599813), 1)),
			(cv((7.764421, 2.964677, -0.599813), 1)),
			(cv((7.764421, 2.288114, 0.593652), 1)),
			(cv((7.764421, 2.964677, 0.593655), 1)),
			(cv((7.70758, 2.964677, 0.593655), 1)),
			(cv((7.739419, 2.355915, -0.165915), 1)),
			(cv((7.739419, 2.617597, -0.202269), 1)),
			(cv((7.739419, 2.3197, -0.202269), 1)),
			(cv((7.696747, 2.199556, 0.681369), 1)),
			(cv((7.696747, 2.259842, 0.62436), 1)),
			(cv((7.764421, 3.026545, -0.661682), 1)),
			(cv((7.764421, 2.226245, -0.661682), 1)),
			(cv((7.696504, 2.199557, -0.685327), 1)),
			(cv((7.696504, 2.259842, -0.628319), 1)),
			(cv((7.764421, 2.226245, 0.655521), 1)),
			(cv((7.764421, 3.026545, 0.655523), 1)),
			(cv((7.70758, 2.226245, 0.655521), 1)),
			(cv((7.70758, 2.226245, -0.661682), 1)),
			(cv((7.776043, 2.259842, -0.628319), 1)),
			(cv((7.70758, 3.026545, -0.661682), 1)),
			(cv((7.776043, 2.199557, -0.685327), 1)),
			(cv((7.776043, 2.199556, 0.681369), 1)),
			(cv((7.70758, 3.026545, 0.655523), 1)),
			(cv((7.70758, 2.288114, 0.593652), 1)),
			(cv((7.776043, 2.259842, 0.62436), 1)),
			(cv((7.739419, 2.581363, -0.165915), 1)),
			(cv((7.717951, 2.355915, -0.165915), 1)),
			(cv((7.717951, 2.355915, 0.159876), 1)),
			(cv((7.717951, 2.3197, 0.196111), 1)),
			(cv((7.739419, 2.3197, 0.196111), 1)),
			(cv((7.739419, 2.355915, 0.159876), 1)),
			(cv((7.717951, 2.3197, -0.202269), 1)),
			(cv((7.717951, 2.617597, -0.202269), 1)),
			(cv((7.739419, 2.617597, 0.196111), 1)),
			(cv((7.739419, 2.581363, 0.159876), 1)),
			(cv((7.717951, 2.581363, -0.165915), 1)),
			(cv((7.717951, 2.581363, 0.159876), 1)),
			(cv((7.717951, 2.617597, 0.196111), 1)),
			(cv((7.696584, 2.627634, -0.628319), 1)),
			(cv((7.696584, 2.627634, -0.687582), 1)),
			(cv((7.776043, 2.627634, -0.687582), 1)),
			(cv((7.776043, 2.627634, -0.628319), 1)),
			(cv((7.696584, 2.627634, 0.62436), 1)),
			(cv((7.776043, 2.627634, 0.62436), 1)),
			(cv((7.776043, 2.627634, 0.681997), 1)),
			(cv((7.696584, 2.627634, 0.681997), 1))	),
	texture_vertices = (
			st( 1.000000, 0.000000 ),
			st( 0.010265, 0.513449 ),
			st( 0.010265, 0.513449 ),
			st( 0.006843, 0.559621 ),
			st( 0.006843, 0.559621 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.989735, 0.521597 ),
			st( 0.993157, 0.516165 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.991446, 0.521597 ),
			st( 0.996578, 0.540609 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.006843, 0.524313 ),
			st( 0.008554, 0.535177 ),
			st( 0.006843, 0.524313 ),
			st( 0.008554, 0.535177 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.750000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 0.000000 ),
			st( 0.250000, 0.000000 ),
			st( 0.750000, 1.000000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.993157, 0.005954 ),
			st( 0.991446, 0.008670 ),
			st( 0.991446, 0.008670 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.010265, 0.005954 ),
			st( 0.001711, 0.008670 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.250000, 0.500000 ),
			st( 0.750000, 0.000000 ),
			st( 0.750000, 0.000000 ),
			st( 0.250000, 1.000000 ),
			st( 0.750000, 0.500000 ),
			st( 0.750000, 0.500000 ),
			st( 0.750000, 0.500000 ),
			st( 0.991446, 0.011386 ),
			st( 0.993157, 0.011386 ),
			st( 0.993157, 0.011386 ),
			st( 0.991446, 0.011386 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.010265, 0.014102 ),
			st( 0.010265, 0.016818 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.750000, 1.000000 ),
			st( 0.750000, 0.000000 ),
			st( 0.750000, 0.000000 ),
			st( 0.750000, 0.000000 ),
			st( 1.000000, 0.500000 ),
			st( 0.750000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 0.000000 ),
			st( 0.250000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.250000, 1.000000 ),
			st( 0.250000, 0.000000 ),
			st( 0.250000, 0.000000 ),
			st( 0.250000, 0.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.032450, 0.489109 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.030905, 0.061622 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.270643, 0.058326 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.270643, 0.485812 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.270643, 0.485812 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.500000 ),
			st( 0.032450, 0.489109 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.030905, 0.061622 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.270643, 0.058326 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.500000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 6, 7), 0 ),
		polygon ((2, 3, 0),(7, 11, 0), 0 ),
		polygon ((4, 5, 6),(16, 22, 28), 0 ),
		polygon ((7, 8, 9),(29, 30, 31), 1 ),
		polygon ((0, 3, 12),(1, 12, 41), 2 ),
		polygon ((12, 13, 0),(41, 47, 2), 2 ),
		polygon ((5, 4, 16),(23, 17, 58), 2 ),
		polygon ((5, 17, 12),(24, 64, 42), 2 ),
		polygon ((0, 13, 16),(3, 48, 59), 2 ),
		polygon ((0, 16, 4),(4, 60, 18), 2 ),
		polygon ((16, 17, 5),(61, 65, 25), 2 ),
		polygon ((12, 3, 5),(43, 13, 26), 2 ),
		polygon ((18, 19, 1),(68, 69, 6), 2 ),
		polygon ((21, 2, 1),(74, 8, 6), 2 ),
		polygon ((6, 24, 18),(28, 79, 68), 2 ),
		polygon ((25, 18, 1),(80, 68, 6), 2 ),
		polygon ((13, 12, 21),(49, 44, 74), 2 ),
		polygon ((24, 21, 12),(79, 74, 45), 2 ),
		polygon ((21, 19, 13),(74, 69, 50), 2 ),
		polygon ((12, 17, 24),(46, 66, 79), 2 ),
		polygon ((24, 17, 16),(79, 67, 62), 2 ),
		polygon ((0, 4, 1),(5, 19, 6), 0 ),
		polygon ((6, 25, 4),(28, 81, 20), 0 ),
		polygon ((16, 18, 24),(63, 68, 79), 2 ),
		polygon ((18, 25, 6),(68, 82, 28), 2 ),
		polygon ((21, 24, 6),(74, 79, 28), 2 ),
		polygon ((6, 2, 21),(28, 9, 74), 2 ),
		polygon ((1, 19, 21),(6, 69, 74), 2 ),
		polygon ((27, 8, 7),(88, 30, 29), 1 ),
		polygon ((28, 29, 30),(89, 90, 91), 1 ),
		polygon ((31, 32, 7),(92, 93, 29), 1 ),
		polygon ((33, 34, 28),(94, 95, 89), 1 ),
		polygon ((35, 36, 32),(96, 97, 93), 1 ),
		polygon ((35, 8, 36),(96, 30, 97), 1 ),
		polygon ((32, 31, 35),(93, 92, 96), 1 ),
		polygon ((37, 34, 38),(98, 95, 99), 1 ),
		polygon ((29, 38, 39),(90, 99, 100), 1 ),
		polygon ((39, 30, 29),(100, 91, 90), 1 ),
		polygon ((38, 34, 39),(99, 95, 100), 1 ),
		polygon ((36, 8, 27),(97, 30, 88), 1 ),
		polygon ((7, 9, 31),(29, 31, 92), 1 ),
		polygon ((28, 34, 37),(89, 95, 98), 1 ),
		polygon ((3, 2, 6),(14, 10, 28), 0 ),
		polygon ((6, 5, 3),(28, 27, 15), 0 ),
		polygon ((4, 25, 1),(21, 83, 6), 0 ),
		polygon ((30, 33, 28),(91, 94, 89), 1 ),
		polygon ((40, 41, 42),(101, 105, 110), 3 ),
		polygon ((42, 43, 40),(110, 114, 101), 3 ),
		polygon ((44, 45, 46),(117, 121, 126), 3 ),
		polygon ((46, 47, 44),(126, 130, 117), 3 ),
		polygon ((44, 47, 10),(118, 131, 32), 3 ),
		polygon ((10, 11, 44),(32, 37, 119), 3 ),
		polygon ((11, 10, 14),(37, 32, 51), 3 ),
		polygon ((14, 15, 11),(51, 54, 37), 3 ),
		polygon ((15, 14, 41),(54, 51, 106), 3 ),
		polygon ((41, 40, 15),(107, 102, 54), 3 ),
		polygon ((20, 43, 42),(70, 115, 111), 3 ),
		polygon ((42, 22, 20),(112, 75, 70), 3 ),
		polygon ((23, 46, 45),(76, 127, 122), 3 ),
		polygon ((45, 26, 23),(123, 84, 76), 3 ),
		polygon ((20, 22, 23),(70, 75, 76), 3 ),
		polygon ((23, 26, 20),(76, 84, 70), 3 ),
		polygon ((41, 14, 22),(108, 52, 75), 3 ),
		polygon ((22, 42, 41),(75, 113, 109), 3 ),
		polygon ((10, 47, 46),(33, 132, 128), 3 ),
		polygon ((46, 23, 10),(129, 77, 34), 3 ),
		polygon ((10, 23, 22),(35, 78, 75), 3 ),
		polygon ((22, 14, 10),(75, 53, 36), 3 ),
		polygon ((45, 44, 11),(124, 120, 38), 3 ),
		polygon ((11, 26, 45),(39, 85, 125), 3 ),
		polygon ((15, 20, 26),(55, 71, 86), 3 ),
		polygon ((26, 11, 15),(87, 40, 56), 3 ),
		polygon ((20, 15, 40),(72, 57, 103), 3 ),
		polygon ((40, 43, 20),(104, 116, 73), 3 )
	)
); /* end of polyset 'BackBoard2' */

polyset glass2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (GLASS ),
	casts_shadow = TRUE,
	vertices = ((cv((7.728133, 2.96465, -0.599765), 1)),
			(cv((7.728133, 2.288141, -0.599765), 1)),
			(cv((7.728133, 2.288141, 0.593604), 1)),
			(cv((7.728133, 2.96465, 0.593604), 1))	),
	texture_vertices = (
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 )
	)
); /* end of polyset 'glass2' */

polyset GoalStand2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (METAL4 ),
	shader = (WHITEPOST ),
	shader = (BUMPER ),
	casts_shadow = TRUE,
	vertices = ((cv((7.804053, 2.286801, -0.545213), 1)),
			(cv((7.761208, 2.328691, -0.614256), 1)),
			(cv((7.804053, 2.374368, -0.545213), 1)),
			(cv((7.804104, 2.374054, -0.679737), 1)),
			(cv((7.804104, 2.286497, -0.679737), 1)),
			(cv((7.804104, 2.286497, 0.679735), 1)),
			(cv((7.761191, 2.330599, 0.614518), 1)),
			(cv((7.804104, 2.374054, 0.679735), 1)),
			(cv((7.804053, 2.374368, 0.545211), 1)),
			(cv((7.804053, 2.286801, 0.545211), 1)),
			(cv((8.874998, 2.501257, 0.0543), 1)),
			(cv((8.874998, 2.501257, -0.0543), 1)),
			(cv((8.874998, 2.296687, -0.0543), 1)),
			(cv((10.047919, 1.238626, 0.0), 1)),
			(cv((10.071075, 1.272513, 0.027879), 1)),
			(cv((10.150331, 1.049741, 0.027879), 1)),
			(cv((8.87407, 2.499232, -0.027879), 1)),
			(cv((10.071075, 1.272513, -0.027879), 1)),
			(cv((10.092854, 1.106988, 0.0), 1)),
			(cv((8.87407, 2.499232, 0.027879), 1)),
			(cv((8.87407, 2.452516, 0.0), 1)),
			(cv((10.150331, 1.049741, -0.027879), 1)),
			(cv((8.874998, 2.296687, 0.0543), 1)),
			(cv((10.268769, 0.84343, 0.053223), 1)),
			(cv((10.268769, 0.84343, -0.053223), 1)),
			(cv((8.87407, 2.296739, -0.053223), 1)),
			(cv((10.310068, 0.883319, -0.053223), 1)),
			(cv((10.310068, 0.883319, 0.053223), 1)),
			(cv((8.87407, 2.36443, 0.053223), 1)),
			(cv((8.87407, 2.296739, 0.053223), 1)),
			(cv((8.87407, 2.36443, -0.053223), 1)),
			(cv((10.233562, 0.81147, 0.192735), 1)),
			(cv((10.233562, 0.81147, -0.198667), 1)),
			(cv((10.233562, 0.915917, -0.198743), 1)),
			(cv((10.233562, 0.915917, 0.192812), 1)),
			(cv((10.338566, 0.81147, 0.192735), 1)),
			(cv((10.338566, 0.915917, 0.192812), 1)),
			(cv((10.338566, 0.915917, -0.198743), 1)),
			(cv((10.338566, 0.81147, -0.198667), 1)),
			(cv((10.218313, 0.811042, -0.234929), 1)),
			(cv((10.218313, 0.399368, -0.404628), 1)),
			(cv((10.362469, 0.399368, -0.404628), 1)),
			(cv((10.362469, 0.811042, -0.234929), 1)),
			(cv((10.362469, 0.811042, -0.1096), 1)),
			(cv((10.362469, 0.399368, -0.279298), 1)),
			(cv((10.218313, 0.811042, -0.1096), 1)),
			(cv((10.218313, 0.399368, -0.279298), 1)),
			(cv((10.362469, 0.399368, 0.398469), 1)),
			(cv((10.218313, 0.399368, 0.398469), 1)),
			(cv((10.218313, 0.811042, 0.228771), 1)),
			(cv((10.362469, 0.811042, 0.228771), 1)),
			(cv((10.362469, 0.811042, 0.103441), 1)),
			(cv((10.362469, 0.399368, 0.273139), 1)),
			(cv((10.218313, 0.811042, 0.103441), 1)),
			(cv((10.218313, 0.399368, 0.273139), 1)),
			(cv((7.804105, 2.286497, 0.679735), 1)),
			(cv((7.804053, 2.286801, 0.545211), 1)),
			(cv((7.926028, 2.286801, 0.545211), 1)),
			(cv((7.92608, 2.286497, 0.679735), 1)),
			(cv((7.940824, 2.296435, 0.666122), 1)),
			(cv((7.92608, 2.374054, 0.679735), 1)),
			(cv((7.940824, 2.36443, 0.666122), 1)),
			(cv((7.804105, 2.374054, 0.679735), 1)),
			(cv((7.804053, 2.374368, 0.545211), 1)),
			(cv((7.940772, 2.296435, 0.562631), 1)),
			(cv((7.926028, 2.374368, 0.545211), 1)),
			(cv((7.940773, 2.36443, 0.562631), 1)),
			(cv((8.794135, 2.296687, 0.0), 1)),
			(cv((8.874998, 2.501257, -0.0543), 1)),
			(cv((8.794135, 2.501257, 0.0), 1)),
			(cv((8.874998, 2.501257, 0.0543), 1)),
			(cv((7.804053, 2.374368, -0.545213), 1)),
			(cv((8.87407, 2.296739, -0.053223), 1)),
			(cv((8.87407, 2.36443, -0.053223), 1)),
			(cv((7.940734, 2.36443, 0.562533), 1)),
			(cv((8.87407, 2.36443, 0.053223), 1)),
			(cv((7.940786, 2.364115, 0.666512), 1)),
			(cv((7.804053, 2.286801, -0.545213), 1)),
			(cv((7.804105, 2.286497, -0.679737), 1)),
			(cv((7.804105, 2.374054, -0.679737), 1)),
			(cv((8.874998, 2.296687, 0.0543), 1)),
			(cv((7.92608, 2.286497, -0.679737), 1)),
			(cv((7.926028, 2.286801, -0.545213), 1)),
			(cv((7.940772, 2.296435, -0.562633), 1)),
			(cv((7.940824, 2.296435, -0.666124), 1)),
			(cv((7.940824, 2.36443, -0.666124), 1)),
			(cv((7.926028, 2.374368, -0.545213), 1)),
			(cv((7.940773, 2.36443, -0.562633), 1)),
			(cv((8.87407, 2.296739, 0.053223), 1)),
			(cv((7.940786, 2.296435, 0.666512), 1)),
			(cv((7.940734, 2.296739, 0.562533), 1)),
			(cv((7.92608, 2.374054, -0.679737), 1)),
			(cv((7.763292, 3.024288, 0.635946), 1)),
			(cv((7.763807, 2.979924, 0.632627), 1)),
			(cv((8.794315, 2.449137, 0.0), 1)),
			(cv((8.874998, 2.296687, -0.0543), 1)),
			(cv((7.763807, 2.979329, -0.630248), 1)),
			(cv((7.763292, 3.023693, -0.633567), 1)),
			(cv((8.813829, 2.449849, 0.013271), 1)),
			(cv((7.763875, 2.978872, 0.657911), 1)),
			(cv((8.795051, 2.499806, 0.0), 1)),
			(cv((7.763875, 2.978277, -0.655532), 1)),
			(cv((8.813829, 2.449849, -0.013271), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 0.500000, 0.500000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.500000, 0.500000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.006843, 0.986420 ),
			st( 0.006843, 0.986420 ),
			st( 0.993157, 0.989136 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.900000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 0.008669, 0.283240 ),
			st( 0.008669, 0.283240 ),
			st( 1.000000, 0.500000 ),
			st( 0.984829, 0.283240 ),
			st( 0.984829, 0.283240 ),
			st( 1.000000, 0.500000 ),
			st( 0.900000, 0.000000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 0.902167, 0.279799 ),
			st( 0.900000, 0.500000 ),
			st( 0.902167, 0.279799 ),
			st( 0.900000, 0.500000 ),
			st( 0.993157, 0.752716 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 1.000000 ),
			st( 0.995775, 0.003926 ),
			st( 0.995775, 0.003926 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.750000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 0.316431, 0.027525 ),
			st( 1.000000, 0.000000 ),
			st( 0.316431, 0.027525 ),
			st( 1.000000, 0.250000 ),
			st( 0.316431, 0.267143 ),
			st( 0.316431, 0.267143 ),
			st( 0.000000, 0.250000 ),
			st( 0.316431, 0.267143 ),
			st( 0.316431, 0.267143 ),
			st( 0.000000, 0.750000 ),
			st( 0.705243, 0.027525 ),
			st( 0.705243, 0.027525 ),
			st( 0.000000, 0.500000 ),
			st( 0.705243, 0.267143 ),
			st( 1.000000, 0.500000 ),
			st( 0.705243, 0.267143 ),
			st( 1.000000, 0.750000 ),
			st( 0.705243, 0.027525 ),
			st( 0.705243, 0.027525 ),
			st( 1.000000, 0.250000 ),
			st( 0.364112, 0.542395 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.364112, 0.233964 ),
			st( 0.364112, 0.233964 ),
			st( 1.000000, 1.000000 ),
			st( 0.568701, 0.233964 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 1.000000 ),
			st( 0.993662, 0.010634 ),
			st( 0.575203, 0.549276 ),
			st( 0.575203, 0.549276 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.364112, 0.542395 ),
			st( 1.000000, 0.500000 ),
			st( 0.364112, 0.233964 ),
			st( 0.364112, 0.233964 ),
			st( 1.000000, 0.750000 ),
			st( 0.568701, 0.233964 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 1.000000 ),
			st( 0.997887, 0.000573 ),
			st( 0.575203, 0.549276 ),
			st( 0.575203, 0.549276 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 0.200000, 0.250000 ),
			st( 0.200000, 0.000000 ),
			st( 0.200000, 0.997730 ),
			st( 0.200000, 0.997730 ),
			st( 0.200000, 0.997730 ),
			st( 0.800000, 0.000000 ),
			st( 0.799502, 0.997902 ),
			st( 0.799502, 0.997902 ),
			st( 0.799502, 0.997902 ),
			st( 0.800000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.800000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.200000, 0.500000 ),
			st( 0.200000, 0.750000 ),
			st( 1.000000, 0.000000 ),
			st( 0.999003, 0.998521 ),
			st( 0.999003, 0.998521 ),
			st( 0.800000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 0.989735, 0.515183 ),
			st( 0.008669, 0.745393 ),
			st( 0.570868, 0.708712 ),
			st( 0.011976, 0.513580 ),
			st( 0.015628, 0.516296 ),
			st( 0.244909, 0.504547 ),
			st( 0.017339, 0.735071 ),
			st( 0.023841, 0.705272 ),
			st( 0.200000, 0.750000 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.505432 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.200000, 0.997730 ),
			st( 0.200000, 0.000000 ),
			st( 0.200000, 0.000000 ),
			st( 0.200000, 0.250000 ),
			st( 0.200000, 0.500000 ),
			st( 0.393147, 0.732797 ),
			st( 0.800000, 0.250000 ),
			st( 0.800000, 0.000000 ),
			st( 0.799502, 0.997902 ),
			st( 0.799502, 0.997902 ),
			st( 0.799502, 0.997902 ),
			st( 0.800000, 0.000000 ),
			st( 0.800000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.999003, 0.998521 ),
			st( 0.999003, 0.998521 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.995775, 0.003926 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.500000 ),
			st( 0.800000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.505432 ),
			st( 1.000000, 0.505432 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 1.000000 ),
			st( 0.995775, 0.003926 ),
			st( 0.800000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 0.989163, 0.745393 ),
			st( 0.000000, 0.750000 ),
			st( 0.000000, 0.500000 ),
			st( 0.997833, 0.745393 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.002167, 0.752274 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.500000 ),
			st( 0.006502, 0.738511 ),
			st( 0.000000, 1.000000 ),
			st( 0.982661, 0.745393 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.982661, 0.745393 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((3, 2, 1),(3, 2, 1), 0 ),
		polygon ((1, 4, 3),(1, 4, 3), 0 ),
		polygon ((1, 0, 4),(1, 0, 4), 0 ),
		polygon ((5, 6, 7),(5, 6, 7), 0 ),
		polygon ((8, 7, 6),(8, 7, 6), 0 ),
		polygon ((6, 9, 8),(6, 9, 8), 0 ),
		polygon ((6, 5, 9),(6, 5, 9), 0 ),
		polygon ((10, 11, 12),(10, 11, 12), 1 ),
		polygon ((13, 14, 15),(13, 14, 15), 1 ),
		polygon ((16, 17, 14),(16, 19, 14), 1 ),
		polygon ((15, 18, 13),(15, 23, 13), 1 ),
		polygon ((14, 19, 16),(14, 24, 16), 1 ),
		polygon ((14, 13, 20),(14, 13, 25), 1 ),
		polygon ((21, 17, 13),(26, 20, 13), 1 ),
		polygon ((21, 15, 14),(27, 15, 14), 1 ),
		polygon ((20, 19, 14),(25, 24, 14), 1 ),
		polygon ((16, 20, 13),(17, 25, 13), 1 ),
		polygon ((13, 17, 16),(13, 21, 18), 1 ),
		polygon ((18, 21, 13),(23, 28, 13), 1 ),
		polygon ((14, 17, 21),(14, 22, 29), 1 ),
		polygon ((12, 22, 10),(12, 30, 10), 1 ),
		polygon ((23, 24, 25),(31, 32, 35), 1 ),
		polygon ((26, 27, 28),(37, 38, 39), 1 ),
		polygon ((23, 25, 29),(31, 35, 40), 1 ),
		polygon ((28, 30, 26),(39, 41, 37), 1 ),
		polygon ((24, 30, 25),(33, 41, 36), 1 ),
		polygon ((28, 27, 23),(39, 38, 31), 1 ),
		polygon ((24, 26, 30),(34, 37, 41), 1 ),
		polygon ((23, 29, 28),(31, 40, 39), 1 ),
		polygon ((31, 32, 33),(42, 44, 46), 1 ),
		polygon ((33, 34, 31),(46, 49, 42), 1 ),
		polygon ((35, 36, 37),(52, 55, 57), 1 ),
		polygon ((37, 38, 35),(57, 59, 52), 1 ),
		polygon ((36, 34, 33),(55, 49, 46), 1 ),
		polygon ((33, 37, 36),(46, 57, 55), 1 ),
		polygon ((39, 40, 41),(62, 64, 65), 1 ),
		polygon ((41, 42, 39),(65, 66, 62), 1 ),
		polygon ((43, 42, 41),(69, 66, 65), 1 ),
		polygon ((41, 44, 43),(65, 71, 69), 1 ),
		polygon ((45, 43, 44),(72, 69, 71), 1 ),
		polygon ((44, 46, 45),(71, 76, 72), 1 ),
		polygon ((39, 45, 46),(62, 73, 77), 1 ),
		polygon ((46, 40, 39),(78, 64, 62), 1 ),
		polygon ((47, 48, 49),(79, 80, 81), 1 ),
		polygon ((49, 50, 47),(81, 83, 79), 1 ),
		polygon ((47, 50, 51),(79, 83, 86), 1 ),
		polygon ((51, 52, 47),(86, 88, 79), 1 ),
		polygon ((52, 51, 53),(88, 86, 89), 1 ),
		polygon ((53, 54, 52),(89, 93, 88), 1 ),
		polygon ((54, 53, 49),(94, 90, 81), 1 ),
		polygon ((49, 48, 54),(81, 80, 95), 1 ),
		polygon ((38, 37, 33),(60, 58, 47), 1 ),
		polygon ((33, 32, 38),(48, 45, 61), 1 ),
		polygon ((34, 36, 35),(50, 56, 53), 1 ),
		polygon ((35, 31, 34),(54, 43, 51), 1 ),
		polygon ((50, 49, 53),(84, 82, 91), 1 ),
		polygon ((51, 50, 53),(87, 85, 92), 1 ),
		polygon ((45, 39, 42),(74, 63, 67), 1 ),
		polygon ((45, 42, 43),(75, 68, 70), 1 ),
		polygon ((55, 56),(96, 97), 2 ),
		polygon ((55),(96), 2 ),
		polygon ((57, 56, 55),(101, 97, 96), 2 ),
		polygon ((55, 58, 57),(96, 105, 101), 2 ),
		polygon ((59, 58, 60),(106, 105, 107), 2 ),
		polygon ((60, 61, 59),(107, 108, 106), 2 ),
		polygon ((62, 60, 58),(109, 107, 105), 2 ),
		polygon ((58, 55, 62),(105, 96, 109), 2 ),
		polygon ((63, 62),(110, 109), 2 ),
		polygon ((63),(110), 2 ),
		polygon ((64, 57, 58),(111, 101, 105), 2 ),
		polygon ((58, 59, 64),(105, 106, 111), 2 ),
		polygon ((62, 55),(109, 96), 2 ),
		polygon ((55),(96), 2 ),
		polygon ((65, 60, 62),(114, 107, 109), 2 ),
		polygon ((65, 62, 63),(114, 109, 110), 2 ),
		polygon ((56, 63),(98, 110), 2 ),
		polygon ((56),(99), 2 ),
		polygon ((63, 56, 57),(110, 100, 102), 2 ),
		polygon ((57, 65, 63),(103, 114, 110), 2 ),
		polygon ((65, 57, 64),(114, 104, 112), 2 ),
		polygon ((64, 66, 65),(113, 115, 114), 2 ),
		polygon ((65, 66, 61),(114, 115, 108), 2 ),
		polygon ((61, 60, 65),(108, 107, 114), 2 ),
		polygon ((67, 68, 69),(116, 117, 119), 1 ),
		polygon ((67, 69, 70),(116, 120, 122), 1 ),
		polygon ((71),(124), 2 ),
		polygon ((72, 73, 74),(125, 131, 132), 1 ),
		polygon ((75, 76, 74),(133, 136, 132), 1 ),
		polygon ((71, 77),(124, 137), 2 ),
		polygon ((78, 79),(140, 141), 2 ),
		polygon ((70, 80, 67),(122, 142, 116), 1 ),
		polygon ((81, 82, 83),(143, 144, 150), 2 ),
		polygon ((83, 84, 81),(150, 155, 143), 2 ),
		polygon ((72, 73, 85),(125, 131, 161), 1 ),
		polygon ((83, 82, 86),(151, 145, 167), 2 ),
		polygon ((77),(137), 2 ),
		polygon ((74, 73, 75),(132, 131, 133), 1 ),
		polygon ((86, 87, 83),(167, 168, 152), 2 ),
		polygon ((88, 89, 76),(173, 174, 136), 1 ),
		polygon ((82, 77, 71),(146, 137, 124), 2 ),
		polygon ((76, 75, 88),(136, 133, 173), 1 ),
		polygon ((71, 86, 82),(124, 167, 147), 2 ),
		polygon ((72, 90, 89),(126, 175, 174), 1 ),
		polygon ((86, 91, 85),(167, 177, 162), 2 ),
		polygon ((89, 88, 72),(174, 173, 127), 1 ),
		polygon ((85, 87, 86),(163, 168, 167), 2 ),
		polygon ((92, 93, 94),(178, 179, 180), 1 ),
		polygon ((68, 67, 95),(117, 116, 181), 1 ),
		polygon ((94, 96, 97),(180, 182, 183), 1 ),
		polygon ((87, 85, 73),(169, 164, 131), 1 ),
		polygon ((73, 75, 87),(131, 134, 170), 1 ),
		polygon ((88, 72, 84),(173, 128, 156), 1 ),
		polygon ((88, 83, 87),(173, 153, 171), 1 ),
		polygon ((87, 75, 88),(172, 135, 173), 1 ),
		polygon ((98, 99, 92),(184, 187, 178), 1 ),
		polygon ((68, 70, 69),(118, 123, 121), 1 ),
		polygon ((92, 100, 98),(178, 189, 184), 1 ),
		polygon ((91, 81, 84),(177, 143, 157), 2 ),
		polygon ((97, 101, 102),(183, 190, 192), 1 ),
		polygon ((102, 101, 96),(193, 191, 182), 1 ),
		polygon ((85, 84, 72),(165, 158, 129), 1 ),
		polygon ((84, 85, 91),(159, 166, 177), 2 ),
		polygon ((98, 94, 93),(185, 180, 179), 1 ),
		polygon ((74, 90, 72),(132, 176, 130), 1 ),
		polygon ((78),(140), 2 ),
		polygon ((93, 99, 98),(179, 188, 186), 1 ),
		polygon ((94, 100, 92),(180, 189, 178), 1 ),
		polygon ((79, 91, 86),(141, 177, 167), 2 ),
		polygon ((71, 79, 86),(124, 141, 167), 2 ),
		polygon ((84, 83, 88),(160, 154, 173), 1 ),
		polygon ((96, 94, 102),(182, 180, 194), 1 ),
		polygon ((97, 100, 94),(183, 189, 180), 1 ),
		polygon ((102, 100, 97),(195, 189, 183), 1 ),
		polygon ((77, 78),(138, 140), 2 ),
		polygon ((78),(140), 2 ),
		polygon ((81, 91, 79),(143, 177, 141), 2 ),
		polygon ((79, 78, 81),(141, 140, 143), 2 ),
		polygon ((82, 81, 78),(148, 143, 140), 2 ),
		polygon ((78, 77, 82),(140, 139, 149), 2 ),
		polygon ((79, 71),(141, 124), 2 )
	)
); /* end of polyset 'GoalStand2' */

polyset goal_base2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (WHITEPOST ),
	shader = (cush4 ),
	casts_shadow = TRUE,
	vertices = ((cv((9.638247, 1.332381, -0.083869), 1)),
			(cv((9.690105, 1.332381, -0.083869), 1)),
			(cv((9.638247, 1.777075, -0.083869), 1)),
			(cv((9.690105, 1.777075, -0.083869), 1)),
			(cv((9.690105, 1.332381, 0.052033), 1)),
			(cv((9.690105, 1.777075, 0.052033), 1)),
			(cv((9.638247, 1.777075, 0.052033), 1)),
			(cv((9.638247, 1.332381, 0.052033), 1)),
			(cv((9.638247, 1.777075, 0.083855), 1)),
			(cv((9.690105, 1.777075, 0.083855), 1)),
			(cv((9.638247, 1.777075, -0.052047), 1)),
			(cv((9.690105, 1.777075, -0.052047), 1)),
			(cv((9.690105, 1.332381, -0.052047), 1)),
			(cv((9.638247, 1.332381, -0.052047), 1)),
			(cv((9.690105, 1.332381, 0.083855), 1)),
			(cv((9.638247, 1.332381, 0.083855), 1)),
			(cv((9.490394, 0.883183, 0.195893), 1)),
			(cv((9.490393, 1.332381, 0.195893), 1)),
			(cv((9.690105, 1.332381, 0.195893), 1)),
			(cv((9.690105, 0.883183, 0.195893), 1)),
			(cv((11.347206, 0.000006, -0.406408), 1)),
			(cv((11.347206, 0.000006, -0.003079), 1)),
			(cv((11.347206, 0.39915, -0.003079), 1)),
			(cv((11.347206, 0.39915, -0.406408), 1)),
			(cv((9.690105, 1.332381, -0.205063), 1)),
			(cv((9.690105, 1.332381, -0.003079), 1)),
			(cv((9.490393, 1.332381, -0.003079), 1)),
			(cv((9.490393, 1.332381, -0.205063), 1)),
			(cv((9.490393, 0.000006, -0.406408), 1)),
			(cv((9.490393, 0.399459, -0.405921), 1)),
			(cv((9.690105, 0.883183, -0.205063), 1)),
			(cv((9.490394, 0.399459, 0.39675), 1)),
			(cv((11.347206, 0.39915, 0.397237), 1)),
			(cv((11.347206, 0.000006, 0.397237), 1)),
			(cv((9.490394, 0.000006, 0.397237), 1)),
			(cv((9.490393, 0.883183, -0.205063), 1)),
			(cv((9.690105, 0.399459, -0.405921), 1)),
			(cv((9.690105, 0.399459, 0.39675), 1))	),
	texture_vertices = (
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 0.500000 ),
			st( 0.457387, 0.133831 ),
			st( 0.457387, 0.133831 ),
			st( 1.000000, 0.750000 ),
			st( 0.455496, 0.647953 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 0.002832, 0.003999 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.996219, 0.009542 ),
			st( 0.797702, 0.651839 ),
			st( 0.797702, 0.651839 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.790139, 0.147953 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.457387, 0.133831 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.455496, 0.647953 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.250000 ),
			st( 0.790139, 0.147953 ),
			st( 0.996219, 0.009542 ),
			st( 0.797702, 0.651839 ),
			st( 0.797702, 0.651839 ),
			st( 1.000000, 1.000000 ),
			st( 0.002832, 0.003999 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.750000 ),
			st( 0.000000, 0.500000 ),
			st( 0.700393, 0.700648 ),
			st( 0.967801, 0.698498 ),
			st( 0.967997, 0.698498 ),
			st( 0.967997, 0.698498 ),
			st( 0.700393, 0.700648 ),
			st( 0.700393, 0.700648 ),
			st( 0.699455, 0.997775 ),
			st( 0.962701, 0.997573 ),
			st( 0.704190, 0.996506 ),
			st( 0.704190, 0.996506 ),
			st( 0.962701, 0.997573 ),
			st( 0.574900, 0.997798 ),
			st( 0.726952, 0.997310 ),
			st( 0.726952, 0.997310 ),
			st( 0.574648, 0.996116 ),
			st( 0.574240, 0.700595 ),
			st( 0.726952, 0.683213 ),
			st( 0.726952, 0.683213 ),
			st( 0.726952, 0.683213 ),
			st( 0.574240, 0.700595 ),
			st( 0.005248, 0.002385 ),
			st( 0.002926, 0.000000 ),
			st( 0.295500, 0.002385 ),
			st( 0.295500, 0.370420 ),
			st( 0.005248, 0.370420 ),
			st( 0.002926, 0.355494 ),
			st( 0.002926, 0.355494 ),
			st( 0.002228, 0.365902 ),
			st( 0.002228, 0.365902 ),
			st( 0.574648, 0.996116 ),
			st( 0.964496, 0.997774 ),
			st( 0.570957, 0.999119 ),
			st( 0.574479, 0.870934 ),
			st( 0.704249, 0.871387 ),
			st( 0.704190, 0.996506 ),
			st( 0.699159, 1.000000 ),
			st( 0.699580, 0.999791 ),
			st( 0.699580, 0.999791 ),
			st( 0.695623, 0.001347 ),
			st( 0.699159, 0.001900 ),
			st( 0.695623, 0.352699 ),
			st( 0.697936, 0.365525 ),
			st( 0.697936, 0.365525 ),
			st( 0.697936, 0.365525 ),
			st( 0.697936, 0.365525 ),
			st( 0.699580, 0.355653 ),
			st( 0.961765, 0.682541 ),
			st( 0.571782, 0.731341 ),
			st( 0.571782, 0.731341 ),
			st( 0.570110, 0.731341 ),
			st( 0.699436, 0.365980 ),
			st( 0.995530, 0.365291 ),
			st( 0.995530, 0.365291 ),
			st( 0.700346, 0.364938 ),
			st( 0.002049, 0.365119 ),
			st( 0.005248, 0.370420 ),
			st( 0.005248, 0.370420 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.005248, 0.002385 ),
			st( 0.699212, 0.000000 ),
			st( 0.996744, 0.001706 ),
			st( 0.996744, 0.001706 ),
			st( 0.697937, 0.699329 ),
			st( 0.699580, 0.731341 ),
			st( 0.699580, 0.731341 ),
			st( 0.699580, 0.731341 ),
			st( 0.964496, 0.345047 ),
			st( 0.570110, 0.355653 ),
			st( 0.570110, 0.355653 ),
			st( 0.560652, 0.364603 ),
			st( 0.725662, 0.345634 ),
			st( 0.561841, 1.000000 ),
			st( 0.561841, 1.000000 ),
			st( 0.571405, 0.364065 ),
			st( 0.571405, 0.364065 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((1, 3, 2),(1, 5, 2), 0 ),
		polygon ((4, 5, 6),(9, 12, 16), 0 ),
		polygon ((6, 7, 4),(16, 19, 9), 0 ),
		polygon ((8, 6, 5),(20, 17, 13), 0 ),
		polygon ((5, 9, 8),(14, 25, 20), 0 ),
		polygon ((10, 11, 12),(29, 31, 35), 0 ),
		polygon ((12, 13, 10),(35, 38, 29), 0 ),
		polygon ((13, 0, 2),(38, 0, 2), 0 ),
		polygon ((2, 10, 13),(2, 29, 38), 0 ),
		polygon ((9, 5, 4),(26, 15, 10), 0 ),
		polygon ((4, 14, 9),(11, 39, 27), 0 ),
		polygon ((8, 14, 15),(21, 39, 40), 0 ),
		polygon ((8, 9, 14),(22, 28, 39), 0 ),
		polygon ((8, 15, 7),(23, 40, 19), 0 ),
		polygon ((7, 6, 8),(19, 18, 24), 0 ),
		polygon ((11, 10, 2),(32, 30, 3), 0 ),
		polygon ((2, 3, 11),(4, 6, 33), 0 ),
		polygon ((12, 11, 3),(36, 34, 7), 0 ),
		polygon ((3, 1, 12),(8, 1, 37), 0 ),
		polygon ((16, 17, 18),(41, 47, 52), 1 ),
		polygon ((18, 19, 16),(52, 56, 41), 1 ),
		polygon ((20, 21, 22),(61, 63, 64), 1 ),
		polygon ((22, 23, 20),(64, 65, 61), 1 ),
		polygon ((24, 25, 26),(70, 73, 74), 1 ),
		polygon ((26, 27, 24),(74, 75, 70), 1 ),
		polygon ((28, 23, 29),(79, 66, 81), 1 ),
		polygon ((30, 19, 18),(87, 57, 53), 1 ),
		polygon ((31, 32, 33),(91, 95, 99), 1 ),
		polygon ((18, 24, 30),(54, 71, 87), 1 ),
		polygon ((33, 34, 31),(99, 101, 91), 1 ),
		polygon ((17, 16, 35),(48, 42, 104), 1 ),
		polygon ((36, 37, 19),(108, 112, 58), 1 ),
		polygon ((19, 30, 36),(59, 87, 108), 1 ),
		polygon ((21, 33, 32),(63, 100, 96), 1 ),
		polygon ((32, 22, 21),(97, 64, 63), 1 ),
		polygon ((17, 26, 25),(49, 74, 73), 1 ),
		polygon ((25, 18, 17),(73, 55, 50), 1 ),
		polygon ((34, 29, 31),(102, 82, 92), 1 ),
		polygon ((29, 35, 16),(83, 104, 43), 1 ),
		polygon ((35, 27, 17),(104, 76, 51), 1 ),
		polygon ((28, 20, 23),(79, 62, 67), 1 ),
		polygon ((30, 24, 27),(88, 72, 77), 1 ),
		polygon ((27, 35, 30),(78, 105, 89), 1 ),
		polygon ((16, 31, 29),(44, 93, 84), 1 ),
		polygon ((28, 29, 34),(80, 85, 103), 1 ),
		polygon ((36, 30, 35),(109, 90, 106), 1 ),
		polygon ((35, 29, 36),(107, 86, 110), 1 ),
		polygon ((37, 36, 23),(113, 111, 68), 1 ),
		polygon ((23, 32, 37),(69, 98, 114), 1 ),
		polygon ((16, 19, 37),(45, 60, 115), 1 ),
		polygon ((37, 31, 16),(116, 94, 46), 1 )
	)
); /* end of polyset 'goal_base2' */

polyset Net2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (NET ),
	casts_shadow = TRUE,
	vertices = ((cv((7.416891, 2.301843, 0.166936), 1)),
			(cv((7.426974, 2.200817, 0.128404), 1)),
			(cv((7.506674, 2.301843, 0.166936), 1)),
			(cv((7.496141, 2.200817, 0.128525), 1)),
			(cv((7.556102, 2.200817, 0.094046), 1)),
			(cv((7.521427, 1.946636, 0.05904), 1)),
			(cv((7.543258, 1.946636, 0.021228), 1)),
			(cv((7.530908, 2.044886, 0.068763), 1)),
			(cv((7.55633, 2.044886, 0.024907), 1)),
			(cv((7.339135, 2.301843, 0.122044), 1)),
			(cv((7.367133, 2.200817, 0.093716), 1)),
			(cv((7.332654, 2.200817, 0.033755), 1)),
			(cv((7.294243, 2.301843, 0.044288), 1)),
			(cv((7.58443, 2.301843, 0.122044), 1)),
			(cv((7.629322, 2.301843, 0.044288), 1)),
			(cv((7.59079, 2.200817, 0.034205), 1)),
			(cv((7.569123, 2.117504, 0.028158), 1)),
			(cv((7.540361, 2.117504, 0.077975), 1)),
			(cv((7.490544, 2.117504, 0.106737), 1)),
			(cv((7.433021, 2.117504, 0.106737), 1)),
			(cv((7.383204, 2.117504, 0.077975), 1)),
			(cv((7.436272, 2.044886, 0.093944), 1)),
			(cv((7.486963, 2.044886, 0.094033), 1)),
			(cv((7.392415, 2.044886, 0.068522), 1)),
			(cv((7.402138, 1.946636, 0.05904), 1)),
			(cv((7.439951, 1.946636, 0.080872), 1)),
			(cv((7.483614, 1.946636, 0.080872), 1)),
			(cv((7.590911, 2.200817, -0.034962), 1)),
			(cv((7.629322, 2.301843, -0.045496), 1)),
			(cv((7.58443, 2.301843, -0.123251), 1)),
			(cv((7.569123, 2.117504, -0.029365), 1)),
			(cv((7.540361, 2.117504, -0.079182), 1)),
			(cv((7.556432, 2.200817, -0.094923), 1)),
			(cv((7.556419, 2.044886, -0.025784), 1)),
			(cv((7.53115, 2.044886, -0.069729), 1)),
			(cv((7.543258, 1.946636, -0.022435), 1)),
			(cv((7.521427, 1.946636, -0.060248), 1)),
			(cv((7.487294, 2.044886, -0.095151), 1)),
			(cv((7.496592, 2.200817, -0.129611), 1)),
			(cv((7.506675, 2.301843, -0.168143), 1)),
			(cv((7.332775, 2.200817, -0.035413), 1)),
			(cv((7.354442, 2.117504, -0.029365), 1)),
			(cv((7.354442, 2.117504, 0.028158), 1)),
			(cv((7.416891, 2.301843, -0.168143), 1)),
			(cv((7.427424, 2.200817, -0.129732), 1)),
			(cv((7.367463, 2.200817, -0.095253), 1)),
			(cv((7.339135, 2.301843, -0.123251), 1)),
			(cv((7.294243, 2.301843, -0.045496), 1)),
			(cv((7.383204, 2.117504, -0.079182), 1)),
			(cv((7.433021, 2.117504, -0.107944), 1)),
			(cv((7.490544, 2.117504, -0.107944), 1)),
			(cv((7.436602, 2.044886, -0.09524), 1)),
			(cv((7.392657, 2.044886, -0.06997), 1)),
			(cv((7.367235, 2.044886, -0.026114), 1)),
			(cv((7.367146, 2.044886, 0.024577), 1)),
			(cv((7.483614, 1.946636, -0.082079), 1)),
			(cv((7.439951, 1.946636, -0.082079), 1)),
			(cv((7.402138, 1.946636, -0.060248), 1)),
			(cv((7.380307, 1.946636, -0.022435), 1)),
			(cv((7.380307, 1.946636, 0.021228), 1))	),
	texture_vertices = (
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.704342 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ) ),
	polygons = (
		polygon ((2, 1, 0),(2, 1, 0), 0 ),
		polygon ((2, 4, 3),(2, 4, 3), 0 ),
		polygon ((1, 2, 3),(1, 2, 3), 0 ),
		polygon ((7, 6, 5),(7, 6, 5), 0 ),
		polygon ((6, 7, 8),(6, 7, 8), 0 ),
		polygon ((9, 0, 1),(9, 0, 1), 0 ),
		polygon ((1, 10, 9),(1, 10, 9), 0 ),
		polygon ((10, 11, 9),(10, 11, 9), 0 ),
		polygon ((12, 9, 11),(12, 9, 11), 0 ),
		polygon ((2, 13, 4),(2, 13, 4), 0 ),
		polygon ((13, 14, 4),(13, 14, 4), 0 ),
		polygon ((15, 4, 14),(15, 4, 14), 0 ),
		polygon ((15, 16, 4),(15, 16, 4), 0 ),
		polygon ((17, 4, 16),(17, 4, 16), 0 ),
		polygon ((17, 18, 4),(17, 18, 4), 0 ),
		polygon ((18, 3, 4),(18, 3, 4), 0 ),
		polygon ((19, 1, 18),(19, 1, 18), 0 ),
		polygon ((3, 18, 1),(3, 18, 1), 0 ),
		polygon ((1, 19, 20),(1, 19, 20), 0 ),
		polygon ((10, 1, 20),(10, 1, 20), 0 ),
		polygon ((22, 21, 18),(22, 21, 18), 0 ),
		polygon ((18, 7, 22),(18, 7, 22), 0 ),
		polygon ((7, 18, 17),(7, 18, 17), 0 ),
		polygon ((7, 16, 8),(7, 16, 8), 0 ),
		polygon ((19, 18, 21),(19, 18, 21), 0 ),
		polygon ((23, 20, 21),(23, 20, 21), 0 ),
		polygon ((19, 21, 20),(19, 21, 20), 0 ),
		polygon ((21, 24, 23),(21, 24, 23), 0 ),
		polygon ((21, 25, 24),(21, 25, 24), 0 ),
		polygon ((21, 26, 25),(21, 26, 25), 0 ),
		polygon ((26, 21, 22),(26, 21, 22), 0 ),
		polygon ((26, 22, 7),(26, 22, 7), 0 ),
		polygon ((5, 26, 7),(5, 26, 7), 0 ),
		polygon ((15, 14, 27),(15, 14, 27), 0 ),
		polygon ((27, 14, 28),(27, 14, 28), 0 ),
		polygon ((28, 29, 27),(28, 29, 27), 0 ),
		polygon ((16, 15, 27),(16, 15, 27), 0 ),
		polygon ((16, 27, 30),(16, 27, 30), 0 ),
		polygon ((27, 31, 30),(27, 31, 30), 0 ),
		polygon ((31, 27, 32),(31, 27, 32), 0 ),
		polygon ((34, 33, 31),(34, 33, 31), 0 ),
		polygon ((30, 31, 33),(30, 31, 33), 0 ),
		polygon ((16, 30, 33),(16, 30, 33), 0 ),
		polygon ((16, 33, 8),(16, 33, 8), 0 ),
		polygon ((16, 7, 17),(16, 7, 17), 0 ),
		polygon ((35, 6, 33),(35, 6, 33), 0 ),
		polygon ((8, 33, 6),(8, 33, 6), 0 ),
		polygon ((33, 36, 35),(33, 36, 35), 0 ),
		polygon ((36, 33, 34),(36, 33, 34), 0 ),
		polygon ((36, 34, 37),(36, 34, 37), 0 ),
		polygon ((37, 34, 31),(37, 34, 31), 0 ),
		polygon ((31, 32, 38),(31, 32, 38), 0 ),
		polygon ((38, 29, 39),(38, 29, 39), 0 ),
		polygon ((41, 40, 11),(41, 40, 11), 0 ),
		polygon ((32, 27, 29),(32, 27, 29), 0 ),
		polygon ((32, 29, 38),(32, 29, 38), 0 ),
		polygon ((42, 11, 20),(42, 11, 20), 0 ),
		polygon ((39, 43, 38),(39, 43, 38), 0 ),
		polygon ((44, 38, 43),(44, 38, 43), 0 ),
		polygon ((45, 44, 43),(45, 44, 43), 0 ),
		polygon ((45, 43, 46),(45, 43, 46), 0 ),
		polygon ((45, 47, 40),(45, 47, 40), 0 ),
		polygon ((47, 45, 46),(47, 45, 46), 0 ),
		polygon ((40, 47, 11),(40, 47, 11), 0 ),
		polygon ((11, 47, 12),(11, 47, 12), 0 ),
		polygon ((48, 45, 41),(48, 45, 41), 0 ),
		polygon ((40, 41, 45),(40, 41, 45), 0 ),
		polygon ((45, 48, 49),(45, 48, 49), 0 ),
		polygon ((44, 45, 49),(44, 45, 49), 0 ),
		polygon ((49, 38, 44),(49, 38, 44), 0 ),
		polygon ((38, 49, 50),(38, 49, 50), 0 ),
		polygon ((38, 50, 31),(38, 50, 31), 0 ),
		polygon ((31, 50, 37),(31, 50, 37), 0 ),
		polygon ((50, 49, 37),(50, 49, 37), 0 ),
		polygon ((51, 37, 49),(51, 37, 49), 0 ),
		polygon ((52, 51, 49),(52, 51, 49), 0 ),
		polygon ((52, 49, 48),(52, 49, 48), 0 ),
		polygon ((52, 41, 53),(52, 41, 53), 0 ),
		polygon ((41, 52, 48),(41, 52, 48), 0 ),
		polygon ((41, 54, 53),(41, 54, 53), 0 ),
		polygon ((37, 55, 36),(37, 55, 36), 0 ),
		polygon ((37, 56, 55),(37, 56, 55), 0 ),
		polygon ((56, 37, 51),(56, 37, 51), 0 ),
		polygon ((56, 51, 52),(56, 51, 52), 0 ),
		polygon ((57, 56, 52),(57, 56, 52), 0 ),
		polygon ((53, 58, 52),(53, 58, 52), 0 ),
		polygon ((57, 52, 58),(57, 52, 58), 0 ),
		polygon ((58, 53, 54),(58, 53, 54), 0 ),
		polygon ((54, 59, 58),(54, 59, 58), 0 ),
		polygon ((23, 24, 54),(23, 24, 54), 0 ),
		polygon ((59, 54, 24),(59, 54, 24), 0 ),
		polygon ((23, 54, 20),(23, 54, 20), 0 ),
		polygon ((54, 41, 42),(54, 41, 42), 0 ),
		polygon ((41, 11, 42),(41, 11, 42), 0 ),
		polygon ((10, 20, 11),(10, 20, 11), 0 ),
		polygon ((42, 20, 54),(42, 20, 54), 0 )
	)
); /* end of polyset 'Net2' */

polyset Rim (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (ORANGE ),
	shader = (HOOP ),
	casts_shadow = TRUE,
	vertices = ((cv((-7.716642, 2.322238, 0.003079), 1)),
			(cv((-7.648304, 2.322238, 0.003079), 1)),
			(cv((-7.716642, 2.277873, 0.003079), 1)),
			(cv((-7.648304, 2.322238, -0.044397), 1)),
			(cv((-7.648304, 2.322238, 0.045593), 1)),
			(cv((-7.716642, 2.322238, 0.045496), 1)),
			(cv((-7.716642, 2.322238, -0.044288), 1)),
			(cv((-7.511501, 2.322238, -0.186558), 1)),
			(cv((-7.629322, 2.301843, 0.045496), 1)),
			(cv((-7.598231, 2.322238, -0.136485), 1)),
			(cv((-7.598231, 2.322238, 0.137121), 1)),
			(cv((-7.58443, 2.301843, 0.123251), 1)),
			(cv((-7.629322, 2.301843, -0.044288), 1)),
			(cv((-7.506674, 2.301843, 0.168143), 1)),
			(cv((-7.506674, 2.342989, 0.168143), 1)),
			(cv((-7.58443, 2.342989, 0.123251), 1)),
			(cv((-7.629322, 2.342989, 0.045496), 1)),
			(cv((-7.629322, 2.342989, -0.044288), 1)),
			(cv((-7.58443, 2.342989, -0.122044), 1)),
			(cv((-7.58443, 2.301843, -0.122044), 1)),
			(cv((-7.506674, 2.342989, -0.166936), 1)),
			(cv((-7.506674, 2.301843, -0.166936), 1)),
			(cv((-7.339135, 2.342989, 0.123251), 1)),
			(cv((-7.416891, 2.342989, 0.168143), 1)),
			(cv((-7.416891, 2.301843, 0.168143), 1)),
			(cv((-7.416891, 2.342989, -0.166936), 1)),
			(cv((-7.416891, 2.301843, -0.166936), 1)),
			(cv((-7.339135, 2.301843, -0.122044), 1)),
			(cv((-7.339135, 2.342989, -0.122044), 1)),
			(cv((-7.294243, 2.301843, -0.044288), 1)),
			(cv((-7.294243, 2.342989, -0.044288), 1)),
			(cv((-7.294243, 2.342989, 0.045496), 1)),
			(cv((-7.294243, 2.301843, 0.045496), 1)),
			(cv((-7.339135, 2.301843, 0.123251), 1)),
			(cv((-7.511501, 2.322238, 0.187194), 1)),
			(cv((-7.411355, 2.322238, 0.187194), 1)),
			(cv((-7.324626, 2.322238, 0.137121), 1)),
			(cv((-7.274552, 2.322238, 0.050391), 1)),
			(cv((-7.274552, 2.322238, -0.049755), 1)),
			(cv((-7.324626, 2.322238, -0.136485), 1)),
			(cv((-7.411355, 2.322238, -0.186558), 1))	),
	texture_vertices = (
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.500000, 0.000000 ),
			st( 0.967775, 0.749460 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.002079, 0.759382 ),
			st( 1.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 0.005198, 0.006656 ),
			st( 0.967775, 0.008639 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ) ),
	polygons = (
		polygon ((2, 1, 0),(2, 1, 0), 0 ),
		polygon ((3, 4, 5),(3, 12, 17), 0 ),
		polygon ((5, 6, 3),(17, 18, 3), 0 ),
		polygon ((13, 11, 10),(25, 23, 22), 1 ),
		polygon ((4, 8, 3),(13, 20, 4), 1 ),
		polygon ((10, 11, 8),(22, 23, 20), 1 ),
		polygon ((8, 4, 10),(20, 14, 22), 1 ),
		polygon ((3, 8, 12),(5, 20, 24), 1 ),
		polygon ((13, 14, 11),(25, 26, 23), 1 ),
		polygon ((11, 14, 15),(23, 26, 27), 1 ),
		polygon ((15, 8, 11),(27, 20, 23), 1 ),
		polygon ((15, 16, 8),(27, 28, 20), 1 ),
		polygon ((16, 17, 8),(28, 29, 20), 1 ),
		polygon ((8, 17, 12),(20, 29, 24), 1 ),
		polygon ((12, 17, 18),(24, 29, 30), 1 ),
		polygon ((18, 19, 12),(30, 31, 24), 1 ),
		polygon ((19, 18, 20),(31, 30, 32), 1 ),
		polygon ((20, 21, 19),(32, 33, 31), 1 ),
		polygon ((22, 23, 24),(34, 35, 36), 1 ),
		polygon ((25, 21, 20),(37, 33, 32), 1 ),
		polygon ((21, 25, 26),(33, 37, 38), 1 ),
		polygon ((23, 13, 24),(35, 25, 36), 1 ),
		polygon ((23, 14, 13),(35, 26, 25), 1 ),
		polygon ((25, 27, 26),(37, 39, 38), 1 ),
		polygon ((25, 28, 27),(37, 40, 39), 1 ),
		polygon ((27, 28, 29),(39, 40, 41), 1 ),
		polygon ((29, 28, 30),(41, 40, 42), 1 ),
		polygon ((29, 30, 31),(41, 42, 43), 1 ),
		polygon ((31, 32, 29),(43, 44, 41), 1 ),
		polygon ((32, 31, 33),(44, 43, 45), 1 ),
		polygon ((33, 31, 22),(45, 43, 34), 1 ),
		polygon ((22, 24, 33),(34, 36, 45), 1 ),
		polygon ((16, 10, 4),(28, 22, 15), 1 ),
		polygon ((10, 16, 15),(22, 28, 27), 1 ),
		polygon ((10, 15, 14),(22, 27, 26), 1 ),
		polygon ((14, 34, 10),(26, 46, 22), 1 ),
		polygon ((14, 35, 34),(26, 47, 46), 1 ),
		polygon ((35, 14, 23),(47, 26, 35), 1 ),
		polygon ((35, 23, 22),(47, 35, 34), 1 ),
		polygon ((22, 36, 35),(34, 48, 47), 1 ),
		polygon ((22, 37, 36),(34, 49, 48), 1 ),
		polygon ((37, 22, 31),(49, 34, 43), 1 ),
		polygon ((37, 31, 30),(49, 43, 42), 1 ),
		polygon ((30, 38, 37),(42, 50, 49), 1 ),
		polygon ((30, 39, 38),(42, 51, 50), 1 ),
		polygon ((39, 30, 28),(51, 42, 40), 1 ),
		polygon ((39, 28, 25),(51, 40, 37), 1 ),
		polygon ((25, 40, 39),(37, 52, 51), 1 ),
		polygon ((25, 7, 40),(37, 19, 52), 1 ),
		polygon ((7, 25, 20),(19, 37, 32), 1 ),
		polygon ((7, 20, 18),(19, 32, 30), 1 ),
		polygon ((18, 9, 7),(30, 21, 19), 1 ),
		polygon ((18, 3, 9),(30, 6, 21), 1 ),
		polygon ((3, 18, 17),(7, 30, 29), 1 ),
		polygon ((3, 17, 16),(8, 29, 28), 1 ),
		polygon ((16, 4, 3),(28, 16, 9), 1 ),
		polygon ((19, 9, 3),(31, 21, 10), 1 ),
		polygon ((3, 12, 19),(11, 24, 31), 1 ),
		polygon ((19, 7, 9),(31, 19, 21), 1 ),
		polygon ((19, 21, 7),(31, 33, 19), 1 ),
		polygon ((21, 26, 7),(33, 38, 19), 1 ),
		polygon ((40, 7, 26),(52, 19, 38), 1 ),
		polygon ((26, 27, 39),(38, 39, 51), 1 ),
		polygon ((39, 40, 26),(51, 52, 38), 1 ),
		polygon ((39, 27, 29),(51, 39, 41), 1 ),
		polygon ((29, 38, 39),(41, 50, 51), 1 ),
		polygon ((38, 29, 37),(50, 41, 49), 1 ),
		polygon ((37, 29, 32),(49, 41, 44), 1 ),
		polygon ((33, 37, 32),(45, 49, 44), 1 ),
		polygon ((37, 33, 36),(49, 45, 48), 1 ),
		polygon ((35, 33, 24),(47, 45, 36), 1 ),
		polygon ((33, 35, 36),(45, 47, 48), 1 ),
		polygon ((13, 35, 24),(25, 47, 36), 1 ),
		polygon ((35, 13, 34),(47, 25, 46), 1 ),
		polygon ((10, 34, 13),(22, 46, 25), 1 )
	)
); /* end of polyset 'Rim' */

polyset decals (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (NBAdecal ),
	casts_shadow = TRUE,
	vertices = ((cv((-7.732426, 2.308076, 0.508218), 1)),
			(cv((-7.732426, 2.470653, 0.508218), 1)),
			(cv((-7.732426, 2.470653, 0.579682), 1)),
			(cv((-7.732426, 2.308076, 0.579682), 1)),
			(cv((-7.723264, 2.308076, 0.579515), 1)),
			(cv((-7.723264, 2.470653, 0.579515), 1)),
			(cv((-7.723264, 2.470653, 0.508051), 1)),
			(cv((-7.723264, 2.308076, 0.508051), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 0 ),
		polygon ((6, 7, 4),(6, 7, 4), 0 )
	)
); /* end of polyset 'decals' */

polyset BackBoard (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (seal ),
	shader = (TARGET ),
	shader = (METAL4 ),
	shader = (BackPad ),
	casts_shadow = TRUE,
	vertices = ((cv((-7.764421, 2.288114, 0.599813), 1)),
			(cv((-7.70758, 2.288114, 0.599813), 1)),
			(cv((-7.70758, 2.964677, 0.599813), 1)),
			(cv((-7.764421, 2.964677, 0.599813), 1)),
			(cv((-7.764421, 2.288114, -0.593652), 1)),
			(cv((-7.764421, 2.964677, -0.593655), 1)),
			(cv((-7.70758, 2.964677, -0.593655), 1)),
			(cv((-7.739419, 2.355915, 0.165915), 1)),
			(cv((-7.739419, 2.617597, 0.202269), 1)),
			(cv((-7.739419, 2.3197, 0.202269), 1)),
			(cv((-7.696747, 2.199556, -0.681369), 1)),
			(cv((-7.696747, 2.259842, -0.62436), 1)),
			(cv((-7.764421, 3.026545, 0.661682), 1)),
			(cv((-7.764421, 2.226245, 0.661682), 1)),
			(cv((-7.696504, 2.199557, 0.685327), 1)),
			(cv((-7.696504, 2.259842, 0.628319), 1)),
			(cv((-7.764421, 2.226245, -0.655521), 1)),
			(cv((-7.764421, 3.026545, -0.655523), 1)),
			(cv((-7.70758, 2.226245, -0.655521), 1)),
			(cv((-7.70758, 2.226245, 0.661682), 1)),
			(cv((-7.776043, 2.259842, 0.628319), 1)),
			(cv((-7.70758, 3.026545, 0.661682), 1)),
			(cv((-7.776043, 2.199557, 0.685327), 1)),
			(cv((-7.776043, 2.199556, -0.681369), 1)),
			(cv((-7.70758, 3.026545, -0.655523), 1)),
			(cv((-7.70758, 2.288114, -0.593652), 1)),
			(cv((-7.776043, 2.259842, -0.62436), 1)),
			(cv((-7.739419, 2.581363, 0.165915), 1)),
			(cv((-7.717951, 2.355915, 0.165915), 1)),
			(cv((-7.717951, 2.355915, -0.159876), 1)),
			(cv((-7.717951, 2.3197, -0.196111), 1)),
			(cv((-7.739419, 2.3197, -0.196111), 1)),
			(cv((-7.739419, 2.355915, -0.159876), 1)),
			(cv((-7.717951, 2.3197, 0.202269), 1)),
			(cv((-7.717951, 2.617597, 0.202269), 1)),
			(cv((-7.739419, 2.617597, -0.196111), 1)),
			(cv((-7.739419, 2.581363, -0.159876), 1)),
			(cv((-7.717951, 2.581363, 0.165915), 1)),
			(cv((-7.717951, 2.581363, -0.159876), 1)),
			(cv((-7.717951, 2.617597, -0.196111), 1)),
			(cv((-7.696584, 2.627634, 0.628319), 1)),
			(cv((-7.696584, 2.627634, 0.687582), 1)),
			(cv((-7.776043, 2.627634, 0.687582), 1)),
			(cv((-7.776043, 2.627634, 0.628319), 1)),
			(cv((-7.696584, 2.627634, -0.62436), 1)),
			(cv((-7.776043, 2.627634, -0.62436), 1)),
			(cv((-7.776043, 2.627634, -0.681997), 1)),
			(cv((-7.696584, 2.627634, -0.681997), 1))	),
	texture_vertices = (
			st( 1.000000, 0.000000 ),
			st( 0.010265, 0.513449 ),
			st( 0.010265, 0.513449 ),
			st( 0.006843, 0.559621 ),
			st( 0.006843, 0.559621 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.989735, 0.521597 ),
			st( 0.993157, 0.516165 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.991446, 0.521597 ),
			st( 0.996578, 0.540609 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.006843, 0.524313 ),
			st( 0.008554, 0.535177 ),
			st( 0.006843, 0.524313 ),
			st( 0.008554, 0.535177 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.750000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 0.000000 ),
			st( 0.250000, 0.000000 ),
			st( 0.750000, 1.000000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.993157, 0.005954 ),
			st( 0.991446, 0.008670 ),
			st( 0.991446, 0.008670 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.010265, 0.005954 ),
			st( 0.001711, 0.008670 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.250000, 0.500000 ),
			st( 0.750000, 0.000000 ),
			st( 0.750000, 0.000000 ),
			st( 0.250000, 1.000000 ),
			st( 0.750000, 0.500000 ),
			st( 0.750000, 0.500000 ),
			st( 0.750000, 0.500000 ),
			st( 0.991446, 0.011386 ),
			st( 0.993157, 0.011386 ),
			st( 0.993157, 0.011386 ),
			st( 0.991446, 0.011386 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.010265, 0.014102 ),
			st( 0.010265, 0.016818 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.750000, 1.000000 ),
			st( 0.750000, 0.000000 ),
			st( 0.750000, 0.000000 ),
			st( 0.750000, 0.000000 ),
			st( 1.000000, 0.500000 ),
			st( 0.750000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 0.000000 ),
			st( 0.250000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.250000, 1.000000 ),
			st( 0.250000, 0.000000 ),
			st( 0.250000, 0.000000 ),
			st( 0.250000, 0.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.032450, 0.489109 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.030905, 0.061622 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.270643, 0.058326 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.270643, 0.485812 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.270643, 0.485812 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.500000 ),
			st( 0.032450, 0.489109 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.030905, 0.061622 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.270643, 0.058326 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.500000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 6, 7), 0 ),
		polygon ((2, 3, 0),(7, 11, 0), 0 ),
		polygon ((4, 5, 6),(16, 22, 28), 0 ),
		polygon ((7, 8, 9),(29, 30, 31), 1 ),
		polygon ((0, 3, 12),(1, 12, 41), 2 ),
		polygon ((12, 13, 0),(41, 47, 2), 2 ),
		polygon ((5, 4, 16),(23, 17, 58), 2 ),
		polygon ((5, 17, 12),(24, 64, 42), 2 ),
		polygon ((0, 13, 16),(3, 48, 59), 2 ),
		polygon ((0, 16, 4),(4, 60, 18), 2 ),
		polygon ((16, 17, 5),(61, 65, 25), 2 ),
		polygon ((12, 3, 5),(43, 13, 26), 2 ),
		polygon ((18, 19, 1),(68, 69, 6), 2 ),
		polygon ((21, 2, 1),(74, 8, 6), 2 ),
		polygon ((6, 24, 18),(28, 79, 68), 2 ),
		polygon ((25, 18, 1),(80, 68, 6), 2 ),
		polygon ((13, 12, 21),(49, 44, 74), 2 ),
		polygon ((24, 21, 12),(79, 74, 45), 2 ),
		polygon ((21, 19, 13),(74, 69, 50), 2 ),
		polygon ((12, 17, 24),(46, 66, 79), 2 ),
		polygon ((24, 17, 16),(79, 67, 62), 2 ),
		polygon ((0, 4, 1),(5, 19, 6), 0 ),
		polygon ((6, 25, 4),(28, 81, 20), 0 ),
		polygon ((16, 18, 24),(63, 68, 79), 2 ),
		polygon ((18, 25, 6),(68, 82, 28), 2 ),
		polygon ((21, 24, 6),(74, 79, 28), 2 ),
		polygon ((6, 2, 21),(28, 9, 74), 2 ),
		polygon ((1, 19, 21),(6, 69, 74), 2 ),
		polygon ((27, 8, 7),(88, 30, 29), 1 ),
		polygon ((28, 29, 30),(89, 90, 91), 1 ),
		polygon ((31, 32, 7),(92, 93, 29), 1 ),
		polygon ((33, 34, 28),(94, 95, 89), 1 ),
		polygon ((35, 36, 32),(96, 97, 93), 1 ),
		polygon ((35, 8, 36),(96, 30, 97), 1 ),
		polygon ((32, 31, 35),(93, 92, 96), 1 ),
		polygon ((37, 34, 38),(98, 95, 99), 1 ),
		polygon ((29, 38, 39),(90, 99, 100), 1 ),
		polygon ((39, 30, 29),(100, 91, 90), 1 ),
		polygon ((38, 34, 39),(99, 95, 100), 1 ),
		polygon ((36, 8, 27),(97, 30, 88), 1 ),
		polygon ((7, 9, 31),(29, 31, 92), 1 ),
		polygon ((28, 34, 37),(89, 95, 98), 1 ),
		polygon ((3, 2, 6),(14, 10, 28), 0 ),
		polygon ((6, 5, 3),(28, 27, 15), 0 ),
		polygon ((4, 25, 1),(21, 83, 6), 0 ),
		polygon ((30, 33, 28),(91, 94, 89), 1 ),
		polygon ((40, 41, 42),(101, 105, 110), 3 ),
		polygon ((42, 43, 40),(110, 114, 101), 3 ),
		polygon ((44, 45, 46),(117, 121, 126), 3 ),
		polygon ((46, 47, 44),(126, 130, 117), 3 ),
		polygon ((44, 47, 10),(118, 131, 32), 3 ),
		polygon ((10, 11, 44),(32, 37, 119), 3 ),
		polygon ((11, 10, 14),(37, 32, 51), 3 ),
		polygon ((14, 15, 11),(51, 54, 37), 3 ),
		polygon ((15, 14, 41),(54, 51, 106), 3 ),
		polygon ((41, 40, 15),(107, 102, 54), 3 ),
		polygon ((20, 43, 42),(70, 115, 111), 3 ),
		polygon ((42, 22, 20),(112, 75, 70), 3 ),
		polygon ((23, 46, 45),(76, 127, 122), 3 ),
		polygon ((45, 26, 23),(123, 84, 76), 3 ),
		polygon ((20, 22, 23),(70, 75, 76), 3 ),
		polygon ((23, 26, 20),(76, 84, 70), 3 ),
		polygon ((41, 14, 22),(108, 52, 75), 3 ),
		polygon ((22, 42, 41),(75, 113, 109), 3 ),
		polygon ((10, 47, 46),(33, 132, 128), 3 ),
		polygon ((46, 23, 10),(129, 77, 34), 3 ),
		polygon ((10, 23, 22),(35, 78, 75), 3 ),
		polygon ((22, 14, 10),(75, 53, 36), 3 ),
		polygon ((45, 44, 11),(124, 120, 38), 3 ),
		polygon ((11, 26, 45),(39, 85, 125), 3 ),
		polygon ((15, 20, 26),(55, 71, 86), 3 ),
		polygon ((26, 11, 15),(87, 40, 56), 3 ),
		polygon ((20, 15, 40),(72, 57, 103), 3 ),
		polygon ((40, 43, 20),(104, 116, 73), 3 )
	)
); /* end of polyset 'BackBoard' */

polyset glass (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (GLASS ),
	casts_shadow = TRUE,
	vertices = ((cv((-7.728133, 2.96465, 0.599765), 1)),
			(cv((-7.728133, 2.288141, 0.599765), 1)),
			(cv((-7.728133, 2.288141, -0.593604), 1)),
			(cv((-7.728133, 2.96465, -0.593604), 1))	),
	texture_vertices = (
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 )
	)
); /* end of polyset 'glass' */

polyset GoalStand (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (METAL4 ),
	shader = (WHITEPOST ),
	shader = (BUMPER ),
	casts_shadow = TRUE,
	vertices = ((cv((-7.804053, 2.286801, 0.545213), 1)),
			(cv((-7.761208, 2.328691, 0.614256), 1)),
			(cv((-7.804053, 2.374368, 0.545213), 1)),
			(cv((-7.804104, 2.374054, 0.679737), 1)),
			(cv((-7.804104, 2.286497, 0.679737), 1)),
			(cv((-7.804104, 2.286497, -0.679735), 1)),
			(cv((-7.761191, 2.330599, -0.614518), 1)),
			(cv((-7.804104, 2.374054, -0.679735), 1)),
			(cv((-7.804053, 2.374368, -0.545211), 1)),
			(cv((-7.804053, 2.286801, -0.545211), 1)),
			(cv((-8.874998, 2.501257, -0.0543), 1)),
			(cv((-8.874998, 2.501257, 0.0543), 1)),
			(cv((-8.874998, 2.296687, 0.0543), 1)),
			(cv((-10.047919, 1.238626, 0.0), 1)),
			(cv((-10.071075, 1.272513, -0.027879), 1)),
			(cv((-10.150331, 1.049741, -0.027879), 1)),
			(cv((-8.87407, 2.499232, 0.027879), 1)),
			(cv((-10.071075, 1.272513, 0.027879), 1)),
			(cv((-10.092854, 1.106988, 0.0), 1)),
			(cv((-8.87407, 2.499232, -0.027879), 1)),
			(cv((-8.87407, 2.452516, 0.0), 1)),
			(cv((-10.150331, 1.049741, 0.027879), 1)),
			(cv((-8.874998, 2.296687, -0.0543), 1)),
			(cv((-10.268769, 0.84343, -0.053223), 1)),
			(cv((-10.268769, 0.84343, 0.053223), 1)),
			(cv((-8.87407, 2.296739, 0.053223), 1)),
			(cv((-10.310068, 0.883319, 0.053223), 1)),
			(cv((-10.310068, 0.883319, -0.053223), 1)),
			(cv((-8.87407, 2.36443, -0.053223), 1)),
			(cv((-8.87407, 2.296739, -0.053223), 1)),
			(cv((-8.87407, 2.36443, 0.053223), 1)),
			(cv((-10.233562, 0.81147, -0.192735), 1)),
			(cv((-10.233562, 0.81147, 0.198667), 1)),
			(cv((-10.233562, 0.915917, 0.198743), 1)),
			(cv((-10.233562, 0.915917, -0.192812), 1)),
			(cv((-10.338566, 0.81147, -0.192735), 1)),
			(cv((-10.338566, 0.915917, -0.192812), 1)),
			(cv((-10.338566, 0.915917, 0.198743), 1)),
			(cv((-10.338566, 0.81147, 0.198667), 1)),
			(cv((-10.218313, 0.811042, 0.234929), 1)),
			(cv((-10.218313, 0.399368, 0.404628), 1)),
			(cv((-10.362469, 0.399368, 0.404628), 1)),
			(cv((-10.362469, 0.811042, 0.234929), 1)),
			(cv((-10.362469, 0.811042, 0.1096), 1)),
			(cv((-10.362469, 0.399368, 0.279298), 1)),
			(cv((-10.218313, 0.811042, 0.1096), 1)),
			(cv((-10.218313, 0.399368, 0.279298), 1)),
			(cv((-10.362469, 0.399368, -0.398469), 1)),
			(cv((-10.218313, 0.399368, -0.398469), 1)),
			(cv((-10.218313, 0.811042, -0.228771), 1)),
			(cv((-10.362469, 0.811042, -0.228771), 1)),
			(cv((-10.362469, 0.811042, -0.103441), 1)),
			(cv((-10.362469, 0.399368, -0.273139), 1)),
			(cv((-10.218313, 0.811042, -0.103441), 1)),
			(cv((-10.218313, 0.399368, -0.273139), 1)),
			(cv((-7.804105, 2.286497, -0.679735), 1)),
			(cv((-7.804053, 2.286801, -0.545211), 1)),
			(cv((-7.926028, 2.286801, -0.545211), 1)),
			(cv((-7.92608, 2.286497, -0.679735), 1)),
			(cv((-7.940824, 2.296435, -0.666122), 1)),
			(cv((-7.92608, 2.374054, -0.679735), 1)),
			(cv((-7.940824, 2.36443, -0.666122), 1)),
			(cv((-7.804105, 2.374054, -0.679735), 1)),
			(cv((-7.804053, 2.374368, -0.545211), 1)),
			(cv((-7.940772, 2.296435, -0.562631), 1)),
			(cv((-7.926028, 2.374368, -0.545211), 1)),
			(cv((-7.940773, 2.36443, -0.562631), 1)),
			(cv((-8.794135, 2.296687, 0.0), 1)),
			(cv((-8.874998, 2.501257, 0.0543), 1)),
			(cv((-8.794135, 2.501257, 0.0), 1)),
			(cv((-8.874998, 2.501257, -0.0543), 1)),
			(cv((-7.804053, 2.374368, 0.545213), 1)),
			(cv((-8.87407, 2.296739, 0.053223), 1)),
			(cv((-8.87407, 2.36443, 0.053223), 1)),
			(cv((-7.940734, 2.36443, -0.562533), 1)),
			(cv((-8.87407, 2.36443, -0.053223), 1)),
			(cv((-7.940786, 2.364115, -0.666512), 1)),
			(cv((-7.804053, 2.286801, 0.545213), 1)),
			(cv((-7.804105, 2.286497, 0.679737), 1)),
			(cv((-7.804105, 2.374054, 0.679737), 1)),
			(cv((-8.874998, 2.296687, -0.0543), 1)),
			(cv((-7.92608, 2.286497, 0.679737), 1)),
			(cv((-7.926028, 2.286801, 0.545213), 1)),
			(cv((-7.940772, 2.296435, 0.562633), 1)),
			(cv((-7.940824, 2.296435, 0.666124), 1)),
			(cv((-7.940824, 2.36443, 0.666124), 1)),
			(cv((-7.926028, 2.374368, 0.545213), 1)),
			(cv((-7.940773, 2.36443, 0.562633), 1)),
			(cv((-8.87407, 2.296739, -0.053223), 1)),
			(cv((-7.940786, 2.296435, -0.666512), 1)),
			(cv((-7.940734, 2.296739, -0.562533), 1)),
			(cv((-7.92608, 2.374054, 0.679737), 1)),
			(cv((-7.763292, 3.024288, -0.635946), 1)),
			(cv((-7.763807, 2.979924, -0.632627), 1)),
			(cv((-8.794315, 2.449137, 0.0), 1)),
			(cv((-8.874998, 2.296687, 0.0543), 1)),
			(cv((-7.763807, 2.979329, 0.630248), 1)),
			(cv((-7.763292, 3.023693, 0.633567), 1)),
			(cv((-8.813829, 2.449849, -0.013271), 1)),
			(cv((-7.763875, 2.978872, -0.657911), 1)),
			(cv((-8.795051, 2.499806, 0.0), 1)),
			(cv((-7.763875, 2.978277, 0.655532), 1)),
			(cv((-8.813829, 2.449849, 0.013271), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 0.500000, 0.500000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.500000, 0.500000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.006843, 0.986420 ),
			st( 0.006843, 0.986420 ),
			st( 0.993157, 0.989136 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.900000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 0.008669, 0.283240 ),
			st( 0.008669, 0.283240 ),
			st( 1.000000, 0.500000 ),
			st( 0.984829, 0.283240 ),
			st( 0.984829, 0.283240 ),
			st( 1.000000, 0.500000 ),
			st( 0.900000, 0.000000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 0.902167, 0.279799 ),
			st( 0.900000, 0.500000 ),
			st( 0.902167, 0.279799 ),
			st( 0.900000, 0.500000 ),
			st( 0.993157, 0.752716 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 1.000000 ),
			st( 0.995775, 0.003926 ),
			st( 0.995775, 0.003926 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.750000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 0.316431, 0.027525 ),
			st( 1.000000, 0.000000 ),
			st( 0.316431, 0.027525 ),
			st( 1.000000, 0.250000 ),
			st( 0.316431, 0.267143 ),
			st( 0.316431, 0.267143 ),
			st( 0.000000, 0.250000 ),
			st( 0.316431, 0.267143 ),
			st( 0.316431, 0.267143 ),
			st( 0.000000, 0.750000 ),
			st( 0.705243, 0.027525 ),
			st( 0.705243, 0.027525 ),
			st( 0.000000, 0.500000 ),
			st( 0.705243, 0.267143 ),
			st( 1.000000, 0.500000 ),
			st( 0.705243, 0.267143 ),
			st( 1.000000, 0.750000 ),
			st( 0.705243, 0.027525 ),
			st( 0.705243, 0.027525 ),
			st( 1.000000, 0.250000 ),
			st( 0.364112, 0.542395 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.364112, 0.233964 ),
			st( 0.364112, 0.233964 ),
			st( 1.000000, 1.000000 ),
			st( 0.568701, 0.233964 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 1.000000 ),
			st( 0.993662, 0.010634 ),
			st( 0.575203, 0.549276 ),
			st( 0.575203, 0.549276 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.364112, 0.542395 ),
			st( 1.000000, 0.500000 ),
			st( 0.364112, 0.233964 ),
			st( 0.364112, 0.233964 ),
			st( 1.000000, 0.750000 ),
			st( 0.568701, 0.233964 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 1.000000 ),
			st( 0.997887, 0.000573 ),
			st( 0.575203, 0.549276 ),
			st( 0.575203, 0.549276 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 0.200000, 0.250000 ),
			st( 0.200000, 0.000000 ),
			st( 0.200000, 0.997730 ),
			st( 0.200000, 0.997730 ),
			st( 0.200000, 0.997730 ),
			st( 0.800000, 0.000000 ),
			st( 0.799502, 0.997902 ),
			st( 0.799502, 0.997902 ),
			st( 0.799502, 0.997902 ),
			st( 0.800000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.800000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.200000, 0.500000 ),
			st( 0.200000, 0.750000 ),
			st( 1.000000, 0.000000 ),
			st( 0.999003, 0.998521 ),
			st( 0.999003, 0.998521 ),
			st( 0.800000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 0.989735, 0.515183 ),
			st( 0.008669, 0.745393 ),
			st( 0.570868, 0.708712 ),
			st( 0.011976, 0.513580 ),
			st( 0.015628, 0.516296 ),
			st( 0.244909, 0.504547 ),
			st( 0.017339, 0.735071 ),
			st( 0.023841, 0.705272 ),
			st( 0.200000, 0.750000 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.505432 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.200000, 0.997730 ),
			st( 0.200000, 0.000000 ),
			st( 0.200000, 0.000000 ),
			st( 0.200000, 0.250000 ),
			st( 0.200000, 0.500000 ),
			st( 0.393147, 0.732797 ),
			st( 0.800000, 0.250000 ),
			st( 0.800000, 0.000000 ),
			st( 0.799502, 0.997902 ),
			st( 0.799502, 0.997902 ),
			st( 0.799502, 0.997902 ),
			st( 0.800000, 0.000000 ),
			st( 0.800000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.999003, 0.998521 ),
			st( 0.999003, 0.998521 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.995775, 0.003926 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.500000 ),
			st( 0.800000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.505432 ),
			st( 1.000000, 0.505432 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 1.000000 ),
			st( 0.995775, 0.003926 ),
			st( 0.800000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 0.989163, 0.745393 ),
			st( 0.000000, 0.750000 ),
			st( 0.000000, 0.500000 ),
			st( 0.997833, 0.745393 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.002167, 0.752274 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.500000 ),
			st( 0.006502, 0.738511 ),
			st( 0.000000, 1.000000 ),
			st( 0.982661, 0.745393 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.982661, 0.745393 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((3, 2, 1),(3, 2, 1), 0 ),
		polygon ((1, 4, 3),(1, 4, 3), 0 ),
		polygon ((1, 0, 4),(1, 0, 4), 0 ),
		polygon ((5, 6, 7),(5, 6, 7), 0 ),
		polygon ((8, 7, 6),(8, 7, 6), 0 ),
		polygon ((6, 9, 8),(6, 9, 8), 0 ),
		polygon ((6, 5, 9),(6, 5, 9), 0 ),
		polygon ((10, 11, 12),(10, 11, 12), 1 ),
		polygon ((13, 14, 15),(13, 14, 15), 1 ),
		polygon ((16, 17, 14),(16, 19, 14), 1 ),
		polygon ((15, 18, 13),(15, 23, 13), 1 ),
		polygon ((14, 19, 16),(14, 24, 16), 1 ),
		polygon ((14, 13, 20),(14, 13, 25), 1 ),
		polygon ((21, 17, 13),(26, 20, 13), 1 ),
		polygon ((21, 15, 14),(27, 15, 14), 1 ),
		polygon ((20, 19, 14),(25, 24, 14), 1 ),
		polygon ((16, 20, 13),(17, 25, 13), 1 ),
		polygon ((13, 17, 16),(13, 21, 18), 1 ),
		polygon ((18, 21, 13),(23, 28, 13), 1 ),
		polygon ((14, 17, 21),(14, 22, 29), 1 ),
		polygon ((12, 22, 10),(12, 30, 10), 1 ),
		polygon ((23, 24, 25),(31, 32, 35), 1 ),
		polygon ((26, 27, 28),(37, 38, 39), 1 ),
		polygon ((23, 25, 29),(31, 35, 40), 1 ),
		polygon ((28, 30, 26),(39, 41, 37), 1 ),
		polygon ((24, 30, 25),(33, 41, 36), 1 ),
		polygon ((28, 27, 23),(39, 38, 31), 1 ),
		polygon ((24, 26, 30),(34, 37, 41), 1 ),
		polygon ((23, 29, 28),(31, 40, 39), 1 ),
		polygon ((31, 32, 33),(42, 44, 46), 1 ),
		polygon ((33, 34, 31),(46, 49, 42), 1 ),
		polygon ((35, 36, 37),(52, 55, 57), 1 ),
		polygon ((37, 38, 35),(57, 59, 52), 1 ),
		polygon ((36, 34, 33),(55, 49, 46), 1 ),
		polygon ((33, 37, 36),(46, 57, 55), 1 ),
		polygon ((39, 40, 41),(62, 64, 65), 1 ),
		polygon ((41, 42, 39),(65, 66, 62), 1 ),
		polygon ((43, 42, 41),(69, 66, 65), 1 ),
		polygon ((41, 44, 43),(65, 71, 69), 1 ),
		polygon ((45, 43, 44),(72, 69, 71), 1 ),
		polygon ((44, 46, 45),(71, 76, 72), 1 ),
		polygon ((39, 45, 46),(62, 73, 77), 1 ),
		polygon ((46, 40, 39),(78, 64, 62), 1 ),
		polygon ((47, 48, 49),(79, 80, 81), 1 ),
		polygon ((49, 50, 47),(81, 83, 79), 1 ),
		polygon ((47, 50, 51),(79, 83, 86), 1 ),
		polygon ((51, 52, 47),(86, 88, 79), 1 ),
		polygon ((52, 51, 53),(88, 86, 89), 1 ),
		polygon ((53, 54, 52),(89, 93, 88), 1 ),
		polygon ((54, 53, 49),(94, 90, 81), 1 ),
		polygon ((49, 48, 54),(81, 80, 95), 1 ),
		polygon ((38, 37, 33),(60, 58, 47), 1 ),
		polygon ((33, 32, 38),(48, 45, 61), 1 ),
		polygon ((34, 36, 35),(50, 56, 53), 1 ),
		polygon ((35, 31, 34),(54, 43, 51), 1 ),
		polygon ((50, 49, 53),(84, 82, 91), 1 ),
		polygon ((51, 50, 53),(87, 85, 92), 1 ),
		polygon ((45, 39, 42),(74, 63, 67), 1 ),
		polygon ((45, 42, 43),(75, 68, 70), 1 ),
		polygon ((55, 56),(96, 97), 2 ),
		polygon ((55),(96), 2 ),
		polygon ((57, 56, 55),(101, 97, 96), 2 ),
		polygon ((55, 58, 57),(96, 105, 101), 2 ),
		polygon ((59, 58, 60),(106, 105, 107), 2 ),
		polygon ((60, 61, 59),(107, 108, 106), 2 ),
		polygon ((62, 60, 58),(109, 107, 105), 2 ),
		polygon ((58, 55, 62),(105, 96, 109), 2 ),
		polygon ((63, 62),(110, 109), 2 ),
		polygon ((63),(110), 2 ),
		polygon ((64, 57, 58),(111, 101, 105), 2 ),
		polygon ((58, 59, 64),(105, 106, 111), 2 ),
		polygon ((62, 55),(109, 96), 2 ),
		polygon ((55),(96), 2 ),
		polygon ((65, 60, 62),(114, 107, 109), 2 ),
		polygon ((65, 62, 63),(114, 109, 110), 2 ),
		polygon ((56, 63),(98, 110), 2 ),
		polygon ((56),(99), 2 ),
		polygon ((63, 56, 57),(110, 100, 102), 2 ),
		polygon ((57, 65, 63),(103, 114, 110), 2 ),
		polygon ((65, 57, 64),(114, 104, 112), 2 ),
		polygon ((64, 66, 65),(113, 115, 114), 2 ),
		polygon ((65, 66, 61),(114, 115, 108), 2 ),
		polygon ((61, 60, 65),(108, 107, 114), 2 ),
		polygon ((67, 68, 69),(116, 117, 119), 1 ),
		polygon ((67, 69, 70),(116, 120, 122), 1 ),
		polygon ((71),(124), 2 ),
		polygon ((72, 73, 74),(125, 131, 132), 1 ),
		polygon ((75, 76, 74),(133, 136, 132), 1 ),
		polygon ((71, 77),(124, 137), 2 ),
		polygon ((78, 79),(140, 141), 2 ),
		polygon ((70, 80, 67),(122, 142, 116), 1 ),
		polygon ((81, 82, 83),(143, 144, 150), 2 ),
		polygon ((83, 84, 81),(150, 155, 143), 2 ),
		polygon ((72, 73, 85),(125, 131, 161), 1 ),
		polygon ((83, 82, 86),(151, 145, 167), 2 ),
		polygon ((77),(137), 2 ),
		polygon ((74, 73, 75),(132, 131, 133), 1 ),
		polygon ((86, 87, 83),(167, 168, 152), 2 ),
		polygon ((88, 89, 76),(173, 174, 136), 1 ),
		polygon ((82, 77, 71),(146, 137, 124), 2 ),
		polygon ((76, 75, 88),(136, 133, 173), 1 ),
		polygon ((71, 86, 82),(124, 167, 147), 2 ),
		polygon ((72, 90, 89),(126, 175, 174), 1 ),
		polygon ((86, 91, 85),(167, 177, 162), 2 ),
		polygon ((89, 88, 72),(174, 173, 127), 1 ),
		polygon ((85, 87, 86),(163, 168, 167), 2 ),
		polygon ((92, 93, 94),(178, 179, 180), 1 ),
		polygon ((68, 67, 95),(117, 116, 181), 1 ),
		polygon ((94, 96, 97),(180, 182, 183), 1 ),
		polygon ((87, 85, 73),(169, 164, 131), 1 ),
		polygon ((73, 75, 87),(131, 134, 170), 1 ),
		polygon ((88, 72, 84),(173, 128, 156), 1 ),
		polygon ((88, 83, 87),(173, 153, 171), 1 ),
		polygon ((87, 75, 88),(172, 135, 173), 1 ),
		polygon ((98, 99, 92),(184, 187, 178), 1 ),
		polygon ((68, 70, 69),(118, 123, 121), 1 ),
		polygon ((92, 100, 98),(178, 189, 184), 1 ),
		polygon ((91, 81, 84),(177, 143, 157), 2 ),
		polygon ((97, 101, 102),(183, 190, 192), 1 ),
		polygon ((102, 101, 96),(193, 191, 182), 1 ),
		polygon ((85, 84, 72),(165, 158, 129), 1 ),
		polygon ((84, 85, 91),(159, 166, 177), 2 ),
		polygon ((98, 94, 93),(185, 180, 179), 1 ),
		polygon ((74, 90, 72),(132, 176, 130), 1 ),
		polygon ((78),(140), 2 ),
		polygon ((93, 99, 98),(179, 188, 186), 1 ),
		polygon ((94, 100, 92),(180, 189, 178), 1 ),
		polygon ((79, 91, 86),(141, 177, 167), 2 ),
		polygon ((71, 79, 86),(124, 141, 167), 2 ),
		polygon ((84, 83, 88),(160, 154, 173), 1 ),
		polygon ((96, 94, 102),(182, 180, 194), 1 ),
		polygon ((97, 100, 94),(183, 189, 180), 1 ),
		polygon ((102, 100, 97),(195, 189, 183), 1 ),
		polygon ((77, 78),(138, 140), 2 ),
		polygon ((78),(140), 2 ),
		polygon ((81, 91, 79),(143, 177, 141), 2 ),
		polygon ((79, 78, 81),(141, 140, 143), 2 ),
		polygon ((82, 81, 78),(148, 143, 140), 2 ),
		polygon ((78, 77, 82),(140, 139, 149), 2 ),
		polygon ((79, 71),(141, 124), 2 )
	)
); /* end of polyset 'GoalStand' */

polyset goal_base (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (WHITEPOST ),
	shader = (cush4 ),
	casts_shadow = TRUE,
	vertices = ((cv((-9.638247, 1.332381, 0.083869), 1)),
			(cv((-9.690105, 1.332381, 0.083869), 1)),
			(cv((-9.638247, 1.777075, 0.083869), 1)),
			(cv((-9.690105, 1.777075, 0.083869), 1)),
			(cv((-9.690105, 1.332381, -0.052033), 1)),
			(cv((-9.690105, 1.777075, -0.052033), 1)),
			(cv((-9.638247, 1.777075, -0.052033), 1)),
			(cv((-9.638247, 1.332381, -0.052033), 1)),
			(cv((-9.638247, 1.777075, -0.083855), 1)),
			(cv((-9.690105, 1.777075, -0.083855), 1)),
			(cv((-9.638247, 1.777075, 0.052047), 1)),
			(cv((-9.690105, 1.777075, 0.052047), 1)),
			(cv((-9.690105, 1.332381, 0.052047), 1)),
			(cv((-9.638247, 1.332381, 0.052047), 1)),
			(cv((-9.690105, 1.332381, -0.083855), 1)),
			(cv((-9.638247, 1.332381, -0.083855), 1)),
			(cv((-9.490394, 0.883183, -0.195893), 1)),
			(cv((-9.490393, 1.332381, -0.195893), 1)),
			(cv((-9.690105, 1.332381, -0.195893), 1)),
			(cv((-9.690105, 0.883183, -0.195893), 1)),
			(cv((-11.347206, 0.000006, 0.406408), 1)),
			(cv((-11.347206, 0.000006, 0.003079), 1)),
			(cv((-11.347206, 0.39915, 0.003079), 1)),
			(cv((-11.347206, 0.39915, 0.406408), 1)),
			(cv((-9.690105, 1.332381, 0.205063), 1)),
			(cv((-9.690105, 1.332381, 0.003079), 1)),
			(cv((-9.490393, 1.332381, 0.003079), 1)),
			(cv((-9.490393, 1.332381, 0.205063), 1)),
			(cv((-9.490393, 0.000006, 0.406408), 1)),
			(cv((-9.490393, 0.399459, 0.405921), 1)),
			(cv((-9.690105, 0.883183, 0.205063), 1)),
			(cv((-9.490394, 0.399459, -0.39675), 1)),
			(cv((-11.347206, 0.39915, -0.397237), 1)),
			(cv((-11.347206, 0.000006, -0.397237), 1)),
			(cv((-9.490394, 0.000006, -0.397237), 1)),
			(cv((-9.490393, 0.883183, 0.205063), 1)),
			(cv((-9.690105, 0.399459, 0.405921), 1)),
			(cv((-9.690105, 0.399459, -0.39675), 1))	),
	texture_vertices = (
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 0.500000 ),
			st( 0.457387, 0.133831 ),
			st( 0.457387, 0.133831 ),
			st( 1.000000, 0.750000 ),
			st( 0.455496, 0.647953 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 0.002832, 0.003999 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.996219, 0.009542 ),
			st( 0.797702, 0.651839 ),
			st( 0.797702, 0.651839 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.790139, 0.147953 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.457387, 0.133831 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.455496, 0.647953 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.250000 ),
			st( 0.790139, 0.147953 ),
			st( 0.996219, 0.009542 ),
			st( 0.797702, 0.651839 ),
			st( 0.797702, 0.651839 ),
			st( 1.000000, 1.000000 ),
			st( 0.002832, 0.003999 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.750000 ),
			st( 0.000000, 0.500000 ),
			st( 0.700393, 0.700648 ),
			st( 0.967801, 0.698498 ),
			st( 0.967997, 0.698498 ),
			st( 0.967997, 0.698498 ),
			st( 0.700393, 0.700648 ),
			st( 0.700393, 0.700648 ),
			st( 0.699455, 0.997775 ),
			st( 0.962701, 0.997573 ),
			st( 0.704190, 0.996506 ),
			st( 0.704190, 0.996506 ),
			st( 0.962701, 0.997573 ),
			st( 0.574900, 0.997798 ),
			st( 0.726952, 0.997310 ),
			st( 0.726952, 0.997310 ),
			st( 0.574648, 0.996116 ),
			st( 0.574240, 0.700595 ),
			st( 0.726952, 0.683213 ),
			st( 0.726952, 0.683213 ),
			st( 0.726952, 0.683213 ),
			st( 0.574240, 0.700595 ),
			st( 0.005248, 0.002385 ),
			st( 0.002926, 0.000000 ),
			st( 0.295500, 0.002385 ),
			st( 0.295500, 0.370420 ),
			st( 0.005248, 0.370420 ),
			st( 0.002926, 0.355494 ),
			st( 0.002926, 0.355494 ),
			st( 0.002228, 0.365902 ),
			st( 0.002228, 0.365902 ),
			st( 0.574648, 0.996116 ),
			st( 0.964496, 0.997774 ),
			st( 0.570957, 0.999119 ),
			st( 0.574479, 0.870934 ),
			st( 0.704249, 0.871387 ),
			st( 0.704190, 0.996506 ),
			st( 0.699159, 1.000000 ),
			st( 0.699580, 0.999791 ),
			st( 0.699580, 0.999791 ),
			st( 0.695623, 0.001347 ),
			st( 0.699159, 0.001900 ),
			st( 0.695623, 0.352699 ),
			st( 0.697936, 0.365525 ),
			st( 0.697936, 0.365525 ),
			st( 0.697936, 0.365525 ),
			st( 0.697936, 0.365525 ),
			st( 0.699580, 0.355653 ),
			st( 0.961765, 0.682541 ),
			st( 0.571782, 0.731341 ),
			st( 0.571782, 0.731341 ),
			st( 0.570110, 0.731341 ),
			st( 0.699436, 0.365980 ),
			st( 0.995530, 0.365291 ),
			st( 0.995530, 0.365291 ),
			st( 0.700346, 0.364938 ),
			st( 0.002049, 0.365119 ),
			st( 0.005248, 0.370420 ),
			st( 0.005248, 0.370420 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.005248, 0.002385 ),
			st( 0.699212, 0.000000 ),
			st( 0.996744, 0.001706 ),
			st( 0.996744, 0.001706 ),
			st( 0.697937, 0.699329 ),
			st( 0.699580, 0.731341 ),
			st( 0.699580, 0.731341 ),
			st( 0.699580, 0.731341 ),
			st( 0.964496, 0.345047 ),
			st( 0.570110, 0.355653 ),
			st( 0.570110, 0.355653 ),
			st( 0.560652, 0.364603 ),
			st( 0.725662, 0.345634 ),
			st( 0.561841, 1.000000 ),
			st( 0.561841, 1.000000 ),
			st( 0.571405, 0.364065 ),
			st( 0.571405, 0.364065 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((1, 3, 2),(1, 5, 2), 0 ),
		polygon ((4, 5, 6),(9, 12, 16), 0 ),
		polygon ((6, 7, 4),(16, 19, 9), 0 ),
		polygon ((8, 6, 5),(20, 17, 13), 0 ),
		polygon ((5, 9, 8),(14, 25, 20), 0 ),
		polygon ((10, 11, 12),(29, 31, 35), 0 ),
		polygon ((12, 13, 10),(35, 38, 29), 0 ),
		polygon ((13, 0, 2),(38, 0, 2), 0 ),
		polygon ((2, 10, 13),(2, 29, 38), 0 ),
		polygon ((9, 5, 4),(26, 15, 10), 0 ),
		polygon ((4, 14, 9),(11, 39, 27), 0 ),
		polygon ((8, 14, 15),(21, 39, 40), 0 ),
		polygon ((8, 9, 14),(22, 28, 39), 0 ),
		polygon ((8, 15, 7),(23, 40, 19), 0 ),
		polygon ((7, 6, 8),(19, 18, 24), 0 ),
		polygon ((11, 10, 2),(32, 30, 3), 0 ),
		polygon ((2, 3, 11),(4, 6, 33), 0 ),
		polygon ((12, 11, 3),(36, 34, 7), 0 ),
		polygon ((3, 1, 12),(8, 1, 37), 0 ),
		polygon ((16, 17, 18),(41, 47, 52), 1 ),
		polygon ((18, 19, 16),(52, 56, 41), 1 ),
		polygon ((20, 21, 22),(61, 63, 64), 1 ),
		polygon ((22, 23, 20),(64, 65, 61), 1 ),
		polygon ((24, 25, 26),(70, 73, 74), 1 ),
		polygon ((26, 27, 24),(74, 75, 70), 1 ),
		polygon ((28, 23, 29),(79, 66, 81), 1 ),
		polygon ((30, 19, 18),(87, 57, 53), 1 ),
		polygon ((31, 32, 33),(91, 95, 99), 1 ),
		polygon ((18, 24, 30),(54, 71, 87), 1 ),
		polygon ((33, 34, 31),(99, 101, 91), 1 ),
		polygon ((17, 16, 35),(48, 42, 104), 1 ),
		polygon ((36, 37, 19),(108, 112, 58), 1 ),
		polygon ((19, 30, 36),(59, 87, 108), 1 ),
		polygon ((21, 33, 32),(63, 100, 96), 1 ),
		polygon ((32, 22, 21),(97, 64, 63), 1 ),
		polygon ((17, 26, 25),(49, 74, 73), 1 ),
		polygon ((25, 18, 17),(73, 55, 50), 1 ),
		polygon ((34, 29, 31),(102, 82, 92), 1 ),
		polygon ((29, 35, 16),(83, 104, 43), 1 ),
		polygon ((35, 27, 17),(104, 76, 51), 1 ),
		polygon ((28, 20, 23),(79, 62, 67), 1 ),
		polygon ((30, 24, 27),(88, 72, 77), 1 ),
		polygon ((27, 35, 30),(78, 105, 89), 1 ),
		polygon ((16, 31, 29),(44, 93, 84), 1 ),
		polygon ((28, 29, 34),(80, 85, 103), 1 ),
		polygon ((36, 30, 35),(109, 90, 106), 1 ),
		polygon ((35, 29, 36),(107, 86, 110), 1 ),
		polygon ((37, 36, 23),(113, 111, 68), 1 ),
		polygon ((23, 32, 37),(69, 98, 114), 1 ),
		polygon ((16, 19, 37),(45, 60, 115), 1 ),
		polygon ((37, 31, 16),(116, 94, 46), 1 )
	)
); /* end of polyset 'goal_base' */

polyset Net (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (NET ),
	casts_shadow = TRUE,
	vertices = ((cv((-7.416891, 2.301843, -0.166936), 1)),
			(cv((-7.426974, 2.200817, -0.128404), 1)),
			(cv((-7.506674, 2.301843, -0.166936), 1)),
			(cv((-7.496141, 2.200817, -0.128525), 1)),
			(cv((-7.556102, 2.200817, -0.094046), 1)),
			(cv((-7.521427, 1.946636, -0.05904), 1)),
			(cv((-7.543258, 1.946636, -0.021228), 1)),
			(cv((-7.530908, 2.044886, -0.068763), 1)),
			(cv((-7.55633, 2.044886, -0.024907), 1)),
			(cv((-7.339135, 2.301843, -0.122044), 1)),
			(cv((-7.367133, 2.200817, -0.093716), 1)),
			(cv((-7.332654, 2.200817, -0.033755), 1)),
			(cv((-7.294243, 2.301843, -0.044288), 1)),
			(cv((-7.58443, 2.301843, -0.122044), 1)),
			(cv((-7.629322, 2.301843, -0.044288), 1)),
			(cv((-7.59079, 2.200817, -0.034205), 1)),
			(cv((-7.569123, 2.117504, -0.028158), 1)),
			(cv((-7.540361, 2.117504, -0.077975), 1)),
			(cv((-7.490544, 2.117504, -0.106737), 1)),
			(cv((-7.433021, 2.117504, -0.106737), 1)),
			(cv((-7.383204, 2.117504, -0.077975), 1)),
			(cv((-7.436272, 2.044886, -0.093944), 1)),
			(cv((-7.486963, 2.044886, -0.094033), 1)),
			(cv((-7.392415, 2.044886, -0.068522), 1)),
			(cv((-7.402138, 1.946636, -0.05904), 1)),
			(cv((-7.439951, 1.946636, -0.080872), 1)),
			(cv((-7.483614, 1.946636, -0.080872), 1)),
			(cv((-7.590911, 2.200817, 0.034962), 1)),
			(cv((-7.629322, 2.301843, 0.045496), 1)),
			(cv((-7.58443, 2.301843, 0.123251), 1)),
			(cv((-7.569123, 2.117504, 0.029365), 1)),
			(cv((-7.540361, 2.117504, 0.079182), 1)),
			(cv((-7.556432, 2.200817, 0.094923), 1)),
			(cv((-7.556419, 2.044886, 0.025784), 1)),
			(cv((-7.53115, 2.044886, 0.069729), 1)),
			(cv((-7.543258, 1.946636, 0.022435), 1)),
			(cv((-7.521427, 1.946636, 0.060248), 1)),
			(cv((-7.487294, 2.044886, 0.095151), 1)),
			(cv((-7.496592, 2.200817, 0.129611), 1)),
			(cv((-7.506675, 2.301843, 0.168143), 1)),
			(cv((-7.332775, 2.200817, 0.035413), 1)),
			(cv((-7.354442, 2.117504, 0.029365), 1)),
			(cv((-7.354442, 2.117504, -0.028158), 1)),
			(cv((-7.416891, 2.301843, 0.168143), 1)),
			(cv((-7.427424, 2.200817, 0.129732), 1)),
			(cv((-7.367463, 2.200817, 0.095253), 1)),
			(cv((-7.339135, 2.301843, 0.123251), 1)),
			(cv((-7.294243, 2.301843, 0.045496), 1)),
			(cv((-7.383204, 2.117504, 0.079182), 1)),
			(cv((-7.433021, 2.117504, 0.107944), 1)),
			(cv((-7.490544, 2.117504, 0.107944), 1)),
			(cv((-7.436602, 2.044886, 0.09524), 1)),
			(cv((-7.392657, 2.044886, 0.06997), 1)),
			(cv((-7.367235, 2.044886, 0.026114), 1)),
			(cv((-7.367146, 2.044886, -0.024577), 1)),
			(cv((-7.483614, 1.946636, 0.082079), 1)),
			(cv((-7.439951, 1.946636, 0.082079), 1)),
			(cv((-7.402138, 1.946636, 0.060248), 1)),
			(cv((-7.380307, 1.946636, 0.022435), 1)),
			(cv((-7.380307, 1.946636, -0.021228), 1))	),
	texture_vertices = (
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.704342 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ) ),
	polygons = (
		polygon ((2, 1, 0),(2, 1, 0), 0 ),
		polygon ((2, 4, 3),(2, 4, 3), 0 ),
		polygon ((1, 2, 3),(1, 2, 3), 0 ),
		polygon ((7, 6, 5),(7, 6, 5), 0 ),
		polygon ((6, 7, 8),(6, 7, 8), 0 ),
		polygon ((9, 0, 1),(9, 0, 1), 0 ),
		polygon ((1, 10, 9),(1, 10, 9), 0 ),
		polygon ((10, 11, 9),(10, 11, 9), 0 ),
		polygon ((12, 9, 11),(12, 9, 11), 0 ),
		polygon ((2, 13, 4),(2, 13, 4), 0 ),
		polygon ((13, 14, 4),(13, 14, 4), 0 ),
		polygon ((15, 4, 14),(15, 4, 14), 0 ),
		polygon ((15, 16, 4),(15, 16, 4), 0 ),
		polygon ((17, 4, 16),(17, 4, 16), 0 ),
		polygon ((17, 18, 4),(17, 18, 4), 0 ),
		polygon ((18, 3, 4),(18, 3, 4), 0 ),
		polygon ((19, 1, 18),(19, 1, 18), 0 ),
		polygon ((3, 18, 1),(3, 18, 1), 0 ),
		polygon ((1, 19, 20),(1, 19, 20), 0 ),
		polygon ((10, 1, 20),(10, 1, 20), 0 ),
		polygon ((22, 21, 18),(22, 21, 18), 0 ),
		polygon ((18, 7, 22),(18, 7, 22), 0 ),
		polygon ((7, 18, 17),(7, 18, 17), 0 ),
		polygon ((7, 16, 8),(7, 16, 8), 0 ),
		polygon ((19, 18, 21),(19, 18, 21), 0 ),
		polygon ((23, 20, 21),(23, 20, 21), 0 ),
		polygon ((19, 21, 20),(19, 21, 20), 0 ),
		polygon ((21, 24, 23),(21, 24, 23), 0 ),
		polygon ((21, 25, 24),(21, 25, 24), 0 ),
		polygon ((21, 26, 25),(21, 26, 25), 0 ),
		polygon ((26, 21, 22),(26, 21, 22), 0 ),
		polygon ((26, 22, 7),(26, 22, 7), 0 ),
		polygon ((5, 26, 7),(5, 26, 7), 0 ),
		polygon ((15, 14, 27),(15, 14, 27), 0 ),
		polygon ((27, 14, 28),(27, 14, 28), 0 ),
		polygon ((28, 29, 27),(28, 29, 27), 0 ),
		polygon ((16, 15, 27),(16, 15, 27), 0 ),
		polygon ((16, 27, 30),(16, 27, 30), 0 ),
		polygon ((27, 31, 30),(27, 31, 30), 0 ),
		polygon ((31, 27, 32),(31, 27, 32), 0 ),
		polygon ((34, 33, 31),(34, 33, 31), 0 ),
		polygon ((30, 31, 33),(30, 31, 33), 0 ),
		polygon ((16, 30, 33),(16, 30, 33), 0 ),
		polygon ((16, 33, 8),(16, 33, 8), 0 ),
		polygon ((16, 7, 17),(16, 7, 17), 0 ),
		polygon ((35, 6, 33),(35, 6, 33), 0 ),
		polygon ((8, 33, 6),(8, 33, 6), 0 ),
		polygon ((33, 36, 35),(33, 36, 35), 0 ),
		polygon ((36, 33, 34),(36, 33, 34), 0 ),
		polygon ((36, 34, 37),(36, 34, 37), 0 ),
		polygon ((37, 34, 31),(37, 34, 31), 0 ),
		polygon ((31, 32, 38),(31, 32, 38), 0 ),
		polygon ((38, 29, 39),(38, 29, 39), 0 ),
		polygon ((41, 40, 11),(41, 40, 11), 0 ),
		polygon ((32, 27, 29),(32, 27, 29), 0 ),
		polygon ((32, 29, 38),(32, 29, 38), 0 ),
		polygon ((42, 11, 20),(42, 11, 20), 0 ),
		polygon ((39, 43, 38),(39, 43, 38), 0 ),
		polygon ((44, 38, 43),(44, 38, 43), 0 ),
		polygon ((45, 44, 43),(45, 44, 43), 0 ),
		polygon ((45, 43, 46),(45, 43, 46), 0 ),
		polygon ((45, 47, 40),(45, 47, 40), 0 ),
		polygon ((47, 45, 46),(47, 45, 46), 0 ),
		polygon ((40, 47, 11),(40, 47, 11), 0 ),
		polygon ((11, 47, 12),(11, 47, 12), 0 ),
		polygon ((48, 45, 41),(48, 45, 41), 0 ),
		polygon ((40, 41, 45),(40, 41, 45), 0 ),
		polygon ((45, 48, 49),(45, 48, 49), 0 ),
		polygon ((44, 45, 49),(44, 45, 49), 0 ),
		polygon ((49, 38, 44),(49, 38, 44), 0 ),
		polygon ((38, 49, 50),(38, 49, 50), 0 ),
		polygon ((38, 50, 31),(38, 50, 31), 0 ),
		polygon ((31, 50, 37),(31, 50, 37), 0 ),
		polygon ((50, 49, 37),(50, 49, 37), 0 ),
		polygon ((51, 37, 49),(51, 37, 49), 0 ),
		polygon ((52, 51, 49),(52, 51, 49), 0 ),
		polygon ((52, 49, 48),(52, 49, 48), 0 ),
		polygon ((52, 41, 53),(52, 41, 53), 0 ),
		polygon ((41, 52, 48),(41, 52, 48), 0 ),
		polygon ((41, 54, 53),(41, 54, 53), 0 ),
		polygon ((37, 55, 36),(37, 55, 36), 0 ),
		polygon ((37, 56, 55),(37, 56, 55), 0 ),
		polygon ((56, 37, 51),(56, 37, 51), 0 ),
		polygon ((56, 51, 52),(56, 51, 52), 0 ),
		polygon ((57, 56, 52),(57, 56, 52), 0 ),
		polygon ((53, 58, 52),(53, 58, 52), 0 ),
		polygon ((57, 52, 58),(57, 52, 58), 0 ),
		polygon ((58, 53, 54),(58, 53, 54), 0 ),
		polygon ((54, 59, 58),(54, 59, 58), 0 ),
		polygon ((23, 24, 54),(23, 24, 54), 0 ),
		polygon ((59, 54, 24),(59, 54, 24), 0 ),
		polygon ((23, 54, 20),(23, 54, 20), 0 ),
		polygon ((54, 41, 42),(54, 41, 42), 0 ),
		polygon ((41, 11, 42),(41, 11, 42), 0 ),
		polygon ((10, 20, 11),(10, 20, 11), 0 ),
		polygon ((42, 20, 54),(42, 20, 54), 0 )
	)
); /* end of polyset 'Net' */

ENVIRONMENT
background ( 
        color = (0.0, 0.0, 0.0)
);
shader_glow ( 
,
        glow_type =  LINEAR_GLOW,
        halo_type =  LINEAR_GLOW,
        auto_exposure = ON,
        quality = 0.5,
        threshold = 0.0,
        glow_color = (100.0, 100.0, 100.0),
        glow_intensity = 1.0,
        glow_spread = 0.05,
        glow_eccentricity = 0.1,
        glow_radial_noise = 0.0,
        glow_star_level = 0.0,
        glow_opacity = 0.0,
        halo_color = (100.0, 100.0, 100.0),
        halo_intensity = 1.0,
        halo_spread = 0.3,
        halo_eccentricity = 0.1,
        halo_radial_noise = 0.0,
        halo_star_level = 0.0,
        halo_lens_flare = 0.0,
        rotation = 0.0,
        radial_noise_frequency = 0.5,
        star_points = 4.0
);
photo_effects ( 
,
        film_grain = 0.0,
        filter = (255.0, 255.0, 255.0)
);
master_light ( 
,
        intensity = 1.0,
        light_color = (255.0, 255.0, 255.0)
);
dynamics ( 
,
        gravity = 1.0,
        air_density = 0.05,
        Floor = ON,
        floor_offset = 0.0,
        ceiling = OFF,
        ceiling_offset = 20.0,
        left = OFF,
        left_offset = -10.0,
        right = OFF,
        right_offset = 10.0,
        front = OFF,
        front_offset = -10.0,
        back = OFF,
        back_offset = 10.0,
        wall_friction = 0.0,
        wall_elasticity = 0.707,
        turbulence_intensity = 0.0,
        turbulence_spread = 0.5,
        turbulence_persistence = 5.0,
        turbulence_animated = ON,
        turbulence_space_resolution =  16,
        turbulence_time_resolution =  16,
        turbulence_roughness = 0.5,
        turbulence_variability = 0.5,
        turbulence_granularity = 0.0
);

MODEL
/* Only expression assignments should appear above this line and below the MODEL directive. */
/* Placing any other commands in the above section will produce incorrect expression behaviour. */
{
	trn(0.0, 0.0, 12.0);
	{
		inst Light();
	}
	{
		trn(-2.0, -2.0, 0.0);
		Lightview = current_position(( 0.0,  0.0,  0.0));
	}
	{
		trn(0.0, 10.0, 0.0);
		Lightup = current_position(( 0.0,  0.0,  0.0));
	}
}
{
	{
		trn_ro(0.026451, 0.0, 0.0);
		trn_ri(-0.026451, 0.0, 0.0);
		trn_so(0.026451, 0.0, 0.0);
		trn_si(-0.026451, 0.0, 0.0);
		instance Rim2();
	}
	{
		trn_ro(0.026451, 0.0, 0.0);
		trn_ri(-0.026451, 0.0, 0.0);
		trn_so(0.026451, 0.0, 0.0);
		trn_si(-0.026451, 0.0, 0.0);
		instance decals2();
	}
	{
		trn_ro(0.026451, 0.0, 0.0);
		trn_ri(-0.026451, 0.0, 0.0);
		trn_so(0.026451, 0.0, 0.0);
		trn_si(-0.026451, 0.0, 0.0);
		instance BackBoard2();
	}
	{
		trn_ro(0.026451, 0.0, 0.0);
		trn_ri(-0.026451, 0.0, 0.0);
		trn_so(0.026451, 0.0, 0.0);
		trn_si(-0.026451, 0.0, 0.0);
		instance glass2();
	}
	{
		instance GoalStand2();
	}
	{
		trn_ro(0.026451, 0.0, 0.0);
		trn_ri(-0.026451, 0.0, 0.0);
		trn_so(0.026451, 0.0, 0.0);
		trn_si(-0.026451, 0.0, 0.0);
		instance goal_base2();
	}
	{
		trn_ro(0.026451, 0.0, 0.0);
		trn_ri(-0.026451, 0.0, 0.0);
		trn_so(0.026451, 0.0, 0.0);
		trn_si(-0.026451, 0.0, 0.0);
		instance Net2();
	}
}
{
	{
		trn_ro(-0.026451, 0.0, 0.0);
		trn_ri(0.026451, 0.0, 0.0);
		trn_so(-0.026451, 0.0, 0.0);
		trn_si(0.026451, 0.0, 0.0);
		instance Rim();
	}
	{
		trn_ro(-0.026451, 0.0, 0.0);
		trn_ri(0.026451, 0.0, 0.0);
		trn_so(-0.026451, 0.0, 0.0);
		trn_si(0.026451, 0.0, 0.0);
		instance decals();
	}
	{
		trn_ro(-0.026451, 0.0, 0.0);
		trn_ri(0.026451, 0.0, 0.0);
		trn_so(-0.026451, 0.0, 0.0);
		trn_si(0.026451, 0.0, 0.0);
		instance BackBoard();
	}
	{
		trn_ro(-0.026451, 0.0, 0.0);
		trn_ri(0.026451, 0.0, 0.0);
		trn_so(-0.026451, 0.0, 0.0);
		trn_si(0.026451, 0.0, 0.0);
		instance glass();
	}
	{
		instance GoalStand();
	}
	{
		trn_ro(-0.026451, 0.0, 0.0);
		trn_ri(0.026451, 0.0, 0.0);
		trn_so(-0.026451, 0.0, 0.0);
		trn_si(0.026451, 0.0, 0.0);
		instance goal_base();
	}
	{
		trn_ro(-0.026451, 0.0, 0.0);
		trn_ri(0.026451, 0.0, 0.0);
		trn_so(-0.026451, 0.0, 0.0);
		trn_si(0.026451, 0.0, 0.0);
		instance Net();
	}
}
{
	{
		trn(9.712721, 7.846895, 10.903334);
		camera (
			perspective = TRUE,
			eye   = ( 0.0,  0.0,  0.0),
			active = ON,
			pix   = "pix/goallow.sdl",
			view  = Camera_view,
			up  = Camera_up,
			aov = 55.0,
			filmaperture_x = 0.4,
			filmaperture_y = 0.285,
			filmoffset_x = 0.0,
			filmoffset_y = 0.0,
			placement_fit_code = 0,
			placement_shift = 0.0,
			aspect   = pixel_aspect,
			aspect_ratio_pixel = pixel_aspect,
			near = 0.1,
			far = 200.0,
			depth_of_field = 0.0,
			scaling_factor = 1.0,
			f_stop = 3.5,
			focal_distance = 12.0,
			auto_focus = OFF,
			motion_blur = 0.0
		);
	}
	{
		trn(9.726294, 6.818141, 9.149913);
		Camera_view = current_position( (0, 0, 0) );
	}
	{
		trn(9.716629, 8.709414, 10.397328);
		Camera_up = current_position( (0, 0, 0) );
	}
}

