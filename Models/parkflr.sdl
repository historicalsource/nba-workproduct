DEFINITION	/* ALIAS SDL File Version 8.5 */
			/* Apparently from wire file '/matt/mgilmore/user_data/NBAonNBC/wire/FLOORS/PARK/park010FLOOR'. */
	version = 8.5;

	xleft  = 0;
	xright = 1279;
	ylow   = 0;
	yhigh  = 1023;
	resolution = 1280 1024;
	aalevelmin   = 3;
	aalevelmax   = 12;
	aathreshold  = 0.6;
	post_filter   = OFF;
	post_center   = 8;    /* Values for a bartlet filter. */
	post_adjacent = 1;
	post_diagonal = 1;

	composite_rendering = OFF;
	invisible_objects_cast_shadows = OFF;
	image_format = ALIAS;
	jitter       = ON;
	reduced_samples = OFF;
	textures_active    = ON;

	clamp_bumpsize = 0.0;

	up = yaxis;

	motion_blur_on = OFF;
	shutter_angle  = 144.0;
	animation  = OFF;
	startframe = 3.0;
	endframe = 3.0;
	fields          = FALSE;
	odd             = FALSE;
	even            = FALSE;
	odd_field_first = TRUE;

	triple Camera_view(0.0, 0.0, 0.0);
	triple Camera_up(0.0, 0.0, 0.0);

	subdivision_recursion_limit = 2;
	grid_cache = 4000;
	bbox_memory = FULL;
	rt_voxel_res_type = AUTOMATIC;

	max_reflections             = 10;
	max_refractions             = 10;
	max_shadow_level            = 10;
	preview_ray_trace           = OFF;

	scalar pixel_aspect ( 1.0 );
	hline_to_fill_color  = FALSE;
	hline_fill_color     = (255.0, 255.0, 255.0);
	hline_line_color     = (0.0, 255.0, 255.0);
	hline_isoparam_u     = 0;
	hline_isoparam_v     = 0;

	show_particles       = TRUE;
	simulation_substeps  = 1;
	simulation_frames_per_second = 30;

triple Lightview#2(0.0, 0.0, 0.0);
triple Lightup#2(0.0, 0.0, 0.0);
triple Lightview(0.0, 0.0, 0.0);
triple Lightup(0.0, 0.0, 0.0);

light Light#2 ( model = directional,
	active = ON,
	exclusive = FALSE,
	light_emission = ON,
	color = (255.0, 255.0, 255.0),
	shadow_color = (0.0, 0.0, 0.0),
	intensity = 1.0,
	force_type = OFF,
	force_intensity = 1.0,
	warp = OFF,
	glow_type = OFF,
	halo_type = OFF,
	fog_type = OFF,
	flare = OFF,
	psys_emission = OFF,
	shadow = FALSE,
	soft_shadows = FALSE,
	light_radius = 1.0,
	shadow_samples = 2.0,
	use_shadow_map = 0.0,
	direction = (0.000000, 0.000000, -1.000000)
);

light Light ( model = ambient,
	active = ON,
	exclusive = FALSE,
	light_emission = ON,
	color = (100.0, 100.0, 100.0),
	shadow_color = (0.0, 0.0, 0.0),
	intensity = 1.0,
	force_type = OFF,
	force_intensity = 1.0,
	warp = OFF,
	glow_type = OFF,
	halo_type = OFF,
	fog_type = OFF,
	flare = OFF,
	psys_emission = OFF,
	shadow = FALSE,
	soft_shadows = FALSE,
	light_radius = 1.0,
	shadow_samples = 2.0,
	use_shadow_map = 0.0,
	ambient_shade = 0.5
);

texture crtfile3 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/parn03.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader court_3 ( model = lambert,
        diffuse = 0.8,
        color = crtfile3,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture crtfile8 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/parn08.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader court_8 ( model = lambert,
        diffuse = 0.8,
        color = crtfile8,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture crtfile5 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/parn05.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader court_5 ( model = lambert,
        diffuse = 0.8,
        color = crtfile5,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture crtfile7 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/parn07.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader court_7 ( model = lambert,
        diffuse = 0.8,
        color = crtfile7,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture crtfile2 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/parn02.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader court_2 ( model = lambert,
        diffuse = 0.8,
        color = crtfile2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture crtfile1 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/parn01.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader court_1 ( model = lambert,
        diffuse = 0.8,
        color = crtfile1,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture crtfile4 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/parn04.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader court_4 ( model = lambert,
        diffuse = 0.8,
        color = crtfile4,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture crtfile6 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/parn06.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader court_6 ( model = lambert,
        diffuse = 0.8,
        color = crtfile6,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture outbound_floor (
        procedure = file,
        rgbout = (0.0, 0.0, 0.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/atlhaw/8way/atln10.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader outofbnd ( model = lambert,
        diffuse = 0.8,
        color = outbound_floor,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture fencefile (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/parkfnce.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader fence ( model = lambert,
        diffuse = 0.8,
        color = fencefile,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture gatefile (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/parkgate.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader gate ( model = lambert,
        diffuse = 0.8,
        color = gatefile,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture fencefile#2 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/parkgraf.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader Midway_fence ( model = lambert,
        diffuse = 0.8,
        color = fencefile#2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

polyset park_fence (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (fence ),
	shader = (gate ),
	shader = (Midway_fence ),
	casts_shadow = TRUE,
	vertices = ((cv((-3.500041, 0.0, -5.856695), 1)),
			(cv((-8.217418, 0.015005, -5.857167), 1)),
			(cv((-8.217418, 1.991161, -5.857167), 1)),
			(cv((-3.500041, 1.976156, -5.856695), 1)),
			(cv((3.5, 1.976156, -5.8563), 1)),
			(cv((8.217418, 1.991161, -5.857167), 1)),
			(cv((3.5, 0.0, -5.8563), 1)),
			(cv((8.217418, 0.015005, -5.857167), 1)),
			(cv((10.708052, 0.015005, -3.366534), 1)),
			(cv((10.708052, 1.991161, -3.366534), 1)),
			(cv((10.708052, 1.976156, -0.000031), 1)),
			(cv((10.708052, 0.0, -0.000031), 1)),
			(cv((10.708052, 0.015005, 3.373955), 1)),
			(cv((10.708052, 1.991161, 3.373955), 1)),
			(cv((8.217418, 1.991161, 5.864588), 1)),
			(cv((8.217418, 0.015005, 5.864588), 1)),
			(cv((3.5, 1.976156, 5.865443), 1)),
			(cv((3.5, 0.0, 5.865443), 1)),
			(cv((0.0, 1.976156, 5.864588), 1)),
			(cv((0.0, 0.0, 5.864588), 1)),
			(cv((-3.500041, 0.0, 5.865049), 1)),
			(cv((-3.500041, 1.976156, 5.865049), 1)),
			(cv((-8.217418, 1.991161, 5.864588), 1)),
			(cv((-8.217418, 0.015005, 5.864588), 1)),
			(cv((-10.708052, 0.015005, 3.373955), 1)),
			(cv((-10.708052, 1.991161, 3.373955), 1)),
			(cv((-10.708052, 0.0, 0.000031), 1)),
			(cv((-10.708052, 1.976156, 0.000031), 1)),
			(cv((-10.708052, 0.015005, -3.366534), 1)),
			(cv((-10.708052, 1.991161, -3.366534), 1)),
			(cv((0.0, 0.0, -5.857155), 1)),
			(cv((0.0, 1.976156, -5.857155), 1)),
			(cv((3.5, 0.0, -5.8563), 1)),
			(cv((3.5, 1.976156, -5.8563), 1)),
			(cv((-3.500041, 0.0, -5.856695), 1)),
			(cv((-3.500041, 1.976156, -5.856695), 1))	),
	texture_vertices = (
			st( 5.150000, 0.000000 ),
			st( 4.000000, 0.000000 ),
			st( 4.000000, 1.000000 ),
			st( 5.150000, 1.000000 ),
			st( 6.850000, 1.000000 ),
			st( 8.000000, 1.000000 ),
			st( 6.850000, 0.000000 ),
			st( 8.000000, 0.000000 ),
			st( 9.000000, 0.000000 ),
			st( 9.000000, 1.000000 ),
			st( 10.000000, 1.000000 ),
			st( 10.000000, 0.000000 ),
			st( 11.000000, 0.000000 ),
			st( 11.000000, 1.000000 ),
			st( 12.000000, 1.000000 ),
			st( 12.000000, 0.000000 ),
			st( 13.150000, 1.000000 ),
			st( 13.150000, 0.000000 ),
			st( 14.000000, 1.000000 ),
			st( 14.000000, 0.000000 ),
			st( 14.850000, -0.000039 ),
			st( 14.850000, 1.000000 ),
			st( 16.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 16.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 2.000000, 0.000000 ),
			st( 2.000000, 1.000000 ),
			st( 3.000000, 0.000000 ),
			st( 3.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.150000, 0.000000 ),
			st( 0.150000, 1.000000 ),
			st( 0.150000, 0.000000 ),
			st( 0.150000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 0 ),
		polygon ((6, 5, 7),(6, 5, 7), 0 ),
		polygon ((7, 5, 8),(7, 5, 8), 2 ),
		polygon ((8, 5, 9),(8, 5, 9), 2 ),
		polygon ((8, 9, 10),(8, 9, 10), 0 ),
		polygon ((10, 11, 8),(10, 11, 8), 0 ),
		polygon ((11, 10, 12),(11, 10, 12), 0 ),
		polygon ((12, 10, 13),(12, 10, 13), 0 ),
		polygon ((13, 14, 12),(13, 14, 12), 2 ),
		polygon ((12, 14, 15),(12, 14, 15), 2 ),
		polygon ((14, 16, 15),(14, 16, 15), 0 ),
		polygon ((17, 15, 16),(17, 15, 16), 0 ),
		polygon ((17, 18, 19),(17, 18, 19), 0 ),
		polygon ((18, 17, 16),(18, 17, 16), 0 ),
		polygon ((20, 19, 18),(20, 19, 18), 0 ),
		polygon ((18, 21, 20),(18, 21, 20), 0 ),
		polygon ((22, 20, 21),(22, 20, 21), 0 ),
		polygon ((23, 20, 22),(25, 20, 22), 0 ),
		polygon ((24, 23, 22),(27, 26, 23), 2 ),
		polygon ((22, 25, 24),(24, 28, 27), 2 ),
		polygon ((26, 24, 25),(29, 27, 28), 0 ),
		polygon ((25, 27, 26),(28, 30, 29), 0 ),
		polygon ((28, 26, 27),(31, 29, 30), 0 ),
		polygon ((27, 29, 28),(30, 32, 31), 0 ),
		polygon ((1, 28, 29),(1, 31, 32), 2 ),
		polygon ((29, 2, 1),(32, 2, 1), 2 ),
		polygon ((30, 31, 32),(33, 34, 35), 1 ),
		polygon ((32, 31, 33),(35, 34, 36), 1 ),
		polygon ((30, 34, 35),(33, 37, 38), 1 ),
		polygon ((35, 31, 30),(38, 34, 33), 1 )
	)
); /* end of polyset 'park_fence' */

polyset parcourt (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (court_3 ),
	shader = (court_8 ),
	shader = (court_5 ),
	shader = (court_7 ),
	shader = (court_2 ),
	shader = (court_1 ),
	shader = (court_4 ),
	shader = (court_6 ),
	shader = (outofbnd ),
	casts_shadow = TRUE,
	vertices = ((cv((0.0, 0.0, 0.0), 1)),
			(cv((3.5, 0.0, -4.311973), 1)),
			(cv((3.5, 0.0, 0.0), 1)),
			(cv((7.5, 0.0, 0.0), 1)),
			(cv((7.5, 0.0, 4.312828), 1)),
			(cv((3.5, 0.0, 4.312828), 1)),
			(cv((-3.500041, 0.0, 0.000031), 1)),
			(cv((-7.500041, 0.0, 4.312433), 1)),
			(cv((-7.500041, 0.0, 0.000031), 1)),
			(cv((0.0, 0.0, 4.3124), 1)),
			(cv((-3.500041, 0.0, 4.312433), 1)),
			(cv((-3.500041, 0.0, -4.312367), 1)),
			(cv((-7.500041, 0.0, -4.312367), 1)),
			(cv((7.5, 0.0, -4.311973), 1)),
			(cv((0.0, 0.0, -4.3124), 1)),
			(cv((10.708051, 0.015005, -3.366534), 1)),
			(cv((8.217417, 0.015005, -5.857167), 1)),
			(cv((10.708051, 0.0, -0.000031), 1)),
			(cv((10.708051, 0.015005, 3.373955), 1)),
			(cv((-10.708051, 0.0, 0.000031), 1)),
			(cv((-10.70687, 0.0, -3.366534), 1)),
			(cv((-8.217417, 0.015005, -5.857167), 1)),
			(cv((8.217417, 0.015005, 5.864588), 1)),
			(cv((-10.708051, 0.015005, 3.373954), 1)),
			(cv((-8.217418, 0.015005, 5.864588), 1)),
			(cv((3.5, 0.0, 5.865443), 1)),
			(cv((0.0, 0.0, 5.864588), 1)),
			(cv((-3.500041, 0.0, 5.865049), 1)),
			(cv((-3.500041, 0.0, -5.857167), 1)),
			(cv((0.0, 0.0, -5.857155), 1)),
			(cv((3.5, 0.0, -5.857167), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.661448, 0.865030 ),
			st( 0.661448, 0.865030 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.847667, 0.498547 ),
			st( 0.847667, 0.498547 ),
			st( 0.847667, 0.498547 ),
			st( 0.847667, 0.498547 ),
			st( 1.000000, 0.000000 ),
			st( 0.847667, 0.131953 ),
			st( 0.847667, 0.131953 ),
			st( 0.847667, 0.131953 ),
			st( 0.847667, 0.131953 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.661448, 0.131914 ),
			st( 0.661448, 0.131914 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.149347, 0.131948 ),
			st( 0.149347, 0.131948 ),
			st( 0.149347, 0.131948 ),
			st( 0.149347, 0.131948 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.149347, 0.498542 ),
			st( 0.149347, 0.498542 ),
			st( 0.149347, 0.498542 ),
			st( 0.149347, 0.498542 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.498507, 0.131987 ),
			st( 0.498507, 0.131987 ),
			st( 0.498507, 0.131987 ),
			st( 0.498507, 0.131987 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.335565, 0.131948 ),
			st( 0.335565, 0.131948 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.335565, 0.865063 ),
			st( 0.335565, 0.865063 ),
			st( 0.000000, 1.000000 ),
			st( 0.149347, 0.865136 ),
			st( 0.149347, 0.865136 ),
			st( 0.149347, 0.865136 ),
			st( 0.149347, 0.865136 ),
			st( 1.000000, 1.000000 ),
			st( 0.847667, 0.865136 ),
			st( 0.847667, 0.865136 ),
			st( 0.847667, 0.865136 ),
			st( 0.847667, 0.865136 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.498507, 0.865103 ),
			st( 0.498507, 0.865103 ),
			st( 0.498507, 0.865103 ),
			st( 0.498507, 0.865103 ),
			st( 0.997014, 0.784732 ),
			st( 0.881064, 0.996459 ),
			st( 0.997014, 0.498547 ),
			st( 0.997014, 0.211727 ),
			st( 0.000000, 0.498542 ),
			st( 0.000000, 0.784732 ),
			st( 0.115950, 0.996459 ),
			st( 0.881064, 0.000000 ),
			st( 0.000000, 0.211727 ),
			st( 0.115950, 0.000000 ),
			st( 0.661448, -0.000073 ),
			st( 0.498507, 0.000000 ),
			st( 0.335565, -0.000039 ),
			st( 0.335565, 0.996418 ),
			st( 0.498507, 0.996458 ),
			st( 0.661448, 0.996385 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 8, 12), 0 ),
		polygon ((3, 4, 2),(18, 24, 13), 1 ),
		polygon ((2, 4, 5),(14, 24, 29), 1 ),
		polygon ((6, 7, 8),(34, 39, 44), 2 ),
		polygon ((0, 5, 9),(1, 30, 50), 3 ),
		polygon ((10, 7, 6),(56, 39, 34), 2 ),
		polygon ((6, 11, 0),(35, 61, 2), 4 ),
		polygon ((2, 5, 0),(15, 31, 3), 3 ),
		polygon ((6, 12, 11),(36, 66, 62), 5 ),
		polygon ((2, 13, 3),(16, 71, 19), 6 ),
		polygon ((8, 12, 6),(45, 66, 37), 5 ),
		polygon ((9, 10, 0),(51, 57, 4), 7 ),
		polygon ((0, 10, 6),(5, 58, 38), 7 ),
		polygon ((14, 1, 0),(76, 8, 6), 0 ),
		polygon ((1, 13, 2),(9, 71, 17), 6 ),
		polygon ((0, 11, 14),(7, 63, 77), 4 ),
		polygon ((13, 15, 3),(72, 82, 20), 8 ),
		polygon ((13, 16, 15),(73, 83, 82), 8 ),
		polygon ((17, 18, 3),(84, 85, 21), 8 ),
		polygon ((19, 20, 8),(86, 87, 46), 8 ),
		polygon ((20, 21, 12),(87, 88, 67), 8 ),
		polygon ((8, 20, 12),(47, 87, 68), 8 ),
		polygon ((18, 22, 4),(85, 89, 25), 8 ),
		polygon ((3, 18, 4),(22, 85, 26), 8 ),
		polygon ((8, 23, 19),(48, 90, 86), 8 ),
		polygon ((7, 24, 23),(40, 91, 90), 8 ),
		polygon ((7, 23, 8),(41, 90, 49), 8 ),
		polygon ((3, 15, 17),(23, 82, 84), 8 ),
		polygon ((4, 22, 25),(27, 89, 92), 8 ),
		polygon ((25, 5, 4),(92, 32, 28), 8 ),
		polygon ((5, 25, 9),(33, 92, 52), 8 ),
		polygon ((9, 25, 26),(53, 92, 93), 8 ),
		polygon ((26, 27, 9),(93, 94, 54), 8 ),
		polygon ((9, 27, 10),(55, 94, 59), 8 ),
		polygon ((27, 7, 10),(94, 42, 60), 8 ),
		polygon ((7, 27, 24),(43, 94, 91), 8 ),
		polygon ((21, 28, 12),(88, 95, 69), 8 ),
		polygon ((11, 12, 28),(64, 70, 95), 8 ),
		polygon ((29, 14, 28),(96, 78, 95), 8 ),
		polygon ((11, 28, 14),(65, 95, 79), 8 ),
		polygon ((29, 30, 14),(96, 97, 80), 8 ),
		polygon ((1, 14, 30),(10, 81, 97), 8 ),
		polygon ((30, 16, 13),(97, 83, 74), 8 ),
		polygon ((13, 1, 30),(75, 11, 97), 8 )
	)
); /* end of polyset 'parcourt' */

ENVIRONMENT
background ( 
        color = (0.0, 0.0, 0.0)
);
shader_glow ( 
,
        glow_type =  LINEAR_GLOW,
        halo_type =  LINEAR_GLOW,
        auto_exposure = ON,
        quality = 0.5,
        threshold = 0.0,
        glow_color = (100.0, 100.0, 100.0),
        glow_intensity = 1.0,
        glow_spread = 0.05,
        glow_eccentricity = 0.1,
        glow_radial_noise = 0.0,
        glow_star_level = 0.0,
        glow_opacity = 0.0,
        halo_color = (100.0, 100.0, 100.0),
        halo_intensity = 1.0,
        halo_spread = 0.3,
        halo_eccentricity = 0.1,
        halo_radial_noise = 0.0,
        halo_star_level = 0.0,
        halo_lens_flare = 0.0,
        rotation = 0.0,
        radial_noise_frequency = 0.5,
        star_points = 4.0
);
photo_effects ( 
,
        film_grain = 0.0,
        filter = (255.0, 255.0, 255.0)
);
master_light ( 
,
        intensity = 1.0,
        light_color = (255.0, 255.0, 255.0)
);
dynamics ( 
,
        gravity = 1.0,
        air_density = 0.05,
        Floor = ON,
        floor_offset = 0.0,
        ceiling = OFF,
        ceiling_offset = 20.0,
        left = OFF,
        left_offset = -10.0,
        right = OFF,
        right_offset = 10.0,
        front = OFF,
        front_offset = -10.0,
        back = OFF,
        back_offset = 10.0,
        wall_friction = 0.0,
        wall_elasticity = 0.707,
        turbulence_intensity = 0.0,
        turbulence_spread = 0.5,
        turbulence_persistence = 5.0,
        turbulence_animated = ON,
        turbulence_space_resolution =  16,
        turbulence_time_resolution =  16,
        turbulence_roughness = 0.5,
        turbulence_variability = 0.5,
        turbulence_granularity = 0.0
);

MODEL
/* Only expression assignments should appear above this line and below the MODEL directive. */
/* Placing any other commands in the above section will produce incorrect expression behaviour. */
{
	instance park_fence();
}
{
	{
		rot (yaxis, -145.0);
		rot (xaxis, 45.0);
		inst Light#2();
	}
	{
		trn(-2.0, -2.0, 0.0);
		Lightview#2 = current_position(( 0.0,  0.0,  0.0));
	}
	{
		trn(0.0, 10.0, 0.0);
		Lightup#2 = current_position(( 0.0,  0.0,  0.0));
	}
}
{
	trn(0.0, 0.0, 12.0);
	{
		inst Light();
	}
	{
		trn(-2.0, -2.0, 0.0);
		Lightview = current_position(( 0.0,  0.0,  0.0));
	}
	{
		trn(0.0, 10.0, 0.0);
		Lightup = current_position(( 0.0,  0.0,  0.0));
	}
}
{
	instance parcourt();
}
{
	{
		trn(10.965977, 18.412943, -15.022294);
		camera (
			perspective = TRUE,
			eye   = ( 0.0,  0.0,  0.0),
			active = ON,
			pix   = "pix/parkflr.sdl",
			view  = Camera_view,
			up  = Camera_up,
			aov = 55.0,
			filmaperture_x = 0.4,
			filmaperture_y = 0.285,
			filmoffset_x = 0.0,
			filmoffset_y = 0.0,
			placement_fit_code = 0,
			placement_shift = 0.0,
			aspect   = pixel_aspect,
			aspect_ratio_pixel = pixel_aspect,
			near = 0.1,
			far = 554.522499,
			depth_of_field = 0.0,
			scaling_factor = 1.0,
			f_stop = 3.5,
			focal_distance = 12.0,
			auto_focus = OFF,
			motion_blur = 0.0
		);
	}
	{
		trn(-3.243317, -7.099164, 4.44838);
		Camera_view = current_position( (0, 0, 0) );
	}
	{
		trn(10.537483, 19.099705, -14.435137);
		Camera_up = current_position( (0, 0, 0) );
	}
}

