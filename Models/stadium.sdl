DEFINITION	/* ALIAS SDL File Version 8.5 */
			/* Apparently from wire file '/matt/mgilmore/user_data/NBAonNBC/wire/Stadium/stadium20_a'. */
	version = 8.5;

	xleft  = 0;
	xright = 1279;
	ylow   = 0;
	yhigh  = 1023;
	resolution = 1280 1024;
	aalevelmin   = 3;
	aalevelmax   = 12;
	aathreshold  = 0.6;
	post_filter   = OFF;
	post_center   = 8;    /* Values for a bartlet filter. */
	post_adjacent = 1;
	post_diagonal = 1;

	composite_rendering = OFF;
	invisible_objects_cast_shadows = OFF;
	image_format = ALIAS;
	jitter       = ON;
	reduced_samples = OFF;
	textures_active    = ON;

	clamp_bumpsize = 0.0;

	up = yaxis;

	motion_blur_on = OFF;
	shutter_angle  = 144.0;
	animation  = OFF;
	startframe = 0.0;
	endframe = 0.0;
	fields          = FALSE;
	odd             = FALSE;
	even            = FALSE;
	odd_field_first = TRUE;

	triple Camera_view(0.0, 0.0, 0.0);
	triple Camera_up(0.0, 0.0, 0.0);

	subdivision_recursion_limit = 2;
	grid_cache = 4000;
	bbox_memory = FULL;
	rt_voxel_res_type = AUTOMATIC;

	max_reflections             = 10;
	max_refractions             = 10;
	max_shadow_level            = 10;
	preview_ray_trace           = OFF;

	scalar pixel_aspect ( 1.0 );
	hline_to_fill_color  = FALSE;
	hline_fill_color     = (255.0, 255.0, 255.0);
	hline_line_color     = (0.0, 255.0, 255.0);
	hline_isoparam_u     = 0;
	hline_isoparam_v     = 0;

	show_particles       = TRUE;
	simulation_substeps  = 1;
	simulation_frames_per_second = 30;

xform     Projector;
triple LightviewX(0.0, 0.0, 0.0);
triple LightupX(0.0, 0.0, 0.0);
triple Lightview(0.0, 0.0, 0.0);
triple Lightup(0.0, 0.0, 0.0);

light daylight ( model = directional,
	active = ON,
	exclusive = FALSE,
	light_emission = ON,
	color = (255.0, 255.0, 255.0),
	shadow_color = (0.0, 0.0, 0.0),
	intensity = 1.0,
	force_type = OFF,
	force_intensity = 1.0,
	warp = OFF,
	glow_type = OFF,
	halo_type = OFF,
	fog_type = OFF,
	flare = OFF,
	psys_emission = OFF,
	shadow = FALSE,
	soft_shadows = FALSE,
	light_radius = 1.0,
	shadow_samples = 2.0,
	use_shadow_map = 0.0,
	direction = (0.000000, 0.000000, -1.000000)
);

light Light ( model = ambient,
	active = ON,
	exclusive = FALSE,
	light_emission = ON,
	color = (255.0, 255.0, 255.0),
	shadow_color = (0.0, 0.0, 0.0),
	intensity = 1.0,
	force_type = OFF,
	force_intensity = 1.0,
	warp = OFF,
	glow_type = OFF,
	halo_type = OFF,
	fog_type = OFF,
	flare = OFF,
	psys_emission = OFF,
	shadow = FALSE,
	soft_shadows = FALSE,
	light_radius = 1.0,
	shadow_samples = 2.0,
	use_shadow_map = 0.0,
	ambient_shade = 0.0
);

texture Projection#2 (
        procedure = Projection,
        xform_name = Projector,
        rgbout = (11.522475, 107.666466, 222.383728),
        active = ON,
        sfile_type =  PLANAR,
        xamplitude = 0.0,
        yamplitude = 0.0,
        ratio = 0.3,
        level_min = 0.0,
        level_max = 10.0,
        xripples = 1.0,
        yripples = 1.0,
        zripples = 1.0,
        stagger = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        wrap = ON,
        blend = 0.0,
        invert = OFF
);

shader default ( model = lambert,
        diffuse = 0.8,
        color = Projection#2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture File10 (
        procedure = file,
        rgbout = (17.790699, 17.790699, 17.790699),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/stadium1.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader stands ( model = lambert,
        diffuse = 1.0,
        color = File10,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture step32x8 (
        procedure = file,
        rgbout = (67.855782, 71.463928, 73.989639),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/step.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.05814,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader stepslong ( model = lambert,
        diffuse = 0.8,
        color = step32x8,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture ConcreteFile1 (
        procedure = file,
        rgbout = (123.000969, 125.518135, 119.664955),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/concret3.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader concrete ( model = lambert,
        diffuse = 0.8,
        color = ConcreteFile1,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture File (
        procedure = file,
        rgbout = (210.077713, 202.210159, 161.095871),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/pillar.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.05814,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader pillar ( model = lambert,
        diffuse = 0.8,
        color = File,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture File11 (
        procedure = file,
        rgbout = (74.127907, 71.351768, 56.844196),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/roof01.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader roof1 ( model = lambert,
        diffuse = 0.8,
        color = File11,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture File13 (
        procedure = file,
        rgbout = (210.077713, 202.210159, 161.095871),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/balcony1.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader balcony ( model = lambert,
        diffuse = 0.8,
        color = File13,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture rail2 (
        procedure = file,
        rgbout = (85.880829, 80.001579, 72.531471),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/rail2.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.081395,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader rails ( model = lambert,
        diffuse = 0.8,
        color = rail2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture HallWayTransTxt2 (
        procedure = file,
        rgbout = (140.051819, 58.296959, 35.557198),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/crowdlow.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader crowdlow ( model = lambert,
        diffuse = 0.8,
        color = HallWayTransTxt2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture tile1 (
        procedure = file,
        rgbout = (123.000969, 125.518135, 119.664955),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/halfloor.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.081395,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader tile ( model = lambert,
        diffuse = 0.8,
        color = tile1,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture File12 (
        procedure = file,
        rgbout = (38.546513, 37.102921, 29.558983),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/roof02.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader roof02 ( model = lambert,
        diffuse = 0.8,
        color = File12,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture HallWaytxt (
        procedure = file,
        rgbout = (210.077713, 202.210159, 161.095871),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/hallway.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader HallWay ( model = lambert,
        diffuse = 0.8,
        color = HallWaytxt,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture HallWayTransTxt (
        procedure = file,
        rgbout = (210.077713, 202.210159, 161.095871),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/trans1.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader HallTrans ( model = lambert,
        diffuse = 0.8,
        color = HallWayTransTxt,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture ad1file (
        procedure = file,
        rgbout = (0.0, 0.0, 0.0),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/backlite.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.05814,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader backlit ( model = lambert,
        diffuse = 0.8,
        color = ad1file,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture adglass01 (
        procedure = file,
        rgbout = (11.522475, 107.666466, 222.383728),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/mdwaylit.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader ad01 ( model = lambert,
        diffuse = 0.8,
        color = adglass01,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture adglass02 (
        procedure = file,
        rgbout = (11.522475, 107.666466, 222.383728),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/NBCcmLIT.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader ad02 ( model = lambert,
        diffuse = 0.8,
        color = adglass02,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture adglass03 (
        procedure = file,
        rgbout = (11.522475, 107.666466, 222.383728),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/mdcomlit.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader ad03 ( model = lambert,
        diffuse = 0.8,
        color = adglass03,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture adglass03#2 (
        procedure = file,
        rgbout = (11.522475, 107.666466, 222.383728),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/NBAcmLIT.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader ad04 ( model = lambert,
        diffuse = 0.8,
        color = adglass03#2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture adglass03#3 (
        procedure = file,
        rgbout = (11.522475, 107.666466, 222.383728),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/showtLIT.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader ad05 ( model = lambert,
        diffuse = 0.8,
        color = adglass03#3,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture adglass01#2 (
        procedure = file,
        rgbout = (11.522475, 107.666466, 222.383728),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/NBCsptLT.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader ad06 ( model = lambert,
        diffuse = 0.8,
        color = adglass01#2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture File#11 (
        procedure = file,
        rgbout = (0.0, 0.0, 0.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/black.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader black ( model = lambert,
        diffuse = 0.8,
        color = File#11,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture step32x16 (
        procedure = file,
        rgbout = (67.855782, 71.463928, 73.989639),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/stepdark.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.05814,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader stepsdark ( model = lambert,
        diffuse = 0.8,
        color = step32x16,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture crowdtexture2 (
        procedure = file,
        rgbout = (0.0, 255.0, 21.139885),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/OCTcrowd/crdb0001.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader fanboysB ( model = blinn,
        diffuse = 0.8,
        specular = (0.5, 0.5, 0.5),
        specular_rolloff = 0.3,
        eccentricity = 0.222624,
        reflectivity = 0.5,
        reflect_background = OFF,
        color = crowdtexture2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture crowdtexture (
        procedure = file,
        rgbout = (255.0, 0.0, 0.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/OCTcrowd/crda0001.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader fanboysA ( model = blinn,
        diffuse = 0.8,
        specular = (0.5, 0.5, 0.5),
        specular_rolloff = 0.3,
        eccentricity = 0.222624,
        reflectivity = 0.5,
        reflect_background = OFF,
        color = crowdtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture crowdtexture3 (
        procedure = file,
        rgbout = (0.0, 5.285004, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/OCTcrowd/crdc0001.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader fanboysC ( model = blinn,
        diffuse = 0.8,
        specular = (0.5, 0.5, 0.5),
        specular_rolloff = 0.3,
        eccentricity = 0.222624,
        reflectivity = 0.5,
        reflect_background = OFF,
        color = crowdtexture3,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture timberwolvesTEMPtif (
	procedure = file,
	image = "/matt/mgilmore/user_data/NBAonNBC/pix/mintim/timberwolvesTEMP.tif",
	active = TRUE,
	rgbmult = (1.0, 1.0, 1.0),
	rgboffset = (255.0 * 0.0, 255.0 * 0.0, 255.0 * 0.0),
	ucoverage = 0.144371 * 1.186859,
	vcoverage = 0.124508,
	utranslate = 0.384251 * 1.186859 + -0.093430,
	vtranslate = 0.488398,
	uwrap = FALSE,
	vwrap = FALSE,
	urepeat = 1240.0 / 1240.000000,
	vrepeat = 728.0 / 728.000000,
	uoffset = 0.0 / 1240.000000,
	voffset = 0.0 / 728.000000
);

polyset stadium_section_1 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (backlit ),
	shader = (pillar ),
	shader = (ad06 ),
	shader = (ad05 ),
	shader = (ad03 ),
	shader = (ad02 ),
	shader = (roof1 ),
	shader = (stepslong ),
	casts_shadow = TRUE,
	vertices = ((cv((0.040961, 6.138374, -16.473381), 1)),
			(cv((3.267539, 6.138374, -16.473381), 1)),
			(cv((3.267539, 4.832508, -16.473381), 1)),
			(cv((0.040961, 4.832508, -16.473381), 1)),
			(cv((4.020044, 6.33129, -15.283755), 1)),
			(cv((4.020044, 6.33129, -15.866409), 1)),
			(cv((4.020044, 4.444701, -15.866409), 1)),
			(cv((4.020044, 4.444701, -15.283755), 1)),
			(cv((3.437392, 6.33129, -15.283755), 1)),
			(cv((3.437392, 4.444701, -15.283755), 1)),
			(cv((2.956139, 5.107098, -16.365266), 1)),
			(cv((0.31024, 5.107098, -16.365266), 1)),
			(cv((0.31024, 5.883342, -16.365266), 1)),
			(cv((2.956139, 5.883342, -16.365266), 1)),
			(cv((-0.271458, 5.107098, -16.365266), 1)),
			(cv((-2.917358, 5.107098, -16.365266), 1)),
			(cv((-2.917358, 5.883342, -16.365266), 1)),
			(cv((-0.271458, 5.883342, -16.365266), 1)),
			(cv((-7.931726, 5.107098, -16.365266), 1)),
			(cv((-10.577626, 5.107098, -16.365266), 1)),
			(cv((-10.577626, 5.883342, -16.365266), 1)),
			(cv((-7.931726, 5.883342, -16.365266), 1)),
			(cv((7.189799, 5.107098, -16.365266), 1)),
			(cv((4.543899, 5.107098, -16.365266), 1)),
			(cv((4.543899, 5.883342, -16.365266), 1)),
			(cv((7.189799, 5.883342, -16.365266), 1)),
			(cv((-4.571906, 5.107098, -16.365266), 1)),
			(cv((-7.217806, 5.107098, -16.365266), 1)),
			(cv((-7.217806, 5.883342, -16.365266), 1)),
			(cv((-4.571906, 5.883342, -16.365266), 1)),
			(cv((10.538343, 5.107098, -16.365266), 1)),
			(cv((7.892444, 5.107098, -16.365266), 1)),
			(cv((7.892444, 5.883342, -16.365266), 1)),
			(cv((10.538343, 5.883342, -16.365266), 1)),
			(cv((-7.620326, 4.832508, -16.473381), 1)),
			(cv((-10.846905, 4.832508, -16.473381), 1)),
			(cv((-10.846905, 6.138374, -16.473381), 1)),
			(cv((-7.620326, 6.138374, -16.473381), 1)),
			(cv((-4.260506, 4.832508, -16.473381), 1)),
			(cv((-7.487084, 4.832508, -16.473381), 1)),
			(cv((-7.487084, 6.138374, -16.473381), 1)),
			(cv((-4.260506, 6.138374, -16.473381), 1)),
			(cv((-4.008043, 4.444701, -15.283755), 1)),
			(cv((-4.008043, 4.444701, -15.866409), 1)),
			(cv((-4.008043, 6.33129, -15.866409), 1)),
			(cv((-4.008043, 6.33129, -15.283755), 1)),
			(cv((-3.42539, 4.444701, -15.283755), 1)),
			(cv((-3.42539, 6.33129, -15.283755), 1)),
			(cv((-3.42539, 4.444701, -15.866409), 1)),
			(cv((-3.42539, 6.33129, -15.866409), 1)),
			(cv((3.437392, 4.444701, -15.866409), 1)),
			(cv((3.437392, 6.33129, -15.866409), 1)),
			(cv((10.204481, 6.318587, -12.527052), 1)),
			(cv((11.437614, 6.318587, -16.367813), 1)),
			(cv((-10.204481, 6.318587, -12.527051), 1)),
			(cv((-11.437614, 6.318587, -16.367813), 1)),
			(cv((7.623165, 6.138374, -16.473381), 1)),
			(cv((10.849743, 6.138374, -16.473381), 1)),
			(cv((10.849743, 4.832508, -16.473381), 1)),
			(cv((0.039941, 4.832508, -16.473381), 1)),
			(cv((-3.186636, 4.832508, -16.473381), 1)),
			(cv((-3.186636, 6.138374, -16.473381), 1)),
			(cv((7.623165, 4.832508, -16.473381), 1)),
			(cv((4.274621, 6.138374, -16.473381), 1)),
			(cv((7.501198, 6.138374, -16.473381), 1)),
			(cv((7.501198, 4.832508, -16.473381), 1)),
			(cv((4.274621, 4.832508, -16.473381), 1)),
			(cv((0.039941, 6.138374, -16.473381), 1)),
			(cv((-5.367436, 0.014547, -5.881948), 1)),
			(cv((-5.354532, 2.254422, -10.514832), 1)),
			(cv((-3.738106, 2.254422, -10.514832), 1)),
			(cv((-3.738106, 0.014547, -5.881948), 1)),
			(cv((3.673039, 0.014547, -5.881948), 1)),
			(cv((3.673039, 2.259991, -10.501637), 1)),
			(cv((5.302369, 0.014547, -5.881948), 1)),
			(cv((5.302369, 2.254422, -10.514832), 1)),
			(cv((-9.339101, 2.259991, -10.501637), 1)),
			(cv((-9.326197, 4.447367, -15.134522), 1)),
			(cv((-7.709771, 4.447367, -15.134522), 1)),
			(cv((-7.709771, 2.259991, -10.501637), 1)),
			(cv((-0.703499, 2.259991, -10.501637), 1)),
			(cv((-0.690595, 4.447367, -15.134522), 1)),
			(cv((0.925831, 4.447367, -15.134522), 1)),
			(cv((0.925831, 2.259991, -10.501637), 1)),
			(cv((7.648756, 2.259991, -10.501637), 1)),
			(cv((7.66166, 4.447367, -15.134522), 1)),
			(cv((9.278087, 4.447367, -15.134522), 1)),
			(cv((9.278087, 2.259991, -10.501637), 1))	),
	texture_vertices = (
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 12.000000, 1.000000 ),
			st( 12.510666, 0.000000 ),
			st( 2.960366, 1.000000 ),
			st( 2.404732, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 2.000000, 1.000000 ),
			st( 2.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 2.000000, 0.000000 ),
			st( 2.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 2.000000, 1.000000 ),
			st( 2.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 2.000000, 1.000000 ),
			st( 2.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 2.000000, 1.000000 ),
			st( 2.000000, 0.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 1 ),
		polygon ((6, 7, 4),(6, 7, 4), 1 ),
		polygon ((8, 4, 7),(8, 4, 7), 1 ),
		polygon ((7, 9, 8),(7, 9, 8), 1 ),
		polygon ((10, 11, 12),(10, 11, 12), 2 ),
		polygon ((12, 13, 10),(12, 13, 10), 2 ),
		polygon ((14, 15, 16),(14, 15, 16), 3 ),
		polygon ((16, 17, 14),(16, 17, 14), 3 ),
		polygon ((18, 19, 20),(18, 19, 20), 4 ),
		polygon ((20, 21, 18),(20, 21, 18), 4 ),
		polygon ((22, 23, 24),(22, 23, 24), 3 ),
		polygon ((24, 25, 22),(24, 25, 22), 3 ),
		polygon ((26, 27, 28),(26, 27, 28), 5 ),
		polygon ((28, 29, 26),(28, 29, 26), 5 ),
		polygon ((30, 31, 32),(30, 31, 32), 4 ),
		polygon ((32, 33, 30),(32, 33, 30), 4 ),
		polygon ((34, 35, 36),(34, 35, 36), 0 ),
		polygon ((36, 37, 34),(36, 37, 34), 0 ),
		polygon ((38, 39, 40),(38, 39, 40), 0 ),
		polygon ((40, 41, 38),(40, 41, 38), 0 ),
		polygon ((42, 43, 44),(42, 43, 44), 1 ),
		polygon ((44, 45, 42),(44, 45, 42), 1 ),
		polygon ((46, 42, 45),(46, 42, 45), 1 ),
		polygon ((45, 47, 46),(45, 47, 46), 1 ),
		polygon ((48, 46, 47),(48, 46, 47), 1 ),
		polygon ((47, 49, 48),(47, 49, 48), 1 ),
		polygon ((9, 50, 51),(9, 50, 51), 1 ),
		polygon ((51, 8, 9),(51, 8, 9), 1 ),
		polygon ((52, 53, 54),(52, 53, 54), 6 ),
		polygon ((54, 53, 55),(54, 53, 55), 6 ),
		polygon ((56, 57, 58),(56, 57, 58), 0 ),
		polygon ((59, 60, 61),(59, 60, 61), 0 ),
		polygon ((58, 62, 56),(58, 62, 56), 0 ),
		polygon ((63, 64, 65),(63, 64, 65), 0 ),
		polygon ((65, 66, 63),(65, 66, 63), 0 ),
		polygon ((61, 67, 59),(61, 67, 59), 0 ),
		polygon ((68, 69, 70),(68, 69, 70), 7 ),
		polygon ((70, 71, 68),(70, 71, 68), 7 ),
		polygon ((72, 73, 74),(72, 73, 74), 7 ),
		polygon ((74, 73, 75),(74, 73, 75), 7 ),
		polygon ((76, 77, 78),(76, 77, 78), 7 ),
		polygon ((78, 79, 76),(78, 79, 76), 7 ),
		polygon ((80, 81, 82),(80, 81, 82), 7 ),
		polygon ((82, 83, 80),(82, 83, 80), 7 ),
		polygon ((84, 85, 86),(84, 85, 86), 7 ),
		polygon ((86, 87, 84),(86, 87, 84), 7 )
	)
); /* end of polyset 'stadium_section_1' */

polyset stadium_section_2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (pillar ),
	shader = (ad02 ),
	shader = (roof1 ),
	shader = (ad04 ),
	shader = (backlit ),
	shader = (ad01 ),
	shader = (ad05 ),
	shader = (black ),
	shader = (tile ),
	shader = (HallWay ),
	shader = (stepslong ),
	shader = (stepsdark ),
	casts_shadow = TRUE,
	vertices = ((cv((11.436351, 4.444701, -15.202602), 1)),
			(cv((10.8878, 4.444701, -15.399011), 1)),
			(cv((10.8878, 6.33129, -15.399011), 1)),
			(cv((20.113927, 6.33129, -6.871268), 1)),
			(cv((20.301697, 6.33129, -6.3197), 1)),
			(cv((20.301697, 4.444701, -6.3197), 1)),
			(cv((20.853264, 4.444701, -6.507468), 1)),
			(cv((11.084209, 6.33129, -15.947562), 1)),
			(cv((20.113927, 4.444701, -6.871268), 1)),
			(cv((20.665496, 4.444701, -7.059036), 1)),
			(cv((20.665496, 6.33129, -7.059036), 1)),
			(cv((13.849852, 5.883342, -14.173925), 1)),
			(cv((13.849852, 5.107098, -14.173925), 1)),
			(cv((11.962663, 5.107098, -16.02846), 1)),
			(cv((11.962663, 5.883342, -16.02846), 1)),
			(cv((21.431427, 6.318587, -6.878001), 1)),
			(cv((11.437614, 6.318587, -16.367813), 1)),
			(cv((17.57177, 6.318587, -5.705347), 1)),
			(cv((10.204481, 6.318587, -12.527052), 1)),
			(cv((11.436351, 6.33129, -15.202602), 1)),
			(cv((20.853264, 6.33129, -6.507468), 1)),
			(cv((16.153603, 5.883342, -11.911763), 1)),
			(cv((16.153603, 5.107098, -11.911763), 1)),
			(cv((14.266414, 5.107098, -13.766299), 1)),
			(cv((16.421445, 6.138374, -11.800135), 1)),
			(cv((16.421445, 4.832508, -11.800135), 1)),
			(cv((14.120087, 4.832508, -14.061674), 1)),
			(cv((20.789705, 5.883342, -7.338366), 1)),
			(cv((20.789705, 5.107098, -7.338366), 1)),
			(cv((18.902516, 5.107098, -9.192901), 1)),
			(cv((14.266414, 5.883342, -13.766299), 1)),
			(cv((18.756189, 4.832508, -9.488277), 1)),
			(cv((18.756189, 6.138374, -9.488277), 1)),
			(cv((21.057548, 6.138374, -7.226739), 1)),
			(cv((11.63276, 4.444701, -15.751153), 1)),
			(cv((11.084209, 4.444701, -15.947562), 1)),
			(cv((14.120087, 6.138374, -14.061674), 1)),
			(cv((21.057548, 4.832508, -7.226739), 1)),
			(cv((14.117694, 6.138374, -14.062297), 1)),
			(cv((14.117694, 4.832508, -14.062297), 1)),
			(cv((11.816336, 4.832508, -16.323836), 1)),
			(cv((18.739276, 6.138374, -9.522997), 1)),
			(cv((18.739276, 4.832508, -9.522997), 1)),
			(cv((16.437918, 4.832508, -11.784536), 1)),
			(cv((11.816336, 6.138374, -16.323836), 1)),
			(cv((18.471434, 5.883342, -9.634624), 1)),
			(cv((18.471434, 5.107098, -9.634624), 1)),
			(cv((16.584246, 5.107098, -11.48916), 1)),
			(cv((16.584246, 5.883342, -11.48916), 1)),
			(cv((11.63276, 6.33129, -15.751153), 1)),
			(cv((18.902516, 5.883342, -9.192901), 1)),
			(cv((16.437918, 6.138374, -11.784536), 1)),
			(cv((11.72917, 2.141633, -8.230932), 1)),
			(cv((17.390783, 2.141633, -13.93221), 1)),
			(cv((18.771461, 2.141633, -12.561137), 1)),
			(cv((13.108112, 2.141633, -6.862259), 1)),
			(cv((10.178302, 0.015151, -3.917251), 1)),
			(cv((13.115532, 0.015151, -6.862285), 1)),
			(cv((11.72917, 0.015151, -8.230932), 1)),
			(cv((8.801289, 0.015151, -5.282539), 1)),
			(cv((8.797592, 0.015151, -5.278816), 1)),
			(cv((17.390783, 0.015151, -13.93221), 1)),
			(cv((18.778882, 0.015151, -12.561164), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 7.160986, 0.056559 ),
			st( 12.515821, 0.056559 ),
			st( 7.990785, 1.000000 ),
			st( 12.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 2.000000, 0.000000 ),
			st( 0.338983, 0.993716 ),
			st( 0.338983, 0.993716 ),
			st( 0.338983, 0.981956 ),
			st( 0.338983, 0.981956 ),
			st( 0.338983, 0.981956 ),
			st( 4.000000, 1.000000 ),
			st( 0.994712, 0.993716 ),
			st( 0.994712, 0.981956 ),
			st( 1.000000, 5.000000 ),
			st( 0.994712, -0.003422 ),
			st( 0.994712, -0.003422 ),
			st( 0.994712, 0.981956 ),
			st( 0.994712, 0.981956 ),
			st( 0.000000, 0.000000 ),
			st( 0.339022, -0.001924 ),
			st( 0.339022, 0.981956 ),
			st( 0.339022, 0.981956 ),
			st( 1.000000, 8.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 6.000000 ),
			st( 0.339451, 0.000000 ),
			st( 0.339451, 0.000000 ),
			st( 0.339451, 0.000000 ),
			st( 0.339451, -0.004612 ),
			st( 0.339451, -0.004612 ),
			st( 1.000000, 6.000000 ),
			st( 0.500000, 0.000000 ),
			st( 1.000000, 6.000000 ),
			st( 0.500000, 0.000000 ),
			st( 0.338983, 0.000000 ),
			st( 0.338983, 0.000000 ),
			st( 0.338983, 0.993716 ),
			st( 0.338983, 0.993716 ),
			st( 0.338983, 0.993716 ),
			st( 0.338983, 0.993716 ),
			st( 1.000000, 8.000000 ),
			st( -0.000124, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( -0.000552, 0.993716 ),
			st( 4.000000, 0.000000 ),
			st( 0.994712, 0.000000 ),
			st( 0.994712, 0.000000 ),
			st( 0.994712, 0.993716 ),
			st( 1.000000, 1.000000 ),
			st( 0.995140, 0.000000 ),
			st( 0.995140, -0.006110 ),
			st( 0.995140, -0.006110 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((3, 4, 5),(3, 4, 5), 0 ),
		polygon ((6, 5, 4),(6, 5, 4), 0 ),
		polygon ((7, 2, 1),(7, 2, 1), 0 ),
		polygon ((8, 9, 10),(8, 9, 10), 0 ),
		polygon ((11, 12, 13),(11, 12, 13), 1 ),
		polygon ((13, 14, 11),(13, 14, 11), 1 ),
		polygon ((10, 3, 8),(10, 3, 8), 0 ),
		polygon ((5, 8, 3),(5, 8, 3), 0 ),
		polygon ((15, 16, 17),(15, 16, 17), 2 ),
		polygon ((17, 16, 18),(17, 16, 18), 2 ),
		polygon ((2, 19, 0),(2, 19, 0), 0 ),
		polygon ((4, 20, 6),(4, 20, 6), 0 ),
		polygon ((21, 22, 23),(21, 22, 23), 3 ),
		polygon ((24, 25, 26),(24, 25, 26), 4 ),
		polygon ((27, 28, 29),(27, 28, 29), 5 ),
		polygon ((23, 30, 21),(23, 30, 21), 3 ),
		polygon ((31, 32, 33),(31, 32, 33), 4 ),
		polygon ((34, 0, 19),(34, 0, 19), 0 ),
		polygon ((1, 35, 7),(1, 35, 7), 0 ),
		polygon ((26, 36, 24),(26, 36, 24), 4 ),
		polygon ((33, 37, 31),(33, 37, 31), 4 ),
		polygon ((38, 39, 40),(38, 39, 40), 4 ),
		polygon ((41, 42, 43),(41, 42, 43), 4 ),
		polygon ((40, 44, 38),(40, 44, 38), 4 ),
		polygon ((45, 46, 47),(45, 46, 47), 6 ),
		polygon ((47, 48, 45),(47, 48, 45), 6 ),
		polygon ((19, 49, 34),(19, 49, 34), 0 ),
		polygon ((29, 50, 27),(29, 50, 27), 5 ),
		polygon ((43, 51, 41),(43, 51, 41), 4 ),
		polygon ((52, 53, 54),(52, 58, 61), 7 ),
		polygon ((54, 55, 52),(61, 66, 52), 7 ),
		polygon ((56, 55, 57),(70, 66, 74), 7 ),
		polygon ((58, 52, 59),(80, 52, 90), 7 ),
		polygon ((58, 60, 56),(80, 92, 70), 7 ),
		polygon ((56, 57, 58),(70, 74, 80), 7 ),
		polygon ((61, 53, 52),(94, 58, 52), 7 ),
		polygon ((52, 58, 61),(52, 81, 94), 7 ),
		polygon ((62, 61, 58),(98, 94, 82), 7 ),
		polygon ((58, 57, 62),(83, 74, 98), 7 ),
		polygon ((57, 55, 54),(74, 66, 61), 7 ),
		polygon ((54, 62, 57),(61, 98, 74), 7 ),
		polygon ((54, 53, 52),(62, 59, 53), 8 ),
		polygon ((52, 55, 54),(54, 67, 63), 8 ),
		polygon ((52, 53, 61),(55, 60, 95), 9 ),
		polygon ((61, 58, 52),(96, 84, 56), 9 ),
		polygon ((57, 55, 56),(75, 68, 71), 9 ),
		polygon ((59, 52, 58),(91, 57, 85), 9 ),
		polygon ((54, 55, 57),(64, 69, 76), 9 ),
		polygon ((57, 62, 54),(77, 99, 65), 9 ),
		polygon ((58, 61, 62),(86, 97, 100), 8 ),
		polygon ((62, 57, 58),(101, 78, 87), 8 ),
		polygon ((56, 60, 58),(72, 93, 88), 8 ),
		polygon ((58, 57, 56),(89, 79, 73), 8 )
	)
); /* end of polyset 'stadium_section_2' */

polyset stadium_section_3 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (stepsdark ),
	shader = (stepslong ),
	shader = (backlit ),
	shader = (ad05 ),
	shader = (roof1 ),
	shader = (ad06 ),
	shader = (ad03 ),
	shader = (ad04 ),
	casts_shadow = TRUE,
	vertices = ((cv((15.327741, 2.259991, -0.803464), 1)),
			(cv((21.55213, 6.138374, -3.239794), 1)),
			(cv((15.340936, 2.254422, 0.825866), 1)),
			(cv((21.55213, 6.138374, -0.013216), 1)),
			(cv((10.708051, 0.014547, -0.803464), 1)),
			(cv((10.708051, 0.014547, 0.825866), 1)),
			(cv((21.550479, 4.832508, 6.464767), 1)),
			(cv((21.550479, 4.832508, 3.238189), 1)),
			(cv((21.550479, 6.138374, 3.238189), 1)),
			(cv((21.550479, 6.138374, 6.464767), 1)),
			(cv((21.442364, 5.883342, 3.507468), 1)),
			(cv((21.442364, 5.883342, 6.153368), 1)),
			(cv((21.442364, 5.107098, 6.153368), 1)),
			(cv((21.442364, 5.107098, 3.507468), 1)),
			(cv((17.57177, 6.318587, -5.705347), 1)),
			(cv((21.431427, 6.318587, 6.787589), 1)),
			(cv((21.431427, 6.318587, -6.878001), 1)),
			(cv((17.57177, 6.318587, 5.614935), 1)),
			(cv((21.431106, 5.107098, -3.587592), 1)),
			(cv((21.431106, 5.107098, -6.233492), 1)),
			(cv((21.431106, 5.883342, -6.233492), 1)),
			(cv((21.431106, 5.883342, -3.587592), 1)),
			(cv((21.443596, 5.883342, 0.278746), 1)),
			(cv((21.443596, 5.883342, 2.924646), 1)),
			(cv((21.443596, 5.107098, 2.924646), 1)),
			(cv((21.443596, 5.107098, 0.278746), 1)),
			(cv((21.539221, 4.832508, -3.276192), 1)),
			(cv((21.539221, 4.832508, -6.502771), 1)),
			(cv((21.539221, 6.138374, -6.502771), 1)),
			(cv((21.539221, 6.138374, -3.276192), 1)),
			(cv((21.551711, 4.832508, 3.236046), 1)),
			(cv((21.551711, 4.832508, 0.009467), 1)),
			(cv((21.551711, 6.138374, 0.009467), 1)),
			(cv((21.551711, 6.138374, 3.236046), 1)),
			(cv((21.444015, 5.107098, -0.324615), 1)),
			(cv((21.444015, 5.107098, -2.970515), 1)),
			(cv((21.444015, 5.883342, -2.970515), 1)),
			(cv((21.444015, 5.883342, -0.324615), 1)),
			(cv((21.55213, 4.832508, -0.013216), 1)),
			(cv((21.55213, 4.832508, -3.239794), 1))	),
	texture_vertices = (
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 2.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 2.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 9.987121, 1.000000 ),
			st( 16.624208, 0.036609 ),
			st( 9.464527, 0.000000 ),
			st( 16.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ) ),
	polygons = (
		polygon ((38, 39, 1),(38, 39, 1), 2 ),
		polygon ((1, 3, 38),(1, 3, 38), 2 ),
		polygon ((4, 0, 5),(4, 0, 5), 1 ),
		polygon ((5, 0, 2),(5, 0, 2), 1 ),
		polygon ((6, 7, 8),(6, 7, 8), 2 ),
		polygon ((8, 9, 6),(8, 9, 6), 2 ),
		polygon ((10, 11, 12),(10, 11, 12), 3 ),
		polygon ((12, 13, 10),(12, 13, 10), 3 ),
		polygon ((14, 15, 16),(14, 15, 16), 4 ),
		polygon ((17, 15, 14),(17, 15, 14), 4 ),
		polygon ((18, 19, 20),(18, 19, 20), 5 ),
		polygon ((20, 21, 18),(20, 21, 18), 5 ),
		polygon ((22, 23, 24),(22, 23, 24), 6 ),
		polygon ((24, 25, 22),(24, 25, 22), 6 ),
		polygon ((26, 27, 28),(26, 27, 28), 2 ),
		polygon ((28, 29, 26),(28, 29, 26), 2 ),
		polygon ((30, 31, 32),(30, 31, 32), 2 ),
		polygon ((32, 33, 30),(32, 33, 30), 2 ),
		polygon ((34, 35, 36),(34, 35, 36), 7 ),
		polygon ((36, 37, 34),(36, 37, 34), 7 )
	)
); /* end of polyset 'stadium_section_3' */

polyset stadium_section_4 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (black ),
	shader = (tile ),
	shader = (HallWay ),
	shader = (stepslong ),
	shader = (ad01 ),
	shader = (backlit ),
	shader = (pillar ),
	shader = (ad02 ),
	shader = (ad04 ),
	shader = (ad05 ),
	shader = (roof1 ),
	shader = (stepsdark ),
	casts_shadow = TRUE,
	vertices = ((cv((13.094205, 2.141487, 6.863781), 1)),
			(cv((18.775685, 2.141487, 12.545261), 1)),
			(cv((17.399801, 2.141487, 13.921145), 1)),
			(cv((11.720727, 2.141487, 8.237937), 1)),
			(cv((8.785964, 0.015005, 5.297865), 1)),
			(cv((11.720727, 0.015005, 8.245357), 1)),
			(cv((13.094205, 0.015005, 6.863781), 1)),
			(cv((10.15605, 0.015005, 3.925626), 1)),
			(cv((10.15234, 0.015005, 3.921916), 1)),
			(cv((18.775685, 0.015005, 12.545261), 1)),
			(cv((17.399802, 0.015005, 13.928565), 1)),
			(cv((21.431427, 6.318587, 6.878001), 1)),
			(cv((10.204481, 6.318587, 12.527052), 1)),
			(cv((16.153836, 5.883342, 11.890423), 1)),
			(cv((14.266647, 5.883342, 13.744959), 1)),
			(cv((14.266647, 5.107098, 13.744959), 1)),
			(cv((18.739509, 6.138374, 9.501658), 1)),
			(cv((16.438151, 6.138374, 11.763196), 1)),
			(cv((16.438151, 4.832508, 11.763196), 1)),
			(cv((11.436351, 6.33129, 15.202602), 1)),
			(cv((11.436351, 4.444701, 15.202602), 1)),
			(cv((11.63276, 4.444701, 15.751153), 1)),
			(cv((16.421678, 6.138374, 11.778796), 1)),
			(cv((14.12032, 6.138374, 14.040335), 1)),
			(cv((14.12032, 4.832508, 14.040335), 1)),
			(cv((18.756422, 4.832508, 9.466938), 1)),
			(cv((21.057781, 4.832508, 7.205399), 1)),
			(cv((21.057781, 6.138374, 7.205399), 1)),
			(cv((18.756422, 6.138374, 9.466938), 1)),
			(cv((11.084209, 6.33129, 15.947562), 1)),
			(cv((11.084209, 4.444701, 15.947562), 1)),
			(cv((10.8878, 4.444701, 15.399011), 1)),
			(cv((10.8878, 6.33129, 15.399011), 1)),
			(cv((16.153836, 5.107098, 11.890423), 1)),
			(cv((18.739509, 4.832508, 9.501658), 1)),
			(cv((18.902749, 5.107098, 9.171562), 1)),
			(cv((20.789939, 5.107098, 7.317026), 1)),
			(cv((20.789939, 5.883342, 7.317026), 1)),
			(cv((18.902749, 5.883342, 9.171562), 1)),
			(cv((14.117927, 6.138374, 14.040958), 1)),
			(cv((11.816569, 6.138374, 16.302497), 1)),
			(cv((11.816569, 4.832508, 16.302497), 1)),
			(cv((14.117927, 4.832508, 14.040958), 1)),
			(cv((11.63276, 6.33129, 15.751153), 1)),
			(cv((16.421678, 4.832508, 11.778796), 1)),
			(cv((20.665496, 6.33129, 7.059036), 1)),
			(cv((20.665496, 4.444701, 7.059036), 1)),
			(cv((20.113927, 4.444701, 6.871268), 1)),
			(cv((20.113927, 6.33129, 6.871268), 1)),
			(cv((20.301697, 4.444701, 6.3197), 1)),
			(cv((20.301697, 6.33129, 6.3197), 1)),
			(cv((20.853264, 4.444701, 6.507468), 1)),
			(cv((20.853264, 6.33129, 6.507468), 1)),
			(cv((16.584478, 5.107098, 11.46782), 1)),
			(cv((18.471667, 5.107098, 9.613285), 1)),
			(cv((18.471667, 5.883342, 9.613285), 1)),
			(cv((16.584478, 5.883342, 11.46782), 1)),
			(cv((11.962896, 5.107098, 16.007121), 1)),
			(cv((13.850085, 5.107098, 14.152585), 1)),
			(cv((13.850085, 5.883342, 14.152585), 1)),
			(cv((11.962896, 5.883342, 16.007121), 1)),
			(cv((17.57177, 6.318587, 5.705347), 1)),
			(cv((11.437614, 6.318587, 16.367813), 1))	),
	texture_vertices = (
			st( 2.000000, 0.000000 ),
			st( 0.338983, 0.993716 ),
			st( 0.338983, 0.993716 ),
			st( 0.338983, 0.981956 ),
			st( 0.338983, 0.981956 ),
			st( 0.338983, 0.981956 ),
			st( 4.000000, 1.000000 ),
			st( 0.994712, 0.993716 ),
			st( 0.994712, 0.981956 ),
			st( 1.000000, 5.000000 ),
			st( 0.994712, -0.003422 ),
			st( 0.994712, -0.003422 ),
			st( 0.994712, 0.981956 ),
			st( 0.994712, 0.981956 ),
			st( 0.000000, 0.000000 ),
			st( 0.339022, -0.001924 ),
			st( 0.339022, 0.981956 ),
			st( 0.339022, 0.981956 ),
			st( 1.000000, 8.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 6.000000 ),
			st( 0.339451, 0.000000 ),
			st( 0.339451, 0.000000 ),
			st( 0.339451, 0.000000 ),
			st( 0.339451, -0.004612 ),
			st( 0.339451, -0.004612 ),
			st( 1.000000, 6.000000 ),
			st( 0.500000, 0.000000 ),
			st( 1.000000, 6.000000 ),
			st( 0.500000, 0.000000 ),
			st( 0.338983, 0.000000 ),
			st( 0.338983, 0.000000 ),
			st( 0.338983, 0.993716 ),
			st( 0.338983, 0.993716 ),
			st( 0.338983, 0.993716 ),
			st( 0.338983, 0.993716 ),
			st( 1.000000, 8.000000 ),
			st( -0.000124, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( -0.000552, 0.993716 ),
			st( 4.000000, 0.000000 ),
			st( 0.994712, 0.000000 ),
			st( 0.994712, 0.000000 ),
			st( 0.994712, 0.993716 ),
			st( 1.000000, 1.000000 ),
			st( 0.995140, 0.000000 ),
			st( 0.995140, -0.006110 ),
			st( 0.995140, -0.006110 ),
			st( 7.160986, 0.056559 ),
			st( 12.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 7.990785, 1.000000 ),
			st( 12.515821, 0.056559 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 6, 9), 0 ),
		polygon ((2, 3, 0),(9, 14, 0), 0 ),
		polygon ((4, 3, 5),(18, 14, 22), 0 ),
		polygon ((6, 0, 7),(28, 0, 38), 0 ),
		polygon ((6, 8, 4),(28, 40, 18), 0 ),
		polygon ((4, 5, 6),(18, 22, 28), 0 ),
		polygon ((9, 1, 0),(42, 6, 0), 0 ),
		polygon ((0, 6, 9),(0, 29, 42), 0 ),
		polygon ((10, 9, 6),(46, 42, 30), 0 ),
		polygon ((6, 5, 10),(31, 22, 46), 0 ),
		polygon ((5, 3, 2),(22, 14, 9), 0 ),
		polygon ((2, 10, 5),(9, 46, 22), 0 ),
		polygon ((2, 1, 0),(10, 7, 1), 1 ),
		polygon ((0, 3, 2),(2, 15, 11), 1 ),
		polygon ((0, 1, 9),(3, 8, 43), 2 ),
		polygon ((9, 6, 0),(44, 32, 4), 2 ),
		polygon ((5, 3, 4),(23, 16, 19), 2 ),
		polygon ((7, 0, 6),(39, 5, 33), 2 ),
		polygon ((2, 3, 5),(12, 17, 24), 2 ),
		polygon ((5, 10, 2),(25, 47, 13), 2 ),
		polygon ((61, 62, 11),(100, 101, 50), 10 ),
		polygon ((12, 62, 61),(51, 101, 100), 10 ),
		polygon ((4, 8, 6),(20, 41, 34), 1 ),
		polygon ((6, 5, 4),(35, 26, 21), 1 ),
		polygon ((6, 9, 10),(36, 45, 48), 1 ),
		polygon ((10, 5, 6),(49, 27, 37), 1 ),
		polygon ((13, 14, 15),(52, 53, 54), 4 ),
		polygon ((16, 17, 18),(55, 56, 57), 5 ),
		polygon ((19, 20, 21),(58, 59, 60), 6 ),
		polygon ((22, 23, 24),(61, 62, 63), 5 ),
		polygon ((25, 26, 27),(64, 65, 66), 5 ),
		polygon ((27, 28, 25),(66, 67, 64), 5 ),
		polygon ((29, 30, 31),(68, 69, 70), 6 ),
		polygon ((31, 32, 29),(70, 71, 68), 6 ),
		polygon ((32, 31, 20),(71, 70, 59), 6 ),
		polygon ((20, 19, 32),(59, 58, 71), 6 ),
		polygon ((15, 33, 13),(54, 72, 52), 4 ),
		polygon ((18, 34, 16),(57, 73, 55), 5 ),
		polygon ((35, 36, 37),(74, 75, 76), 7 ),
		polygon ((37, 38, 35),(76, 77, 74), 7 ),
		polygon ((39, 40, 41),(78, 79, 80), 5 ),
		polygon ((41, 42, 39),(80, 81, 78), 5 ),
		polygon ((21, 43, 19),(60, 82, 58), 6 ),
		polygon ((24, 44, 22),(63, 83, 61), 5 ),
		polygon ((45, 46, 47),(84, 85, 86), 6 ),
		polygon ((47, 48, 45),(86, 87, 84), 6 ),
		polygon ((48, 47, 49),(87, 86, 88), 6 ),
		polygon ((49, 50, 48),(88, 89, 87), 6 ),
		polygon ((50, 49, 51),(89, 88, 90), 6 ),
		polygon ((51, 52, 50),(90, 91, 89), 6 ),
		polygon ((53, 54, 55),(92, 93, 94), 8 ),
		polygon ((55, 56, 53),(94, 95, 92), 8 ),
		polygon ((57, 58, 59),(96, 97, 98), 9 ),
		polygon ((59, 60, 57),(98, 99, 96), 9 )
	)
); /* end of polyset 'stadium_section_4' */

polyset stadium_section_5 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (ad01 ),
	shader = (ad06 ),
	shader = (ad02 ),
	shader = (backlit ),
	shader = (ad05 ),
	shader = (ad04 ),
	shader = (ad03 ),
	shader = (roof1 ),
	shader = (pillar ),
	shader = (stepslong ),
	casts_shadow = TRUE,
	vertices = ((cv((7.892444, 5.883342, 16.365267), 1)),
			(cv((7.892444, 5.107098, 16.365267), 1)),
			(cv((10.538343, 5.107098, 16.365267), 1)),
			(cv((10.538343, 5.883342, 16.365267), 1)),
			(cv((-7.217805, 5.883342, 16.365267), 1)),
			(cv((-7.217805, 5.107098, 16.365267), 1)),
			(cv((-4.571906, 5.107098, 16.365267), 1)),
			(cv((-4.571906, 5.883342, 16.365267), 1)),
			(cv((4.5439, 5.883342, 16.365267), 1)),
			(cv((4.5439, 5.107098, 16.365267), 1)),
			(cv((7.189799, 5.107098, 16.365267), 1)),
			(cv((7.189799, 5.883342, 16.365267), 1)),
			(cv((0.040961, 6.138374, 16.473381), 1)),
			(cv((0.040961, 4.832508, 16.473381), 1)),
			(cv((3.267539, 4.832508, 16.473381), 1)),
			(cv((3.267539, 6.138374, 16.473381), 1)),
			(cv((7.501198, 4.832508, 16.473381), 1)),
			(cv((7.501198, 6.138374, 16.473381), 1)),
			(cv((4.274621, 6.138374, 16.473381), 1)),
			(cv((4.274621, 4.832508, 16.473381), 1)),
			(cv((-3.186636, 6.138374, 16.473381), 1)),
			(cv((-3.186636, 4.832508, 16.473381), 1)),
			(cv((0.039941, 4.832508, 16.473381), 1)),
			(cv((0.039941, 6.138374, 16.473381), 1)),
			(cv((10.849743, 4.832508, 16.473381), 1)),
			(cv((10.849743, 6.138374, 16.473381), 1)),
			(cv((7.623165, 6.138374, 16.473381), 1)),
			(cv((7.623165, 4.832508, 16.473381), 1)),
			(cv((-10.846905, 6.138374, 16.473381), 1)),
			(cv((-10.846905, 4.832508, 16.473381), 1)),
			(cv((-7.620326, 4.832508, 16.473381), 1)),
			(cv((-7.620326, 6.138374, 16.473381), 1)),
			(cv((-7.487084, 6.138374, 16.473381), 1)),
			(cv((-7.487084, 4.832508, 16.473381), 1)),
			(cv((-4.260506, 4.832508, 16.473381), 1)),
			(cv((-4.260506, 6.138374, 16.473381), 1)),
			(cv((-10.577626, 5.883342, 16.365267), 1)),
			(cv((-10.577626, 5.107098, 16.365267), 1)),
			(cv((-7.931726, 5.107098, 16.365267), 1)),
			(cv((-7.931726, 5.883342, 16.365267), 1)),
			(cv((0.31024, 5.883342, 16.365267), 1)),
			(cv((0.31024, 5.107098, 16.365267), 1)),
			(cv((2.956139, 5.107098, 16.365267), 1)),
			(cv((2.956139, 5.883342, 16.365267), 1)),
			(cv((-2.917358, 5.883342, 16.365267), 1)),
			(cv((-2.917358, 5.107098, 16.365267), 1)),
			(cv((-0.271458, 5.107098, 16.365267), 1)),
			(cv((-0.271458, 5.883342, 16.365267), 1)),
			(cv((-10.347335, 6.318587, 12.534472), 1)),
			(cv((11.437614, 6.318587, 16.375234), 1)),
			(cv((10.204481, 6.318587, 12.534472), 1)),
			(cv((-3.42539, 6.33129, 15.283755), 1)),
			(cv((-3.42539, 4.444701, 15.283755), 1)),
			(cv((-3.42539, 4.444701, 15.866409), 1)),
			(cv((-11.580469, 6.318587, 16.375234), 1)),
			(cv((3.437392, 6.33129, 15.866409), 1)),
			(cv((3.437392, 4.444701, 15.866409), 1)),
			(cv((3.437392, 4.444701, 15.283755), 1)),
			(cv((4.020044, 6.33129, 15.283755), 1)),
			(cv((4.020044, 4.444701, 15.283755), 1)),
			(cv((4.020044, 4.444701, 15.866409), 1)),
			(cv((4.020044, 6.33129, 15.866409), 1)),
			(cv((-4.008043, 6.33129, 15.866409), 1)),
			(cv((-4.008043, 4.444701, 15.866409), 1)),
			(cv((-4.008043, 4.444701, 15.283755), 1)),
			(cv((-4.008043, 6.33129, 15.283755), 1)),
			(cv((3.437392, 6.33129, 15.283755), 1)),
			(cv((-3.42539, 6.33129, 15.866409), 1)),
			(cv((5.303981, 0.014547, 5.881948), 1)),
			(cv((5.291077, 2.254422, 10.514832), 1)),
			(cv((3.674651, 2.254422, 10.514832), 1)),
			(cv((3.674651, 0.014547, 5.881948), 1)),
			(cv((-3.736494, 0.014547, 5.881948), 1)),
			(cv((-3.736494, 2.259991, 10.501637), 1)),
			(cv((-5.365824, 0.014547, 5.881948), 1)),
			(cv((-5.365824, 2.254422, 10.514832), 1)),
			(cv((9.339101, 2.259991, 10.501637), 1)),
			(cv((9.326197, 4.447367, 15.134522), 1)),
			(cv((7.709771, 4.447367, 15.134522), 1)),
			(cv((7.709771, 2.259991, 10.501637), 1)),
			(cv((0.703499, 2.259991, 10.501637), 1)),
			(cv((0.690595, 4.447367, 15.134522), 1)),
			(cv((-0.925831, 4.447367, 15.134522), 1)),
			(cv((-0.925831, 2.259991, 10.501637), 1)),
			(cv((-7.648756, 2.259991, 10.501637), 1)),
			(cv((-7.66166, 4.447367, 15.134522), 1)),
			(cv((-9.278087, 4.447367, 15.134522), 1)),
			(cv((-9.278087, 2.259991, 10.501637), 1))	),
	texture_vertices = (
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 2.960366, 1.000000 ),
			st( 12.510666, 0.000000 ),
			st( 12.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 2.404732, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 2.000000, 1.000000 ),
			st( 2.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 2.000000, 0.000000 ),
			st( 2.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 2.000000, 1.000000 ),
			st( 2.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 2.000000, 1.000000 ),
			st( 2.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 2.000000, 1.000000 ),
			st( 2.000000, 0.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 1 ),
		polygon ((6, 7, 4),(6, 7, 4), 1 ),
		polygon ((8, 9, 10),(8, 9, 10), 2 ),
		polygon ((10, 11, 8),(10, 11, 8), 2 ),
		polygon ((12, 13, 14),(12, 13, 14), 3 ),
		polygon ((14, 15, 12),(14, 15, 12), 3 ),
		polygon ((16, 17, 18),(16, 17, 18), 3 ),
		polygon ((18, 19, 16),(18, 19, 16), 3 ),
		polygon ((20, 21, 22),(20, 21, 22), 3 ),
		polygon ((22, 23, 20),(22, 23, 20), 3 ),
		polygon ((24, 25, 26),(24, 25, 26), 3 ),
		polygon ((26, 27, 24),(26, 27, 24), 3 ),
		polygon ((28, 29, 30),(28, 29, 30), 3 ),
		polygon ((30, 31, 28),(30, 31, 28), 3 ),
		polygon ((32, 33, 34),(32, 33, 34), 3 ),
		polygon ((34, 35, 32),(34, 35, 32), 3 ),
		polygon ((36, 37, 38),(36, 37, 38), 4 ),
		polygon ((38, 39, 36),(38, 39, 36), 4 ),
		polygon ((40, 41, 42),(40, 41, 42), 5 ),
		polygon ((42, 43, 40),(42, 43, 40), 5 ),
		polygon ((44, 45, 46),(44, 45, 46), 6 ),
		polygon ((46, 47, 44),(46, 47, 44), 6 ),
		polygon ((48, 49, 50),(48, 49, 50), 7 ),
		polygon ((51, 52, 53),(51, 52, 53), 8 ),
		polygon ((54, 49, 48),(54, 49, 48), 7 ),
		polygon ((55, 56, 57),(55, 56, 57), 8 ),
		polygon ((58, 59, 60),(58, 59, 60), 8 ),
		polygon ((60, 61, 58),(60, 61, 58), 8 ),
		polygon ((62, 63, 64),(62, 63, 64), 8 ),
		polygon ((64, 65, 62),(64, 65, 62), 8 ),
		polygon ((65, 64, 52),(65, 64, 52), 8 ),
		polygon ((52, 51, 65),(52, 51, 65), 8 ),
		polygon ((57, 66, 55),(57, 66, 55), 8 ),
		polygon ((53, 67, 51),(53, 67, 51), 8 ),
		polygon ((66, 57, 59),(66, 57, 59), 8 ),
		polygon ((59, 58, 66),(59, 58, 66), 8 ),
		polygon ((68, 69, 70),(68, 69, 70), 9 ),
		polygon ((70, 71, 68),(70, 71, 68), 9 ),
		polygon ((72, 73, 74),(72, 73, 74), 9 ),
		polygon ((74, 73, 75),(74, 73, 75), 9 ),
		polygon ((76, 77, 78),(76, 77, 78), 9 ),
		polygon ((78, 79, 76),(78, 79, 76), 9 ),
		polygon ((80, 81, 82),(80, 81, 82), 9 ),
		polygon ((82, 83, 80),(82, 83, 80), 9 ),
		polygon ((84, 85, 86),(84, 85, 86), 9 ),
		polygon ((86, 87, 84),(86, 87, 84), 9 )
	)
); /* end of polyset 'stadium_section_5' */

polyset stadium_section_6 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (black ),
	shader = (tile ),
	shader = (HallWay ),
	shader = (stepslong ),
	shader = (ad05 ),
	shader = (ad02 ),
	shader = (backlit ),
	shader = (ad04 ),
	shader = (ad01 ),
	shader = (pillar ),
	shader = (roof1 ),
	shader = (stepsdark ),
	casts_shadow = TRUE,
	vertices = ((cv((-11.72917, 2.141633, 8.238353), 1)),
			(cv((-17.390783, 2.141633, 13.93963), 1)),
			(cv((-18.771461, 2.141633, 12.568557), 1)),
			(cv((-13.108112, 2.141633, 6.869679), 1)),
			(cv((-10.178302, 0.015151, 3.924672), 1)),
			(cv((-13.115532, 0.015151, 6.869705), 1)),
			(cv((-11.72917, 0.015151, 8.238353), 1)),
			(cv((-8.801289, 0.015151, 5.28996), 1)),
			(cv((-8.797592, 0.015151, 5.286237), 1)),
			(cv((-17.390783, 0.015151, 13.93963), 1)),
			(cv((-18.778882, 0.015151, 12.568584), 1)),
			(cv((-11.158679, 4.444701, 15.987407), 1)),
			(cv((-11.158679, 6.33129, 15.987407), 1)),
			(cv((-18.580315, 5.883342, 9.548101), 1)),
			(cv((-18.580315, 5.107098, 9.548101), 1)),
			(cv((-16.693128, 5.107098, 11.402637), 1)),
			(cv((-16.693128, 5.883342, 11.402637), 1)),
			(cv((-13.958733, 5.883342, 14.087402), 1)),
			(cv((-13.958733, 5.107098, 14.087402), 1)),
			(cv((-12.071545, 5.107098, 15.941937), 1)),
			(cv((-12.071545, 5.883342, 15.941937), 1)),
			(cv((-14.226576, 6.138374, 13.975774), 1)),
			(cv((-14.226576, 4.832508, 13.975774), 1)),
			(cv((-11.925218, 4.832508, 16.237313), 1)),
			(cv((-11.925218, 6.138374, 16.237313), 1)),
			(cv((-16.262484, 5.883342, 11.825239), 1)),
			(cv((-16.262484, 5.107098, 11.825239), 1)),
			(cv((-14.375296, 5.107098, 13.679775), 1)),
			(cv((-14.375296, 5.883342, 13.679775), 1)),
			(cv((-18.848158, 6.138374, 9.436474), 1)),
			(cv((-18.848158, 4.832508, 9.436474), 1)),
			(cv((-16.5468, 4.832508, 11.698012), 1)),
			(cv((-16.5468, 6.138374, 11.698012), 1)),
			(cv((-16.530327, 6.138374, 11.713612), 1)),
			(cv((-16.530327, 4.832508, 11.713612), 1)),
			(cv((-14.228969, 4.832508, 13.975151), 1)),
			(cv((-14.228969, 6.138374, 13.975151), 1)),
			(cv((-21.166429, 6.138374, 7.140215), 1)),
			(cv((-21.166429, 4.832508, 7.140215), 1)),
			(cv((-18.865071, 4.832508, 9.401754), 1)),
			(cv((-18.865071, 6.138374, 9.401754), 1)),
			(cv((-20.898587, 5.883342, 7.251842), 1)),
			(cv((-20.898587, 5.107098, 7.251842), 1)),
			(cv((-19.011397, 5.107098, 9.106378), 1)),
			(cv((-19.011397, 5.883342, 9.106378), 1)),
			(cv((-20.724222, 4.444701, 6.936903), 1)),
			(cv((-20.724222, 6.33129, 6.936903), 1)),
			(cv((-20.171677, 6.33129, 6.752025), 1)),
			(cv((-20.171677, 4.444701, 6.752025), 1)),
			(cv((-20.356556, 6.33129, 6.199481), 1)),
			(cv((-20.356556, 4.444701, 6.199481), 1)),
			(cv((-20.909099, 6.33129, 6.38436), 1)),
			(cv((-20.9091, 4.444701, 6.38436), 1)),
			(cv((-11.716756, 6.33129, 15.819976), 1)),
			(cv((-11.716756, 4.444701, 15.819976), 1)),
			(cv((-11.549325, 4.444701, 15.261898), 1)),
			(cv((-11.549325, 6.33129, 15.261898), 1)),
			(cv((-10.991247, 4.444701, 15.42933), 1)),
			(cv((-11.580469, 6.318587, 16.375234), 1)),
			(cv((-10.347335, 6.318587, 12.534472), 1)),
			(cv((-17.57177, 6.318587, 5.614935), 1)),
			(cv((-21.431427, 6.318587, 6.787589), 1)),
			(cv((-10.991247, 6.33129, 15.42933), 1))	),
	texture_vertices = (
			st( 2.000000, 0.000000 ),
			st( 0.338983, 0.993716 ),
			st( 0.338983, 0.993716 ),
			st( 0.338983, 0.981956 ),
			st( 0.338983, 0.981956 ),
			st( 0.338983, 0.981956 ),
			st( 4.000000, 1.000000 ),
			st( 0.994712, 0.993716 ),
			st( 0.994712, 0.981956 ),
			st( 1.000000, 5.000000 ),
			st( 0.994712, -0.003422 ),
			st( 0.994712, -0.003422 ),
			st( 0.994712, 0.981956 ),
			st( 0.994712, 0.981956 ),
			st( 0.000000, 0.000000 ),
			st( 0.339022, -0.001924 ),
			st( 0.339022, 0.981956 ),
			st( 0.339022, 0.981956 ),
			st( 1.000000, 8.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 6.000000 ),
			st( 0.339451, 0.000000 ),
			st( 0.339451, 0.000000 ),
			st( 0.339451, 0.000000 ),
			st( 0.339451, -0.004612 ),
			st( 0.339451, -0.004612 ),
			st( 1.000000, 6.000000 ),
			st( 0.500000, 0.000000 ),
			st( 1.000000, 6.000000 ),
			st( 0.500000, 0.000000 ),
			st( 0.338983, 0.000000 ),
			st( 0.338983, 0.000000 ),
			st( 0.338983, 0.993716 ),
			st( 0.338983, 0.993716 ),
			st( 0.338983, 0.993716 ),
			st( 0.338983, 0.993716 ),
			st( 1.000000, 8.000000 ),
			st( -0.000124, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( -0.000552, 0.993716 ),
			st( 4.000000, 0.000000 ),
			st( 0.994712, 0.000000 ),
			st( 0.994712, 0.000000 ),
			st( 0.994712, 0.993716 ),
			st( 1.000000, 1.000000 ),
			st( 0.995140, 0.000000 ),
			st( 0.995140, -0.006110 ),
			st( 0.995140, -0.006110 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( -0.543913, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 4.000000, 1.000000 ),
			st( 4.938589, 0.000000 ),
			st( 0.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 6, 9), 0 ),
		polygon ((2, 3, 0),(9, 14, 0), 0 ),
		polygon ((4, 3, 5),(18, 14, 22), 0 ),
		polygon ((6, 0, 7),(28, 0, 38), 0 ),
		polygon ((6, 8, 4),(28, 40, 18), 0 ),
		polygon ((4, 5, 6),(18, 22, 28), 0 ),
		polygon ((9, 1, 0),(42, 6, 0), 0 ),
		polygon ((0, 6, 9),(0, 29, 42), 0 ),
		polygon ((10, 9, 6),(46, 42, 30), 0 ),
		polygon ((6, 5, 10),(31, 22, 46), 0 ),
		polygon ((5, 3, 2),(22, 14, 9), 0 ),
		polygon ((2, 10, 5),(9, 46, 22), 0 ),
		polygon ((2, 1, 0),(10, 7, 1), 1 ),
		polygon ((0, 3, 2),(2, 15, 11), 1 ),
		polygon ((0, 1, 9),(3, 8, 43), 2 ),
		polygon ((9, 6, 0),(44, 32, 4), 2 ),
		polygon ((5, 3, 4),(23, 16, 19), 2 ),
		polygon ((7, 0, 6),(39, 5, 33), 2 ),
		polygon ((2, 3, 5),(12, 17, 24), 2 ),
		polygon ((5, 10, 2),(25, 47, 13), 2 ),
		polygon ((11, 12, 62),(50, 51, 101), 9 ),
		polygon ((55, 56, 53),(94, 95, 92), 9 ),
		polygon ((4, 8, 6),(20, 41, 34), 1 ),
		polygon ((6, 5, 4),(35, 26, 21), 1 ),
		polygon ((6, 9, 10),(36, 45, 48), 1 ),
		polygon ((10, 5, 6),(49, 27, 37), 1 ),
		polygon ((13, 14, 15),(52, 53, 54), 4 ),
		polygon ((15, 16, 13),(54, 55, 52), 4 ),
		polygon ((17, 18, 19),(56, 57, 58), 5 ),
		polygon ((19, 20, 17),(58, 59, 56), 5 ),
		polygon ((21, 22, 23),(60, 61, 62), 6 ),
		polygon ((23, 24, 21),(62, 63, 60), 6 ),
		polygon ((25, 26, 27),(64, 65, 66), 7 ),
		polygon ((27, 28, 25),(66, 67, 64), 7 ),
		polygon ((29, 30, 31),(68, 69, 70), 6 ),
		polygon ((31, 32, 29),(70, 71, 68), 6 ),
		polygon ((33, 34, 35),(72, 73, 74), 6 ),
		polygon ((35, 36, 33),(74, 75, 72), 6 ),
		polygon ((37, 38, 39),(76, 77, 78), 6 ),
		polygon ((39, 40, 37),(78, 79, 76), 6 ),
		polygon ((41, 42, 43),(80, 81, 82), 8 ),
		polygon ((43, 44, 41),(82, 83, 80), 8 ),
		polygon ((45, 46, 47),(84, 85, 86), 9 ),
		polygon ((47, 48, 45),(86, 87, 84), 9 ),
		polygon ((48, 47, 49),(87, 86, 88), 9 ),
		polygon ((50, 49, 51),(89, 88, 90), 9 ),
		polygon ((49, 50, 48),(88, 89, 87), 9 ),
		polygon ((51, 52, 50),(90, 91, 89), 9 ),
		polygon ((53, 54, 55),(92, 93, 94), 9 ),
		polygon ((56, 55, 57),(95, 94, 96), 9 ),
		polygon ((58, 59, 60),(97, 98, 99), 10 ),
		polygon ((60, 61, 58),(99, 100, 97), 10 ),
		polygon ((57, 62, 56),(96, 101, 95), 9 ),
		polygon ((62, 57, 11),(101, 96, 50), 9 )
	)
); /* end of polyset 'stadium_section_6' */

polyset stadium_section_7 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (stepsdark ),
	shader = (stepslong ),
	shader = (ad03 ),
	shader = (ad05 ),
	shader = (roof1 ),
	shader = (ad04 ),
	shader = (backlit ),
	shader = (ad06 ),
	casts_shadow = TRUE,
	vertices = ((cv((-15.340936, 2.254422, 0.812962), 1)),
			(cv((-21.57209, 4.832508, 3.236046), 1)),
			(cv((-21.57209, 6.138374, 3.236046), 1)),
			(cv((-15.340936, 2.254422, -0.803464), 1)),
			(cv((-10.708051, 0.014547, 0.825866), 1)),
			(cv((-10.708051, 0.014547, -0.803464), 1)),
			(cv((-21.463975, 5.883342, 0.278746), 1)),
			(cv((-21.463975, 5.107098, 0.278746), 1)),
			(cv((-21.463975, 5.107098, 2.924646), 1)),
			(cv((-21.463975, 5.883342, 2.924646), 1)),
			(cv((-21.451485, 5.883342, -6.233492), 1)),
			(cv((-21.451485, 5.107098, -6.233492), 1)),
			(cv((-21.451485, 5.107098, -3.587592), 1)),
			(cv((-21.451485, 5.883342, -3.587592), 1)),
			(cv((-21.431427, 6.318587, 6.787589), 1)),
			(cv((-17.57177, 6.318587, 5.614935), 1)),
			(cv((-17.57177, 6.318587, -5.705347), 1)),
			(cv((-21.431427, 6.318587, -6.878001), 1)),
			(cv((-21.462742, 5.883342, 3.507468), 1)),
			(cv((-21.462742, 5.107098, 3.507468), 1)),
			(cv((-21.462742, 5.107098, 6.153368), 1)),
			(cv((-21.462742, 5.883342, 6.153368), 1)),
			(cv((-21.570857, 6.138374, 3.238189), 1)),
			(cv((-21.570857, 4.832508, 3.238189), 1)),
			(cv((-21.570857, 4.832508, 6.464767), 1)),
			(cv((-21.570857, 6.138374, 6.464767), 1)),
			(cv((-21.572509, 6.138374, -3.239794), 1)),
			(cv((-21.572509, 4.832508, -3.239794), 1)),
			(cv((-21.572509, 4.832508, -0.013216), 1)),
			(cv((-21.572509, 6.138374, -0.013216), 1)),
			(cv((-21.464394, 5.883342, -2.970515), 1)),
			(cv((-21.464394, 5.107098, -2.970515), 1)),
			(cv((-21.464394, 5.107098, -0.324615), 1)),
			(cv((-21.464394, 5.883342, -0.324615), 1)),
			(cv((-21.5596, 6.138374, -6.502771), 1)),
			(cv((-21.5596, 4.832508, -6.502771), 1)),
			(cv((-21.5596, 4.832508, -3.276192), 1)),
			(cv((-21.5596, 6.138374, -3.276192), 1)),
			(cv((-21.57209, 6.138374, 0.009467), 1)),
			(cv((-21.57209, 4.832508, 0.009467), 1))	),
	texture_vertices = (
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 2.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 2.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 11.508078, 0.036610 ),
			st( 11.000000, 1.000000 ),
			st( 5.001637, 1.000000 ),
			st( 4.522593, 0.036609 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ) ),
	polygons = (
		polygon ((38, 39, 1),(38, 39, 1), 6 ),
		polygon ((1, 2, 38),(1, 2, 38), 6 ),
		polygon ((4, 0, 3),(4, 0, 3), 1 ),
		polygon ((3, 5, 4),(3, 5, 4), 1 ),
		polygon ((6, 7, 8),(6, 7, 8), 2 ),
		polygon ((8, 9, 6),(8, 9, 6), 2 ),
		polygon ((10, 11, 12),(10, 11, 12), 3 ),
		polygon ((12, 13, 10),(12, 13, 10), 3 ),
		polygon ((14, 15, 16),(14, 15, 16), 4 ),
		polygon ((16, 17, 14),(16, 17, 14), 4 ),
		polygon ((18, 19, 20),(18, 19, 20), 5 ),
		polygon ((20, 21, 18),(20, 21, 18), 5 ),
		polygon ((22, 23, 24),(22, 23, 24), 6 ),
		polygon ((24, 25, 22),(24, 25, 22), 6 ),
		polygon ((26, 27, 28),(26, 27, 28), 6 ),
		polygon ((28, 29, 26),(28, 29, 26), 6 ),
		polygon ((30, 31, 32),(30, 31, 32), 7 ),
		polygon ((32, 33, 30),(32, 33, 30), 7 ),
		polygon ((34, 35, 36),(34, 35, 36), 6 ),
		polygon ((36, 37, 34),(36, 37, 34), 6 )
	)
); /* end of polyset 'stadium_section_7' */

polyset stadium_section_8 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (ad01 ),
	shader = (backlit ),
	shader = (pillar ),
	shader = (ad02 ),
	shader = (ad04 ),
	shader = (ad06 ),
	shader = (roof1 ),
	shader = (black ),
	shader = (tile ),
	shader = (HallWay ),
	shader = (stepslong ),
	shader = (stepsdark ),
	casts_shadow = TRUE,
	vertices = ((cv((-14.266647, 5.107098, -13.744959), 1)),
			(cv((-16.153836, 5.107098, -11.890423), 1)),
			(cv((-16.153836, 5.883342, -11.890423), 1)),
			(cv((-18.739509, 6.138374, -9.501658), 1)),
			(cv((-16.438151, 6.138374, -11.763196), 1)),
			(cv((-16.438151, 4.832508, -11.763196), 1)),
			(cv((-11.436351, 6.33129, -15.202602), 1)),
			(cv((-11.436351, 4.444701, -15.202602), 1)),
			(cv((-11.63276, 4.444701, -15.751153), 1)),
			(cv((-16.421678, 6.138374, -11.778796), 1)),
			(cv((-14.12032, 6.138374, -14.040335), 1)),
			(cv((-14.12032, 4.832508, -14.040335), 1)),
			(cv((-18.756422, 4.832508, -9.466938), 1)),
			(cv((-21.057781, 4.832508, -7.205399), 1)),
			(cv((-21.057781, 6.138374, -7.205399), 1)),
			(cv((-18.756422, 6.138374, -9.466938), 1)),
			(cv((-11.084209, 6.33129, -15.947562), 1)),
			(cv((-11.084209, 4.444701, -15.947562), 1)),
			(cv((-10.8878, 4.444701, -15.399011), 1)),
			(cv((-10.8878, 6.33129, -15.399011), 1)),
			(cv((-14.266647, 5.883342, -13.744959), 1)),
			(cv((-18.739509, 4.832508, -9.501658), 1)),
			(cv((-18.902749, 5.107098, -9.171562), 1)),
			(cv((-20.789939, 5.107098, -7.317026), 1)),
			(cv((-20.789939, 5.883342, -7.317026), 1)),
			(cv((-18.902749, 5.883342, -9.171562), 1)),
			(cv((-14.117927, 6.138374, -14.040958), 1)),
			(cv((-11.816569, 6.138374, -16.302497), 1)),
			(cv((-11.816569, 4.832508, -16.302497), 1)),
			(cv((-14.117927, 4.832508, -14.040958), 1)),
			(cv((-11.63276, 6.33129, -15.751153), 1)),
			(cv((-16.421678, 4.832508, -11.778796), 1)),
			(cv((-20.665496, 6.33129, -7.059036), 1)),
			(cv((-20.665496, 4.444701, -7.059036), 1)),
			(cv((-20.113927, 4.444701, -6.871268), 1)),
			(cv((-20.113927, 6.33129, -6.871268), 1)),
			(cv((-20.301697, 4.444701, -6.3197), 1)),
			(cv((-20.301697, 6.33129, -6.3197), 1)),
			(cv((-20.853264, 4.444701, -6.507468), 1)),
			(cv((-20.853264, 6.33129, -6.507468), 1)),
			(cv((-16.584478, 5.107098, -11.46782), 1)),
			(cv((-18.471667, 5.107098, -9.613285), 1)),
			(cv((-18.471667, 5.883342, -9.613285), 1)),
			(cv((-16.584478, 5.883342, -11.46782), 1)),
			(cv((-11.962896, 5.107098, -16.007121), 1)),
			(cv((-13.850085, 5.107098, -14.152585), 1)),
			(cv((-13.850085, 5.883342, -14.152585), 1)),
			(cv((-11.962896, 5.883342, -16.007121), 1)),
			(cv((-17.57177, 6.318587, -5.705347), 1)),
			(cv((-11.437614, 6.318587, -16.367813), 1)),
			(cv((-21.431427, 6.318587, -6.878001), 1)),
			(cv((-10.204481, 6.318587, -12.527052), 1)),
			(cv((-13.099335, 2.141487, -6.858642), 1)),
			(cv((-18.790722, 2.141487, -12.530197), 1)),
			(cv((-17.417242, 2.141487, -13.90848), 1)),
			(cv((-11.728257, 2.141487, -8.235193), 1)),
			(cv((-8.788367, 0.015005, -5.300248), 1)),
			(cv((-11.72827, 0.015005, -8.242613), 1)),
			(cv((-13.099335, 0.015005, -6.858642), 1)),
			(cv((-10.156057, 0.015005, -3.92562), 1)),
			(cv((-10.15234, 0.015005, -3.921916), 1)),
			(cv((-18.790722, 0.015005, -12.530197), 1)),
			(cv((-17.417256, 0.015005, -13.915901), 1))	),
	texture_vertices = (
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 7.990785, 1.000000 ),
			st( 12.515821, 0.056559 ),
			st( 7.160986, 0.056559 ),
			st( 12.000000, 1.000000 ),
			st( 2.000000, 0.000000 ),
			st( 0.338983, 0.993716 ),
			st( 0.338983, 0.993716 ),
			st( 0.338983, 0.981956 ),
			st( 0.338983, 0.981956 ),
			st( 0.338983, 0.981956 ),
			st( 4.000000, 1.000000 ),
			st( 0.994712, 0.993716 ),
			st( 0.994712, 0.981956 ),
			st( 1.000000, 5.000000 ),
			st( 0.994712, -0.003422 ),
			st( 0.994712, -0.003422 ),
			st( 0.994712, 0.981956 ),
			st( 0.994712, 0.981956 ),
			st( 0.000000, 0.000000 ),
			st( 0.339022, -0.001924 ),
			st( 0.339022, 0.981956 ),
			st( 0.339022, 0.981956 ),
			st( 1.000000, 8.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 6.000000 ),
			st( 0.339451, 0.000000 ),
			st( 0.339451, 0.000000 ),
			st( 0.339451, 0.000000 ),
			st( 0.339451, -0.004612 ),
			st( 0.339451, -0.004612 ),
			st( 1.000000, 6.000000 ),
			st( 0.500000, 0.000000 ),
			st( 1.000000, 6.000000 ),
			st( 0.500000, 0.000000 ),
			st( 0.338983, 0.000000 ),
			st( 0.338983, 0.000000 ),
			st( 0.338983, 0.993716 ),
			st( 0.338983, 0.993716 ),
			st( 0.338983, 0.993716 ),
			st( 0.338983, 0.993716 ),
			st( 1.000000, 8.000000 ),
			st( -0.000124, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( -0.000552, 0.993716 ),
			st( 4.000000, 0.000000 ),
			st( 0.994712, 0.000000 ),
			st( 0.994712, 0.000000 ),
			st( 0.994712, 0.993716 ),
			st( 1.000000, 1.000000 ),
			st( 0.995140, 0.000000 ),
			st( 0.995140, -0.006110 ),
			st( 0.995140, -0.006110 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((3, 4, 5),(3, 4, 5), 1 ),
		polygon ((6, 7, 8),(6, 7, 8), 2 ),
		polygon ((9, 10, 11),(9, 10, 11), 1 ),
		polygon ((12, 13, 14),(12, 13, 14), 1 ),
		polygon ((14, 15, 12),(14, 15, 12), 1 ),
		polygon ((16, 17, 18),(16, 17, 18), 2 ),
		polygon ((18, 19, 16),(18, 19, 16), 2 ),
		polygon ((19, 18, 7),(19, 18, 7), 2 ),
		polygon ((7, 6, 19),(7, 6, 19), 2 ),
		polygon ((2, 20, 0),(2, 20, 0), 0 ),
		polygon ((5, 21, 3),(5, 21, 3), 1 ),
		polygon ((22, 23, 24),(22, 23, 24), 3 ),
		polygon ((24, 25, 22),(24, 25, 22), 3 ),
		polygon ((26, 27, 28),(26, 27, 28), 1 ),
		polygon ((28, 29, 26),(28, 29, 26), 1 ),
		polygon ((8, 30, 6),(8, 30, 6), 2 ),
		polygon ((11, 31, 9),(11, 31, 9), 1 ),
		polygon ((32, 33, 34),(32, 33, 34), 2 ),
		polygon ((34, 35, 32),(34, 35, 32), 2 ),
		polygon ((35, 34, 36),(35, 34, 36), 2 ),
		polygon ((36, 37, 35),(36, 37, 35), 2 ),
		polygon ((37, 36, 38),(37, 36, 38), 2 ),
		polygon ((38, 39, 37),(38, 39, 37), 2 ),
		polygon ((40, 41, 42),(40, 41, 42), 4 ),
		polygon ((42, 43, 40),(42, 43, 40), 4 ),
		polygon ((44, 45, 46),(44, 45, 46), 5 ),
		polygon ((46, 47, 44),(46, 47, 44), 5 ),
		polygon ((48, 49, 50),(48, 49, 50), 6 ),
		polygon ((51, 49, 48),(51, 49, 48), 6 ),
		polygon ((52, 53, 54),(52, 58, 61), 7 ),
		polygon ((54, 55, 52),(61, 66, 52), 7 ),
		polygon ((56, 55, 57),(70, 66, 74), 7 ),
		polygon ((58, 52, 59),(80, 52, 90), 7 ),
		polygon ((58, 60, 56),(80, 92, 70), 7 ),
		polygon ((56, 57, 58),(70, 74, 80), 7 ),
		polygon ((61, 53, 52),(94, 58, 52), 7 ),
		polygon ((52, 58, 61),(52, 81, 94), 7 ),
		polygon ((62, 61, 58),(98, 94, 82), 7 ),
		polygon ((58, 57, 62),(83, 74, 98), 7 ),
		polygon ((57, 55, 54),(74, 66, 61), 7 ),
		polygon ((54, 62, 57),(61, 98, 74), 7 ),
		polygon ((54, 53, 52),(62, 59, 53), 8 ),
		polygon ((52, 55, 54),(54, 67, 63), 8 ),
		polygon ((52, 53, 61),(55, 60, 95), 9 ),
		polygon ((61, 58, 52),(96, 84, 56), 9 ),
		polygon ((57, 55, 56),(75, 68, 71), 9 ),
		polygon ((59, 52, 58),(91, 57, 85), 9 ),
		polygon ((54, 55, 57),(64, 69, 76), 9 ),
		polygon ((57, 62, 54),(77, 99, 65), 9 ),
		polygon ((58, 61, 62),(86, 97, 100), 8 ),
		polygon ((62, 57, 58),(101, 78, 87), 8 ),
		polygon ((56, 60, 58),(72, 93, 88), 8 ),
		polygon ((58, 57, 56),(89, 79, 73), 8 )
	)
); /* end of polyset 'stadium_section_8' */

polyset balcony_section_1 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (stands ),
	shader = (crowdlow ),
	shader = (balcony ),
	casts_shadow = TRUE,
	vertices = ((cv((10.205417, 7.049798, -12.529966), 1)),
			(cv((-10.205417, 7.049798, -12.529966), 1)),
			(cv((-10.204481, 13.070888, -16.679458), 1)),
			(cv((-10.204481, 6.318587, -12.527051), 1)),
			(cv((-10.205417, 7.049798, -12.529966), 1)),
			(cv((10.204481, 13.070888, -16.679458), 1)),
			(cv((10.204481, 6.318587, -12.527051), 1))	),
	texture_vertices = (
			st( 2.934289, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 2.934289, 0.000000 ),
			st( 0.999670, -0.013817 ),
			st( 0.997445, 0.993531 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 2.933486, 0.994779 ),
			st( 1.000000, 0.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 4, 5), 1 ),
		polygon ((3, 4, 0),(6, 7, 1), 2 ),
		polygon ((0, 6, 3),(2, 9, 6), 2 ),
		polygon ((2, 5, 0),(5, 8, 3), 1 )
	)
); /* end of polyset 'balcony_section_1' */

polyset balcony_section_2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (stepslong ),
	shader = (crowdlow ),
	shader = (balcony ),
	casts_shadow = TRUE,
	vertices = ((cv((10.205417, 7.049798, -12.529966), 1)),
			(cv((10.204481, 13.070888, -16.679458), 1)),
			(cv((21.583686, 13.070888, -7.0923), 1)),
			(cv((17.5747, 7.049798, -5.706237), 1)),
			(cv((17.5747, 7.049798, -5.706237), 1)),
			(cv((17.57177, 6.318587, -5.705347), 1)),
			(cv((10.204481, 6.318587, -12.527051), 1))	),
	texture_vertices = (
			st( 1.978481, 0.004218 ),
			st( 1.000000, 1.000000 ),
			st( 2.145747, 1.000000 ),
			st( 0.820786, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 2, 3), 1 ),
		polygon ((2, 3, 0),(3, 4, 0), 1 ),
		polygon ((4, 5, 6),(5, 6, 7), 2 ),
		polygon ((6, 0, 4),(7, 1, 5), 2 )
	)
); /* end of polyset 'balcony_section_2' */

polyset balcony_section_3 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (stepslong ),
	shader = (crowdlow ),
	shader = (balcony ),
	casts_shadow = TRUE,
	vertices = ((cv((21.583686, 13.070888, -7.0923), 1)),
			(cv((21.583686, 13.070888, 7.000566), 1)),
			(cv((17.5747, 7.049798, 5.615825), 1)),
			(cv((17.5747, 7.049798, -5.706237), 1)),
			(cv((17.57177, 6.318587, -5.705347), 1)),
			(cv((17.5747, 7.049798, -5.706237), 1)),
			(cv((17.57177, 6.318587, 5.614935), 1))	),
	texture_vertices = (
			st( 0.893212, 0.995261 ),
			st( 2.096430, 0.990040 ),
			st( 2.012257, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.987436, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 1 ),
		polygon ((2, 3, 0),(2, 4, 0), 1 ),
		polygon ((4, 5, 6),(5, 6, 7), 2 ),
		polygon ((6, 5, 2),(7, 6, 3), 2 )
	)
); /* end of polyset 'balcony_section_3' */

polyset balcony_section_4 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (stepslong ),
	shader = (balcony ),
	shader = (crowdlow ),
	casts_shadow = TRUE,
	vertices = ((cv((10.204481, 6.318587, 12.534472), 1)),
			(cv((17.57177, 6.318587, 5.614935), 1)),
			(cv((17.5747, 7.049798, 5.615825), 1)),
			(cv((10.205416, 7.049799, 12.537387), 1)),
			(cv((21.583686, 13.070888, 7.000566), 1)),
			(cv((10.204481, 13.070888, 16.685702), 1)),
			(cv((10.205417, 7.049798, 12.537387), 1))	),
	texture_vertices = (
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.853451, 1.000000 ),
			st( 2.077904, 1.000000 ),
			st( 1.978481, 0.004218 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 1 ),
		polygon ((2, 3, 0),(2, 4, 0), 1 ),
		polygon ((4, 5, 6),(5, 6, 7), 2 ),
		polygon ((6, 2, 4),(7, 3, 5), 2 )
	)
); /* end of polyset 'balcony_section_4' */

polyset balcony_section_5 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (pillar ),
	shader = (crowdlow ),
	shader = (balcony ),
	casts_shadow = TRUE,
	vertices = ((cv((-10.34827, 13.070888, 16.685702), 1)),
			(cv((-10.34827, 7.049798, 12.537387), 1)),
			(cv((10.205417, 7.049798, 12.537387), 1)),
			(cv((10.204481, 13.070888, 16.685702), 1)),
			(cv((10.205416, 7.049799, 12.537387), 1)),
			(cv((-10.34827, 7.049798, 12.537387), 1)),
			(cv((-10.347335, 6.318587, 12.534472), 1)),
			(cv((10.204481, 6.318587, 12.534472), 1))	),
	texture_vertices = (
			st( 1.002470, 0.993531 ),
			st( 0.999670, -0.013817 ),
			st( 2.934289, 0.000000 ),
			st( 2.933486, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 1 ),
		polygon ((2, 3, 0),(2, 3, 0), 1 ),
		polygon ((4, 5, 6),(4, 5, 6), 2 ),
		polygon ((6, 7, 4),(6, 7, 4), 2 )
	)
); /* end of polyset 'balcony_section_5' */

polyset balcony_section_6 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (stands ),
	shader = (balcony ),
	shader = (crowdlow ),
	casts_shadow = TRUE,
	vertices = ((cv((-10.347335, 6.318587, 12.534472), 1)),
			(cv((-10.34827, 7.049798, 12.537387), 1)),
			(cv((-17.5747, 7.049798, 5.713658), 1)),
			(cv((-17.57177, 6.318587, 5.712768), 1)),
			(cv((-10.34827, 7.049798, 12.537387), 1)),
			(cv((-10.34827, 13.070888, 16.685702), 1)),
			(cv((-21.583686, 13.070888, 7.000566), 1)),
			(cv((-17.5747, 7.049798, 5.615825), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.991650, 0.000000 ),
			st( 0.866201, 1.000000 ),
			st( 2.077659, 1.000000 ),
			st( 1.934288, 0.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 1 ),
		polygon ((2, 3, 0),(2, 3, 0), 1 ),
		polygon ((4, 5, 6),(4, 5, 6), 2 ),
		polygon ((6, 7, 4),(6, 7, 4), 2 )
	)
); /* end of polyset 'balcony_section_6' */

polyset balcony_section_7 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (stepslong ),
	shader = (balcony ),
	shader = (crowdlow ),
	casts_shadow = TRUE,
	vertices = ((cv((-17.57177, 6.318587, -5.705347), 1)),
			(cv((-17.57177, 6.318587, 5.614935), 1)),
			(cv((-17.5747, 7.049798, 5.615825), 1)),
			(cv((-17.5747, 7.049798, -5.706237), 1)),
			(cv((-17.5747, 7.049798, -5.706237), 1)),
			(cv((-17.5747, 7.049798, 5.615825), 1)),
			(cv((-21.583686, 13.070888, -7.092299), 1)),
			(cv((-21.583686, 13.070888, 7.000566), 1))	),
	texture_vertices = (
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.934288, 0.000000 ),
			st( 0.997624, 0.015066 ),
			st( 2.077659, 1.000000 ),
			st( 0.860227, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 1 ),
		polygon ((2, 3, 0),(2, 3, 0), 1 ),
		polygon ((4, 5, 6),(4, 5, 6), 2 ),
		polygon ((6, 5, 7),(6, 5, 7), 2 )
	)
); /* end of polyset 'balcony_section_7' */

polyset balcony_section_8 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (backlit ),
	shader = (crowdlow ),
	shader = (balcony ),
	casts_shadow = TRUE,
	vertices = ((cv((-21.583686, 13.070888, -7.0923), 1)),
			(cv((-10.204481, 13.070888, -16.679458), 1)),
			(cv((-10.205417, 7.049798, -12.529966), 1)),
			(cv((-17.5747, 7.049798, -5.706237), 1)),
			(cv((-10.204481, 6.318587, -12.527051), 1)),
			(cv((-17.57177, 6.318587, -5.705347), 1)),
			(cv((-17.5747, 7.049798, -5.706237), 1)),
			(cv((-10.205416, 7.049799, -12.529967), 1))	),
	texture_vertices = (
			st( 0.820786, 1.000000 ),
			st( 2.145747, 1.000000 ),
			st( 1.978481, 0.004218 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 1 ),
		polygon ((2, 3, 0),(2, 3, 0), 1 ),
		polygon ((4, 5, 6),(4, 5, 6), 2 ),
		polygon ((6, 7, 4),(6, 7, 4), 2 )
	)
); /* end of polyset 'balcony_section_8' */

ENVIRONMENT
background ( 
        color = (0.0, 0.0, 0.0)
);
shader_glow ( 
,
        glow_type =  LINEAR_GLOW,
        halo_type =  LINEAR_GLOW,
        auto_exposure = ON,
        quality = 0.5,
        threshold = 0.0,
        glow_color = (100.0, 100.0, 100.0),
        glow_intensity = 1.0,
        glow_spread = 0.05,
        glow_eccentricity = 0.1,
        glow_radial_noise = 0.0,
        glow_star_level = 0.0,
        glow_opacity = 0.0,
        halo_color = (100.0, 100.0, 100.0),
        halo_intensity = 1.0,
        halo_spread = 0.3,
        halo_eccentricity = 0.1,
        halo_radial_noise = 0.0,
        halo_star_level = 0.0,
        halo_lens_flare = 0.0,
        rotation = 0.0,
        radial_noise_frequency = 0.5,
        star_points = 4.0
);
photo_effects ( 
,
        film_grain = 0.0,
        filter = (255.0, 255.0, 255.0)
);
master_light ( 
,
        intensity = 1.0,
        light_color = (255.0, 255.0, 255.0)
);
dynamics ( 
,
        gravity = 1.0,
        air_density = 0.05,
        Floor = ON,
        floor_offset = 0.0,
        ceiling = OFF,
        ceiling_offset = 20.0,
        left = OFF,
        left_offset = -10.0,
        right = OFF,
        right_offset = 10.0,
        front = OFF,
        front_offset = -10.0,
        back = OFF,
        back_offset = 10.0,
        wall_friction = 0.0,
        wall_elasticity = 0.707,
        turbulence_intensity = 0.0,
        turbulence_spread = 0.5,
        turbulence_persistence = 5.0,
        turbulence_animated = ON,
        turbulence_space_resolution =  16,
        turbulence_time_resolution =  16,
        turbulence_roughness = 0.5,
        turbulence_variability = 0.5,
        turbulence_granularity = 0.0
);

MODEL
/* Only expression assignments should appear above this line and below the MODEL directive. */
/* Placing any other commands in the above section will produce incorrect expression behaviour. */
{
	{
		rot (zaxis, 180.0);
		rot (yaxis, -35.0);
		rot (xaxis, -135.0);
		inst daylight();
	}
	{
		trn(-2.0, -2.0, 0.0);
		LightviewX = current_position(( 0.0,  0.0,  0.0));
	}
	{
		trn(0.0, 10.0, 0.0);
		LightupX = current_position(( 0.0,  0.0,  0.0));
	}
}
{
	instance stadium_section_1();
}
{
	instance stadium_section_2();
}
{
	instance stadium_section_3();
}
{
	instance stadium_section_4();
}
{
	instance stadium_section_5();
}
{
	instance stadium_section_6();
}
{
	instance stadium_section_7();
}
{
	instance stadium_section_8();
}
{
	instance balcony_section_1();
}
{
	instance balcony_section_2();
}
{
	instance balcony_section_3();
}
{
	instance balcony_section_4();
}
{
	instance balcony_section_5();
}
{
	instance balcony_section_6();
}
{
	instance balcony_section_7();
}
{
	instance balcony_section_8();
}
{
	trn(-10.159109, 0.015005, -5.844588);
	rot (xaxis, 90.0);
	scale (-12.253277, 1.95138, 1.0);
	Projector = cur_xform();
}
{
	trn(0.0, 0.0, 12.0);
	{
		inst Light();
	}
	{
		trn(-2.0, -2.0, 0.0);
		Lightview = current_position(( 0.0,  0.0,  0.0));
	}
	{
		trn(0.0, 10.0, 0.0);
		Lightup = current_position(( 0.0,  0.0,  0.0));
	}
}
{
	trn(-0.780266, 0.0, -4.306735);
	rot (yaxis, 90.0);
	rot (xaxis, -7.0);
	{
		trn(-36.923748, 27.191444, -22.002115);
		camera (
			perspective = TRUE,
			eye   = ( 0.0,  0.0,  0.0),
			active = ON,
			pix   = "pix/stadium.sdl",
			view  = Camera_view,
			up  = Camera_up,
			aov = 55.0,
			filmaperture_x = 0.4,
			filmaperture_y = 0.285,
			filmoffset_x = 0.0,
			filmoffset_y = 0.0,
			placement_fit_code = 0,
			placement_shift = 0.0,
			aspect   = pixel_aspect,
			aspect_ratio_pixel = pixel_aspect,
			near = 0.1,
			far = 200.0,
			depth_of_field = 0.0,
			scaling_factor = 1.0,
			f_stop = 3.5,
			focal_distance = 12.0,
			auto_focus = OFF,
			motion_blur = 0.0
		);
	}
	{
		trn(21.040981, -14.140376, 14.356727);
		Camera_view = current_position( (0, 0, 0) );
	}
	{
		trn(-36.550404, 28.041544, -21.630821);
		Camera_up = current_position( (0, 0, 0) );
	}
}

