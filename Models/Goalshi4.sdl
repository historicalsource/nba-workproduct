DEFINITION	/* ALIAS SDL File Version 8.5 */
			/* Apparently from wire file '/matt/mgilmore/user_data/NBAonNBC/wire/Nets/GOALS11b'. */
	version = 8.5;

	xleft  = 0;
	xright = 1279;
	ylow   = 0;
	yhigh  = 1023;
	resolution = 1280 1024;
	aalevelmin   = 3;
	aalevelmax   = 12;
	aathreshold  = 0.6;
	post_filter   = OFF;
	post_center   = 8;    /* Values for a bartlet filter. */
	post_adjacent = 1;
	post_diagonal = 1;

	composite_rendering = OFF;
	invisible_objects_cast_shadows = OFF;
	image_format = ALIAS;
	jitter       = ON;
	reduced_samples = OFF;
	textures_active    = ON;

	clamp_bumpsize = 0.0;

	up = yaxis;

	motion_blur_on = OFF;
	shutter_angle  = 144.0;
	animation  = OFF;
	startframe = 0.0;
	endframe = 0.0;
	fields          = FALSE;
	odd             = FALSE;
	even            = FALSE;
	odd_field_first = TRUE;

	triple Camera#2_view(0.0, 0.0, 0.0);
	triple Camera#2_up(0.0, 0.0, 0.0);
	triple Camera_view(0.0, 0.0, 0.0);
	triple Camera_up(0.0, 0.0, 0.0);

	subdivision_recursion_limit = 2;
	grid_cache = 4000;
	bbox_memory = FULL;
	rt_voxel_res_type = AUTOMATIC;

	max_reflections             = 10;
	max_refractions             = 10;
	max_shadow_level            = 10;
	preview_ray_trace           = OFF;

	scalar pixel_aspect ( 1.0 );
	hline_to_fill_color  = FALSE;
	hline_fill_color     = (255.0, 255.0, 255.0);
	hline_line_color     = (0.0, 255.0, 255.0);
	hline_isoparam_u     = 0;
	hline_isoparam_v     = 0;

	show_particles       = TRUE;
	simulation_substeps  = 1;
	simulation_frames_per_second = 30;


texture File#2 (
        procedure = file,
        rgbout = (18.497383, 0.0, 255.0),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/cush4.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.05814,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = OFF,
        vwrap = OFF,
        invert = OFF
);

shader cush4 ( model = lambert,
        diffuse = 0.8,
        color = File#2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture WHITEPOSTtexture (
        procedure = file,
        rgbout = (241.787567, 249.559586, 255.0),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/whitpost.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader WHITEPOST ( model = lambert,
        diffuse = 0.8,
        color = WHITEPOSTtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture NETtexture#5 (
        procedure = file,
        rgbout = (133.048538, 136.964493, 151.943008),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/seal.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = -0.01,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader seal ( model = lambert,
        diffuse = 0.8,
        color = NETtexture#5,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture NETtexture#6 (
        procedure = file,
        rgbout = (151.943008, 143.597137, 99.983223),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/metal4.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = -0.01,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader METAL4 ( model = lambert,
        diffuse = 0.8,
        color = NETtexture#6,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture METAL2texture (
        procedure = file,
        rgbout = (113.120346, 120.298462, 134.76683),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/metal2.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.05814,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader METAL2 ( model = lambert,
        diffuse = 0.8,
        color = METAL2texture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture METAL3texture (
        procedure = file,
        rgbout = (113.120346, 120.298462, 134.76683),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/metal3.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.05814,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader METAL3 ( model = lambert,
        diffuse = 0.8,
        color = METAL3texture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture METAL1texture (
        procedure = file,
        rgbout = (113.120346, 120.298462, 134.76683),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/metal1.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.05814,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader METAL1 ( model = lambert,
        diffuse = 0.8,
        color = METAL1texture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture BUMPERtexture (
        procedure = file,
        rgbout = (43.813255, 73.097771, 132.124359),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/bumper.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader BUMPER ( model = lambert,
        diffuse = 0.8,
        color = BUMPERtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture NETtexture#2 (
        procedure = file,
        rgbout = (130.618286, 133.159958, 140.051819),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/backpad.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader BackPad ( model = lambert,
        diffuse = 0.8,
        color = NETtexture#2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture TARGETtexture (
        procedure = file,
        rgbout = (255.0, 254.555023, 248.393784),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/target.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader TARGET ( model = lambert,
        diffuse = 0.8,
        color = TARGETtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture GLASStexture (
        procedure = file,
        rgbout = (0.0, 55.813946, 94.88372),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/glass.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader GLASS ( model = lambert,
        diffuse = 0.8,
        color = GLASStexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (201.627914, 201.627914, 201.627914),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture nbalog (
        procedure = file,
        rgbout = (0.0, 150.0, 255.0),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/NBAlog.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = OFF,
        vwrap = OFF,
        invert = OFF
);

shader NBAdecal ( model = lambert,
        diffuse = 0.8,
        color = nbalog,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture ORANGEtexture (
        procedure = file,
        rgbout = (255.0, 71.347153, 0.0),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/bracket.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader ORANGE ( model = lambert,
        diffuse = 0.8,
        color = ORANGEtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture HOOPtexture (
        procedure = file,
        rgbout = (255.0, 71.347153, 0.0),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/hoop.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader HOOP ( model = lambert,
        diffuse = 0.8,
        color = HOOPtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture NETtexture (
        procedure = file,
        rgbout = (151.943008, 143.597137, 99.983223),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/net.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = -0.01,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader NET ( model = lambert,
        diffuse = 0.8,
        color = NETtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

polyset GoalStand (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (BUMPER ),
	shader = (WHITEPOST ),
	shader = (METAL2 ),
	shader = (METAL3 ),
	casts_shadow = TRUE,
	vertices = ((cv((-7.095556, 2.286497, -0.695803), 1)),
			(cv((-7.095505, 2.286801, -0.558099), 1)),
			(cv((-7.082199, 2.304014, -0.583106), 1)),
			(cv((-7.08225, 2.30371, -0.674993), 1)),
			(cv((-7.211563, 2.286801, -0.558099), 1)),
			(cv((-7.211615, 2.286497, -0.695803), 1)),
			(cv((-7.226359, 2.296435, -0.681869), 1)),
			(cv((-7.211615, 2.374054, -0.695803), 1)),
			(cv((-7.226359, 2.36443, -0.681869), 1)),
			(cv((-7.095556, 2.374054, -0.695803), 1)),
			(cv((-7.095505, 2.374368, -0.558099), 1)),
			(cv((-7.08225, 2.356841, -0.674993), 1)),
			(cv((-7.082199, 2.357155, -0.583106), 1)),
			(cv((-7.226307, 2.296435, -0.575931), 1)),
			(cv((-7.211563, 2.374368, -0.558099), 1)),
			(cv((-7.226307, 2.36443, -0.575931), 1)),
			(cv((-8.116648, 2.296687, 0.0), 1)),
			(cv((-8.197511, 2.501257, 0.0543), 1)),
			(cv((-8.116648, 2.501257, 0.0), 1)),
			(cv((-8.197511, 2.501257, -0.0543), 1)),
			(cv((-7.424742, 2.828735, 0.415384), 1)),
			(cv((-7.424642, 2.828735, -0.415364), 1)),
			(cv((-7.448157, 2.794138, -0.407182), 1)),
			(cv((-7.467051, 2.827309, -0.399), 1)),
			(cv((-7.467151, 2.827309, 0.399), 1)),
			(cv((-7.448257, 2.794138, 0.407202), 1)),
			(cv((-8.197511, 2.296687, 0.0543), 1)),
			(cv((-8.197511, 2.296687, -0.0543), 1)),
			(cv((-9.370433, 1.238626, 0.0), 1)),
			(cv((-9.393589, 1.272513, -0.027879), 1)),
			(cv((-9.472845, 1.049741, -0.027879), 1)),
			(cv((-8.196584, 2.499232, 0.027879), 1)),
			(cv((-9.393589, 1.272513, 0.027879), 1)),
			(cv((-9.419602, 1.090958, 0.0), 1)),
			(cv((-7.226269, 2.36443, -0.575831), 1)),
			(cv((-8.196584, 2.36443, 0.053223), 1)),
			(cv((-8.196584, 2.36443, -0.053223), 1)),
			(cv((-8.196584, 2.499232, -0.027879), 1)),
			(cv((-8.196584, 2.296739, -0.053223), 1)),
			(cv((-7.226321, 2.296435, -0.682268), 1)),
			(cv((-7.226321, 2.364115, -0.682268), 1)),
			(cv((-8.196584, 2.452516, 0.0), 1)),
			(cv((-9.472845, 1.049741, 0.027879), 1)),
			(cv((-8.196584, 2.296739, 0.053223), 1)),
			(cv((-7.226269, 2.296739, -0.575831), 1)),
			(cv((-7.226307, 2.36443, 0.575933), 1)),
			(cv((-7.226359, 2.36443, 0.68187), 1)),
			(cv((-7.08225, 2.356841, 0.674995), 1)),
			(cv((-7.071569, 2.979346, 0.655532), 1)),
			(cv((-8.136342, 2.449849, 0.013271), 1)),
			(cv((-7.226307, 2.296435, 0.575933), 1)),
			(cv((-7.071569, 2.979941, -0.657911), 1)),
			(cv((-7.095556, 2.286497, 0.695805), 1)),
			(cv((-7.095505, 2.286801, 0.558101), 1)),
			(cv((-9.557237, 0.819464, -0.160139), 1)),
			(cv((-9.557237, 0.819464, 0.159953), 1)),
			(cv((-9.557237, 0.923911, 0.159953), 1)),
			(cv((-9.557237, 0.923911, -0.160139), 1)),
			(cv((-9.662241, 0.819464, -0.160139), 1)),
			(cv((-9.662241, 0.923911, -0.160139), 1)),
			(cv((-9.662241, 0.923911, 0.159953), 1)),
			(cv((-9.662241, 0.819464, 0.159953), 1)),
			(cv((-9.541987, 0.811042, 0.23185), 1)),
			(cv((-9.541987, 0.399368, 0.401548), 1)),
			(cv((-9.686143, 0.399368, 0.401548), 1)),
			(cv((-9.686143, 0.811042, 0.23185), 1)),
			(cv((-9.686143, 0.811042, 0.106521), 1)),
			(cv((-9.686143, 0.399368, 0.276219), 1)),
			(cv((-9.541987, 0.811042, 0.106521), 1)),
			(cv((-9.541987, 0.399368, 0.276219), 1)),
			(cv((-9.686143, 0.399368, -0.401548), 1)),
			(cv((-9.541987, 0.399368, -0.401548), 1)),
			(cv((-9.541987, 0.811042, -0.23185), 1)),
			(cv((-9.686143, 0.811042, -0.23185), 1)),
			(cv((-9.686143, 0.811042, -0.106521), 1)),
			(cv((-9.686143, 0.399368, -0.276219), 1)),
			(cv((-9.541987, 0.811042, -0.106521), 1)),
			(cv((-9.541987, 0.399368, -0.276219), 1)),
			(cv((-9.64083, 0.810908, -0.23349), 1)),
			(cv((-9.64083, 0.900912, -0.23349), 1)),
			(cv((-9.64083, 0.900912, -0.160003), 1)),
			(cv((-9.64083, 0.810908, -0.160003), 1)),
			(cv((-9.580675, 0.810908, -0.23349), 1)),
			(cv((-9.580675, 0.900912, -0.23349), 1)),
			(cv((-9.580675, 0.810908, -0.160003), 1)),
			(cv((-9.580675, 0.900912, -0.160003), 1)),
			(cv((-9.653753, 0.920473, 0.053223), 1)),
			(cv((-7.069927, 3.025357, -0.635946), 1)),
			(cv((-7.058797, 2.987405, -0.632627), 1)),
			(cv((-8.116829, 2.449137, 0.0), 1)),
			(cv((-9.621982, 0.873103, 0.053223), 1)),
			(cv((-7.082199, 2.304014, 0.583107), 1)),
			(cv((-8.117565, 2.499806, 0.0), 1)),
			(cv((-8.136342, 2.449849, -0.013271), 1)),
			(cv((-9.64083, 0.900912, 0.160003), 1)),
			(cv((-9.64083, 0.900912, 0.23349), 1)),
			(cv((-9.64083, 0.810908, 0.23349), 1)),
			(cv((-9.64083, 0.810908, 0.160003), 1)),
			(cv((-9.580675, 0.810908, 0.23349), 1)),
			(cv((-9.580675, 0.900912, 0.23349), 1)),
			(cv((-7.058797, 2.98681, 0.630248), 1)),
			(cv((-7.069927, 3.024762, 0.633567), 1)),
			(cv((-9.580675, 0.900912, 0.160003), 1)),
			(cv((-9.580675, 0.810908, 0.160003), 1)),
			(cv((-9.653753, 0.920473, -0.053223), 1)),
			(cv((-9.621982, 0.873103, -0.053223), 1)),
			(cv((-7.226359, 2.296435, 0.68187), 1)),
			(cv((-7.08225, 2.30371, 0.674995), 1)),
			(cv((-7.211563, 2.286801, 0.558101), 1)),
			(cv((-7.211615, 2.286497, 0.695805), 1)),
			(cv((-7.082199, 2.357155, 0.583107), 1)),
			(cv((-7.211615, 2.374054, 0.695805), 1)),
			(cv((-7.211563, 2.374368, 0.558101), 1)),
			(cv((-7.095556, 2.374054, 0.695805), 1)),
			(cv((-7.095505, 2.374368, 0.558101), 1))	),
	texture_vertices = (
			st( 0.200000, 0.250000 ),
			st( 0.200000, 0.000000 ),
			st( 0.200000, 0.997730 ),
			st( 0.200000, 0.997730 ),
			st( 0.200000, 0.997730 ),
			st( 0.000000, 0.000000 ),
			st( 0.000997, 0.997111 ),
			st( 0.000000, 0.250000 ),
			st( 0.800000, 0.000000 ),
			st( 0.799502, 0.997902 ),
			st( 0.799502, 0.997902 ),
			st( 0.799502, 0.997902 ),
			st( 0.800000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.800000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.200000, 0.500000 ),
			st( 0.200000, 0.750000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 0.000000 ),
			st( 0.999003, 0.998521 ),
			st( 0.999003, 0.998521 ),
			st( 0.800000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 0.989735, 0.515183 ),
			st( 0.008669, 0.745393 ),
			st( 0.006843, 0.986420 ),
			st( 0.008669, 0.745393 ),
			st( 0.570868, 0.708712 ),
			st( 0.011976, 0.513580 ),
			st( 0.015628, 0.516296 ),
			st( 0.244909, 0.504547 ),
			st( 0.017339, 0.735071 ),
			st( 0.006843, 0.986420 ),
			st( 0.017339, 0.735071 ),
			st( 0.006843, 0.986420 ),
			st( 0.023841, 0.705272 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 0.008669, 0.756941 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.984829, 0.763822 ),
			st( 1.000000, 0.000000 ),
			st( 0.984829, 0.763822 ),
			st( 0.993157, 0.989136 ),
			st( 0.989163, 0.745393 ),
			st( 0.993157, 0.989136 ),
			st( 0.393147, 0.732797 ),
			st( 0.993157, 0.752716 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.900000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 0.008669, 0.283240 ),
			st( 0.008669, 0.283240 ),
			st( 1.000000, 0.500000 ),
			st( 0.984829, 0.283240 ),
			st( 0.984829, 0.283240 ),
			st( 1.000000, 0.500000 ),
			st( 0.900000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.505432 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.000000 ),
			st( 0.902167, 0.279799 ),
			st( 0.900000, 0.500000 ),
			st( 0.902167, 0.279799 ),
			st( 0.900000, 0.500000 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.995775, 0.003926 ),
			st( 1.000000, 0.505432 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.006502, 0.738511 ),
			st( 0.000000, 1.000000 ),
			st( 0.982661, 0.745393 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.982661, 0.745393 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.999003, 0.998521 ),
			st( 0.999003, 0.998521 ),
			st( 0.000000, 1.000000 ),
			st( 0.002167, 0.752274 ),
			st( 0.200000, 0.250000 ),
			st( 0.200000, 0.000000 ),
			st( 0.200000, 0.997730 ),
			st( 0.200000, 0.997730 ),
			st( 0.200000, 0.997730 ),
			st( 0.000000, 0.000000 ),
			st( 0.316431, 0.027525 ),
			st( 1.000000, 0.000000 ),
			st( 0.316431, 0.027525 ),
			st( 1.000000, 0.250000 ),
			st( 0.316431, 0.267143 ),
			st( 0.316431, 0.267143 ),
			st( 0.000000, 0.250000 ),
			st( 0.316431, 0.267143 ),
			st( 0.316431, 0.267143 ),
			st( 0.000000, 0.750000 ),
			st( 0.705243, 0.027525 ),
			st( 0.705243, 0.027525 ),
			st( 0.000000, 0.500000 ),
			st( 0.705243, 0.267143 ),
			st( 1.000000, 0.500000 ),
			st( 0.705243, 0.267143 ),
			st( 1.000000, 0.750000 ),
			st( 0.705243, 0.027525 ),
			st( 0.705243, 0.027525 ),
			st( 1.000000, 0.250000 ),
			st( 0.364112, 0.542395 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.364112, 0.233964 ),
			st( 0.364112, 0.233964 ),
			st( 1.000000, 1.000000 ),
			st( 0.568701, 0.233964 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 1.000000 ),
			st( 0.993662, 0.010634 ),
			st( 0.575203, 0.549276 ),
			st( 0.575203, 0.549276 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.364112, 0.542395 ),
			st( 1.000000, 0.500000 ),
			st( 0.364112, 0.233964 ),
			st( 0.364112, 0.233964 ),
			st( 1.000000, 0.750000 ),
			st( 0.568701, 0.233964 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 1.000000 ),
			st( 0.997887, 0.000573 ),
			st( 0.575203, 0.549276 ),
			st( 0.575203, 0.549276 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 0.666600, 0.000000 ),
			st( 0.666600, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.333300, 0.000000 ),
			st( 0.333330, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 0.995775, 0.003926 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000997, 0.997111 ),
			st( 1.000000, 0.500000 ),
			st( 0.997833, 0.745393 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.997833, 0.745393 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.333300, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.333330, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.666600, 0.000000 ),
			st( 0.666660, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.750000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 1.000000 ),
			st( 0.995775, 0.003926 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.800000, 0.000000 ),
			st( 0.799502, 0.997902 ),
			st( 0.799502, 0.997902 ),
			st( 0.799502, 0.997902 ),
			st( 0.800000, 0.250000 ),
			st( 0.000000, 0.750000 ),
			st( 0.800000, 0.500000 ),
			st( 0.800000, 0.750000 ),
			st( 0.200000, 0.500000 ),
			st( 0.200000, 0.750000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 5), 0 ),
		polygon ((2, 3, 0),(5, 7, 0), 0 ),
		polygon ((4, 1, 0),(8, 1, 0), 0 ),
		polygon ((0, 5, 4),(0, 12, 8), 0 ),
		polygon ((6, 5, 7),(13, 12, 14), 0 ),
		polygon ((7, 8, 6),(14, 15, 13), 0 ),
		polygon ((9, 7, 5),(16, 14, 12), 0 ),
		polygon ((5, 0, 9),(12, 0, 16), 0 ),
		polygon ((10, 9, 11),(17, 16, 18), 0 ),
		polygon ((11, 12, 10),(18, 19, 17), 0 ),
		polygon ((13, 4, 5),(20, 8, 12), 0 ),
		polygon ((5, 6, 13),(12, 13, 20), 0 ),
		polygon ((11, 9, 0),(18, 16, 0), 0 ),
		polygon ((0, 3, 11),(0, 7, 18), 0 ),
		polygon ((14, 7, 9),(23, 14, 16), 0 ),
		polygon ((14, 9, 10),(23, 16, 17), 0 ),
		polygon ((1, 10, 12),(2, 17, 19), 0 ),
		polygon ((12, 2, 1),(19, 6, 3), 0 ),
		polygon ((10, 1, 4),(17, 4, 9), 0 ),
		polygon ((4, 14, 10),(10, 23, 17), 0 ),
		polygon ((14, 4, 13),(23, 11, 21), 0 ),
		polygon ((13, 15, 14),(22, 24, 23), 0 ),
		polygon ((14, 15, 8),(23, 24, 15), 0 ),
		polygon ((8, 7, 14),(15, 14, 23), 0 ),
		polygon ((16, 17, 18),(25, 26, 30), 1 ),
		polygon ((16, 18, 19),(25, 31, 33), 1 ),
		polygon ((20, 21, 22),(38, 39, 40), 1 ),
		polygon ((23, 24, 25),(42, 43, 44), 1 ),
		polygon ((20, 24, 23),(38, 43, 42), 1 ),
		polygon ((23, 21, 20),(42, 39, 38), 1 ),
		polygon ((19, 17, 26),(34, 27, 47), 1 ),
		polygon ((19, 27, 16),(35, 50, 25), 1 ),
		polygon ((22, 25, 20),(40, 45, 38), 1 ),
		polygon ((22, 23, 25),(41, 42, 46), 1 ),
		polygon ((28, 29, 30),(52, 53, 54), 1 ),
		polygon ((31, 32, 29),(55, 58, 53), 1 ),
		polygon ((30, 33, 28),(54, 62, 52), 1 ),
		polygon ((34, 35, 36),(63, 64, 65), 1 ),
		polygon ((29, 37, 31),(53, 72, 55), 1 ),
		polygon ((38, 39, 40),(73, 74, 75), 1 ),
		polygon ((29, 28, 41),(53, 52, 76), 1 ),
		polygon ((40, 36, 38),(75, 65, 73), 1 ),
		polygon ((42, 32, 28),(77, 59, 52), 1 ),
		polygon ((43, 44, 39),(81, 90, 74), 1 ),
		polygon ((42, 30, 29),(78, 54, 53), 1 ),
		polygon ((39, 38, 43),(74, 73, 81), 1 ),
		polygon ((41, 37, 29),(76, 72, 53), 1 ),
		polygon ((31, 41, 28),(56, 76, 52), 1 ),
		polygon ((17, 16, 26),(28, 25, 48), 1 ),
		polygon ((28, 32, 31),(52, 60, 57), 1 ),
		polygon ((45, 46, 35),(92, 97, 64), 1 ),
		polygon ((35, 36, 45),(64, 66, 92), 1 ),
		polygon ((33, 42, 28),(62, 79, 52), 1 ),
		polygon ((38, 50, 45),(73, 108, 93), 1 ),
		polygon ((45, 36, 38),(94, 67, 73), 1 ),
		polygon ((29, 32, 42),(53, 61, 80), 1 ),
		polygon ((17, 19, 18),(29, 37, 32), 1 ),
		polygon ((26, 27, 19),(49, 51, 36), 1 ),
		polygon ((54, 55, 56),(120, 122, 124), 1 ),
		polygon ((56, 57, 54),(124, 127, 120), 1 ),
		polygon ((58, 59, 60),(130, 133, 135), 1 ),
		polygon ((60, 61, 58),(135, 137, 130), 1 ),
		polygon ((59, 57, 56),(133, 127, 124), 1 ),
		polygon ((56, 60, 59),(124, 135, 133), 1 ),
		polygon ((62, 63, 64),(140, 142, 143), 1 ),
		polygon ((64, 65, 62),(143, 144, 140), 1 ),
		polygon ((66, 65, 64),(147, 144, 143), 1 ),
		polygon ((64, 67, 66),(143, 149, 147), 1 ),
		polygon ((68, 66, 67),(150, 147, 149), 1 ),
		polygon ((67, 69, 68),(149, 154, 150), 1 ),
		polygon ((62, 68, 69),(140, 151, 155), 1 ),
		polygon ((69, 63, 62),(156, 142, 140), 1 ),
		polygon ((70, 71, 72),(157, 158, 159), 1 ),
		polygon ((72, 73, 70),(159, 161, 157), 1 ),
		polygon ((70, 73, 74),(157, 161, 164), 1 ),
		polygon ((74, 75, 70),(164, 166, 157), 1 ),
		polygon ((75, 74, 76),(166, 164, 167), 1 ),
		polygon ((76, 77, 75),(167, 171, 166), 1 ),
		polygon ((77, 76, 72),(172, 168, 159), 1 ),
		polygon ((72, 71, 77),(159, 158, 173), 1 ),
		polygon ((78, 79, 80),(174, 175, 177), 2 ),
		polygon ((80, 81, 78),(177, 180, 174), 2 ),
		polygon ((82, 79, 78),(181, 175, 174), 2 ),
		polygon ((83, 79, 82),(182, 175, 181), 2 ),
		polygon ((43, 35, 34),(82, 64, 63), 1 ),
		polygon ((36, 40, 34),(65, 75, 63), 1 ),
		polygon ((83, 84, 85),(182, 185, 186), 2 ),
		polygon ((83, 82, 84),(182, 181, 185), 2 ),
		polygon ((36, 35, 86),(68, 64, 188), 1 ),
		polygon ((87, 88, 89),(189, 190, 191), 1 ),
		polygon ((90, 35, 43),(192, 64, 84), 1 ),
		polygon ((87, 92, 93),(189, 196, 197), 1 ),
		polygon ((94, 95, 96),(201, 204, 206), 2 ),
		polygon ((96, 97, 94),(206, 207, 201), 2 ),
		polygon ((96, 95, 98),(206, 204, 208), 2 ),
		polygon ((98, 95, 99),(208, 204, 209), 2 ),
		polygon ((89, 100, 101),(191, 212, 213), 1 ),
		polygon ((43, 35, 46),(85, 64, 97), 1 ),
		polygon ((102, 103, 99),(214, 216, 209), 2 ),
		polygon ((103, 98, 99),(216, 208, 209), 2 ),
		polygon ((36, 104, 105),(69, 217, 218), 1 ),
		polygon ((90, 86, 35),(192, 188, 64), 1 ),
		polygon ((105, 38, 36),(218, 73, 70), 1 ),
		polygon ((38, 43, 106),(73, 86, 219), 1 ),
		polygon ((80, 79, 83),(178, 176, 183), 3 ),
		polygon ((80, 83, 85),(179, 184, 187), 3 ),
		polygon ((99, 95, 94),(210, 205, 202), 3 ),
		polygon ((102, 99, 94),(215, 211, 203), 3 ),
		polygon ((61, 60, 56),(138, 136, 125), 1 ),
		polygon ((56, 55, 61),(126, 123, 139), 1 ),
		polygon ((57, 59, 58),(128, 134, 131), 1 ),
		polygon ((58, 54, 57),(132, 121, 129), 1 ),
		polygon ((73, 72, 76),(162, 160, 169), 1 ),
		polygon ((74, 73, 76),(165, 163, 170), 1 ),
		polygon ((68, 62, 65),(152, 141, 145), 1 ),
		polygon ((68, 65, 66),(153, 146, 148), 1 ),
		polygon ((101, 48, 49),(213, 102, 104), 1 ),
		polygon ((49, 48, 100),(105, 103, 212), 1 ),
		polygon ((46, 106, 43),(97, 220, 87), 1 ),
		polygon ((34, 44, 43),(63, 91, 83), 1 ),
		polygon ((105, 90, 43),(218, 193, 88), 1 ),
		polygon ((106, 50, 38),(221, 108, 73), 1 ),
		polygon ((100, 89, 49),(212, 191, 106), 1 ),
		polygon ((93, 89, 88),(198, 191, 190), 1 ),
		polygon ((88, 51, 93),(190, 113, 199), 1 ),
		polygon ((89, 92, 87),(191, 196, 189), 1 ),
		polygon ((93, 51, 87),(200, 114, 189), 1 ),
		polygon ((86, 104, 36),(188, 217, 71), 1 ),
		polygon ((105, 43, 38),(218, 89, 73), 1 ),
		polygon ((101, 92, 89),(213, 196, 191), 1 ),
		polygon ((49, 92, 101),(107, 196, 213), 1 ),
		polygon ((91, 53, 52),(194, 116, 115), 0 ),
		polygon ((52, 107, 91),(115, 225, 194), 0 ),
		polygon ((52, 53, 108),(115, 116, 226), 0 ),
		polygon ((108, 109, 52),(226, 230, 115), 0 ),
		polygon ((111, 109, 106),(232, 230, 222), 0 ),
		polygon ((106, 46, 111),(223, 98, 232), 0 ),
		polygon ((109, 111, 113),(230, 232, 234), 0 ),
		polygon ((113, 52, 109),(234, 115, 230), 0 ),
		polygon ((47, 113, 114),(101, 234, 235), 0 ),
		polygon ((114, 110, 47),(235, 231, 101), 0 ),
		polygon ((109, 108, 50),(230, 226, 109), 0 ),
		polygon ((50, 106, 109),(110, 224, 230), 0 ),
		polygon ((52, 113, 47),(115, 234, 101), 0 ),
		polygon ((47, 107, 52),(101, 225, 115), 0 ),
		polygon ((113, 111, 112),(234, 232, 233), 0 ),
		polygon ((114, 113, 112),(235, 234, 233), 0 ),
		polygon ((110, 114, 53),(231, 235, 117), 0 ),
		polygon ((53, 91, 110),(118, 195, 231), 0 ),
		polygon ((108, 53, 114),(227, 119, 235), 0 ),
		polygon ((114, 112, 108),(235, 233, 228), 0 ),
		polygon ((50, 108, 112),(111, 229, 233), 0 ),
		polygon ((112, 45, 50),(233, 95, 112), 0 ),
		polygon ((46, 45, 112),(99, 96, 233), 0 ),
		polygon ((112, 111, 46),(233, 232, 100), 0 )
	)
); /* end of polyset 'GoalStand' */

polyset BackBoard (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (seal ),
	shader = (TARGET ),
	shader = (METAL4 ),
	shader = (BackPad ),
	casts_shadow = TRUE,
	vertices = ((cv((-7.07237, 2.288114, 0.596734), 1)),
			(cv((-7.031255, 2.288114, 0.596734), 1)),
			(cv((-7.031255, 2.964677, 0.596734), 1)),
			(cv((-7.07237, 2.964677, 0.596734), 1)),
			(cv((-7.07237, 2.288114, -0.596731), 1)),
			(cv((-7.07237, 2.964677, -0.596734), 1)),
			(cv((-7.031255, 2.964677, -0.596734), 1)),
			(cv((-7.053053, 2.355915, 0.162836), 1)),
			(cv((-7.053053, 2.617597, 0.19919), 1)),
			(cv((-7.053053, 2.3197, 0.19919), 1)),
			(cv((-7.020421, 2.199556, -0.684449), 1)),
			(cv((-7.020421, 2.259842, -0.627439), 1)),
			(cv((-7.07237, 3.026545, 0.658603), 1)),
			(cv((-7.07237, 2.226245, 0.658603), 1)),
			(cv((-7.020178, 2.199557, 0.682247), 1)),
			(cv((-7.020178, 2.259842, 0.62524), 1)),
			(cv((-7.07237, 2.226245, -0.6586), 1)),
			(cv((-7.07237, 3.026545, -0.658603), 1)),
			(cv((-7.031255, 2.226245, -0.6586), 1)),
			(cv((-7.031255, 2.226245, 0.658603), 1)),
			(cv((-7.083992, 2.259842, 0.62524), 1)),
			(cv((-7.031255, 3.026545, 0.658603), 1)),
			(cv((-7.083992, 2.199557, 0.682247), 1)),
			(cv((-7.083992, 2.199556, -0.684449), 1)),
			(cv((-7.031255, 3.026545, -0.658603), 1)),
			(cv((-7.031255, 2.288114, -0.596731), 1)),
			(cv((-7.083992, 2.259842, -0.627439), 1)),
			(cv((-7.053053, 2.581363, 0.162836), 1)),
			(cv((-7.050059, 2.355915, 0.162836), 1)),
			(cv((-7.050059, 2.355915, -0.162956), 1)),
			(cv((-7.050059, 2.3197, -0.19919), 1)),
			(cv((-7.053053, 2.3197, -0.19919), 1)),
			(cv((-7.053053, 2.355915, -0.162956), 1)),
			(cv((-7.050059, 2.3197, 0.19919), 1)),
			(cv((-7.050059, 2.617597, 0.19919), 1)),
			(cv((-7.053053, 2.617597, -0.19919), 1)),
			(cv((-7.053053, 2.581363, -0.162956), 1)),
			(cv((-7.050059, 2.581363, 0.162836), 1)),
			(cv((-7.050059, 2.581363, -0.162956), 1)),
			(cv((-7.050059, 2.617597, -0.19919), 1)),
			(cv((-7.020258, 2.627634, 0.62524), 1)),
			(cv((-7.020258, 2.627634, 0.684502), 1)),
			(cv((-7.083992, 2.627634, 0.684502), 1)),
			(cv((-7.083992, 2.627634, 0.62524), 1)),
			(cv((-7.020258, 2.627634, -0.627439), 1)),
			(cv((-7.083992, 2.627634, -0.627439), 1)),
			(cv((-7.083992, 2.627634, -0.685076), 1)),
			(cv((-7.020258, 2.627634, -0.685076), 1))	),
	texture_vertices = (
			st( 1.000000, 0.000000 ),
			st( 0.010265, 0.513449 ),
			st( 0.010265, 0.513449 ),
			st( 0.006843, 0.559621 ),
			st( 0.006843, 0.559621 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.989735, 0.521597 ),
			st( 0.993157, 0.516165 ),
			st( 1.000000, 1.000000 ),
			st( 0.991446, 0.521597 ),
			st( 0.996578, 0.540609 ),
			st( 1.000000, 0.000000 ),
			st( 0.006843, 0.524313 ),
			st( 0.008554, 0.535177 ),
			st( 0.006843, 0.524313 ),
			st( 0.008554, 0.535177 ),
			st( 0.000000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.750000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 0.000000 ),
			st( 0.250000, 0.000000 ),
			st( 0.750000, 1.000000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.993157, 0.005954 ),
			st( 0.991446, 0.008670 ),
			st( 0.991446, 0.008670 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.010265, 0.005954 ),
			st( 0.001711, 0.008670 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.250000, 0.500000 ),
			st( 0.750000, 0.000000 ),
			st( 0.750000, 0.000000 ),
			st( 0.250000, 1.000000 ),
			st( 0.750000, 0.500000 ),
			st( 0.750000, 0.500000 ),
			st( 0.750000, 0.500000 ),
			st( 0.991446, 0.011386 ),
			st( 0.993157, 0.011386 ),
			st( 0.993157, 0.011386 ),
			st( 0.991446, 0.011386 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.010265, 0.014102 ),
			st( 0.010265, 0.016818 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.750000, 1.000000 ),
			st( 0.750000, 0.000000 ),
			st( 0.750000, 0.000000 ),
			st( 0.750000, 0.000000 ),
			st( 1.000000, 0.500000 ),
			st( 0.750000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 0.000000 ),
			st( 0.250000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.250000, 1.000000 ),
			st( 0.250000, 0.000000 ),
			st( 0.250000, 0.000000 ),
			st( 0.250000, 0.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.032450, 0.489109 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.030905, 0.061622 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.270643, 0.058326 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.270643, 0.485812 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.270643, 0.485812 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.500000 ),
			st( 0.032450, 0.489109 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.030905, 0.061622 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.270643, 0.058326 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.500000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 5, 6), 0 ),
		polygon ((2, 3, 0),(6, 9, 0), 0 ),
		polygon ((4, 5, 6),(12, 15, 20), 0 ),
		polygon ((7, 8, 9),(21, 22, 23), 1 ),
		polygon ((0, 3, 12),(1, 10, 33), 2 ),
		polygon ((12, 13, 0),(33, 39, 2), 2 ),
		polygon ((5, 4, 16),(16, 13, 50), 2 ),
		polygon ((5, 17, 12),(17, 56, 34), 2 ),
		polygon ((0, 13, 16),(3, 40, 51), 2 ),
		polygon ((0, 16, 4),(4, 52, 14), 2 ),
		polygon ((16, 17, 5),(53, 57, 18), 2 ),
		polygon ((12, 3, 5),(35, 11, 19), 2 ),
		polygon ((18, 19, 1),(60, 61, 5), 2 ),
		polygon ((21, 2, 1),(66, 7, 5), 2 ),
		polygon ((6, 24, 18),(20, 71, 60), 2 ),
		polygon ((25, 18, 1),(72, 60, 5), 2 ),
		polygon ((13, 12, 21),(41, 36, 66), 2 ),
		polygon ((24, 21, 12),(71, 66, 37), 2 ),
		polygon ((21, 19, 13),(66, 61, 42), 2 ),
		polygon ((12, 17, 24),(38, 58, 71), 2 ),
		polygon ((24, 17, 16),(71, 59, 54), 2 ),
		polygon ((0, 4, 1),(0, 12, 5), 0 ),
		polygon ((6, 25, 4),(20, 73, 12), 0 ),
		polygon ((16, 18, 24),(55, 60, 71), 2 ),
		polygon ((18, 25, 6),(60, 72, 20), 2 ),
		polygon ((21, 24, 6),(66, 71, 20), 2 ),
		polygon ((6, 2, 21),(20, 8, 66), 2 ),
		polygon ((1, 19, 21),(5, 61, 66), 2 ),
		polygon ((27, 8, 7),(79, 22, 21), 1 ),
		polygon ((28, 29, 30),(80, 81, 82), 1 ),
		polygon ((31, 32, 7),(83, 84, 21), 1 ),
		polygon ((33, 34, 28),(85, 86, 80), 1 ),
		polygon ((35, 36, 32),(87, 88, 84), 1 ),
		polygon ((35, 8, 36),(87, 22, 88), 1 ),
		polygon ((32, 31, 35),(84, 83, 87), 1 ),
		polygon ((37, 34, 38),(89, 86, 90), 1 ),
		polygon ((29, 38, 39),(81, 90, 91), 1 ),
		polygon ((39, 30, 29),(91, 82, 81), 1 ),
		polygon ((38, 34, 39),(90, 86, 91), 1 ),
		polygon ((36, 8, 27),(88, 22, 79), 1 ),
		polygon ((7, 9, 31),(21, 23, 83), 1 ),
		polygon ((28, 34, 37),(80, 86, 89), 1 ),
		polygon ((3, 2, 6),(9, 6, 20), 0 ),
		polygon ((6, 5, 3),(20, 15, 9), 0 ),
		polygon ((4, 25, 1),(12, 74, 5), 0 ),
		polygon ((30, 33, 28),(82, 85, 80), 1 ),
		polygon ((40, 41, 42),(92, 96, 101), 3 ),
		polygon ((42, 43, 40),(101, 105, 92), 3 ),
		polygon ((44, 45, 46),(108, 112, 117), 3 ),
		polygon ((46, 47, 44),(117, 121, 108), 3 ),
		polygon ((44, 47, 10),(109, 122, 24), 3 ),
		polygon ((10, 11, 44),(24, 29, 110), 3 ),
		polygon ((11, 10, 14),(29, 24, 43), 3 ),
		polygon ((14, 15, 11),(43, 46, 29), 3 ),
		polygon ((15, 14, 41),(46, 43, 97), 3 ),
		polygon ((41, 40, 15),(98, 93, 46), 3 ),
		polygon ((20, 43, 42),(62, 106, 102), 3 ),
		polygon ((42, 22, 20),(103, 67, 62), 3 ),
		polygon ((23, 46, 45),(68, 118, 113), 3 ),
		polygon ((45, 26, 23),(114, 75, 68), 3 ),
		polygon ((20, 22, 23),(62, 67, 68), 3 ),
		polygon ((23, 26, 20),(68, 75, 62), 3 ),
		polygon ((41, 14, 22),(99, 44, 67), 3 ),
		polygon ((22, 42, 41),(67, 104, 100), 3 ),
		polygon ((10, 47, 46),(25, 123, 119), 3 ),
		polygon ((46, 23, 10),(120, 69, 26), 3 ),
		polygon ((10, 23, 22),(27, 70, 67), 3 ),
		polygon ((22, 14, 10),(67, 45, 28), 3 ),
		polygon ((45, 44, 11),(115, 111, 30), 3 ),
		polygon ((11, 26, 45),(31, 76, 116), 3 ),
		polygon ((15, 20, 26),(47, 63, 77), 3 ),
		polygon ((26, 11, 15),(78, 32, 48), 3 ),
		polygon ((20, 15, 40),(64, 49, 94), 3 ),
		polygon ((40, 43, 20),(95, 107, 65), 3 )
	)
); /* end of polyset 'BackBoard' */

polyset glass (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (GLASS ),
	casts_shadow = TRUE,
	vertices = ((cv((-7.051808, 2.96465, 0.596686), 1)),
			(cv((-7.051808, 2.288141, 0.596686), 1)),
			(cv((-7.051808, 2.288141, -0.596683), 1)),
			(cv((-7.051808, 2.96465, -0.596683), 1)),
			(cv((-7.05083, 2.288141, -0.596683), 1)),
			(cv((-7.05083, 2.288141, 0.596686), 1)),
			(cv((-7.05083, 2.96465, 0.596686), 1)),
			(cv((-7.05083, 2.96465, -0.596683), 1))	),
	texture_vertices = (
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 0 ),
		polygon ((6, 7, 4),(6, 7, 4), 0 )
	)
); /* end of polyset 'glass' */

polyset decals (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (NBAdecal ),
	casts_shadow = TRUE,
	vertices = ((cv((-7.056101, 2.308076, 0.505139), 1)),
			(cv((-7.056101, 2.470653, 0.505139), 1)),
			(cv((-7.056101, 2.470653, 0.576603), 1)),
			(cv((-7.056101, 2.308076, 0.576603), 1)),
			(cv((-7.046938, 2.308076, 0.576436), 1)),
			(cv((-7.046938, 2.470653, 0.576436), 1)),
			(cv((-7.046938, 2.470653, 0.504972), 1)),
			(cv((-7.046938, 2.308076, 0.504972), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 0 ),
		polygon ((6, 7, 4),(6, 7, 4), 0 )
	)
); /* end of polyset 'decals' */

polyset Rim (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (ORANGE ),
	shader = (HOOP ),
	casts_shadow = TRUE,
	vertices = ((cv((-7.040316, 2.326188, 0.0), 1)),
			(cv((-6.968758, 2.326188, 0.0), 1)),
			(cv((-7.040316, 2.279733, 0.0), 1)),
			(cv((-6.968758, 2.326188, -0.049714), 1)),
			(cv((-6.968758, 2.326188, 0.044517), 1)),
			(cv((-7.040316, 2.326188, 0.044415), 1)),
			(cv((-7.040316, 2.326188, -0.0496), 1)),
			(cv((-6.825509, 2.326188, -0.198573), 1)),
			(cv((-6.948881, 2.304832, 0.044415), 1)),
			(cv((-6.916326, 2.326188, -0.146141), 1)),
			(cv((-6.916326, 2.326188, 0.140357), 1)),
			(cv((-6.901874, 2.304832, 0.125834), 1)),
			(cv((-6.948881, 2.304832, -0.0496), 1)),
			(cv((-6.820455, 2.304832, 0.172841), 1)),
			(cv((-6.820455, 2.347918, 0.172841), 1)),
			(cv((-6.901874, 2.347918, 0.125834), 1)),
			(cv((-6.948881, 2.347918, 0.044415), 1)),
			(cv((-6.948881, 2.347918, -0.0496), 1)),
			(cv((-6.901874, 2.347918, -0.131019), 1)),
			(cv((-6.901874, 2.304832, -0.131019), 1)),
			(cv((-6.820455, 2.347918, -0.178026), 1)),
			(cv((-6.820455, 2.304832, -0.178026), 1)),
			(cv((-6.645022, 2.347918, 0.125834), 1)),
			(cv((-6.726441, 2.347918, 0.172841), 1)),
			(cv((-6.726441, 2.304832, 0.172841), 1)),
			(cv((-6.726441, 2.347918, -0.178026), 1)),
			(cv((-6.726441, 2.304832, -0.178026), 1)),
			(cv((-6.645022, 2.304832, -0.131019), 1)),
			(cv((-6.645022, 2.347918, -0.131019), 1)),
			(cv((-6.598014, 2.304832, -0.0496), 1)),
			(cv((-6.598014, 2.347918, -0.0496), 1)),
			(cv((-6.598014, 2.347918, 0.044415), 1)),
			(cv((-6.598014, 2.304832, 0.044415), 1)),
			(cv((-6.645022, 2.304832, 0.125834), 1)),
			(cv((-6.825509, 2.326188, 0.19279), 1)),
			(cv((-6.720644, 2.326188, 0.19279), 1)),
			(cv((-6.629828, 2.326188, 0.140357), 1)),
			(cv((-6.577395, 2.326188, 0.049541), 1)),
			(cv((-6.577395, 2.326188, -0.055324), 1)),
			(cv((-6.629828, 2.326188, -0.146141), 1)),
			(cv((-6.720644, 2.326188, -0.198573), 1))	),
	texture_vertices = (
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.500000, 0.000000 ),
			st( 0.967775, 0.749460 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.002079, 0.759382 ),
			st( 1.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 0.005198, 0.006656 ),
			st( 0.967775, 0.008639 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ) ),
	polygons = (
		polygon ((2, 1, 0),(2, 1, 0), 0 ),
		polygon ((3, 4, 5),(3, 12, 17), 0 ),
		polygon ((5, 6, 3),(17, 18, 3), 0 ),
		polygon ((13, 11, 10),(25, 23, 22), 1 ),
		polygon ((4, 8, 3),(13, 20, 4), 1 ),
		polygon ((10, 11, 8),(22, 23, 20), 1 ),
		polygon ((8, 4, 10),(20, 14, 22), 1 ),
		polygon ((3, 8, 12),(5, 20, 24), 1 ),
		polygon ((13, 14, 11),(25, 26, 23), 1 ),
		polygon ((11, 14, 15),(23, 26, 27), 1 ),
		polygon ((15, 8, 11),(27, 20, 23), 1 ),
		polygon ((15, 16, 8),(27, 28, 20), 1 ),
		polygon ((16, 17, 8),(28, 29, 20), 1 ),
		polygon ((8, 17, 12),(20, 29, 24), 1 ),
		polygon ((12, 17, 18),(24, 29, 30), 1 ),
		polygon ((18, 19, 12),(30, 31, 24), 1 ),
		polygon ((19, 18, 20),(31, 30, 32), 1 ),
		polygon ((20, 21, 19),(32, 33, 31), 1 ),
		polygon ((22, 23, 24),(34, 35, 36), 1 ),
		polygon ((25, 21, 20),(37, 33, 32), 1 ),
		polygon ((21, 25, 26),(33, 37, 38), 1 ),
		polygon ((23, 13, 24),(35, 25, 36), 1 ),
		polygon ((23, 14, 13),(35, 26, 25), 1 ),
		polygon ((25, 27, 26),(37, 39, 38), 1 ),
		polygon ((25, 28, 27),(37, 40, 39), 1 ),
		polygon ((27, 28, 29),(39, 40, 41), 1 ),
		polygon ((29, 28, 30),(41, 40, 42), 1 ),
		polygon ((29, 30, 31),(41, 42, 43), 1 ),
		polygon ((31, 32, 29),(43, 44, 41), 1 ),
		polygon ((32, 31, 33),(44, 43, 45), 1 ),
		polygon ((33, 31, 22),(45, 43, 34), 1 ),
		polygon ((22, 24, 33),(34, 36, 45), 1 ),
		polygon ((16, 10, 4),(28, 22, 15), 1 ),
		polygon ((10, 16, 15),(22, 28, 27), 1 ),
		polygon ((10, 15, 14),(22, 27, 26), 1 ),
		polygon ((14, 34, 10),(26, 46, 22), 1 ),
		polygon ((14, 35, 34),(26, 47, 46), 1 ),
		polygon ((35, 14, 23),(47, 26, 35), 1 ),
		polygon ((35, 23, 22),(47, 35, 34), 1 ),
		polygon ((22, 36, 35),(34, 48, 47), 1 ),
		polygon ((22, 37, 36),(34, 49, 48), 1 ),
		polygon ((37, 22, 31),(49, 34, 43), 1 ),
		polygon ((37, 31, 30),(49, 43, 42), 1 ),
		polygon ((30, 38, 37),(42, 50, 49), 1 ),
		polygon ((30, 39, 38),(42, 51, 50), 1 ),
		polygon ((39, 30, 28),(51, 42, 40), 1 ),
		polygon ((39, 28, 25),(51, 40, 37), 1 ),
		polygon ((25, 40, 39),(37, 52, 51), 1 ),
		polygon ((25, 7, 40),(37, 19, 52), 1 ),
		polygon ((7, 25, 20),(19, 37, 32), 1 ),
		polygon ((7, 20, 18),(19, 32, 30), 1 ),
		polygon ((18, 9, 7),(30, 21, 19), 1 ),
		polygon ((18, 3, 9),(30, 6, 21), 1 ),
		polygon ((3, 18, 17),(7, 30, 29), 1 ),
		polygon ((3, 17, 16),(8, 29, 28), 1 ),
		polygon ((16, 4, 3),(28, 16, 9), 1 ),
		polygon ((19, 9, 3),(31, 21, 10), 1 ),
		polygon ((3, 12, 19),(11, 24, 31), 1 ),
		polygon ((19, 7, 9),(31, 19, 21), 1 ),
		polygon ((19, 21, 7),(31, 33, 19), 1 ),
		polygon ((21, 26, 7),(33, 38, 19), 1 ),
		polygon ((40, 7, 26),(52, 19, 38), 1 ),
		polygon ((26, 27, 39),(38, 39, 51), 1 ),
		polygon ((39, 40, 26),(51, 52, 38), 1 ),
		polygon ((39, 27, 29),(51, 39, 41), 1 ),
		polygon ((29, 38, 39),(41, 50, 51), 1 ),
		polygon ((38, 29, 37),(50, 41, 49), 1 ),
		polygon ((37, 29, 32),(49, 41, 44), 1 ),
		polygon ((33, 37, 32),(45, 49, 44), 1 ),
		polygon ((37, 33, 36),(49, 45, 48), 1 ),
		polygon ((35, 33, 24),(47, 45, 36), 1 ),
		polygon ((33, 35, 36),(45, 47, 48), 1 ),
		polygon ((13, 35, 24),(25, 47, 36), 1 ),
		polygon ((35, 13, 34),(47, 25, 46), 1 ),
		polygon ((10, 34, 13),(22, 46, 25), 1 )
	)
); /* end of polyset 'Rim' */

polyset Net (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (NET ),
	casts_shadow = TRUE,
	vertices = ((cv((-6.726441, 2.304832, -0.178026), 1)),
			(cv((-6.736999, 2.199046, -0.137679), 1)),
			(cv((-6.820455, 2.304832, -0.178026), 1)),
			(cv((-6.809425, 2.199046, -0.137806), 1)),
			(cv((-6.872212, 2.199046, -0.101702), 1)),
			(cv((-6.835902, 1.932888, -0.065047), 1)),
			(cv((-6.858762, 1.932888, -0.025452), 1)),
			(cv((-6.84583, 2.035768, -0.075228), 1)),
			(cv((-6.872451, 2.035768, -0.029305), 1)),
			(cv((-6.645022, 2.304832, -0.131019), 1)),
			(cv((-6.674338, 2.199046, -0.101356), 1)),
			(cv((-6.638235, 2.199046, -0.03857), 1)),
			(cv((-6.598014, 2.304832, -0.0496), 1)),
			(cv((-6.901874, 2.304832, -0.131019), 1)),
			(cv((-6.948881, 2.304832, -0.0496), 1)),
			(cv((-6.908535, 2.199046, -0.039042), 1)),
			(cv((-6.885846, 2.111808, -0.03271), 1)),
			(cv((-6.855729, 2.111808, -0.084874), 1)),
			(cv((-6.803565, 2.111808, -0.114991), 1)),
			(cv((-6.743331, 2.111808, -0.114991), 1)),
			(cv((-6.691167, 2.111808, -0.084874), 1)),
			(cv((-6.746735, 2.035768, -0.101595), 1)),
			(cv((-6.799815, 2.035768, -0.101688), 1)),
			(cv((-6.700812, 2.035768, -0.074975), 1)),
			(cv((-6.710993, 1.932888, -0.065047), 1)),
			(cv((-6.750588, 1.932888, -0.087907), 1)),
			(cv((-6.796308, 1.932888, -0.087907), 1)),
			(cv((-6.908661, 2.199046, 0.033385), 1)),
			(cv((-6.948882, 2.304832, 0.044415), 1)),
			(cv((-6.901874, 2.304832, 0.125834), 1)),
			(cv((-6.885846, 2.111808, 0.027525), 1)),
			(cv((-6.855729, 2.111808, 0.079689), 1)),
			(cv((-6.872557, 2.199046, 0.096172), 1)),
			(cv((-6.872543, 2.035768, 0.023775), 1)),
			(cv((-6.846083, 2.035768, 0.06979), 1)),
			(cv((-6.858762, 1.932888, 0.020267), 1)),
			(cv((-6.835902, 1.932888, 0.059862), 1)),
			(cv((-6.800161, 2.035768, 0.09641), 1)),
			(cv((-6.809897, 2.199046, 0.132494), 1)),
			(cv((-6.820455, 2.304832, 0.172841), 1)),
			(cv((-6.638361, 2.199046, 0.033857), 1)),
			(cv((-6.661049, 2.111808, 0.027525), 1)),
			(cv((-6.661049, 2.111808, -0.03271), 1)),
			(cv((-6.726441, 2.304832, 0.172841), 1)),
			(cv((-6.73747, 2.199046, 0.132621), 1)),
			(cv((-6.674684, 2.199046, 0.096517), 1)),
			(cv((-6.645021, 2.304832, 0.125834), 1)),
			(cv((-6.598014, 2.304832, 0.044415), 1)),
			(cv((-6.691167, 2.111808, 0.079689), 1)),
			(cv((-6.743331, 2.111808, 0.109806), 1)),
			(cv((-6.803565, 2.111808, 0.109806), 1)),
			(cv((-6.747081, 2.035768, 0.096503), 1)),
			(cv((-6.701066, 2.035768, 0.070043), 1)),
			(cv((-6.674445, 2.035768, 0.024121), 1)),
			(cv((-6.674352, 2.035768, -0.02896), 1)),
			(cv((-6.796308, 1.932888, 0.082722), 1)),
			(cv((-6.750588, 1.932888, 0.082722), 1)),
			(cv((-6.710993, 1.932888, 0.059862), 1)),
			(cv((-6.688133, 1.932888, 0.020267), 1)),
			(cv((-6.688133, 1.932888, -0.025452), 1)),
			(cv((-6.820455, 2.304832, -0.178026), 1)),
			(cv((-6.736999, 2.199046, -0.137679), 1)),
			(cv((-6.726441, 2.304832, -0.178026), 1)),
			(cv((-6.872212, 2.199046, -0.101702), 1)),
			(cv((-6.809425, 2.199046, -0.137806), 1)),
			(cv((-6.84583, 2.035768, -0.075228), 1)),
			(cv((-6.858762, 1.932888, -0.025452), 1)),
			(cv((-6.835902, 1.932888, -0.065047), 1)),
			(cv((-6.872451, 2.035768, -0.029305), 1)),
			(cv((-6.645022, 2.304832, -0.131019), 1)),
			(cv((-6.674338, 2.199046, -0.101356), 1)),
			(cv((-6.638235, 2.199046, -0.03857), 1)),
			(cv((-6.598014, 2.304832, -0.0496), 1)),
			(cv((-6.901874, 2.304832, -0.131019), 1)),
			(cv((-6.948881, 2.304832, -0.0496), 1)),
			(cv((-6.908535, 2.199046, -0.039042), 1)),
			(cv((-6.885846, 2.111808, -0.03271), 1)),
			(cv((-6.855729, 2.111808, -0.084874), 1)),
			(cv((-6.803565, 2.111808, -0.114991), 1)),
			(cv((-6.743331, 2.111808, -0.114991), 1)),
			(cv((-6.691167, 2.111808, -0.084874), 1)),
			(cv((-6.799815, 2.035768, -0.101688), 1)),
			(cv((-6.746735, 2.035768, -0.101595), 1)),
			(cv((-6.700812, 2.035768, -0.074975), 1)),
			(cv((-6.710993, 1.932888, -0.065047), 1)),
			(cv((-6.750588, 1.932888, -0.087907), 1)),
			(cv((-6.796308, 1.932888, -0.087907), 1)),
			(cv((-6.908661, 2.199046, 0.033385), 1)),
			(cv((-6.948882, 2.304832, 0.044415), 1)),
			(cv((-6.901874, 2.304832, 0.125834), 1)),
			(cv((-6.885846, 2.111808, 0.027525), 1)),
			(cv((-6.855729, 2.111808, 0.079689), 1)),
			(cv((-6.872557, 2.199046, 0.096172), 1)),
			(cv((-6.846083, 2.035768, 0.06979), 1)),
			(cv((-6.872543, 2.035768, 0.023775), 1)),
			(cv((-6.858762, 1.932888, 0.020267), 1)),
			(cv((-6.835902, 1.932888, 0.059862), 1)),
			(cv((-6.800161, 2.035768, 0.09641), 1)),
			(cv((-6.809897, 2.199046, 0.132494), 1)),
			(cv((-6.820455, 2.304832, 0.172841), 1)),
			(cv((-6.661049, 2.111808, 0.027525), 1)),
			(cv((-6.638361, 2.199046, 0.033857), 1)),
			(cv((-6.661049, 2.111808, -0.03271), 1)),
			(cv((-6.726441, 2.304832, 0.172841), 1)),
			(cv((-6.73747, 2.199046, 0.132621), 1)),
			(cv((-6.674684, 2.199046, 0.096517), 1)),
			(cv((-6.645021, 2.304832, 0.125834), 1)),
			(cv((-6.598014, 2.304832, 0.044415), 1)),
			(cv((-6.691167, 2.111808, 0.079689), 1)),
			(cv((-6.743331, 2.111808, 0.109806), 1)),
			(cv((-6.803565, 2.111808, 0.109806), 1)),
			(cv((-6.747081, 2.035768, 0.096503), 1)),
			(cv((-6.701066, 2.035768, 0.070043), 1)),
			(cv((-6.674445, 2.035768, 0.024121), 1)),
			(cv((-6.674352, 2.035768, -0.02896), 1)),
			(cv((-6.796308, 1.932888, 0.082722), 1)),
			(cv((-6.750588, 1.932888, 0.082722), 1)),
			(cv((-6.710993, 1.932888, 0.059862), 1)),
			(cv((-6.688133, 1.932888, 0.020267), 1)),
			(cv((-6.688133, 1.932888, -0.025452), 1))	),
	texture_vertices = (
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.704342 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.704342 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((3, 4, 2),(3, 4, 2), 0 ),
		polygon ((3, 2, 1),(3, 2, 1), 0 ),
		polygon ((5, 6, 7),(5, 6, 7), 0 ),
		polygon ((8, 7, 6),(8, 7, 6), 0 ),
		polygon ((1, 0, 9),(1, 0, 9), 0 ),
		polygon ((9, 10, 1),(9, 10, 1), 0 ),
		polygon ((9, 11, 10),(9, 11, 10), 0 ),
		polygon ((11, 9, 12),(11, 9, 12), 0 ),
		polygon ((4, 13, 2),(4, 13, 2), 0 ),
		polygon ((4, 14, 13),(4, 14, 13), 0 ),
		polygon ((14, 4, 15),(14, 4, 15), 0 ),
		polygon ((4, 16, 15),(4, 16, 15), 0 ),
		polygon ((16, 4, 17),(16, 4, 17), 0 ),
		polygon ((4, 18, 17),(4, 18, 17), 0 ),
		polygon ((4, 3, 18),(4, 3, 18), 0 ),
		polygon ((18, 1, 19),(18, 1, 19), 0 ),
		polygon ((1, 18, 3),(1, 18, 3), 0 ),
		polygon ((20, 19, 1),(20, 19, 1), 0 ),
		polygon ((20, 1, 10),(20, 1, 10), 0 ),
		polygon ((18, 21, 22),(18, 21, 22), 0 ),
		polygon ((22, 7, 18),(22, 7, 18), 0 ),
		polygon ((17, 18, 7),(17, 18, 7), 0 ),
		polygon ((8, 16, 7),(8, 16, 7), 0 ),
		polygon ((21, 18, 19),(21, 18, 19), 0 ),
		polygon ((21, 20, 23),(21, 20, 23), 0 ),
		polygon ((20, 21, 19),(20, 21, 19), 0 ),
		polygon ((23, 24, 21),(23, 24, 21), 0 ),
		polygon ((24, 25, 21),(24, 25, 21), 0 ),
		polygon ((25, 26, 21),(25, 26, 21), 0 ),
		polygon ((22, 21, 26),(22, 21, 26), 0 ),
		polygon ((7, 22, 26),(7, 22, 26), 0 ),
		polygon ((7, 26, 5),(7, 26, 5), 0 ),
		polygon ((27, 14, 15),(27, 14, 15), 0 ),
		polygon ((28, 14, 27),(28, 14, 27), 0 ),
		polygon ((27, 29, 28),(27, 29, 28), 0 ),
		polygon ((27, 15, 16),(27, 15, 16), 0 ),
		polygon ((30, 27, 16),(30, 27, 16), 0 ),
		polygon ((30, 31, 27),(30, 31, 27), 0 ),
		polygon ((32, 27, 31),(32, 27, 31), 0 ),
		polygon ((31, 33, 34),(31, 33, 34), 0 ),
		polygon ((33, 31, 30),(33, 31, 30), 0 ),
		polygon ((33, 30, 16),(33, 30, 16), 0 ),
		polygon ((8, 33, 16),(8, 33, 16), 0 ),
		polygon ((17, 7, 16),(17, 7, 16), 0 ),
		polygon ((33, 6, 35),(33, 6, 35), 0 ),
		polygon ((6, 33, 8),(6, 33, 8), 0 ),
		polygon ((35, 36, 33),(35, 36, 33), 0 ),
		polygon ((34, 33, 36),(34, 33, 36), 0 ),
		polygon ((37, 34, 36),(37, 34, 36), 0 ),
		polygon ((31, 34, 37),(31, 34, 37), 0 ),
		polygon ((38, 32, 31),(38, 32, 31), 0 ),
		polygon ((39, 29, 38),(39, 29, 38), 0 ),
		polygon ((11, 40, 41),(11, 40, 41), 0 ),
		polygon ((29, 27, 32),(29, 27, 32), 0 ),
		polygon ((38, 29, 32),(38, 29, 32), 0 ),
		polygon ((20, 11, 42),(20, 11, 42), 0 ),
		polygon ((38, 43, 39),(38, 43, 39), 0 ),
		polygon ((43, 38, 44),(43, 38, 44), 0 ),
		polygon ((43, 44, 45),(43, 44, 45), 0 ),
		polygon ((46, 43, 45),(46, 43, 45), 0 ),
		polygon ((40, 47, 45),(40, 47, 45), 0 ),
		polygon ((46, 45, 47),(46, 45, 47), 0 ),
		polygon ((11, 47, 40),(11, 47, 40), 0 ),
		polygon ((12, 47, 11),(12, 47, 11), 0 ),
		polygon ((41, 45, 48),(41, 45, 48), 0 ),
		polygon ((45, 41, 40),(45, 41, 40), 0 ),
		polygon ((49, 48, 45),(49, 48, 45), 0 ),
		polygon ((49, 45, 44),(49, 45, 44), 0 ),
		polygon ((44, 38, 49),(44, 38, 49), 0 ),
		polygon ((50, 49, 38),(50, 49, 38), 0 ),
		polygon ((31, 50, 38),(31, 50, 38), 0 ),
		polygon ((37, 50, 31),(37, 50, 31), 0 ),
		polygon ((37, 49, 50),(37, 49, 50), 0 ),
		polygon ((49, 37, 51),(49, 37, 51), 0 ),
		polygon ((49, 51, 52),(49, 51, 52), 0 ),
		polygon ((48, 49, 52),(48, 49, 52), 0 ),
		polygon ((53, 41, 52),(53, 41, 52), 0 ),
		polygon ((48, 52, 41),(48, 52, 41), 0 ),
		polygon ((53, 54, 41),(53, 54, 41), 0 ),
		polygon ((36, 55, 37),(36, 55, 37), 0 ),
		polygon ((55, 56, 37),(55, 56, 37), 0 ),
		polygon ((51, 37, 56),(51, 37, 56), 0 ),
		polygon ((52, 51, 56),(52, 51, 56), 0 ),
		polygon ((52, 56, 57),(52, 56, 57), 0 ),
		polygon ((52, 58, 53),(52, 58, 53), 0 ),
		polygon ((58, 52, 57),(58, 52, 57), 0 ),
		polygon ((54, 53, 58),(54, 53, 58), 0 ),
		polygon ((58, 59, 54),(58, 59, 54), 0 ),
		polygon ((54, 24, 23),(54, 24, 23), 0 ),
		polygon ((24, 54, 59),(24, 54, 59), 0 ),
		polygon ((20, 54, 23),(20, 54, 23), 0 ),
		polygon ((42, 41, 54),(42, 41, 54), 0 ),
		polygon ((42, 11, 41),(42, 11, 41), 0 ),
		polygon ((11, 20, 10),(11, 20, 10), 0 ),
		polygon ((54, 20, 42),(54, 20, 42), 0 ),
		polygon ((60, 61, 62),(60, 61, 62), 0 ),
		polygon ((60, 63, 64),(60, 63, 64), 0 ),
		polygon ((61, 60, 64),(61, 60, 64), 0 ),
		polygon ((65, 66, 67),(65, 66, 67), 0 ),
		polygon ((66, 65, 68),(66, 65, 68), 0 ),
		polygon ((69, 62, 61),(69, 62, 61), 0 ),
		polygon ((61, 70, 69),(61, 70, 69), 0 ),
		polygon ((70, 71, 69),(70, 71, 69), 0 ),
		polygon ((72, 69, 71),(72, 69, 71), 0 ),
		polygon ((60, 73, 63),(60, 73, 63), 0 ),
		polygon ((73, 74, 63),(73, 74, 63), 0 ),
		polygon ((75, 63, 74),(75, 63, 74), 0 ),
		polygon ((75, 76, 63),(75, 76, 63), 0 ),
		polygon ((77, 63, 76),(77, 63, 76), 0 ),
		polygon ((77, 78, 63),(77, 78, 63), 0 ),
		polygon ((78, 64, 63),(78, 64, 63), 0 ),
		polygon ((79, 61, 78),(79, 61, 78), 0 ),
		polygon ((64, 78, 61),(64, 78, 61), 0 ),
		polygon ((61, 79, 80),(61, 79, 80), 0 ),
		polygon ((70, 61, 80),(70, 61, 80), 0 ),
		polygon ((81, 82, 78),(81, 82, 78), 0 ),
		polygon ((78, 65, 81),(78, 65, 81), 0 ),
		polygon ((65, 78, 77),(65, 78, 77), 0 ),
		polygon ((65, 76, 68),(65, 76, 68), 0 ),
		polygon ((79, 78, 82),(79, 78, 82), 0 ),
		polygon ((83, 80, 82),(83, 80, 82), 0 ),
		polygon ((79, 82, 80),(79, 82, 80), 0 ),
		polygon ((82, 84, 83),(82, 84, 83), 0 ),
		polygon ((82, 85, 84),(82, 85, 84), 0 ),
		polygon ((82, 86, 85),(82, 86, 85), 0 ),
		polygon ((86, 82, 81),(86, 82, 81), 0 ),
		polygon ((86, 81, 65),(86, 81, 65), 0 ),
		polygon ((67, 86, 65),(67, 86, 65), 0 ),
		polygon ((75, 74, 87),(75, 74, 87), 0 ),
		polygon ((87, 74, 88),(87, 74, 88), 0 ),
		polygon ((88, 89, 87),(88, 89, 87), 0 ),
		polygon ((76, 75, 87),(76, 75, 87), 0 ),
		polygon ((76, 87, 90),(76, 87, 90), 0 ),
		polygon ((87, 91, 90),(87, 91, 90), 0 ),
		polygon ((91, 87, 92),(91, 87, 92), 0 ),
		polygon ((93, 94, 91),(93, 94, 91), 0 ),
		polygon ((90, 91, 94),(90, 91, 94), 0 ),
		polygon ((76, 90, 94),(76, 90, 94), 0 ),
		polygon ((76, 94, 68),(76, 94, 68), 0 ),
		polygon ((76, 65, 77),(76, 65, 77), 0 ),
		polygon ((95, 66, 94),(95, 66, 94), 0 ),
		polygon ((68, 94, 66),(68, 94, 66), 0 ),
		polygon ((94, 96, 95),(94, 96, 95), 0 ),
		polygon ((96, 94, 93),(96, 94, 93), 0 ),
		polygon ((96, 93, 97),(96, 93, 97), 0 ),
		polygon ((97, 93, 91),(97, 93, 91), 0 ),
		polygon ((91, 92, 98),(91, 92, 98), 0 ),
		polygon ((98, 89, 99),(98, 89, 99), 0 ),
		polygon ((100, 101, 71),(100, 101, 71), 0 ),
		polygon ((92, 87, 89),(92, 87, 89), 0 ),
		polygon ((92, 89, 98),(92, 89, 98), 0 ),
		polygon ((102, 71, 80),(102, 71, 80), 0 ),
		polygon ((99, 103, 98),(99, 103, 98), 0 ),
		polygon ((104, 98, 103),(104, 98, 103), 0 ),
		polygon ((105, 104, 103),(105, 104, 103), 0 ),
		polygon ((105, 103, 106),(105, 103, 106), 0 ),
		polygon ((105, 107, 101),(105, 107, 101), 0 ),
		polygon ((107, 105, 106),(107, 105, 106), 0 ),
		polygon ((101, 107, 71),(101, 107, 71), 0 ),
		polygon ((71, 107, 72),(71, 107, 72), 0 ),
		polygon ((108, 105, 100),(108, 105, 100), 0 ),
		polygon ((101, 100, 105),(101, 100, 105), 0 ),
		polygon ((105, 108, 109),(105, 108, 109), 0 ),
		polygon ((104, 105, 109),(104, 105, 109), 0 ),
		polygon ((109, 98, 104),(109, 98, 104), 0 ),
		polygon ((98, 109, 110),(98, 109, 110), 0 ),
		polygon ((98, 110, 91),(98, 110, 91), 0 ),
		polygon ((91, 110, 97),(91, 110, 97), 0 ),
		polygon ((110, 109, 97),(110, 109, 97), 0 ),
		polygon ((111, 97, 109),(111, 97, 109), 0 ),
		polygon ((112, 111, 109),(112, 111, 109), 0 ),
		polygon ((112, 109, 108),(112, 109, 108), 0 ),
		polygon ((112, 100, 113),(112, 100, 113), 0 ),
		polygon ((100, 112, 108),(100, 112, 108), 0 ),
		polygon ((100, 114, 113),(100, 114, 113), 0 ),
		polygon ((97, 115, 96),(97, 115, 96), 0 ),
		polygon ((97, 116, 115),(97, 116, 115), 0 ),
		polygon ((116, 97, 111),(116, 97, 111), 0 ),
		polygon ((116, 111, 112),(116, 111, 112), 0 ),
		polygon ((117, 116, 112),(117, 116, 112), 0 ),
		polygon ((113, 118, 112),(113, 118, 112), 0 ),
		polygon ((117, 112, 118),(117, 112, 118), 0 ),
		polygon ((118, 113, 114),(118, 113, 114), 0 ),
		polygon ((114, 119, 118),(114, 119, 118), 0 ),
		polygon ((83, 84, 114),(83, 84, 114), 0 ),
		polygon ((119, 114, 84),(119, 114, 84), 0 ),
		polygon ((83, 114, 80),(83, 114, 80), 0 ),
		polygon ((114, 100, 102),(114, 100, 102), 0 ),
		polygon ((100, 71, 102),(100, 71, 102), 0 ),
		polygon ((70, 80, 71),(70, 80, 71), 0 ),
		polygon ((102, 80, 114),(102, 80, 114), 0 )
	)
); /* end of polyset 'Net' */

polyset GoalBase (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (cush4 ),
	shader = (WHITEPOST ),
	casts_shadow = TRUE,
	vertices = ((cv((-9.01378, 0.883183, 0.201984), 1)),
			(cv((-9.01378, 0.883183, -0.198972), 1)),
			(cv((-9.01378, 1.31545, -0.198972), 1)),
			(cv((-9.01378, 1.31545, 0.201984), 1)),
			(cv((-9.01378, 0.399459, 0.402842), 1)),
			(cv((-9.01378, 0.399459, -0.39983), 1)),
			(cv((-8.814068, 1.31545, 0.0), 1)),
			(cv((-8.814068, 1.31545, 0.201984), 1)),
			(cv((-8.953828, 1.760046, -0.052033), 1)),
			(cv((-9.01378, 1.31545, 0.0), 1)),
			(cv((-8.814068, 1.31545, -0.198972), 1)),
			(cv((-8.953828, 1.315352, -0.052033), 1)),
			(cv((-10.67088, 0.000006, 0.403329), 1)),
			(cv((-10.670881, 0.000006, 0.0), 1)),
			(cv((-10.67088, 0.39915, 0.0), 1)),
			(cv((-10.67088, 0.39915, 0.403329), 1)),
			(cv((-10.67088, 0.000006, -0.400317), 1)),
			(cv((-10.67088, 0.39915, -0.400317), 1)),
			(cv((-8.814068, 0.000006, -0.400317), 1)),
			(cv((-8.814068, 0.399459, 0.402842), 1)),
			(cv((-8.814068, 0.399459, -0.39983), 1)),
			(cv((-8.814068, 0.883183, 0.201984), 1)),
			(cv((-8.814068, 0.883183, -0.198972), 1)),
			(cv((-8.814068, 0.000006, 0.403329), 1)),
			(cv((-8.953828, 1.760046, -0.083855), 1)),
			(cv((-9.005686, 1.760046, -0.083855), 1)),
			(cv((-8.953828, 1.760046, 0.052047), 1)),
			(cv((-9.005686, 1.760046, 0.052047), 1)),
			(cv((-9.005686, 1.315352, 0.052047), 1)),
			(cv((-8.953828, 1.315352, 0.052047), 1)),
			(cv((-9.005686, 1.315352, -0.083855), 1)),
			(cv((-8.953828, 1.315352, -0.083855), 1)),
			(cv((-8.953828, 1.315352, 0.083869), 1)),
			(cv((-9.005686, 1.315352, 0.083869), 1)),
			(cv((-8.953828, 1.760046, 0.083869), 1)),
			(cv((-9.005686, 1.760046, 0.083869), 1)),
			(cv((-9.005686, 1.315352, -0.052033), 1)),
			(cv((-9.005686, 1.760046, -0.052033), 1))	),
	texture_vertices = (
			st( 0.961765, 0.682541 ),
			st( 0.571782, 0.731341 ),
			st( 0.571782, 0.731341 ),
			st( 0.570110, 0.731341 ),
			st( 0.726952, 0.683213 ),
			st( 0.574240, 0.700595 ),
			st( 0.574240, 0.700595 ),
			st( 0.726952, 0.997310 ),
			st( 0.574648, 0.996116 ),
			st( 0.574900, 0.997798 ),
			st( 0.574900, 0.997798 ),
			st( 0.964496, 0.997774 ),
			st( 0.574648, 0.996116 ),
			st( 0.574648, 0.996116 ),
			st( 0.570957, 0.999119 ),
			st( 0.964496, 0.345047 ),
			st( 0.570110, 0.355653 ),
			st( 0.570110, 0.355653 ),
			st( 0.560652, 0.364603 ),
			st( 0.725662, 0.345634 ),
			st( 0.561841, 1.000000 ),
			st( 0.561841, 1.000000 ),
			st( 0.571405, 0.364065 ),
			st( 0.571405, 0.364065 ),
			st( 0.704249, 0.871387 ),
			st( 0.704190, 0.996506 ),
			st( 0.699159, 1.000000 ),
			st( 0.699580, 0.999791 ),
			st( 0.699580, 0.999791 ),
			st( 1.000000, 0.250000 ),
			st( 0.790139, 0.147953 ),
			st( 1.000000, 0.250000 ),
			st( 0.574479, 0.870934 ),
			st( 0.704190, 0.996506 ),
			st( 0.962701, 0.997573 ),
			st( 0.962701, 0.997573 ),
			st( 0.699455, 0.997775 ),
			st( 0.000000, 0.250000 ),
			st( 0.005248, 0.002385 ),
			st( 0.002926, 0.000000 ),
			st( 0.295500, 0.002385 ),
			st( 0.295500, 0.370420 ),
			st( 0.005248, 0.370420 ),
			st( 0.002926, 0.355494 ),
			st( 0.002926, 0.355494 ),
			st( 0.002228, 0.365902 ),
			st( 0.002228, 0.365902 ),
			st( 0.005248, 0.002385 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.005248, 0.370420 ),
			st( 0.000000, 1.000000 ),
			st( 0.002049, 0.365119 ),
			st( 0.996744, 0.001706 ),
			st( 0.699212, 0.000000 ),
			st( 0.697936, 0.365525 ),
			st( 0.695623, 0.352699 ),
			st( 0.699580, 0.355653 ),
			st( 0.995530, 0.365291 ),
			st( 0.699436, 0.365980 ),
			st( 0.699436, 0.365980 ),
			st( 0.700346, 0.364938 ),
			st( 0.697937, 0.699329 ),
			st( 0.699580, 0.731341 ),
			st( 0.699580, 0.731341 ),
			st( 0.699580, 0.731341 ),
			st( 0.967997, 0.698498 ),
			st( 0.967801, 0.698498 ),
			st( 0.700393, 0.700648 ),
			st( 0.700393, 0.700648 ),
			st( 0.700393, 0.700648 ),
			st( 0.700393, 0.700648 ),
			st( 0.699159, 0.001900 ),
			st( 0.695623, 0.001347 ),
			st( 0.695623, 0.001347 ),
			st( 0.457387, 0.133831 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.455496, 0.647953 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.250000 ),
			st( 0.790139, 0.147953 ),
			st( 0.996219, 0.009542 ),
			st( 0.797702, 0.651839 ),
			st( 0.797702, 0.651839 ),
			st( 1.000000, 1.000000 ),
			st( 0.002832, 0.003999 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.750000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 0.500000 ),
			st( 0.457387, 0.133831 ),
			st( 0.457387, 0.133831 ),
			st( 1.000000, 0.750000 ),
			st( 0.455496, 0.647953 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 0.002832, 0.003999 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.996219, 0.009542 ),
			st( 0.797702, 0.651839 ),
			st( 0.797702, 0.651839 ),
			st( 1.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 4, 7), 0 ),
		polygon ((2, 3, 0),(7, 11, 0), 0 ),
		polygon ((4, 5, 1),(15, 19, 4), 0 ),
		polygon ((1, 0, 4),(4, 0, 15), 0 ),
		polygon ((6, 7, 3),(24, 25, 12), 0 ),
		polygon ((3, 9, 6),(13, 32, 24), 0 ),
		polygon ((10, 6, 9),(33, 24, 32), 0 ),
		polygon ((9, 2, 10),(32, 8, 33), 0 ),
		polygon ((12, 13, 14),(38, 40, 41), 0 ),
		polygon ((14, 15, 12),(41, 42, 38), 0 ),
		polygon ((13, 16, 17),(40, 47, 50), 0 ),
		polygon ((17, 14, 13),(50, 41, 40), 0 ),
		polygon ((18, 19, 20),(53, 55, 58), 0 ),
		polygon ((19, 21, 22),(55, 62, 66), 0 ),
		polygon ((22, 20, 19),(66, 58, 55), 0 ),
		polygon ((23, 19, 18),(72, 55, 53), 0 ),
		polygon ((10, 22, 21),(34, 67, 62), 0 ),
		polygon ((21, 7, 10),(62, 26, 35), 0 ),
		polygon ((23, 12, 15),(73, 39, 43), 0 ),
		polygon ((23, 15, 19),(74, 44, 56), 0 ),
		polygon ((0, 3, 7),(1, 14, 27), 0 ),
		polygon ((7, 21, 0),(28, 63, 2), 0 ),
		polygon ((4, 0, 21),(16, 3, 64), 0 ),
		polygon ((21, 19, 4),(65, 57, 17), 0 ),
		polygon ((5, 4, 15),(20, 18, 45), 0 ),
		polygon ((15, 17, 5),(46, 51, 21), 0 ),
		polygon ((2, 1, 22),(9, 5, 68), 0 ),
		polygon ((22, 10, 2),(69, 36, 10), 0 ),
		polygon ((20, 17, 16),(59, 52, 48), 0 ),
		polygon ((16, 18, 20),(49, 54, 60), 0 ),
		polygon ((22, 1, 5),(70, 6, 22), 0 ),
		polygon ((5, 20, 22),(23, 61, 71), 0 ),
		polygon ((32, 33, 34),(96, 97, 98), 1 ),
		polygon ((33, 35, 34),(97, 101, 98), 1 ),
		polygon ((36, 37, 8),(105, 108, 29), 1 ),
		polygon ((8, 11, 36),(29, 37, 105), 1 ),
		polygon ((24, 8, 37),(75, 30, 109), 1 ),
		polygon ((37, 25, 24),(110, 80, 75), 1 ),
		polygon ((26, 27, 28),(84, 86, 90), 1 ),
		polygon ((28, 29, 26),(90, 93, 84), 1 ),
		polygon ((29, 32, 34),(93, 96, 98), 1 ),
		polygon ((34, 26, 29),(98, 84, 93), 1 ),
		polygon ((25, 37, 36),(81, 111, 106), 1 ),
		polygon ((36, 30, 25),(107, 94, 82), 1 ),
		polygon ((24, 30, 31),(76, 94, 95), 1 ),
		polygon ((24, 25, 30),(77, 83, 94), 1 ),
		polygon ((24, 31, 11),(78, 95, 37), 1 ),
		polygon ((11, 8, 24),(37, 31, 79), 1 ),
		polygon ((27, 26, 34),(87, 85, 99), 1 ),
		polygon ((34, 35, 27),(100, 102, 88), 1 ),
		polygon ((28, 27, 35),(91, 89, 103), 1 ),
		polygon ((35, 33, 28),(104, 97, 92), 1 )
	)
); /* end of polyset 'GoalBase' */

polyset GoalStand2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (BUMPER ),
	shader = (WHITEPOST ),
	shader = (METAL2 ),
	shader = (METAL3 ),
	casts_shadow = TRUE,
	vertices = ((cv((7.095556, 2.286497, 0.695803), 1)),
			(cv((7.095505, 2.286801, 0.558099), 1)),
			(cv((7.082199, 2.304014, 0.583106), 1)),
			(cv((7.08225, 2.30371, 0.674993), 1)),
			(cv((7.211563, 2.286801, 0.558099), 1)),
			(cv((7.211615, 2.286497, 0.695803), 1)),
			(cv((7.226359, 2.296435, 0.681869), 1)),
			(cv((7.211615, 2.374054, 0.695803), 1)),
			(cv((7.226359, 2.36443, 0.681869), 1)),
			(cv((7.095556, 2.374054, 0.695803), 1)),
			(cv((7.095505, 2.374368, 0.558099), 1)),
			(cv((7.08225, 2.356841, 0.674993), 1)),
			(cv((7.082199, 2.357155, 0.583106), 1)),
			(cv((7.226307, 2.296435, 0.575931), 1)),
			(cv((7.211563, 2.374368, 0.558099), 1)),
			(cv((7.226307, 2.36443, 0.575931), 1)),
			(cv((8.116648, 2.296687, 0.0), 1)),
			(cv((8.197511, 2.501257, -0.0543), 1)),
			(cv((8.116648, 2.501257, 0.0), 1)),
			(cv((8.197511, 2.501257, 0.0543), 1)),
			(cv((7.424742, 2.828735, -0.415384), 1)),
			(cv((7.424642, 2.828735, 0.415364), 1)),
			(cv((7.448157, 2.794138, 0.407182), 1)),
			(cv((7.467051, 2.827309, 0.399), 1)),
			(cv((7.467151, 2.827309, -0.399), 1)),
			(cv((7.448257, 2.794138, -0.407202), 1)),
			(cv((8.197511, 2.296687, -0.0543), 1)),
			(cv((8.197511, 2.296687, 0.0543), 1)),
			(cv((9.370433, 1.238626, 0.0), 1)),
			(cv((9.393589, 1.272513, 0.027879), 1)),
			(cv((9.472845, 1.049741, 0.027879), 1)),
			(cv((8.196584, 2.499232, -0.027879), 1)),
			(cv((9.393589, 1.272513, -0.027879), 1)),
			(cv((9.419602, 1.090958, 0.0), 1)),
			(cv((7.226269, 2.36443, 0.575831), 1)),
			(cv((8.196584, 2.36443, -0.053223), 1)),
			(cv((8.196584, 2.36443, 0.053223), 1)),
			(cv((8.196584, 2.499232, 0.027879), 1)),
			(cv((8.196584, 2.296739, 0.053223), 1)),
			(cv((7.226321, 2.296435, 0.682268), 1)),
			(cv((7.226321, 2.364115, 0.682268), 1)),
			(cv((8.196584, 2.452516, 0.0), 1)),
			(cv((9.472845, 1.049741, -0.027879), 1)),
			(cv((8.196584, 2.296739, -0.053223), 1)),
			(cv((7.226269, 2.296739, 0.575831), 1)),
			(cv((7.226307, 2.36443, -0.575933), 1)),
			(cv((7.226359, 2.36443, -0.68187), 1)),
			(cv((7.08225, 2.356841, -0.674995), 1)),
			(cv((7.071569, 2.979346, -0.655532), 1)),
			(cv((8.136342, 2.449849, -0.013271), 1)),
			(cv((7.226307, 2.296435, -0.575933), 1)),
			(cv((7.071569, 2.979941, 0.657911), 1)),
			(cv((7.095556, 2.286497, -0.695805), 1)),
			(cv((7.095505, 2.286801, -0.558101), 1)),
			(cv((9.557237, 0.819464, 0.160139), 1)),
			(cv((9.557237, 0.819464, -0.159953), 1)),
			(cv((9.557237, 0.923911, -0.159953), 1)),
			(cv((9.557237, 0.923911, 0.160139), 1)),
			(cv((9.662241, 0.819464, 0.160139), 1)),
			(cv((9.662241, 0.923911, 0.160139), 1)),
			(cv((9.662241, 0.923911, -0.159953), 1)),
			(cv((9.662241, 0.819464, -0.159953), 1)),
			(cv((9.541987, 0.811042, -0.23185), 1)),
			(cv((9.541987, 0.399368, -0.401548), 1)),
			(cv((9.686143, 0.399368, -0.401548), 1)),
			(cv((9.686143, 0.811042, -0.23185), 1)),
			(cv((9.686143, 0.811042, -0.106521), 1)),
			(cv((9.686143, 0.399368, -0.276219), 1)),
			(cv((9.541987, 0.811042, -0.106521), 1)),
			(cv((9.541987, 0.399368, -0.276219), 1)),
			(cv((9.686143, 0.399368, 0.401548), 1)),
			(cv((9.541987, 0.399368, 0.401548), 1)),
			(cv((9.541987, 0.811042, 0.23185), 1)),
			(cv((9.686143, 0.811042, 0.23185), 1)),
			(cv((9.686143, 0.811042, 0.106521), 1)),
			(cv((9.686143, 0.399368, 0.276219), 1)),
			(cv((9.541987, 0.811042, 0.106521), 1)),
			(cv((9.541987, 0.399368, 0.276219), 1)),
			(cv((9.64083, 0.810908, 0.23349), 1)),
			(cv((9.64083, 0.900912, 0.23349), 1)),
			(cv((9.64083, 0.900912, 0.160003), 1)),
			(cv((9.64083, 0.810908, 0.160003), 1)),
			(cv((9.580675, 0.810908, 0.23349), 1)),
			(cv((9.580675, 0.900912, 0.23349), 1)),
			(cv((9.580675, 0.810908, 0.160003), 1)),
			(cv((9.580675, 0.900912, 0.160003), 1)),
			(cv((9.653753, 0.920473, -0.053223), 1)),
			(cv((7.069927, 3.025357, 0.635946), 1)),
			(cv((7.058797, 2.987405, 0.632627), 1)),
			(cv((8.116829, 2.449137, 0.0), 1)),
			(cv((9.621982, 0.873103, -0.053223), 1)),
			(cv((7.082199, 2.304014, -0.583107), 1)),
			(cv((8.117565, 2.499806, 0.0), 1)),
			(cv((8.136342, 2.449849, 0.013271), 1)),
			(cv((9.64083, 0.900912, -0.160003), 1)),
			(cv((9.64083, 0.900912, -0.23349), 1)),
			(cv((9.64083, 0.810908, -0.23349), 1)),
			(cv((9.64083, 0.810908, -0.160003), 1)),
			(cv((9.580675, 0.810908, -0.23349), 1)),
			(cv((9.580675, 0.900912, -0.23349), 1)),
			(cv((7.058797, 2.98681, -0.630248), 1)),
			(cv((7.069927, 3.024762, -0.633567), 1)),
			(cv((9.580675, 0.900912, -0.160003), 1)),
			(cv((9.580675, 0.810908, -0.160003), 1)),
			(cv((9.653753, 0.920473, 0.053223), 1)),
			(cv((9.621982, 0.873103, 0.053223), 1)),
			(cv((7.226359, 2.296435, -0.68187), 1)),
			(cv((7.08225, 2.30371, -0.674995), 1)),
			(cv((7.211563, 2.286801, -0.558101), 1)),
			(cv((7.211615, 2.286497, -0.695805), 1)),
			(cv((7.082199, 2.357155, -0.583107), 1)),
			(cv((7.211615, 2.374054, -0.695805), 1)),
			(cv((7.211563, 2.374368, -0.558101), 1)),
			(cv((7.095556, 2.374054, -0.695805), 1)),
			(cv((7.095505, 2.374368, -0.558101), 1))	),
	texture_vertices = (
			st( 0.200000, 0.250000 ),
			st( 0.200000, 0.000000 ),
			st( 0.200000, 0.997730 ),
			st( 0.200000, 0.997730 ),
			st( 0.200000, 0.997730 ),
			st( 0.000000, 0.000000 ),
			st( 0.000997, 0.997111 ),
			st( 0.000000, 0.250000 ),
			st( 0.800000, 0.000000 ),
			st( 0.799502, 0.997902 ),
			st( 0.799502, 0.997902 ),
			st( 0.799502, 0.997902 ),
			st( 0.800000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.800000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.200000, 0.500000 ),
			st( 0.200000, 0.750000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 0.000000 ),
			st( 0.999003, 0.998521 ),
			st( 0.999003, 0.998521 ),
			st( 0.800000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 0.989735, 0.515183 ),
			st( 0.008669, 0.745393 ),
			st( 0.006843, 0.986420 ),
			st( 0.008669, 0.745393 ),
			st( 0.570868, 0.708712 ),
			st( 0.011976, 0.513580 ),
			st( 0.015628, 0.516296 ),
			st( 0.244909, 0.504547 ),
			st( 0.017339, 0.735071 ),
			st( 0.006843, 0.986420 ),
			st( 0.017339, 0.735071 ),
			st( 0.023841, 0.705272 ),
			st( 0.006843, 0.986420 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 0.008669, 0.756941 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.984829, 0.763822 ),
			st( 1.000000, 0.000000 ),
			st( 0.984829, 0.763822 ),
			st( 0.993157, 0.989136 ),
			st( 0.989163, 0.745393 ),
			st( 0.993157, 0.989136 ),
			st( 0.393147, 0.732797 ),
			st( 0.993157, 0.752716 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.900000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 0.008669, 0.283240 ),
			st( 0.008669, 0.283240 ),
			st( 1.000000, 0.500000 ),
			st( 0.984829, 0.283240 ),
			st( 0.984829, 0.283240 ),
			st( 1.000000, 0.500000 ),
			st( 0.900000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.505432 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.000000 ),
			st( 0.902167, 0.279799 ),
			st( 0.900000, 0.500000 ),
			st( 0.902167, 0.279799 ),
			st( 0.900000, 0.500000 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.995775, 0.003926 ),
			st( 1.000000, 0.505432 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.006502, 0.738511 ),
			st( 0.000000, 1.000000 ),
			st( 0.982661, 0.745393 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.982661, 0.745393 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.999003, 0.998521 ),
			st( 0.999003, 0.998521 ),
			st( 0.000000, 1.000000 ),
			st( 0.002167, 0.752274 ),
			st( 0.200000, 0.250000 ),
			st( 0.200000, 0.000000 ),
			st( 0.200000, 0.997730 ),
			st( 0.200000, 0.997730 ),
			st( 0.200000, 0.997730 ),
			st( 0.000000, 0.000000 ),
			st( 0.316431, 0.027525 ),
			st( 1.000000, 0.000000 ),
			st( 0.316431, 0.027525 ),
			st( 1.000000, 0.250000 ),
			st( 0.316431, 0.267143 ),
			st( 0.316431, 0.267143 ),
			st( 0.000000, 0.250000 ),
			st( 0.316431, 0.267143 ),
			st( 0.316431, 0.267143 ),
			st( 0.000000, 0.750000 ),
			st( 0.705243, 0.027525 ),
			st( 0.705243, 0.027525 ),
			st( 0.000000, 0.500000 ),
			st( 0.705243, 0.267143 ),
			st( 1.000000, 0.500000 ),
			st( 0.705243, 0.267143 ),
			st( 1.000000, 0.750000 ),
			st( 0.705243, 0.027525 ),
			st( 0.705243, 0.027525 ),
			st( 1.000000, 0.250000 ),
			st( 0.364112, 0.542395 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.364112, 0.233964 ),
			st( 0.364112, 0.233964 ),
			st( 1.000000, 1.000000 ),
			st( 0.568701, 0.233964 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 1.000000 ),
			st( 0.993662, 0.010634 ),
			st( 0.575203, 0.549276 ),
			st( 0.575203, 0.549276 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.364112, 0.542395 ),
			st( 1.000000, 0.500000 ),
			st( 0.364112, 0.233964 ),
			st( 0.364112, 0.233964 ),
			st( 1.000000, 0.750000 ),
			st( 0.568701, 0.233964 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 1.000000 ),
			st( 0.997887, 0.000573 ),
			st( 0.575203, 0.549276 ),
			st( 0.575203, 0.549276 ),
			st( 0.000000, 1.000000 ),
			st( 0.004225, 0.003926 ),
			st( 0.004225, 0.003926 ),
			st( 0.666600, 0.000000 ),
			st( 0.666600, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.333300, 0.000000 ),
			st( 0.333330, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 0.995775, 0.003926 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000997, 0.997111 ),
			st( 1.000000, 0.500000 ),
			st( 0.997833, 0.745393 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.997833, 0.745393 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.333300, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.333330, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.666600, 0.000000 ),
			st( 0.666660, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.750000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 1.000000 ),
			st( 0.995775, 0.003926 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.800000, 0.000000 ),
			st( 0.799502, 0.997902 ),
			st( 0.799502, 0.997902 ),
			st( 0.799502, 0.997902 ),
			st( 0.800000, 0.250000 ),
			st( 0.000000, 0.750000 ),
			st( 0.800000, 0.500000 ),
			st( 0.800000, 0.750000 ),
			st( 0.200000, 0.500000 ),
			st( 0.200000, 0.750000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 5), 0 ),
		polygon ((2, 3, 0),(5, 7, 0), 0 ),
		polygon ((4, 1, 0),(8, 1, 0), 0 ),
		polygon ((0, 5, 4),(0, 12, 8), 0 ),
		polygon ((6, 5, 7),(13, 12, 14), 0 ),
		polygon ((7, 8, 6),(14, 15, 13), 0 ),
		polygon ((9, 7, 5),(16, 14, 12), 0 ),
		polygon ((5, 0, 9),(12, 0, 16), 0 ),
		polygon ((10, 9, 11),(17, 16, 18), 0 ),
		polygon ((11, 12, 10),(18, 19, 17), 0 ),
		polygon ((13, 4, 5),(20, 8, 12), 0 ),
		polygon ((5, 6, 13),(12, 13, 20), 0 ),
		polygon ((11, 9, 0),(18, 16, 0), 0 ),
		polygon ((0, 3, 11),(0, 7, 18), 0 ),
		polygon ((14, 7, 9),(23, 14, 16), 0 ),
		polygon ((14, 9, 10),(23, 16, 17), 0 ),
		polygon ((1, 10, 12),(2, 17, 19), 0 ),
		polygon ((12, 2, 1),(19, 6, 3), 0 ),
		polygon ((10, 1, 4),(17, 4, 9), 0 ),
		polygon ((4, 14, 10),(10, 23, 17), 0 ),
		polygon ((14, 4, 13),(23, 11, 21), 0 ),
		polygon ((13, 15, 14),(22, 24, 23), 0 ),
		polygon ((14, 15, 8),(23, 24, 15), 0 ),
		polygon ((8, 7, 14),(15, 14, 23), 0 ),
		polygon ((16, 17, 18),(25, 26, 30), 1 ),
		polygon ((16, 18, 19),(25, 31, 33), 1 ),
		polygon ((20, 21, 22),(38, 39, 40), 1 ),
		polygon ((23, 24, 25),(42, 43, 44), 1 ),
		polygon ((20, 24, 23),(38, 43, 42), 1 ),
		polygon ((23, 21, 20),(42, 39, 38), 1 ),
		polygon ((19, 17, 26),(34, 27, 47), 1 ),
		polygon ((19, 27, 16),(35, 50, 25), 1 ),
		polygon ((22, 25, 20),(40, 45, 38), 1 ),
		polygon ((22, 23, 25),(41, 42, 46), 1 ),
		polygon ((28, 29, 30),(52, 53, 54), 1 ),
		polygon ((31, 32, 29),(55, 58, 53), 1 ),
		polygon ((30, 33, 28),(54, 62, 52), 1 ),
		polygon ((34, 35, 36),(63, 64, 65), 1 ),
		polygon ((29, 37, 31),(53, 73, 55), 1 ),
		polygon ((38, 39, 40),(74, 75, 76), 1 ),
		polygon ((29, 28, 41),(53, 52, 77), 1 ),
		polygon ((40, 36, 38),(76, 65, 74), 1 ),
		polygon ((42, 32, 28),(78, 59, 52), 1 ),
		polygon ((43, 44, 39),(82, 91, 75), 1 ),
		polygon ((42, 30, 29),(79, 54, 53), 1 ),
		polygon ((39, 38, 43),(75, 74, 82), 1 ),
		polygon ((41, 37, 29),(77, 73, 53), 1 ),
		polygon ((31, 41, 28),(56, 77, 52), 1 ),
		polygon ((17, 16, 26),(28, 25, 48), 1 ),
		polygon ((28, 32, 31),(52, 60, 57), 1 ),
		polygon ((45, 46, 35),(93, 98, 64), 1 ),
		polygon ((35, 36, 45),(64, 66, 93), 1 ),
		polygon ((33, 42, 28),(62, 80, 52), 1 ),
		polygon ((38, 50, 45),(74, 109, 94), 1 ),
		polygon ((45, 36, 38),(95, 67, 74), 1 ),
		polygon ((29, 32, 42),(53, 61, 81), 1 ),
		polygon ((17, 19, 18),(29, 36, 32), 1 ),
		polygon ((26, 27, 19),(49, 51, 37), 1 ),
		polygon ((54, 55, 56),(121, 123, 125), 1 ),
		polygon ((56, 57, 54),(125, 128, 121), 1 ),
		polygon ((58, 59, 60),(131, 134, 136), 1 ),
		polygon ((60, 61, 58),(136, 138, 131), 1 ),
		polygon ((59, 57, 56),(134, 128, 125), 1 ),
		polygon ((56, 60, 59),(125, 136, 134), 1 ),
		polygon ((62, 63, 64),(141, 143, 144), 1 ),
		polygon ((64, 65, 62),(144, 145, 141), 1 ),
		polygon ((66, 65, 64),(148, 145, 144), 1 ),
		polygon ((64, 67, 66),(144, 150, 148), 1 ),
		polygon ((68, 66, 67),(151, 148, 150), 1 ),
		polygon ((67, 69, 68),(150, 155, 151), 1 ),
		polygon ((62, 68, 69),(141, 152, 156), 1 ),
		polygon ((69, 63, 62),(157, 143, 141), 1 ),
		polygon ((70, 71, 72),(158, 159, 160), 1 ),
		polygon ((72, 73, 70),(160, 162, 158), 1 ),
		polygon ((70, 73, 74),(158, 162, 165), 1 ),
		polygon ((74, 75, 70),(165, 167, 158), 1 ),
		polygon ((75, 74, 76),(167, 165, 168), 1 ),
		polygon ((76, 77, 75),(168, 172, 167), 1 ),
		polygon ((77, 76, 72),(173, 169, 160), 1 ),
		polygon ((72, 71, 77),(160, 159, 174), 1 ),
		polygon ((78, 79, 80),(175, 176, 178), 2 ),
		polygon ((80, 81, 78),(178, 181, 175), 2 ),
		polygon ((82, 79, 78),(182, 176, 175), 2 ),
		polygon ((83, 79, 82),(183, 176, 182), 2 ),
		polygon ((43, 35, 34),(83, 64, 63), 1 ),
		polygon ((36, 40, 34),(68, 76, 63), 1 ),
		polygon ((83, 84, 85),(183, 186, 187), 2 ),
		polygon ((83, 82, 84),(183, 182, 186), 2 ),
		polygon ((36, 35, 86),(69, 64, 189), 1 ),
		polygon ((87, 88, 89),(190, 191, 192), 1 ),
		polygon ((90, 35, 43),(193, 64, 84), 1 ),
		polygon ((87, 92, 93),(190, 197, 198), 1 ),
		polygon ((94, 95, 96),(202, 205, 207), 2 ),
		polygon ((96, 97, 94),(207, 208, 202), 2 ),
		polygon ((96, 95, 98),(207, 205, 209), 2 ),
		polygon ((98, 95, 99),(209, 205, 210), 2 ),
		polygon ((89, 100, 101),(192, 213, 214), 1 ),
		polygon ((43, 35, 46),(85, 64, 98), 1 ),
		polygon ((102, 103, 99),(215, 217, 210), 2 ),
		polygon ((103, 98, 99),(217, 209, 210), 2 ),
		polygon ((36, 104, 105),(70, 218, 219), 1 ),
		polygon ((90, 86, 35),(193, 189, 64), 1 ),
		polygon ((105, 38, 36),(219, 74, 71), 1 ),
		polygon ((38, 43, 106),(74, 86, 220), 1 ),
		polygon ((80, 79, 83),(179, 177, 184), 3 ),
		polygon ((80, 83, 85),(180, 185, 188), 3 ),
		polygon ((99, 95, 94),(211, 206, 203), 3 ),
		polygon ((102, 99, 94),(216, 212, 204), 3 ),
		polygon ((61, 60, 56),(139, 137, 126), 1 ),
		polygon ((56, 55, 61),(127, 124, 140), 1 ),
		polygon ((57, 59, 58),(129, 135, 132), 1 ),
		polygon ((58, 54, 57),(133, 122, 130), 1 ),
		polygon ((73, 72, 76),(163, 161, 170), 1 ),
		polygon ((74, 73, 76),(166, 164, 171), 1 ),
		polygon ((68, 62, 65),(153, 142, 146), 1 ),
		polygon ((68, 65, 66),(154, 147, 149), 1 ),
		polygon ((101, 48, 49),(214, 103, 105), 1 ),
		polygon ((49, 48, 100),(106, 104, 213), 1 ),
		polygon ((46, 106, 43),(98, 221, 87), 1 ),
		polygon ((34, 44, 43),(63, 92, 88), 1 ),
		polygon ((105, 90, 43),(219, 194, 89), 1 ),
		polygon ((106, 50, 38),(222, 109, 74), 1 ),
		polygon ((100, 89, 49),(213, 192, 107), 1 ),
		polygon ((93, 89, 88),(199, 192, 191), 1 ),
		polygon ((88, 51, 93),(191, 114, 200), 1 ),
		polygon ((89, 92, 87),(192, 197, 190), 1 ),
		polygon ((93, 51, 87),(201, 115, 190), 1 ),
		polygon ((86, 104, 36),(189, 218, 72), 1 ),
		polygon ((105, 43, 38),(219, 90, 74), 1 ),
		polygon ((101, 92, 89),(214, 197, 192), 1 ),
		polygon ((49, 92, 101),(108, 197, 214), 1 ),
		polygon ((91, 53, 52),(195, 117, 116), 0 ),
		polygon ((52, 107, 91),(116, 226, 195), 0 ),
		polygon ((52, 53, 108),(116, 117, 227), 0 ),
		polygon ((108, 109, 52),(227, 231, 116), 0 ),
		polygon ((111, 109, 106),(233, 231, 223), 0 ),
		polygon ((106, 46, 111),(224, 99, 233), 0 ),
		polygon ((109, 111, 113),(231, 233, 235), 0 ),
		polygon ((113, 52, 109),(235, 116, 231), 0 ),
		polygon ((47, 113, 114),(102, 235, 236), 0 ),
		polygon ((114, 110, 47),(236, 232, 102), 0 ),
		polygon ((109, 108, 50),(231, 227, 110), 0 ),
		polygon ((50, 106, 109),(111, 225, 231), 0 ),
		polygon ((52, 113, 47),(116, 235, 102), 0 ),
		polygon ((47, 107, 52),(102, 226, 116), 0 ),
		polygon ((113, 111, 112),(235, 233, 234), 0 ),
		polygon ((114, 113, 112),(236, 235, 234), 0 ),
		polygon ((110, 114, 53),(232, 236, 118), 0 ),
		polygon ((53, 91, 110),(119, 196, 232), 0 ),
		polygon ((108, 53, 114),(228, 120, 236), 0 ),
		polygon ((114, 112, 108),(236, 234, 229), 0 ),
		polygon ((50, 108, 112),(112, 230, 234), 0 ),
		polygon ((112, 45, 50),(234, 96, 113), 0 ),
		polygon ((46, 45, 112),(100, 97, 234), 0 ),
		polygon ((112, 111, 46),(234, 233, 101), 0 )
	)
); /* end of polyset 'GoalStand2' */

polyset BackBoard2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (seal ),
	shader = (TARGET ),
	shader = (METAL4 ),
	shader = (BackPad ),
	casts_shadow = TRUE,
	vertices = ((cv((7.07237, 2.288114, -0.596734), 1)),
			(cv((7.031255, 2.288114, -0.596734), 1)),
			(cv((7.031255, 2.964677, -0.596734), 1)),
			(cv((7.07237, 2.964677, -0.596734), 1)),
			(cv((7.07237, 2.288114, 0.596731), 1)),
			(cv((7.07237, 2.964677, 0.596734), 1)),
			(cv((7.031255, 2.964677, 0.596734), 1)),
			(cv((7.053053, 2.355915, -0.162836), 1)),
			(cv((7.053053, 2.617597, -0.19919), 1)),
			(cv((7.053053, 2.3197, -0.19919), 1)),
			(cv((7.020421, 2.199556, 0.684449), 1)),
			(cv((7.020421, 2.259842, 0.627439), 1)),
			(cv((7.07237, 3.026545, -0.658603), 1)),
			(cv((7.07237, 2.226245, -0.658603), 1)),
			(cv((7.020178, 2.199557, -0.682247), 1)),
			(cv((7.020178, 2.259842, -0.62524), 1)),
			(cv((7.07237, 2.226245, 0.6586), 1)),
			(cv((7.07237, 3.026545, 0.658603), 1)),
			(cv((7.031255, 2.226245, 0.6586), 1)),
			(cv((7.031255, 2.226245, -0.658603), 1)),
			(cv((7.083992, 2.259842, -0.62524), 1)),
			(cv((7.031255, 3.026545, -0.658603), 1)),
			(cv((7.083992, 2.199557, -0.682247), 1)),
			(cv((7.083992, 2.199556, 0.684449), 1)),
			(cv((7.031255, 3.026545, 0.658603), 1)),
			(cv((7.031255, 2.288114, 0.596731), 1)),
			(cv((7.083992, 2.259842, 0.627439), 1)),
			(cv((7.053053, 2.581363, -0.162836), 1)),
			(cv((7.050059, 2.355915, -0.162836), 1)),
			(cv((7.050059, 2.355915, 0.162956), 1)),
			(cv((7.050059, 2.3197, 0.19919), 1)),
			(cv((7.053053, 2.3197, 0.19919), 1)),
			(cv((7.053053, 2.355915, 0.162956), 1)),
			(cv((7.050059, 2.3197, -0.19919), 1)),
			(cv((7.050059, 2.617597, -0.19919), 1)),
			(cv((7.053053, 2.617597, 0.19919), 1)),
			(cv((7.053053, 2.581363, 0.162956), 1)),
			(cv((7.050059, 2.581363, -0.162836), 1)),
			(cv((7.050059, 2.581363, 0.162956), 1)),
			(cv((7.050059, 2.617597, 0.19919), 1)),
			(cv((7.020258, 2.627634, -0.62524), 1)),
			(cv((7.020258, 2.627634, -0.684502), 1)),
			(cv((7.083992, 2.627634, -0.684502), 1)),
			(cv((7.083992, 2.627634, -0.62524), 1)),
			(cv((7.020258, 2.627634, 0.627439), 1)),
			(cv((7.083992, 2.627634, 0.627439), 1)),
			(cv((7.083992, 2.627634, 0.685076), 1)),
			(cv((7.020258, 2.627634, 0.685076), 1))	),
	texture_vertices = (
			st( 1.000000, 0.000000 ),
			st( 0.010265, 0.513449 ),
			st( 0.010265, 0.513449 ),
			st( 0.006843, 0.559621 ),
			st( 0.006843, 0.559621 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.989735, 0.521597 ),
			st( 0.993157, 0.516165 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.991446, 0.521597 ),
			st( 0.996578, 0.540609 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.006843, 0.524313 ),
			st( 0.008554, 0.535177 ),
			st( 0.006843, 0.524313 ),
			st( 0.008554, 0.535177 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.750000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 0.000000 ),
			st( 0.250000, 0.000000 ),
			st( 0.750000, 1.000000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.993157, 0.005954 ),
			st( 0.991446, 0.008670 ),
			st( 0.991446, 0.008670 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.010265, 0.005954 ),
			st( 0.001711, 0.008670 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.250000, 0.500000 ),
			st( 0.750000, 0.000000 ),
			st( 0.750000, 0.000000 ),
			st( 0.250000, 1.000000 ),
			st( 0.750000, 0.500000 ),
			st( 0.750000, 0.500000 ),
			st( 0.750000, 0.500000 ),
			st( 0.991446, 0.011386 ),
			st( 0.993157, 0.011386 ),
			st( 0.993157, 0.011386 ),
			st( 0.991446, 0.011386 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.010265, 0.014102 ),
			st( 0.010265, 0.016818 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.750000, 1.000000 ),
			st( 0.750000, 0.000000 ),
			st( 0.750000, 0.000000 ),
			st( 0.750000, 0.000000 ),
			st( 1.000000, 0.500000 ),
			st( 0.750000, 0.500000 ),
			st( 0.250000, 0.500000 ),
			st( 0.250000, 0.000000 ),
			st( 0.250000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.250000, 1.000000 ),
			st( 0.250000, 0.000000 ),
			st( 0.250000, 0.000000 ),
			st( 0.250000, 0.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.032450, 0.489109 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.030905, 0.061622 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.270643, 0.058326 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.270643, 0.485812 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.270643, 0.485812 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.500000 ),
			st( 0.032450, 0.489109 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.030905, 0.061622 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.270643, 0.058326 ),
			st( 1.000000, 0.500000 ),
			st( 0.000000, 0.500000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 6, 7), 0 ),
		polygon ((2, 3, 0),(7, 11, 0), 0 ),
		polygon ((4, 5, 6),(16, 22, 28), 0 ),
		polygon ((7, 8, 9),(29, 30, 31), 1 ),
		polygon ((0, 3, 12),(1, 12, 41), 2 ),
		polygon ((12, 13, 0),(41, 47, 2), 2 ),
		polygon ((5, 4, 16),(23, 17, 58), 2 ),
		polygon ((5, 17, 12),(24, 64, 42), 2 ),
		polygon ((0, 13, 16),(3, 48, 59), 2 ),
		polygon ((0, 16, 4),(4, 60, 18), 2 ),
		polygon ((16, 17, 5),(61, 65, 25), 2 ),
		polygon ((12, 3, 5),(43, 13, 26), 2 ),
		polygon ((18, 19, 1),(68, 69, 6), 2 ),
		polygon ((21, 2, 1),(74, 8, 6), 2 ),
		polygon ((6, 24, 18),(28, 79, 68), 2 ),
		polygon ((25, 18, 1),(80, 68, 6), 2 ),
		polygon ((13, 12, 21),(49, 44, 74), 2 ),
		polygon ((24, 21, 12),(79, 74, 45), 2 ),
		polygon ((21, 19, 13),(74, 69, 50), 2 ),
		polygon ((12, 17, 24),(46, 66, 79), 2 ),
		polygon ((24, 17, 16),(79, 67, 62), 2 ),
		polygon ((0, 4, 1),(5, 19, 6), 0 ),
		polygon ((6, 25, 4),(28, 81, 20), 0 ),
		polygon ((16, 18, 24),(63, 68, 79), 2 ),
		polygon ((18, 25, 6),(68, 82, 28), 2 ),
		polygon ((21, 24, 6),(74, 79, 28), 2 ),
		polygon ((6, 2, 21),(28, 9, 74), 2 ),
		polygon ((1, 19, 21),(6, 69, 74), 2 ),
		polygon ((27, 8, 7),(88, 30, 29), 1 ),
		polygon ((28, 29, 30),(89, 90, 91), 1 ),
		polygon ((31, 32, 7),(92, 93, 29), 1 ),
		polygon ((33, 34, 28),(94, 95, 89), 1 ),
		polygon ((35, 36, 32),(96, 97, 93), 1 ),
		polygon ((35, 8, 36),(96, 30, 97), 1 ),
		polygon ((32, 31, 35),(93, 92, 96), 1 ),
		polygon ((37, 34, 38),(98, 95, 99), 1 ),
		polygon ((29, 38, 39),(90, 99, 100), 1 ),
		polygon ((39, 30, 29),(100, 91, 90), 1 ),
		polygon ((38, 34, 39),(99, 95, 100), 1 ),
		polygon ((36, 8, 27),(97, 30, 88), 1 ),
		polygon ((7, 9, 31),(29, 31, 92), 1 ),
		polygon ((28, 34, 37),(89, 95, 98), 1 ),
		polygon ((3, 2, 6),(14, 10, 28), 0 ),
		polygon ((6, 5, 3),(28, 27, 15), 0 ),
		polygon ((4, 25, 1),(21, 83, 6), 0 ),
		polygon ((30, 33, 28),(91, 94, 89), 1 ),
		polygon ((40, 41, 42),(101, 105, 110), 3 ),
		polygon ((42, 43, 40),(110, 114, 101), 3 ),
		polygon ((44, 45, 46),(117, 121, 126), 3 ),
		polygon ((46, 47, 44),(126, 130, 117), 3 ),
		polygon ((44, 47, 10),(118, 131, 32), 3 ),
		polygon ((10, 11, 44),(32, 37, 119), 3 ),
		polygon ((11, 10, 14),(37, 32, 51), 3 ),
		polygon ((14, 15, 11),(51, 54, 37), 3 ),
		polygon ((15, 14, 41),(54, 51, 106), 3 ),
		polygon ((41, 40, 15),(107, 102, 54), 3 ),
		polygon ((20, 43, 42),(70, 115, 111), 3 ),
		polygon ((42, 22, 20),(112, 75, 70), 3 ),
		polygon ((23, 46, 45),(76, 127, 122), 3 ),
		polygon ((45, 26, 23),(123, 84, 76), 3 ),
		polygon ((20, 22, 23),(70, 75, 76), 3 ),
		polygon ((23, 26, 20),(76, 84, 70), 3 ),
		polygon ((41, 14, 22),(108, 52, 75), 3 ),
		polygon ((22, 42, 41),(75, 113, 109), 3 ),
		polygon ((10, 47, 46),(33, 132, 128), 3 ),
		polygon ((46, 23, 10),(129, 77, 34), 3 ),
		polygon ((10, 23, 22),(35, 78, 75), 3 ),
		polygon ((22, 14, 10),(75, 53, 36), 3 ),
		polygon ((45, 44, 11),(124, 120, 38), 3 ),
		polygon ((11, 26, 45),(39, 85, 125), 3 ),
		polygon ((15, 20, 26),(55, 71, 86), 3 ),
		polygon ((26, 11, 15),(87, 40, 56), 3 ),
		polygon ((20, 15, 40),(72, 57, 103), 3 ),
		polygon ((40, 43, 20),(104, 116, 73), 3 )
	)
); /* end of polyset 'BackBoard2' */

polyset glass2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (GLASS ),
	casts_shadow = TRUE,
	vertices = ((cv((7.051808, 2.96465, -0.596686), 1)),
			(cv((7.051808, 2.288141, -0.596686), 1)),
			(cv((7.051808, 2.288141, 0.596683), 1)),
			(cv((7.051808, 2.96465, 0.596683), 1)),
			(cv((7.05083, 2.288141, 0.596683), 1)),
			(cv((7.05083, 2.288141, -0.596686), 1)),
			(cv((7.05083, 2.96465, -0.596686), 1)),
			(cv((7.05083, 2.96465, 0.596683), 1))	),
	texture_vertices = (
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 0 ),
		polygon ((6, 7, 4),(6, 7, 4), 0 )
	)
); /* end of polyset 'glass2' */

polyset decals2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (NBAdecal ),
	casts_shadow = TRUE,
	vertices = ((cv((7.056101, 2.308076, -0.505139), 1)),
			(cv((7.056101, 2.470653, -0.505139), 1)),
			(cv((7.056101, 2.470653, -0.576603), 1)),
			(cv((7.056101, 2.308076, -0.576603), 1)),
			(cv((7.046938, 2.308076, -0.576436), 1)),
			(cv((7.046938, 2.470653, -0.576436), 1)),
			(cv((7.046938, 2.470653, -0.504972), 1)),
			(cv((7.046938, 2.308076, -0.504972), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 0 ),
		polygon ((6, 7, 4),(6, 7, 4), 0 )
	)
); /* end of polyset 'decals2' */

polyset Rim2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (ORANGE ),
	shader = (HOOP ),
	casts_shadow = TRUE,
	vertices = ((cv((7.040316, 2.322238, 0.0), 1)),
			(cv((6.971979, 2.322238, 0.0), 1)),
			(cv((7.040316, 2.277873, 0.0), 1)),
			(cv((6.971978, 2.322238, 0.047477), 1)),
			(cv((6.971978, 2.322238, -0.042514), 1)),
			(cv((7.040316, 2.322238, -0.042416), 1)),
			(cv((7.040316, 2.322238, 0.047368), 1)),
			(cv((6.835176, 2.322238, 0.189638), 1)),
			(cv((6.952996, 2.301843, -0.042416), 1)),
			(cv((6.921905, 2.322238, 0.139564), 1)),
			(cv((6.921905, 2.322238, -0.134041), 1)),
			(cv((6.908104, 2.301843, -0.120171), 1)),
			(cv((6.952996, 2.301843, 0.047368), 1)),
			(cv((6.830349, 2.301843, -0.165063), 1)),
			(cv((6.830349, 2.342989, -0.165063), 1)),
			(cv((6.908104, 2.342989, -0.120171), 1)),
			(cv((6.952996, 2.342989, -0.042416), 1)),
			(cv((6.952996, 2.342989, 0.047368), 1)),
			(cv((6.908104, 2.342989, 0.125123), 1)),
			(cv((6.908104, 2.301843, 0.125123), 1)),
			(cv((6.830349, 2.342989, 0.170015), 1)),
			(cv((6.830349, 2.301843, 0.170015), 1)),
			(cv((6.66281, 2.342989, -0.120171), 1)),
			(cv((6.740565, 2.342989, -0.165063), 1)),
			(cv((6.740565, 2.301843, -0.165063), 1)),
			(cv((6.740565, 2.342989, 0.170015), 1)),
			(cv((6.740565, 2.301843, 0.170015), 1)),
			(cv((6.66281, 2.301843, 0.125123), 1)),
			(cv((6.66281, 2.342989, 0.125123), 1)),
			(cv((6.617918, 2.301843, 0.047368), 1)),
			(cv((6.617918, 2.342989, 0.047368), 1)),
			(cv((6.617918, 2.342989, -0.042416), 1)),
			(cv((6.617918, 2.301843, -0.042416), 1)),
			(cv((6.66281, 2.301843, -0.120171), 1)),
			(cv((6.835176, 2.322238, -0.184115), 1)),
			(cv((6.735029, 2.322238, -0.184115), 1)),
			(cv((6.6483, 2.322238, -0.134041), 1)),
			(cv((6.598226, 2.322238, -0.047312), 1)),
			(cv((6.598226, 2.322238, 0.052835), 1)),
			(cv((6.6483, 2.322238, 0.139564), 1)),
			(cv((6.735029, 2.322238, 0.189638), 1))	),
	texture_vertices = (
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.500000, 0.000000 ),
			st( 0.967775, 0.749460 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.002079, 0.759382 ),
			st( 1.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 0.005198, 0.006656 ),
			st( 0.967775, 0.008639 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ) ),
	polygons = (
		polygon ((2, 1, 0),(2, 1, 0), 0 ),
		polygon ((3, 4, 5),(3, 12, 17), 0 ),
		polygon ((5, 6, 3),(17, 18, 3), 0 ),
		polygon ((13, 11, 10),(25, 23, 22), 1 ),
		polygon ((4, 8, 3),(13, 20, 4), 1 ),
		polygon ((10, 11, 8),(22, 23, 20), 1 ),
		polygon ((8, 4, 10),(20, 14, 22), 1 ),
		polygon ((3, 8, 12),(5, 20, 24), 1 ),
		polygon ((13, 14, 11),(25, 26, 23), 1 ),
		polygon ((11, 14, 15),(23, 26, 27), 1 ),
		polygon ((15, 8, 11),(27, 20, 23), 1 ),
		polygon ((15, 16, 8),(27, 28, 20), 1 ),
		polygon ((16, 17, 8),(28, 29, 20), 1 ),
		polygon ((8, 17, 12),(20, 29, 24), 1 ),
		polygon ((12, 17, 18),(24, 29, 30), 1 ),
		polygon ((18, 19, 12),(30, 31, 24), 1 ),
		polygon ((19, 18, 20),(31, 30, 32), 1 ),
		polygon ((20, 21, 19),(32, 33, 31), 1 ),
		polygon ((22, 23, 24),(34, 35, 36), 1 ),
		polygon ((25, 21, 20),(37, 33, 32), 1 ),
		polygon ((21, 25, 26),(33, 37, 38), 1 ),
		polygon ((23, 13, 24),(35, 25, 36), 1 ),
		polygon ((23, 14, 13),(35, 26, 25), 1 ),
		polygon ((25, 27, 26),(37, 39, 38), 1 ),
		polygon ((25, 28, 27),(37, 40, 39), 1 ),
		polygon ((27, 28, 29),(39, 40, 41), 1 ),
		polygon ((29, 28, 30),(41, 40, 42), 1 ),
		polygon ((29, 30, 31),(41, 42, 43), 1 ),
		polygon ((31, 32, 29),(43, 44, 41), 1 ),
		polygon ((32, 31, 33),(44, 43, 45), 1 ),
		polygon ((33, 31, 22),(45, 43, 34), 1 ),
		polygon ((22, 24, 33),(34, 36, 45), 1 ),
		polygon ((16, 10, 4),(28, 22, 15), 1 ),
		polygon ((10, 16, 15),(22, 28, 27), 1 ),
		polygon ((10, 15, 14),(22, 27, 26), 1 ),
		polygon ((14, 34, 10),(26, 46, 22), 1 ),
		polygon ((14, 35, 34),(26, 47, 46), 1 ),
		polygon ((35, 14, 23),(47, 26, 35), 1 ),
		polygon ((35, 23, 22),(47, 35, 34), 1 ),
		polygon ((22, 36, 35),(34, 48, 47), 1 ),
		polygon ((22, 37, 36),(34, 49, 48), 1 ),
		polygon ((37, 22, 31),(49, 34, 43), 1 ),
		polygon ((37, 31, 30),(49, 43, 42), 1 ),
		polygon ((30, 38, 37),(42, 50, 49), 1 ),
		polygon ((30, 39, 38),(42, 51, 50), 1 ),
		polygon ((39, 30, 28),(51, 42, 40), 1 ),
		polygon ((39, 28, 25),(51, 40, 37), 1 ),
		polygon ((25, 40, 39),(37, 52, 51), 1 ),
		polygon ((25, 7, 40),(37, 19, 52), 1 ),
		polygon ((7, 25, 20),(19, 37, 32), 1 ),
		polygon ((7, 20, 18),(19, 32, 30), 1 ),
		polygon ((18, 9, 7),(30, 21, 19), 1 ),
		polygon ((18, 3, 9),(30, 6, 21), 1 ),
		polygon ((3, 18, 17),(7, 30, 29), 1 ),
		polygon ((3, 17, 16),(8, 29, 28), 1 ),
		polygon ((16, 4, 3),(28, 16, 9), 1 ),
		polygon ((19, 9, 3),(31, 21, 10), 1 ),
		polygon ((3, 12, 19),(11, 24, 31), 1 ),
		polygon ((19, 7, 9),(31, 19, 21), 1 ),
		polygon ((19, 21, 7),(31, 33, 19), 1 ),
		polygon ((21, 26, 7),(33, 38, 19), 1 ),
		polygon ((40, 7, 26),(52, 19, 38), 1 ),
		polygon ((26, 27, 39),(38, 39, 51), 1 ),
		polygon ((39, 40, 26),(51, 52, 38), 1 ),
		polygon ((39, 27, 29),(51, 39, 41), 1 ),
		polygon ((29, 38, 39),(41, 50, 51), 1 ),
		polygon ((38, 29, 37),(50, 41, 49), 1 ),
		polygon ((37, 29, 32),(49, 41, 44), 1 ),
		polygon ((33, 37, 32),(45, 49, 44), 1 ),
		polygon ((37, 33, 36),(49, 45, 48), 1 ),
		polygon ((35, 33, 24),(47, 45, 36), 1 ),
		polygon ((33, 35, 36),(45, 47, 48), 1 ),
		polygon ((13, 35, 24),(25, 47, 36), 1 ),
		polygon ((35, 13, 34),(47, 25, 46), 1 ),
		polygon ((10, 34, 13),(22, 46, 25), 1 )
	)
); /* end of polyset 'Rim2' */

polyset Net2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (NET ),
	casts_shadow = TRUE,
	vertices = ((cv((6.740565, 2.301843, 0.170015), 1)),
			(cv((6.750648, 2.200817, 0.131484), 1)),
			(cv((6.830349, 2.301843, 0.170015), 1)),
			(cv((6.819815, 2.200817, 0.131604), 1)),
			(cv((6.879776, 2.200817, 0.097125), 1)),
			(cv((6.845101, 1.946636, 0.06212), 1)),
			(cv((6.866932, 1.946636, 0.024307), 1)),
			(cv((6.854582, 2.044886, 0.071843), 1)),
			(cv((6.880005, 2.044886, 0.027987), 1)),
			(cv((6.66281, 2.301843, 0.125123), 1)),
			(cv((6.690807, 2.200817, 0.096795), 1)),
			(cv((6.656328, 2.200817, 0.036834), 1)),
			(cv((6.617918, 2.301843, 0.047368), 1)),
			(cv((6.908104, 2.301843, 0.125123), 1)),
			(cv((6.952996, 2.301843, 0.047368), 1)),
			(cv((6.914465, 2.200817, 0.037285), 1)),
			(cv((6.892798, 2.117504, 0.031238), 1)),
			(cv((6.864036, 2.117504, 0.081055), 1)),
			(cv((6.814219, 2.117504, 0.109816), 1)),
			(cv((6.756695, 2.117504, 0.109816), 1)),
			(cv((6.706878, 2.117504, 0.081055), 1)),
			(cv((6.759946, 2.044886, 0.097023), 1)),
			(cv((6.810638, 2.044886, 0.097112), 1)),
			(cv((6.71609, 2.044886, 0.071601), 1)),
			(cv((6.725813, 1.946636, 0.06212), 1)),
			(cv((6.763626, 1.946636, 0.083951), 1)),
			(cv((6.807288, 1.946636, 0.083951), 1)),
			(cv((6.914585, 2.200817, -0.031883), 1)),
			(cv((6.952996, 2.301843, -0.042416), 1)),
			(cv((6.908104, 2.301843, -0.120171), 1)),
			(cv((6.892798, 2.117504, -0.026286), 1)),
			(cv((6.864036, 2.117504, -0.076103), 1)),
			(cv((6.880106, 2.200817, -0.091844), 1)),
			(cv((6.880093, 2.044886, -0.022705), 1)),
			(cv((6.854824, 2.044886, -0.066649), 1)),
			(cv((6.866932, 1.946636, -0.019355), 1)),
			(cv((6.845101, 1.946636, -0.057168), 1)),
			(cv((6.810968, 2.044886, -0.092072), 1)),
			(cv((6.820266, 2.200817, -0.126532), 1)),
			(cv((6.830349, 2.301843, -0.165063), 1)),
			(cv((6.656449, 2.200817, -0.032333), 1)),
			(cv((6.678116, 2.117504, -0.026286), 1)),
			(cv((6.678116, 2.117504, 0.031238), 1)),
			(cv((6.740565, 2.301843, -0.165063), 1)),
			(cv((6.751098, 2.200817, -0.126653), 1)),
			(cv((6.691137, 2.200817, -0.092174), 1)),
			(cv((6.66281, 2.301843, -0.120171), 1)),
			(cv((6.617918, 2.301843, -0.042416), 1)),
			(cv((6.706878, 2.117504, -0.076103), 1)),
			(cv((6.756695, 2.117504, -0.104865), 1)),
			(cv((6.814219, 2.117504, -0.104865), 1)),
			(cv((6.760276, 2.044886, -0.09216), 1)),
			(cv((6.716332, 2.044886, -0.066891), 1)),
			(cv((6.690909, 2.044886, -0.023035), 1)),
			(cv((6.690821, 2.044886, 0.027656), 1)),
			(cv((6.807288, 1.946636, -0.078999), 1)),
			(cv((6.763626, 1.946636, -0.078999), 1)),
			(cv((6.725813, 1.946636, -0.057168), 1)),
			(cv((6.703982, 1.946636, -0.019355), 1)),
			(cv((6.703982, 1.946636, 0.024307), 1)),
			(cv((6.830349, 2.301843, 0.170015), 1)),
			(cv((6.750648, 2.200817, 0.131484), 1)),
			(cv((6.740565, 2.301843, 0.170015), 1)),
			(cv((6.879776, 2.200817, 0.097125), 1)),
			(cv((6.819815, 2.200817, 0.131604), 1)),
			(cv((6.854582, 2.044886, 0.071843), 1)),
			(cv((6.866932, 1.946636, 0.024307), 1)),
			(cv((6.845101, 1.946636, 0.06212), 1)),
			(cv((6.880005, 2.044886, 0.027987), 1)),
			(cv((6.66281, 2.301843, 0.125123), 1)),
			(cv((6.690807, 2.200817, 0.096795), 1)),
			(cv((6.656328, 2.200817, 0.036834), 1)),
			(cv((6.617918, 2.301843, 0.047368), 1)),
			(cv((6.908104, 2.301843, 0.125123), 1)),
			(cv((6.952996, 2.301843, 0.047368), 1)),
			(cv((6.914465, 2.200817, 0.037285), 1)),
			(cv((6.892798, 2.117504, 0.031238), 1)),
			(cv((6.864036, 2.117504, 0.081055), 1)),
			(cv((6.814219, 2.117504, 0.109816), 1)),
			(cv((6.756695, 2.117504, 0.109816), 1)),
			(cv((6.706878, 2.117504, 0.081055), 1)),
			(cv((6.810638, 2.044886, 0.097112), 1)),
			(cv((6.759946, 2.044886, 0.097023), 1)),
			(cv((6.71609, 2.044886, 0.071601), 1)),
			(cv((6.725813, 1.946636, 0.06212), 1)),
			(cv((6.763626, 1.946636, 0.083951), 1)),
			(cv((6.807288, 1.946636, 0.083951), 1)),
			(cv((6.914585, 2.200817, -0.031883), 1)),
			(cv((6.952996, 2.301843, -0.042416), 1)),
			(cv((6.908104, 2.301843, -0.120171), 1)),
			(cv((6.892798, 2.117504, -0.026286), 1)),
			(cv((6.864036, 2.117504, -0.076103), 1)),
			(cv((6.880106, 2.200817, -0.091844), 1)),
			(cv((6.854824, 2.044886, -0.066649), 1)),
			(cv((6.880093, 2.044886, -0.022705), 1)),
			(cv((6.866932, 1.946636, -0.019355), 1)),
			(cv((6.845101, 1.946636, -0.057168), 1)),
			(cv((6.810968, 2.044886, -0.092072), 1)),
			(cv((6.820266, 2.200817, -0.126532), 1)),
			(cv((6.830349, 2.301843, -0.165063), 1)),
			(cv((6.678116, 2.117504, -0.026286), 1)),
			(cv((6.656449, 2.200817, -0.032333), 1)),
			(cv((6.678116, 2.117504, 0.031238), 1)),
			(cv((6.740565, 2.301843, -0.165063), 1)),
			(cv((6.751098, 2.200817, -0.126653), 1)),
			(cv((6.691137, 2.200817, -0.092174), 1)),
			(cv((6.66281, 2.301843, -0.120171), 1)),
			(cv((6.617918, 2.301843, -0.042416), 1)),
			(cv((6.706878, 2.117504, -0.076103), 1)),
			(cv((6.756695, 2.117504, -0.104865), 1)),
			(cv((6.814219, 2.117504, -0.104865), 1)),
			(cv((6.760276, 2.044886, -0.09216), 1)),
			(cv((6.716332, 2.044886, -0.066891), 1)),
			(cv((6.690909, 2.044886, -0.023035), 1)),
			(cv((6.690821, 2.044886, 0.027656), 1)),
			(cv((6.807288, 1.946636, -0.078999), 1)),
			(cv((6.763626, 1.946636, -0.078999), 1)),
			(cv((6.725813, 1.946636, -0.057168), 1)),
			(cv((6.703982, 1.946636, -0.019355), 1)),
			(cv((6.703982, 1.946636, 0.024307), 1))	),
	texture_vertices = (
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.704342 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.704342 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((3, 4, 2),(3, 4, 2), 0 ),
		polygon ((3, 2, 1),(3, 2, 1), 0 ),
		polygon ((5, 6, 7),(5, 6, 7), 0 ),
		polygon ((8, 7, 6),(8, 7, 6), 0 ),
		polygon ((1, 0, 9),(1, 0, 9), 0 ),
		polygon ((9, 10, 1),(9, 10, 1), 0 ),
		polygon ((9, 11, 10),(9, 11, 10), 0 ),
		polygon ((11, 9, 12),(11, 9, 12), 0 ),
		polygon ((4, 13, 2),(4, 13, 2), 0 ),
		polygon ((4, 14, 13),(4, 14, 13), 0 ),
		polygon ((14, 4, 15),(14, 4, 15), 0 ),
		polygon ((4, 16, 15),(4, 16, 15), 0 ),
		polygon ((16, 4, 17),(16, 4, 17), 0 ),
		polygon ((4, 18, 17),(4, 18, 17), 0 ),
		polygon ((4, 3, 18),(4, 3, 18), 0 ),
		polygon ((18, 1, 19),(18, 1, 19), 0 ),
		polygon ((1, 18, 3),(1, 18, 3), 0 ),
		polygon ((20, 19, 1),(20, 19, 1), 0 ),
		polygon ((20, 1, 10),(20, 1, 10), 0 ),
		polygon ((18, 21, 22),(18, 21, 22), 0 ),
		polygon ((22, 7, 18),(22, 7, 18), 0 ),
		polygon ((17, 18, 7),(17, 18, 7), 0 ),
		polygon ((8, 16, 7),(8, 16, 7), 0 ),
		polygon ((21, 18, 19),(21, 18, 19), 0 ),
		polygon ((21, 20, 23),(21, 20, 23), 0 ),
		polygon ((20, 21, 19),(20, 21, 19), 0 ),
		polygon ((23, 24, 21),(23, 24, 21), 0 ),
		polygon ((24, 25, 21),(24, 25, 21), 0 ),
		polygon ((25, 26, 21),(25, 26, 21), 0 ),
		polygon ((22, 21, 26),(22, 21, 26), 0 ),
		polygon ((7, 22, 26),(7, 22, 26), 0 ),
		polygon ((7, 26, 5),(7, 26, 5), 0 ),
		polygon ((27, 14, 15),(27, 14, 15), 0 ),
		polygon ((28, 14, 27),(28, 14, 27), 0 ),
		polygon ((27, 29, 28),(27, 29, 28), 0 ),
		polygon ((27, 15, 16),(27, 15, 16), 0 ),
		polygon ((30, 27, 16),(30, 27, 16), 0 ),
		polygon ((30, 31, 27),(30, 31, 27), 0 ),
		polygon ((32, 27, 31),(32, 27, 31), 0 ),
		polygon ((31, 33, 34),(31, 33, 34), 0 ),
		polygon ((33, 31, 30),(33, 31, 30), 0 ),
		polygon ((33, 30, 16),(33, 30, 16), 0 ),
		polygon ((8, 33, 16),(8, 33, 16), 0 ),
		polygon ((17, 7, 16),(17, 7, 16), 0 ),
		polygon ((33, 6, 35),(33, 6, 35), 0 ),
		polygon ((6, 33, 8),(6, 33, 8), 0 ),
		polygon ((35, 36, 33),(35, 36, 33), 0 ),
		polygon ((34, 33, 36),(34, 33, 36), 0 ),
		polygon ((37, 34, 36),(37, 34, 36), 0 ),
		polygon ((31, 34, 37),(31, 34, 37), 0 ),
		polygon ((38, 32, 31),(38, 32, 31), 0 ),
		polygon ((39, 29, 38),(39, 29, 38), 0 ),
		polygon ((11, 40, 41),(11, 40, 41), 0 ),
		polygon ((29, 27, 32),(29, 27, 32), 0 ),
		polygon ((38, 29, 32),(38, 29, 32), 0 ),
		polygon ((20, 11, 42),(20, 11, 42), 0 ),
		polygon ((38, 43, 39),(38, 43, 39), 0 ),
		polygon ((43, 38, 44),(43, 38, 44), 0 ),
		polygon ((43, 44, 45),(43, 44, 45), 0 ),
		polygon ((46, 43, 45),(46, 43, 45), 0 ),
		polygon ((40, 47, 45),(40, 47, 45), 0 ),
		polygon ((46, 45, 47),(46, 45, 47), 0 ),
		polygon ((11, 47, 40),(11, 47, 40), 0 ),
		polygon ((12, 47, 11),(12, 47, 11), 0 ),
		polygon ((41, 45, 48),(41, 45, 48), 0 ),
		polygon ((45, 41, 40),(45, 41, 40), 0 ),
		polygon ((49, 48, 45),(49, 48, 45), 0 ),
		polygon ((49, 45, 44),(49, 45, 44), 0 ),
		polygon ((44, 38, 49),(44, 38, 49), 0 ),
		polygon ((50, 49, 38),(50, 49, 38), 0 ),
		polygon ((31, 50, 38),(31, 50, 38), 0 ),
		polygon ((37, 50, 31),(37, 50, 31), 0 ),
		polygon ((37, 49, 50),(37, 49, 50), 0 ),
		polygon ((49, 37, 51),(49, 37, 51), 0 ),
		polygon ((49, 51, 52),(49, 51, 52), 0 ),
		polygon ((48, 49, 52),(48, 49, 52), 0 ),
		polygon ((53, 41, 52),(53, 41, 52), 0 ),
		polygon ((48, 52, 41),(48, 52, 41), 0 ),
		polygon ((53, 54, 41),(53, 54, 41), 0 ),
		polygon ((36, 55, 37),(36, 55, 37), 0 ),
		polygon ((55, 56, 37),(55, 56, 37), 0 ),
		polygon ((51, 37, 56),(51, 37, 56), 0 ),
		polygon ((52, 51, 56),(52, 51, 56), 0 ),
		polygon ((52, 56, 57),(52, 56, 57), 0 ),
		polygon ((52, 58, 53),(52, 58, 53), 0 ),
		polygon ((58, 52, 57),(58, 52, 57), 0 ),
		polygon ((54, 53, 58),(54, 53, 58), 0 ),
		polygon ((58, 59, 54),(58, 59, 54), 0 ),
		polygon ((54, 24, 23),(54, 24, 23), 0 ),
		polygon ((24, 54, 59),(24, 54, 59), 0 ),
		polygon ((20, 54, 23),(20, 54, 23), 0 ),
		polygon ((42, 41, 54),(42, 41, 54), 0 ),
		polygon ((42, 11, 41),(42, 11, 41), 0 ),
		polygon ((11, 20, 10),(11, 20, 10), 0 ),
		polygon ((54, 20, 42),(54, 20, 42), 0 ),
		polygon ((60, 61, 62),(60, 61, 62), 0 ),
		polygon ((60, 63, 64),(60, 63, 64), 0 ),
		polygon ((61, 60, 64),(61, 60, 64), 0 ),
		polygon ((65, 66, 67),(65, 66, 67), 0 ),
		polygon ((66, 65, 68),(66, 65, 68), 0 ),
		polygon ((69, 62, 61),(69, 62, 61), 0 ),
		polygon ((61, 70, 69),(61, 70, 69), 0 ),
		polygon ((70, 71, 69),(70, 71, 69), 0 ),
		polygon ((72, 69, 71),(72, 69, 71), 0 ),
		polygon ((60, 73, 63),(60, 73, 63), 0 ),
		polygon ((73, 74, 63),(73, 74, 63), 0 ),
		polygon ((75, 63, 74),(75, 63, 74), 0 ),
		polygon ((75, 76, 63),(75, 76, 63), 0 ),
		polygon ((77, 63, 76),(77, 63, 76), 0 ),
		polygon ((77, 78, 63),(77, 78, 63), 0 ),
		polygon ((78, 64, 63),(78, 64, 63), 0 ),
		polygon ((79, 61, 78),(79, 61, 78), 0 ),
		polygon ((64, 78, 61),(64, 78, 61), 0 ),
		polygon ((61, 79, 80),(61, 79, 80), 0 ),
		polygon ((70, 61, 80),(70, 61, 80), 0 ),
		polygon ((81, 82, 78),(81, 82, 78), 0 ),
		polygon ((78, 65, 81),(78, 65, 81), 0 ),
		polygon ((65, 78, 77),(65, 78, 77), 0 ),
		polygon ((65, 76, 68),(65, 76, 68), 0 ),
		polygon ((79, 78, 82),(79, 78, 82), 0 ),
		polygon ((83, 80, 82),(83, 80, 82), 0 ),
		polygon ((79, 82, 80),(79, 82, 80), 0 ),
		polygon ((82, 84, 83),(82, 84, 83), 0 ),
		polygon ((82, 85, 84),(82, 85, 84), 0 ),
		polygon ((82, 86, 85),(82, 86, 85), 0 ),
		polygon ((86, 82, 81),(86, 82, 81), 0 ),
		polygon ((86, 81, 65),(86, 81, 65), 0 ),
		polygon ((67, 86, 65),(67, 86, 65), 0 ),
		polygon ((75, 74, 87),(75, 74, 87), 0 ),
		polygon ((87, 74, 88),(87, 74, 88), 0 ),
		polygon ((88, 89, 87),(88, 89, 87), 0 ),
		polygon ((76, 75, 87),(76, 75, 87), 0 ),
		polygon ((76, 87, 90),(76, 87, 90), 0 ),
		polygon ((87, 91, 90),(87, 91, 90), 0 ),
		polygon ((91, 87, 92),(91, 87, 92), 0 ),
		polygon ((93, 94, 91),(93, 94, 91), 0 ),
		polygon ((90, 91, 94),(90, 91, 94), 0 ),
		polygon ((76, 90, 94),(76, 90, 94), 0 ),
		polygon ((76, 94, 68),(76, 94, 68), 0 ),
		polygon ((76, 65, 77),(76, 65, 77), 0 ),
		polygon ((95, 66, 94),(95, 66, 94), 0 ),
		polygon ((68, 94, 66),(68, 94, 66), 0 ),
		polygon ((94, 96, 95),(94, 96, 95), 0 ),
		polygon ((96, 94, 93),(96, 94, 93), 0 ),
		polygon ((96, 93, 97),(96, 93, 97), 0 ),
		polygon ((97, 93, 91),(97, 93, 91), 0 ),
		polygon ((91, 92, 98),(91, 92, 98), 0 ),
		polygon ((98, 89, 99),(98, 89, 99), 0 ),
		polygon ((100, 101, 71),(100, 101, 71), 0 ),
		polygon ((92, 87, 89),(92, 87, 89), 0 ),
		polygon ((92, 89, 98),(92, 89, 98), 0 ),
		polygon ((102, 71, 80),(102, 71, 80), 0 ),
		polygon ((99, 103, 98),(99, 103, 98), 0 ),
		polygon ((104, 98, 103),(104, 98, 103), 0 ),
		polygon ((105, 104, 103),(105, 104, 103), 0 ),
		polygon ((105, 103, 106),(105, 103, 106), 0 ),
		polygon ((105, 107, 101),(105, 107, 101), 0 ),
		polygon ((107, 105, 106),(107, 105, 106), 0 ),
		polygon ((101, 107, 71),(101, 107, 71), 0 ),
		polygon ((71, 107, 72),(71, 107, 72), 0 ),
		polygon ((108, 105, 100),(108, 105, 100), 0 ),
		polygon ((101, 100, 105),(101, 100, 105), 0 ),
		polygon ((105, 108, 109),(105, 108, 109), 0 ),
		polygon ((104, 105, 109),(104, 105, 109), 0 ),
		polygon ((109, 98, 104),(109, 98, 104), 0 ),
		polygon ((98, 109, 110),(98, 109, 110), 0 ),
		polygon ((98, 110, 91),(98, 110, 91), 0 ),
		polygon ((91, 110, 97),(91, 110, 97), 0 ),
		polygon ((110, 109, 97),(110, 109, 97), 0 ),
		polygon ((111, 97, 109),(111, 97, 109), 0 ),
		polygon ((112, 111, 109),(112, 111, 109), 0 ),
		polygon ((112, 109, 108),(112, 109, 108), 0 ),
		polygon ((112, 100, 113),(112, 100, 113), 0 ),
		polygon ((100, 112, 108),(100, 112, 108), 0 ),
		polygon ((100, 114, 113),(100, 114, 113), 0 ),
		polygon ((97, 115, 96),(97, 115, 96), 0 ),
		polygon ((97, 116, 115),(97, 116, 115), 0 ),
		polygon ((116, 97, 111),(116, 97, 111), 0 ),
		polygon ((116, 111, 112),(116, 111, 112), 0 ),
		polygon ((117, 116, 112),(117, 116, 112), 0 ),
		polygon ((113, 118, 112),(113, 118, 112), 0 ),
		polygon ((117, 112, 118),(117, 112, 118), 0 ),
		polygon ((118, 113, 114),(118, 113, 114), 0 ),
		polygon ((114, 119, 118),(114, 119, 118), 0 ),
		polygon ((83, 84, 114),(83, 84, 114), 0 ),
		polygon ((119, 114, 84),(119, 114, 84), 0 ),
		polygon ((83, 114, 80),(83, 114, 80), 0 ),
		polygon ((114, 100, 102),(114, 100, 102), 0 ),
		polygon ((100, 71, 102),(100, 71, 102), 0 ),
		polygon ((70, 80, 71),(70, 80, 71), 0 ),
		polygon ((102, 80, 114),(102, 80, 114), 0 )
	)
); /* end of polyset 'Net2' */

polyset GoalBase2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (cush4 ),
	shader = (WHITEPOST ),
	casts_shadow = TRUE,
	vertices = ((cv((9.01378, 0.883183, -0.201984), 1)),
			(cv((9.01378, 0.883183, 0.198972), 1)),
			(cv((9.01378, 1.31545, 0.198972), 1)),
			(cv((9.01378, 1.31545, -0.201984), 1)),
			(cv((9.01378, 0.399459, -0.402842), 1)),
			(cv((9.01378, 0.399459, 0.39983), 1)),
			(cv((8.814068, 1.31545, 0.0), 1)),
			(cv((8.814068, 1.31545, -0.201984), 1)),
			(cv((8.953828, 1.760046, 0.052033), 1)),
			(cv((9.01378, 1.31545, 0.0), 1)),
			(cv((8.814068, 1.31545, 0.198972), 1)),
			(cv((8.953828, 1.315352, 0.052033), 1)),
			(cv((10.67088, 0.000006, -0.403329), 1)),
			(cv((10.670881, 0.000006, 0.0), 1)),
			(cv((10.67088, 0.39915, 0.0), 1)),
			(cv((10.67088, 0.39915, -0.403329), 1)),
			(cv((10.67088, 0.000006, 0.400317), 1)),
			(cv((10.67088, 0.39915, 0.400317), 1)),
			(cv((8.814068, 0.000006, 0.400317), 1)),
			(cv((8.814068, 0.399459, -0.402842), 1)),
			(cv((8.814068, 0.399459, 0.39983), 1)),
			(cv((8.814068, 0.883183, -0.201984), 1)),
			(cv((8.814068, 0.883183, 0.198972), 1)),
			(cv((8.814068, 0.000006, -0.403329), 1)),
			(cv((8.953828, 1.760046, 0.083855), 1)),
			(cv((9.005686, 1.760046, 0.083855), 1)),
			(cv((8.953828, 1.760046, -0.052047), 1)),
			(cv((9.005686, 1.760046, -0.052047), 1)),
			(cv((9.005686, 1.315352, -0.052047), 1)),
			(cv((8.953828, 1.315352, -0.052047), 1)),
			(cv((9.005686, 1.315352, 0.083855), 1)),
			(cv((8.953828, 1.315352, 0.083855), 1)),
			(cv((8.953828, 1.315352, -0.083869), 1)),
			(cv((9.005686, 1.315352, -0.083869), 1)),
			(cv((8.953828, 1.760046, -0.083869), 1)),
			(cv((9.005686, 1.760046, -0.083869), 1)),
			(cv((9.005686, 1.315352, 0.052033), 1)),
			(cv((9.005686, 1.760046, 0.052033), 1))	),
	texture_vertices = (
			st( 0.961765, 0.682541 ),
			st( 0.571782, 0.731341 ),
			st( 0.571782, 0.731341 ),
			st( 0.570110, 0.731341 ),
			st( 0.726952, 0.683213 ),
			st( 0.574240, 0.700595 ),
			st( 0.574240, 0.700595 ),
			st( 0.726952, 0.997310 ),
			st( 0.574648, 0.996116 ),
			st( 0.574900, 0.997798 ),
			st( 0.574900, 0.997798 ),
			st( 0.964496, 0.997774 ),
			st( 0.574648, 0.996116 ),
			st( 0.574648, 0.996116 ),
			st( 0.570957, 0.999119 ),
			st( 0.964496, 0.345047 ),
			st( 0.570110, 0.355653 ),
			st( 0.570110, 0.355653 ),
			st( 0.560652, 0.364603 ),
			st( 0.725662, 0.345634 ),
			st( 0.561841, 1.000000 ),
			st( 0.561841, 1.000000 ),
			st( 0.571405, 0.364065 ),
			st( 0.571405, 0.364065 ),
			st( 0.704249, 0.871387 ),
			st( 0.704190, 0.996506 ),
			st( 0.699159, 1.000000 ),
			st( 0.699580, 0.999791 ),
			st( 0.699580, 0.999791 ),
			st( 1.000000, 0.250000 ),
			st( 0.790139, 0.147953 ),
			st( 1.000000, 0.250000 ),
			st( 0.574479, 0.870934 ),
			st( 0.704190, 0.996506 ),
			st( 0.962701, 0.997573 ),
			st( 0.962701, 0.997573 ),
			st( 0.699455, 0.997775 ),
			st( 0.000000, 0.250000 ),
			st( 0.005248, 0.002385 ),
			st( 0.002926, 0.000000 ),
			st( 0.295500, 0.002385 ),
			st( 0.295500, 0.370420 ),
			st( 0.005248, 0.370420 ),
			st( 0.002926, 0.355494 ),
			st( 0.002926, 0.355494 ),
			st( 0.002228, 0.365902 ),
			st( 0.002228, 0.365902 ),
			st( 0.005248, 0.002385 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.005248, 0.370420 ),
			st( 0.000000, 1.000000 ),
			st( 0.002049, 0.365119 ),
			st( 0.996744, 0.001706 ),
			st( 0.699212, 0.000000 ),
			st( 0.697936, 0.365525 ),
			st( 0.695623, 0.352699 ),
			st( 0.699580, 0.355653 ),
			st( 0.995530, 0.365291 ),
			st( 0.699436, 0.365980 ),
			st( 0.699436, 0.365980 ),
			st( 0.700346, 0.364938 ),
			st( 0.697937, 0.699329 ),
			st( 0.699580, 0.731341 ),
			st( 0.699580, 0.731341 ),
			st( 0.699580, 0.731341 ),
			st( 0.967997, 0.698498 ),
			st( 0.967801, 0.698498 ),
			st( 0.700393, 0.700648 ),
			st( 0.700393, 0.700648 ),
			st( 0.700393, 0.700648 ),
			st( 0.700393, 0.700648 ),
			st( 0.699159, 0.001900 ),
			st( 0.695623, 0.001347 ),
			st( 0.695623, 0.001347 ),
			st( 0.457387, 0.133831 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 1.000000, 0.500000 ),
			st( 0.455496, 0.647953 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.250000 ),
			st( 0.790139, 0.147953 ),
			st( 0.996219, 0.009542 ),
			st( 0.797702, 0.651839 ),
			st( 0.797702, 0.651839 ),
			st( 1.000000, 1.000000 ),
			st( 0.002832, 0.003999 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.750000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.500000 ),
			st( 0.000000, 0.750000 ),
			st( 1.000000, 0.500000 ),
			st( 0.457387, 0.133831 ),
			st( 0.457387, 0.133831 ),
			st( 1.000000, 0.750000 ),
			st( 0.455496, 0.647953 ),
			st( 1.000000, 0.750000 ),
			st( 1.000000, 0.750000 ),
			st( 0.002832, 0.003999 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.996219, 0.009542 ),
			st( 0.797702, 0.651839 ),
			st( 0.797702, 0.651839 ),
			st( 1.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 4, 7), 0 ),
		polygon ((2, 3, 0),(7, 11, 0), 0 ),
		polygon ((4, 5, 1),(15, 19, 4), 0 ),
		polygon ((1, 0, 4),(4, 0, 15), 0 ),
		polygon ((6, 7, 3),(24, 25, 12), 0 ),
		polygon ((3, 9, 6),(13, 32, 24), 0 ),
		polygon ((10, 6, 9),(33, 24, 32), 0 ),
		polygon ((9, 2, 10),(32, 8, 33), 0 ),
		polygon ((12, 13, 14),(38, 40, 41), 0 ),
		polygon ((14, 15, 12),(41, 42, 38), 0 ),
		polygon ((13, 16, 17),(40, 47, 50), 0 ),
		polygon ((17, 14, 13),(50, 41, 40), 0 ),
		polygon ((18, 19, 20),(53, 55, 58), 0 ),
		polygon ((19, 21, 22),(55, 62, 66), 0 ),
		polygon ((22, 20, 19),(66, 58, 55), 0 ),
		polygon ((23, 19, 18),(72, 55, 53), 0 ),
		polygon ((10, 22, 21),(34, 67, 62), 0 ),
		polygon ((21, 7, 10),(62, 26, 35), 0 ),
		polygon ((23, 12, 15),(73, 39, 43), 0 ),
		polygon ((23, 15, 19),(74, 44, 56), 0 ),
		polygon ((0, 3, 7),(1, 14, 27), 0 ),
		polygon ((7, 21, 0),(28, 63, 2), 0 ),
		polygon ((4, 0, 21),(16, 3, 64), 0 ),
		polygon ((21, 19, 4),(65, 57, 17), 0 ),
		polygon ((5, 4, 15),(20, 18, 45), 0 ),
		polygon ((15, 17, 5),(46, 51, 21), 0 ),
		polygon ((2, 1, 22),(9, 5, 68), 0 ),
		polygon ((22, 10, 2),(69, 36, 10), 0 ),
		polygon ((20, 17, 16),(59, 52, 48), 0 ),
		polygon ((16, 18, 20),(49, 54, 60), 0 ),
		polygon ((22, 1, 5),(70, 6, 22), 0 ),
		polygon ((5, 20, 22),(23, 61, 71), 0 ),
		polygon ((32, 33, 34),(96, 97, 98), 1 ),
		polygon ((33, 35, 34),(97, 101, 98), 1 ),
		polygon ((36, 37, 8),(105, 108, 29), 1 ),
		polygon ((8, 11, 36),(29, 37, 105), 1 ),
		polygon ((24, 8, 37),(75, 30, 109), 1 ),
		polygon ((37, 25, 24),(110, 80, 75), 1 ),
		polygon ((26, 27, 28),(84, 86, 90), 1 ),
		polygon ((28, 29, 26),(90, 93, 84), 1 ),
		polygon ((29, 32, 34),(93, 96, 98), 1 ),
		polygon ((34, 26, 29),(98, 84, 93), 1 ),
		polygon ((25, 37, 36),(81, 111, 106), 1 ),
		polygon ((36, 30, 25),(107, 94, 82), 1 ),
		polygon ((24, 30, 31),(76, 94, 95), 1 ),
		polygon ((24, 25, 30),(77, 83, 94), 1 ),
		polygon ((24, 31, 11),(78, 95, 37), 1 ),
		polygon ((11, 8, 24),(37, 31, 79), 1 ),
		polygon ((27, 26, 34),(87, 85, 99), 1 ),
		polygon ((34, 35, 27),(100, 102, 88), 1 ),
		polygon ((28, 27, 35),(91, 89, 103), 1 ),
		polygon ((35, 33, 28),(104, 97, 92), 1 )
	)
); /* end of polyset 'GoalBase2' */

ENVIRONMENT
background ( 
        color = (0.0, 0.0, 0.0)
);
shader_glow ( 
,
        glow_type =  LINEAR_GLOW,
        halo_type =  LINEAR_GLOW,
        auto_exposure = ON,
        quality = 0.5,
        threshold = 0.0,
        glow_color = (100.0, 100.0, 100.0),
        glow_intensity = 1.0,
        glow_spread = 0.05,
        glow_eccentricity = 0.1,
        glow_radial_noise = 0.0,
        glow_star_level = 0.0,
        glow_opacity = 0.0,
        halo_color = (100.0, 100.0, 100.0),
        halo_intensity = 1.0,
        halo_spread = 0.3,
        halo_eccentricity = 0.1,
        halo_radial_noise = 0.0,
        halo_star_level = 0.0,
        halo_lens_flare = 0.0,
        rotation = 0.0,
        radial_noise_frequency = 0.5,
        star_points = 4.0
);
photo_effects ( 
,
        film_grain = 0.0,
        filter = (255.0, 255.0, 255.0)
);
master_light ( 
,
        intensity = 1.0,
        light_color = (255.0, 255.0, 255.0)
);
dynamics ( 
,
        gravity = 1.0,
        air_density = 0.05,
        Floor = ON,
        floor_offset = 0.0,
        ceiling = OFF,
        ceiling_offset = 20.0,
        left = OFF,
        left_offset = -10.0,
        right = OFF,
        right_offset = 10.0,
        front = OFF,
        front_offset = -10.0,
        back = OFF,
        back_offset = 10.0,
        wall_friction = 0.0,
        wall_elasticity = 0.707,
        turbulence_intensity = 0.0,
        turbulence_spread = 0.5,
        turbulence_persistence = 5.0,
        turbulence_animated = ON,
        turbulence_space_resolution =  16,
        turbulence_time_resolution =  16,
        turbulence_roughness = 0.5,
        turbulence_variability = 0.5,
        turbulence_granularity = 0.0
);

MODEL
/* Only expression assignments should appear above this line and below the MODEL directive. */
/* Placing any other commands in the above section will produce incorrect expression behaviour. */
{
	{
		instance GoalStand();
	}
	{
		instance BackBoard();
	}
	{
		instance glass();
	}
	{
		trn_ro(0.003318, 0.0, 0.0);
		trn_ri(-0.003318, 0.0, 0.0);
		trn_so(0.003318, 0.0, 0.0);
		trn_si(-0.003318, 0.0, 0.0);
		instance decals();
	}
	{
		trn_ro(-7.040316, 2.238399, 0.0);
		trn_ri(7.040316, -2.238399, 0.0);
		trn_so(-7.040316, 2.238399, 0.0);
		scale (0.955, 0.955, 0.955);
		trn_si(7.040316, -2.238399, 0.0);
		instance Rim();
	}
	{
		trn_ro(-7.040316, 2.238399, 0.0);
		trn_ri(7.040316, -2.238399, 0.0);
		trn_so(-7.040316, 2.238399, 0.0);
		scale (0.955, 0.955, 0.955);
		trn_si(7.040316, -2.238399, 0.0);
		instance Net();
	}
	{
		trn_ro(-7.040316, 2.238399, 0.0);
		trn_ri(7.040316, -2.238399, 0.0);
		trn_so(-7.040316, 2.238399, 0.0);
		trn_si(7.040316, -2.238399, 0.0);
		instance GoalBase();
	}
}
{
	{
		instance GoalStand2();
	}
	{
		instance BackBoard2();
	}
	{
		instance glass2();
	}
	{
		trn_ro(-0.003318, 0.0, 0.0);
		trn_ri(0.003318, 0.0, 0.0);
		trn_so(-0.003318, 0.0, 0.0);
		trn_si(0.003318, 0.0, 0.0);
		instance decals2();
	}
	{
		trn_ro(7.040316, 2.238399, -0.000001);
		trn_ri(-7.040316, -2.238399, 0.000001);
		trn_so(7.040316, 2.238399, -0.000001);
		trn_si(-7.040316, -2.238399, 0.000001);
		instance Rim2();
	}
	{
		trn_ro(7.040316, 2.238399, -0.000001);
		trn_ri(-7.040316, -2.238399, 0.000001);
		trn_so(7.040316, 2.238399, -0.000001);
		trn_si(-7.040316, -2.238399, 0.000001);
		instance Net2();
	}
	{
		trn_ro(7.040316, 2.238399, -0.000001);
		trn_ri(-7.040316, -2.238399, 0.000001);
		trn_so(7.040316, 2.238399, -0.000001);
		trn_si(-7.040316, -2.238399, 0.000001);
		instance GoalBase2();
	}
}
{
	{
		trn(15.135677, 11.857121, -15.760834);
		camera (
			perspective = TRUE,
			eye   = ( 0.0,  0.0,  0.0),
			active = ON,
			pix   = "pix/Goalshi4.sdl",
			view  = Camera#2_view,
			up  = Camera#2_up,
			aov = 55.0,
			filmaperture_x = 0.4,
			filmaperture_y = 0.285,
			filmoffset_x = 0.0,
			filmoffset_y = 0.0,
			placement_fit_code = 0,
			placement_shift = 0.0,
			aspect   = pixel_aspect,
			aspect_ratio_pixel = pixel_aspect,
			near = 0.1,
			far = 200.0,
			depth_of_field = 0.0,
			scaling_factor = 1.0,
			f_stop = 3.5,
			focal_distance = 12.0,
			auto_focus = OFF,
			motion_blur = 0.0
		);
	}
	{
		trn(14.595729, 11.482368, -15.256224);
		Camera#2_view = current_position( (0, 0, 0) );
	}
	{
		trn(14.805253, 12.749005, -15.452032);
		Camera#2_up = current_position( (0, 0, 0) );
	}
}
{
	{
		trn(4.800518, 3.456828, 3.02819);
		camera (
			perspective = TRUE,
			eye   = ( 0.0,  0.0,  0.0),
			active = ON,
			pix   = "pix/Goalshi4.sdl_Camera",
			view  = Camera_view,
			up  = Camera_up,
			aov = 55.0,
			filmaperture_x = 0.4,
			filmaperture_y = 0.285,
			filmoffset_x = 0.0,
			filmoffset_y = 0.0,
			placement_fit_code = 0,
			placement_shift = 0.0,
			aspect   = pixel_aspect,
			aspect_ratio_pixel = pixel_aspect,
			near = 0.1,
			far = 200.0,
			depth_of_field = 0.0,
			scaling_factor = 1.0,
			f_stop = 3.5,
			focal_distance = 12.0,
			auto_focus = OFF,
			motion_blur = 0.0
		);
	}
	{
		trn(6.080639, 2.774873, 1.603672);
		Camera_view = current_position( (0, 0, 0) );
	}
	{
		trn(5.024731, 4.398885, 2.778686);
		Camera_up = current_position( (0, 0, 0) );
	}
}

