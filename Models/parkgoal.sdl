DEFINITION	/* ALIAS SDL File Version 8.5 */
			/* Apparently from wire file '/matt/mgilmore/user_data/NBAonNBC/wire/FLOORS/PARK/park09Bgoals'. */
	version = 8.5;

	xleft  = 0;
	xright = 1279;
	ylow   = 0;
	yhigh  = 1023;
	resolution = 1280 1024;
	aalevelmin   = 3;
	aalevelmax   = 12;
	aathreshold  = 0.6;
	post_filter   = OFF;
	post_center   = 8;    /* Values for a bartlet filter. */
	post_adjacent = 1;
	post_diagonal = 1;

	composite_rendering = OFF;
	invisible_objects_cast_shadows = OFF;
	image_format = ALIAS;
	jitter       = ON;
	reduced_samples = OFF;
	textures_active    = ON;

	clamp_bumpsize = 0.0;

	up = yaxis;

	motion_blur_on = OFF;
	shutter_angle  = 144.0;
	animation  = OFF;
	startframe = 0.0;
	endframe = 0.0;
	fields          = FALSE;
	odd             = FALSE;
	even            = FALSE;
	odd_field_first = TRUE;

	triple Camera_view(0.0, 0.0, 0.0);
	triple Camera_up(0.0, 0.0, 0.0);

	subdivision_recursion_limit = 2;
	grid_cache = 4000;
	bbox_memory = FULL;
	rt_voxel_res_type = AUTOMATIC;

	max_reflections             = 10;
	max_refractions             = 10;
	max_shadow_level            = 10;
	preview_ray_trace           = OFF;

	scalar pixel_aspect ( 1.0 );
	hline_to_fill_color  = FALSE;
	hline_fill_color     = (255.0, 255.0, 255.0);
	hline_line_color     = (0.0, 255.0, 255.0);
	hline_isoparam_u     = 0;
	hline_isoparam_v     = 0;

	show_particles       = TRUE;
	simulation_substeps  = 1;
	simulation_frames_per_second = 30;

xform     Projection_tform;
xform     Projection_tform#6;
triple Lightview(0.0, 0.0, 0.0);
triple Lightup(0.0, 0.0, 0.0);

light Light ( model = ambient,
	active = ON,
	exclusive = FALSE,
	light_emission = ON,
	color = (255.0, 255.0, 255.0),
	shadow_color = (0.0, 0.0, 0.0),
	intensity = 1.0,
	force_type = OFF,
	force_intensity = 1.0,
	warp = OFF,
	glow_type = OFF,
	halo_type = OFF,
	fog_type = OFF,
	flare = OFF,
	psys_emission = OFF,
	shadow = FALSE,
	soft_shadows = FALSE,
	light_radius = 1.0,
	shadow_samples = 2.0,
	use_shadow_map = 0.0,
	ambient_shade = 0.011628
);

texture ORANGEtexture (
        procedure = file,
        rgbout = (255.0, 71.347153, 0.0),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/bracket.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader ORANGE ( model = lambert,
        diffuse = 0.8,
        color = ORANGEtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture HOOPtexture (
        procedure = file,
        rgbout = (255.0, 71.347153, 0.0),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/hoop.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader HOOP ( model = lambert,
        diffuse = 0.8,
        color = HOOPtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture TARGETtexture (
        procedure = file,
        rgbout = (255.0, 254.555023, 248.393784),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/target.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader TARGET ( model = lambert,
        diffuse = 0.8,
        color = TARGETtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture NETtexture (
        procedure = file,
        rgbout = (151.943008, 143.597137, 99.983223),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/net.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = -0.01,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader NET ( model = lambert,
        diffuse = 0.8,
        color = NETtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture grassfile (
        procedure = file,
        rgbout = (18.497383, 0.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/grssfrng.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.05814,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = OFF,
        vwrap = OFF,
        invert = OFF
);

shader grass ( model = lambert,
        diffuse = 0.8,
        color = grassfile,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture poleart (
        procedure = file,
        rgbout = (18.497383, 0.0, 255.0),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/pole1.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.05814,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = OFF,
        vwrap = OFF,
        invert = OFF
);

shader pole ( model = lambert,
        diffuse = 0.8,
        color = poleart,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture splattertexture (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/parkbrd.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader splatterboard ( model = lambert,
        diffuse = 0.8,
        color = splattertexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture cush_image (
        procedure = file,
        rgbout = (18.497383, 0.0, 255.0),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/cush4.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.05814,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = OFF,
        vwrap = OFF,
        invert = OFF
);

shader cush ( model = lambert,
        diffuse = 0.8,
        color = cush_image,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture Projection (
        procedure = Projection,
        xform_name = Projection_tform#6,
        rgbout = (255.0, 71.347153, 0.0),
        active = ON,
        sfile_type =  PLANAR,
        xamplitude = 0.0,
        yamplitude = 0.0,
        ratio = 0.3,
        level_min = 0.0,
        level_max = 10.0,
        xripples = 1.0,
        yripples = 1.0,
        zripples = 1.0,
        stagger = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        wrap = ON,
        blend = 0.0,
        invert = OFF
);

shader projector ( model = lambert,
        diffuse = 0.8,
        color = Projection,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture splattertexture2 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/parkbrd.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader vinyl_board ( model = lambert,
        diffuse = 0.8,
        color = splattertexture2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture Projection2 (
        procedure = Projection,
        xform_name = Projection_tform,
        rgbout = (255.0, 71.347153, 0.0),
        active = ON,
        sfile_type =  PLANAR,
        xamplitude = 0.0,
        yamplitude = 0.0,
        ratio = 0.3,
        level_min = 0.0,
        level_max = 10.0,
        xripples = 1.0,
        yripples = 1.0,
        zripples = 1.0,
        stagger = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        wrap = ON,
        blend = 0.0,
        invert = OFF
);

shader projector2 ( model = lambert,
        diffuse = 0.8,
        color = Projection2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

polyset park_goal_grass1 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (grass ),
	casts_shadow = TRUE,
	vertices = ((cv((8.842647, 0.0, -0.060761), 1)),
			(cv((8.765566, 0.171198, -0.087907), 1)),
			(cv((8.805081, 0.171198, 0.148227), 1)),
			(cv((8.868864, 0.0, 0.09591), 1)),
			(cv((9.029337, 0.171198, 0.232072), 1)),
			(cv((9.017653, 0.0, 0.15154), 1)),
			(cv((8.950306, 0.171198, -0.240196), 1)),
			(cv((8.965218, 0.0, -0.1618), 1)),
			(cv((9.114008, 0.0, -0.106171), 1)),
			(cv((9.174562, 0.171198, -0.15635), 1)),
			(cv((9.140225, 0.0, 0.0505), 1)),
			(cv((9.214077, 0.171198, 0.079784), 1)),
			(cv((8.944415, 0.0, 0.074369), 1)),
			(cv((8.901103, 0.325603, 0.144151), 1)),
			(cv((9.070061, 0.325603, 0.144151), 1)),
			(cv((9.017653, 0.0, 0.15154), 1)),
			(cv((9.029337, 0.171198, 0.232072), 1)),
			(cv((9.214077, 0.171198, 0.079784), 1)),
			(cv((8.944416, 0.0, -0.078581), 1)),
			(cv((8.901103, 0.325603, -0.148493), 1)),
			(cv((8.816624, 0.325603, -0.002171), 1)),
			(cv((8.900263, 0.0, -0.002106), 1)),
			(cv((8.901103, 0.325603, 0.144151), 1)),
			(cv((8.944415, 0.0, 0.074369), 1)),
			(cv((9.070061, 0.325603, -0.148493), 1)),
			(cv((9.032721, 0.0, -0.078581), 1)),
			(cv((9.076874, 0.0, -0.002106), 1)),
			(cv((9.15454, 0.325603, -0.002171), 1)),
			(cv((9.032721, 0.0, 0.074369), 1)),
			(cv((9.070061, 0.325603, 0.144151), 1))	),
	texture_vertices = (
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((3, 2, 4),(3, 2, 4), 0 ),
		polygon ((4, 5, 3),(4, 5, 3), 0 ),
		polygon ((0, 6, 1),(0, 6, 1), 0 ),
		polygon ((6, 0, 7),(6, 0, 7), 0 ),
		polygon ((6, 7, 8),(6, 7, 8), 0 ),
		polygon ((8, 9, 6),(8, 9, 6), 0 ),
		polygon ((9, 8, 10),(9, 8, 10), 0 ),
		polygon ((10, 11, 9),(10, 11, 9), 0 ),
		polygon ((11, 10, 5),(11, 10, 5), 0 ),
		polygon ((12, 13, 14),(12, 13, 14), 0 ),
		polygon ((15, 16, 17),(15, 16, 17), 0 ),
		polygon ((18, 19, 20),(18, 19, 20), 0 ),
		polygon ((20, 21, 18),(20, 21, 18), 0 ),
		polygon ((21, 20, 22),(21, 20, 22), 0 ),
		polygon ((22, 23, 21),(22, 23, 21), 0 ),
		polygon ((18, 24, 19),(18, 24, 19), 0 ),
		polygon ((24, 18, 25),(24, 18, 25), 0 ),
		polygon ((24, 25, 26),(24, 25, 26), 0 ),
		polygon ((26, 27, 24),(26, 27, 24), 0 ),
		polygon ((27, 26, 28),(27, 26, 28), 0 ),
		polygon ((28, 29, 27),(28, 29, 27), 0 ),
		polygon ((29, 28, 23),(29, 28, 23), 0 )
	)
); /* end of polyset 'park_goal_grass1' */

polyset park_goal_target_1 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (cush ),
	shader = (TARGET ),
	casts_shadow = TRUE,
	vertices = ((cv((7.697901, 2.324613, -0.201584), 1)),
			(cv((7.697901, 2.62251, -0.201584), 1)),
			(cv((7.697901, 2.62251, 0.196796), 1)),
			(cv((7.697901, 2.586275, 0.160562), 1)),
			(cv((7.697901, 2.360827, -0.165229), 1)),
			(cv((7.697901, 2.360827, 0.160562), 1)),
			(cv((7.697901, 2.324613, 0.196796), 1)),
			(cv((7.697901, 2.586275, -0.165229), 1))	),
	texture_vertices = (
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.900000, 0.000000 ) ),
	polygons = (
		polygon ((4, 1, 7),(4, 1, 7), 1 ),
		polygon ((6, 0, 4),(6, 0, 4), 1 ),
		polygon ((4, 5, 6),(4, 5, 6), 1 ),
		polygon ((7, 1, 3),(7, 1, 3), 1 ),
		polygon ((0, 1, 4),(0, 1, 4), 1 ),
		polygon ((3, 1, 2),(3, 1, 2), 1 ),
		polygon ((5, 3, 2),(5, 3, 2), 1 ),
		polygon ((2, 6, 5),(2, 6, 5), 1 )
	)
); /* end of polyset 'park_goal_target_1' */

polyset park_Rim1 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (ORANGE ),
	shader = (HOOP ),
	casts_shadow = TRUE,
	vertices = ((cv((7.704092, 2.322238, -0.002394), 1)),
			(cv((7.64829, 2.322238, -0.002394), 1)),
			(cv((7.704092, 2.277873, -0.002394), 1)),
			(cv((7.64829, 2.322238, 0.045083), 1)),
			(cv((7.64829, 2.322238, -0.044907), 1)),
			(cv((7.704092, 2.322238, -0.04481), 1)),
			(cv((7.704092, 2.322238, 0.044974), 1)),
			(cv((7.64829, 2.322238, -0.044907), 1)),
			(cv((7.629308, 2.301843, -0.04481), 1)),
			(cv((7.64829, 2.322238, 0.045083), 1)),
			(cv((7.598217, 2.322238, -0.136435), 1)),
			(cv((7.584416, 2.301843, -0.122565), 1)),
			(cv((7.629308, 2.301843, 0.044974), 1)),
			(cv((7.506661, 2.301843, -0.167457), 1)),
			(cv((7.506661, 2.342989, -0.167457), 1)),
			(cv((7.584416, 2.342989, -0.122565), 1)),
			(cv((7.629308, 2.342989, -0.04481), 1)),
			(cv((7.629308, 2.342989, 0.044974), 1)),
			(cv((7.584416, 2.342989, 0.122729), 1)),
			(cv((7.584416, 2.301843, 0.122729), 1)),
			(cv((7.506661, 2.342989, 0.167621), 1)),
			(cv((7.506661, 2.301843, 0.167621), 1)),
			(cv((7.339122, 2.342989, -0.122565), 1)),
			(cv((7.416877, 2.342989, -0.167457), 1)),
			(cv((7.416877, 2.301843, -0.167457), 1)),
			(cv((7.416877, 2.342989, 0.167621), 1)),
			(cv((7.416877, 2.301843, 0.167621), 1)),
			(cv((7.339122, 2.301843, 0.122729), 1)),
			(cv((7.339122, 2.342989, 0.122729), 1)),
			(cv((7.29423, 2.301843, 0.044974), 1)),
			(cv((7.29423, 2.342989, 0.044974), 1)),
			(cv((7.29423, 2.342989, -0.04481), 1)),
			(cv((7.29423, 2.301843, -0.04481), 1)),
			(cv((7.339122, 2.301843, -0.122565), 1)),
			(cv((7.511488, 2.322238, -0.186508), 1)),
			(cv((7.411341, 2.322238, -0.186508), 1)),
			(cv((7.324612, 2.322238, -0.136435), 1)),
			(cv((7.274538, 2.322238, -0.049705), 1)),
			(cv((7.274538, 2.322238, 0.050441), 1)),
			(cv((7.324612, 2.322238, 0.137171), 1)),
			(cv((7.411341, 2.322238, 0.187244), 1)),
			(cv((7.511488, 2.322238, 0.187244), 1)),
			(cv((7.598217, 2.322238, 0.137171), 1))	),
	texture_vertices = (
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.500000, 0.000000 ),
			st( 0.964657, 0.716186 ),
			st( 0.003119, 0.705100 ),
			st( 0.001040, 0.006623 ),
			st( 0.962578, 0.011086 ),
			st( 1.000000, 0.450000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ) ),
	polygons = (
		polygon ((2, 1, 0),(2, 1, 0), 0 ),
		polygon ((3, 4, 5),(3, 4, 5), 0 ),
		polygon ((5, 6, 3),(5, 6, 3), 0 ),
		polygon ((13, 11, 10),(13, 11, 10), 1 ),
		polygon ((7, 8, 9),(7, 8, 9), 1 ),
		polygon ((10, 11, 8),(10, 11, 8), 1 ),
		polygon ((8, 7, 10),(8, 7, 10), 1 ),
		polygon ((9, 8, 12),(9, 8, 12), 1 ),
		polygon ((13, 14, 11),(13, 14, 11), 1 ),
		polygon ((11, 14, 15),(11, 14, 15), 1 ),
		polygon ((15, 8, 11),(15, 8, 11), 1 ),
		polygon ((15, 16, 8),(15, 16, 8), 1 ),
		polygon ((16, 17, 8),(16, 17, 8), 1 ),
		polygon ((8, 17, 12),(8, 17, 12), 1 ),
		polygon ((12, 17, 18),(12, 17, 18), 1 ),
		polygon ((18, 19, 12),(18, 19, 12), 1 ),
		polygon ((19, 18, 20),(19, 18, 20), 1 ),
		polygon ((20, 21, 19),(20, 21, 19), 1 ),
		polygon ((22, 23, 24),(22, 23, 24), 1 ),
		polygon ((25, 21, 20),(25, 21, 20), 1 ),
		polygon ((21, 25, 26),(21, 25, 26), 1 ),
		polygon ((23, 13, 24),(23, 13, 24), 1 ),
		polygon ((23, 14, 13),(23, 14, 13), 1 ),
		polygon ((25, 27, 26),(25, 27, 26), 1 ),
		polygon ((25, 28, 27),(25, 28, 27), 1 ),
		polygon ((27, 28, 29),(27, 28, 29), 1 ),
		polygon ((29, 28, 30),(29, 28, 30), 1 ),
		polygon ((29, 30, 31),(29, 30, 31), 1 ),
		polygon ((31, 32, 29),(31, 32, 29), 1 ),
		polygon ((32, 31, 33),(32, 31, 33), 1 ),
		polygon ((33, 31, 22),(33, 31, 22), 1 ),
		polygon ((22, 24, 33),(22, 24, 33), 1 ),
		polygon ((16, 10, 7),(16, 10, 7), 1 ),
		polygon ((10, 16, 15),(10, 16, 15), 1 ),
		polygon ((10, 15, 14),(10, 15, 14), 1 ),
		polygon ((14, 34, 10),(14, 34, 10), 1 ),
		polygon ((14, 35, 34),(14, 35, 34), 1 ),
		polygon ((35, 14, 23),(35, 14, 23), 1 ),
		polygon ((35, 23, 22),(35, 23, 22), 1 ),
		polygon ((22, 36, 35),(22, 36, 35), 1 ),
		polygon ((22, 37, 36),(22, 37, 36), 1 ),
		polygon ((37, 22, 31),(37, 22, 31), 1 ),
		polygon ((37, 31, 30),(37, 31, 30), 1 ),
		polygon ((30, 38, 37),(30, 38, 37), 1 ),
		polygon ((30, 39, 38),(30, 39, 38), 1 ),
		polygon ((39, 30, 28),(39, 30, 28), 1 ),
		polygon ((39, 28, 25),(39, 28, 25), 1 ),
		polygon ((25, 40, 39),(25, 40, 39), 1 ),
		polygon ((25, 41, 40),(25, 41, 40), 1 ),
		polygon ((41, 25, 20),(41, 25, 20), 1 ),
		polygon ((41, 20, 18),(41, 20, 18), 1 ),
		polygon ((18, 42, 41),(18, 42, 41), 1 ),
		polygon ((18, 9, 42),(18, 9, 42), 1 ),
		polygon ((9, 18, 17),(9, 18, 17), 1 ),
		polygon ((9, 17, 16),(9, 17, 16), 1 ),
		polygon ((16, 7, 9),(16, 7, 9), 1 ),
		polygon ((19, 42, 9),(19, 42, 9), 1 ),
		polygon ((9, 12, 19),(9, 12, 19), 1 ),
		polygon ((19, 41, 42),(19, 41, 42), 1 ),
		polygon ((19, 21, 41),(19, 21, 41), 1 ),
		polygon ((21, 26, 41),(21, 26, 41), 1 ),
		polygon ((40, 41, 26),(40, 41, 26), 1 ),
		polygon ((26, 27, 39),(26, 27, 39), 1 ),
		polygon ((39, 40, 26),(39, 40, 26), 1 ),
		polygon ((39, 27, 29),(39, 27, 29), 1 ),
		polygon ((29, 38, 39),(29, 38, 39), 1 ),
		polygon ((38, 29, 37),(38, 29, 37), 1 ),
		polygon ((37, 29, 32),(37, 29, 32), 1 ),
		polygon ((33, 37, 32),(33, 37, 32), 1 ),
		polygon ((37, 33, 36),(37, 33, 36), 1 ),
		polygon ((35, 33, 24),(35, 33, 24), 1 ),
		polygon ((33, 35, 36),(33, 35, 36), 1 ),
		polygon ((13, 35, 24),(13, 35, 24), 1 ),
		polygon ((35, 13, 34),(35, 13, 34), 1 ),
		polygon ((10, 34, 13),(10, 34, 13), 1 )
	)
); /* end of polyset 'park_Rim1' */

polyset park_Net1 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (NET ),
	casts_shadow = TRUE,
	vertices = ((cv((7.416877, 2.301843, 0.167621), 1)),
			(cv((7.42696, 2.200817, 0.12909), 1)),
			(cv((7.506661, 2.301843, 0.167621), 1)),
			(cv((7.496127, 2.200817, 0.129211), 1)),
			(cv((7.556088, 2.200817, 0.094732), 1)),
			(cv((7.521413, 1.946636, 0.059726), 1)),
			(cv((7.543244, 1.946636, 0.021913), 1)),
			(cv((7.530894, 2.044886, 0.069449), 1)),
			(cv((7.556316, 2.044886, 0.025593), 1)),
			(cv((7.339122, 2.301843, 0.122729), 1)),
			(cv((7.367119, 2.200817, 0.094402), 1)),
			(cv((7.33264, 2.200817, 0.034441), 1)),
			(cv((7.29423, 2.301843, 0.044974), 1)),
			(cv((7.584416, 2.301843, 0.122729), 1)),
			(cv((7.629308, 2.301843, 0.044974), 1)),
			(cv((7.590777, 2.200817, 0.034891), 1)),
			(cv((7.569109, 2.117504, 0.028844), 1)),
			(cv((7.540347, 2.117504, 0.078661), 1)),
			(cv((7.490531, 2.117504, 0.107423), 1)),
			(cv((7.433007, 2.117504, 0.107423), 1)),
			(cv((7.38319, 2.117504, 0.078661), 1)),
			(cv((7.436258, 2.044886, 0.09463), 1)),
			(cv((7.48695, 2.044886, 0.094718), 1)),
			(cv((7.392402, 2.044886, 0.069207), 1)),
			(cv((7.402125, 1.946636, 0.059726), 1)),
			(cv((7.439937, 1.946636, 0.081557), 1)),
			(cv((7.4836, 1.946636, 0.081557), 1)),
			(cv((7.590897, 2.200817, -0.034276), 1)),
			(cv((7.629308, 2.301843, -0.04481), 1)),
			(cv((7.584416, 2.301843, -0.122565), 1)),
			(cv((7.569109, 2.117504, -0.02868), 1)),
			(cv((7.540347, 2.117504, -0.078497), 1)),
			(cv((7.556418, 2.200817, -0.094237), 1)),
			(cv((7.556405, 2.044886, -0.025099), 1)),
			(cv((7.531136, 2.044886, -0.069043), 1)),
			(cv((7.543244, 1.946636, -0.021749), 1)),
			(cv((7.521413, 1.946636, -0.059562), 1)),
			(cv((7.48728, 2.044886, -0.094466), 1)),
			(cv((7.496578, 2.200817, -0.128926), 1)),
			(cv((7.506661, 2.301843, -0.167457), 1)),
			(cv((7.332761, 2.200817, -0.034727), 1)),
			(cv((7.354428, 2.117504, -0.02868), 1)),
			(cv((7.354428, 2.117504, 0.028844), 1)),
			(cv((7.416877, 2.301843, -0.167457), 1)),
			(cv((7.42741, 2.200817, -0.129046), 1)),
			(cv((7.367449, 2.200817, -0.094567), 1)),
			(cv((7.339121, 2.301843, -0.122565), 1)),
			(cv((7.29423, 2.301843, -0.04481), 1)),
			(cv((7.38319, 2.117504, -0.078497), 1)),
			(cv((7.433007, 2.117504, -0.107258), 1)),
			(cv((7.490531, 2.117504, -0.107258), 1)),
			(cv((7.436588, 2.044886, -0.094554), 1)),
			(cv((7.392644, 2.044886, -0.069285), 1)),
			(cv((7.367221, 2.044886, -0.025429), 1)),
			(cv((7.367132, 2.044886, 0.025263), 1)),
			(cv((7.4836, 1.946636, -0.081393), 1)),
			(cv((7.439938, 1.946636, -0.081393), 1)),
			(cv((7.402125, 1.946636, -0.059562), 1)),
			(cv((7.380293, 1.946636, -0.021749), 1)),
			(cv((7.380293, 1.946636, 0.021913), 1)),
			(cv((7.506661, 2.301843, 0.167621), 1)),
			(cv((7.42696, 2.200817, 0.12909), 1)),
			(cv((7.416877, 2.301843, 0.167621), 1)),
			(cv((7.556088, 2.200817, 0.094732), 1)),
			(cv((7.496127, 2.200817, 0.129211), 1)),
			(cv((7.530894, 2.044886, 0.069449), 1)),
			(cv((7.543244, 1.946636, 0.021913), 1)),
			(cv((7.521413, 1.946636, 0.059726), 1)),
			(cv((7.556316, 2.044886, 0.025593), 1)),
			(cv((7.339122, 2.301843, 0.122729), 1)),
			(cv((7.367119, 2.200817, 0.094402), 1)),
			(cv((7.33264, 2.200817, 0.034441), 1)),
			(cv((7.29423, 2.301843, 0.044974), 1)),
			(cv((7.584416, 2.301843, 0.122729), 1)),
			(cv((7.629308, 2.301843, 0.044974), 1)),
			(cv((7.590777, 2.200817, 0.034891), 1)),
			(cv((7.569109, 2.117504, 0.028844), 1)),
			(cv((7.540347, 2.117504, 0.078661), 1)),
			(cv((7.490531, 2.117504, 0.107423), 1)),
			(cv((7.433007, 2.117504, 0.107423), 1)),
			(cv((7.38319, 2.117504, 0.078661), 1)),
			(cv((7.48695, 2.044886, 0.094718), 1)),
			(cv((7.436258, 2.044886, 0.09463), 1)),
			(cv((7.392402, 2.044886, 0.069207), 1)),
			(cv((7.402125, 1.946636, 0.059726), 1)),
			(cv((7.439937, 1.946636, 0.081557), 1)),
			(cv((7.4836, 1.946636, 0.081557), 1)),
			(cv((7.590897, 2.200817, -0.034276), 1)),
			(cv((7.629308, 2.301843, -0.04481), 1)),
			(cv((7.584416, 2.301843, -0.122565), 1)),
			(cv((7.569109, 2.117504, -0.02868), 1)),
			(cv((7.540347, 2.117504, -0.078497), 1)),
			(cv((7.556418, 2.200817, -0.094237), 1)),
			(cv((7.531136, 2.044886, -0.069043), 1)),
			(cv((7.556405, 2.044886, -0.025099), 1)),
			(cv((7.543244, 1.946636, -0.021749), 1)),
			(cv((7.521413, 1.946636, -0.059562), 1)),
			(cv((7.48728, 2.044886, -0.094466), 1)),
			(cv((7.496578, 2.200817, -0.128926), 1)),
			(cv((7.506661, 2.301843, -0.167457), 1)),
			(cv((7.354428, 2.117504, -0.02868), 1)),
			(cv((7.332761, 2.200817, -0.034727), 1)),
			(cv((7.354428, 2.117504, 0.028844), 1)),
			(cv((7.416877, 2.301843, -0.167457), 1)),
			(cv((7.42741, 2.200817, -0.129046), 1)),
			(cv((7.367449, 2.200817, -0.094567), 1)),
			(cv((7.339121, 2.301843, -0.122565), 1)),
			(cv((7.29423, 2.301843, -0.04481), 1)),
			(cv((7.38319, 2.117504, -0.078497), 1)),
			(cv((7.433007, 2.117504, -0.107258), 1)),
			(cv((7.490531, 2.117504, -0.107258), 1)),
			(cv((7.436588, 2.044886, -0.094554), 1)),
			(cv((7.392644, 2.044886, -0.069285), 1)),
			(cv((7.367221, 2.044886, -0.025429), 1)),
			(cv((7.367132, 2.044886, 0.025263), 1)),
			(cv((7.4836, 1.946636, -0.081393), 1)),
			(cv((7.439938, 1.946636, -0.081393), 1)),
			(cv((7.402125, 1.946636, -0.059562), 1)),
			(cv((7.380293, 1.946636, -0.021749), 1)),
			(cv((7.380293, 1.946636, 0.021913), 1))	),
	texture_vertices = (
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.704342 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.704342 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((3, 4, 2),(3, 4, 2), 0 ),
		polygon ((3, 2, 1),(3, 2, 1), 0 ),
		polygon ((5, 6, 7),(5, 6, 7), 0 ),
		polygon ((8, 7, 6),(8, 7, 6), 0 ),
		polygon ((1, 0, 9),(1, 0, 9), 0 ),
		polygon ((9, 10, 1),(9, 10, 1), 0 ),
		polygon ((9, 11, 10),(9, 11, 10), 0 ),
		polygon ((11, 9, 12),(11, 9, 12), 0 ),
		polygon ((4, 13, 2),(4, 13, 2), 0 ),
		polygon ((4, 14, 13),(4, 14, 13), 0 ),
		polygon ((14, 4, 15),(14, 4, 15), 0 ),
		polygon ((4, 16, 15),(4, 16, 15), 0 ),
		polygon ((16, 4, 17),(16, 4, 17), 0 ),
		polygon ((4, 18, 17),(4, 18, 17), 0 ),
		polygon ((4, 3, 18),(4, 3, 18), 0 ),
		polygon ((18, 1, 19),(18, 1, 19), 0 ),
		polygon ((1, 18, 3),(1, 18, 3), 0 ),
		polygon ((20, 19, 1),(20, 19, 1), 0 ),
		polygon ((20, 1, 10),(20, 1, 10), 0 ),
		polygon ((18, 21, 22),(18, 21, 22), 0 ),
		polygon ((22, 7, 18),(22, 7, 18), 0 ),
		polygon ((17, 18, 7),(17, 18, 7), 0 ),
		polygon ((8, 16, 7),(8, 16, 7), 0 ),
		polygon ((21, 18, 19),(21, 18, 19), 0 ),
		polygon ((21, 20, 23),(21, 20, 23), 0 ),
		polygon ((20, 21, 19),(20, 21, 19), 0 ),
		polygon ((23, 24, 21),(23, 24, 21), 0 ),
		polygon ((24, 25, 21),(24, 25, 21), 0 ),
		polygon ((25, 26, 21),(25, 26, 21), 0 ),
		polygon ((22, 21, 26),(22, 21, 26), 0 ),
		polygon ((7, 22, 26),(7, 22, 26), 0 ),
		polygon ((7, 26, 5),(7, 26, 5), 0 ),
		polygon ((27, 14, 15),(27, 14, 15), 0 ),
		polygon ((28, 14, 27),(28, 14, 27), 0 ),
		polygon ((27, 29, 28),(27, 29, 28), 0 ),
		polygon ((27, 15, 16),(27, 15, 16), 0 ),
		polygon ((30, 27, 16),(30, 27, 16), 0 ),
		polygon ((30, 31, 27),(30, 31, 27), 0 ),
		polygon ((32, 27, 31),(32, 27, 31), 0 ),
		polygon ((31, 33, 34),(31, 33, 34), 0 ),
		polygon ((33, 31, 30),(33, 31, 30), 0 ),
		polygon ((33, 30, 16),(33, 30, 16), 0 ),
		polygon ((8, 33, 16),(8, 33, 16), 0 ),
		polygon ((17, 7, 16),(17, 7, 16), 0 ),
		polygon ((33, 6, 35),(33, 6, 35), 0 ),
		polygon ((6, 33, 8),(6, 33, 8), 0 ),
		polygon ((35, 36, 33),(35, 36, 33), 0 ),
		polygon ((34, 33, 36),(34, 33, 36), 0 ),
		polygon ((37, 34, 36),(37, 34, 36), 0 ),
		polygon ((31, 34, 37),(31, 34, 37), 0 ),
		polygon ((38, 32, 31),(38, 32, 31), 0 ),
		polygon ((39, 29, 38),(39, 29, 38), 0 ),
		polygon ((11, 40, 41),(11, 40, 41), 0 ),
		polygon ((29, 27, 32),(29, 27, 32), 0 ),
		polygon ((38, 29, 32),(38, 29, 32), 0 ),
		polygon ((20, 11, 42),(20, 11, 42), 0 ),
		polygon ((38, 43, 39),(38, 43, 39), 0 ),
		polygon ((43, 38, 44),(43, 38, 44), 0 ),
		polygon ((43, 44, 45),(43, 44, 45), 0 ),
		polygon ((46, 43, 45),(46, 43, 45), 0 ),
		polygon ((40, 47, 45),(40, 47, 45), 0 ),
		polygon ((46, 45, 47),(46, 45, 47), 0 ),
		polygon ((11, 47, 40),(11, 47, 40), 0 ),
		polygon ((12, 47, 11),(12, 47, 11), 0 ),
		polygon ((41, 45, 48),(41, 45, 48), 0 ),
		polygon ((45, 41, 40),(45, 41, 40), 0 ),
		polygon ((49, 48, 45),(49, 48, 45), 0 ),
		polygon ((49, 45, 44),(49, 45, 44), 0 ),
		polygon ((44, 38, 49),(44, 38, 49), 0 ),
		polygon ((50, 49, 38),(50, 49, 38), 0 ),
		polygon ((31, 50, 38),(31, 50, 38), 0 ),
		polygon ((37, 50, 31),(37, 50, 31), 0 ),
		polygon ((37, 49, 50),(37, 49, 50), 0 ),
		polygon ((49, 37, 51),(49, 37, 51), 0 ),
		polygon ((49, 51, 52),(49, 51, 52), 0 ),
		polygon ((48, 49, 52),(48, 49, 52), 0 ),
		polygon ((53, 41, 52),(53, 41, 52), 0 ),
		polygon ((48, 52, 41),(48, 52, 41), 0 ),
		polygon ((53, 54, 41),(53, 54, 41), 0 ),
		polygon ((36, 55, 37),(36, 55, 37), 0 ),
		polygon ((55, 56, 37),(55, 56, 37), 0 ),
		polygon ((51, 37, 56),(51, 37, 56), 0 ),
		polygon ((52, 51, 56),(52, 51, 56), 0 ),
		polygon ((52, 56, 57),(52, 56, 57), 0 ),
		polygon ((52, 58, 53),(52, 58, 53), 0 ),
		polygon ((58, 52, 57),(58, 52, 57), 0 ),
		polygon ((54, 53, 58),(54, 53, 58), 0 ),
		polygon ((58, 59, 54),(58, 59, 54), 0 ),
		polygon ((54, 24, 23),(54, 24, 23), 0 ),
		polygon ((24, 54, 59),(24, 54, 59), 0 ),
		polygon ((20, 54, 23),(20, 54, 23), 0 ),
		polygon ((42, 41, 54),(42, 41, 54), 0 ),
		polygon ((42, 11, 41),(42, 11, 41), 0 ),
		polygon ((11, 20, 10),(11, 20, 10), 0 ),
		polygon ((54, 20, 42),(54, 20, 42), 0 ),
		polygon ((60, 61, 62),(60, 61, 62), 0 ),
		polygon ((60, 63, 64),(60, 63, 64), 0 ),
		polygon ((61, 60, 64),(61, 60, 64), 0 ),
		polygon ((65, 66, 67),(65, 66, 67), 0 ),
		polygon ((66, 65, 68),(66, 65, 68), 0 ),
		polygon ((69, 62, 61),(69, 62, 61), 0 ),
		polygon ((61, 70, 69),(61, 70, 69), 0 ),
		polygon ((70, 71, 69),(70, 71, 69), 0 ),
		polygon ((72, 69, 71),(72, 69, 71), 0 ),
		polygon ((60, 73, 63),(60, 73, 63), 0 ),
		polygon ((73, 74, 63),(73, 74, 63), 0 ),
		polygon ((75, 63, 74),(75, 63, 74), 0 ),
		polygon ((75, 76, 63),(75, 76, 63), 0 ),
		polygon ((77, 63, 76),(77, 63, 76), 0 ),
		polygon ((77, 78, 63),(77, 78, 63), 0 ),
		polygon ((78, 64, 63),(78, 64, 63), 0 ),
		polygon ((79, 61, 78),(79, 61, 78), 0 ),
		polygon ((64, 78, 61),(64, 78, 61), 0 ),
		polygon ((61, 79, 80),(61, 79, 80), 0 ),
		polygon ((70, 61, 80),(70, 61, 80), 0 ),
		polygon ((81, 82, 78),(81, 82, 78), 0 ),
		polygon ((78, 65, 81),(78, 65, 81), 0 ),
		polygon ((65, 78, 77),(65, 78, 77), 0 ),
		polygon ((65, 76, 68),(65, 76, 68), 0 ),
		polygon ((79, 78, 82),(79, 78, 82), 0 ),
		polygon ((83, 80, 82),(83, 80, 82), 0 ),
		polygon ((79, 82, 80),(79, 82, 80), 0 ),
		polygon ((82, 84, 83),(82, 84, 83), 0 ),
		polygon ((82, 85, 84),(82, 85, 84), 0 ),
		polygon ((82, 86, 85),(82, 86, 85), 0 ),
		polygon ((86, 82, 81),(86, 82, 81), 0 ),
		polygon ((86, 81, 65),(86, 81, 65), 0 ),
		polygon ((67, 86, 65),(67, 86, 65), 0 ),
		polygon ((75, 74, 87),(75, 74, 87), 0 ),
		polygon ((87, 74, 88),(87, 74, 88), 0 ),
		polygon ((88, 89, 87),(88, 89, 87), 0 ),
		polygon ((76, 75, 87),(76, 75, 87), 0 ),
		polygon ((76, 87, 90),(76, 87, 90), 0 ),
		polygon ((87, 91, 90),(87, 91, 90), 0 ),
		polygon ((91, 87, 92),(91, 87, 92), 0 ),
		polygon ((93, 94, 91),(93, 94, 91), 0 ),
		polygon ((90, 91, 94),(90, 91, 94), 0 ),
		polygon ((76, 90, 94),(76, 90, 94), 0 ),
		polygon ((76, 94, 68),(76, 94, 68), 0 ),
		polygon ((76, 65, 77),(76, 65, 77), 0 ),
		polygon ((95, 66, 94),(95, 66, 94), 0 ),
		polygon ((68, 94, 66),(68, 94, 66), 0 ),
		polygon ((94, 96, 95),(94, 96, 95), 0 ),
		polygon ((96, 94, 93),(96, 94, 93), 0 ),
		polygon ((96, 93, 97),(96, 93, 97), 0 ),
		polygon ((97, 93, 91),(97, 93, 91), 0 ),
		polygon ((91, 92, 98),(91, 92, 98), 0 ),
		polygon ((98, 89, 99),(98, 89, 99), 0 ),
		polygon ((100, 101, 71),(100, 101, 71), 0 ),
		polygon ((92, 87, 89),(92, 87, 89), 0 ),
		polygon ((92, 89, 98),(92, 89, 98), 0 ),
		polygon ((102, 71, 80),(102, 71, 80), 0 ),
		polygon ((99, 103, 98),(99, 103, 98), 0 ),
		polygon ((104, 98, 103),(104, 98, 103), 0 ),
		polygon ((105, 104, 103),(105, 104, 103), 0 ),
		polygon ((105, 103, 106),(105, 103, 106), 0 ),
		polygon ((105, 107, 101),(105, 107, 101), 0 ),
		polygon ((107, 105, 106),(107, 105, 106), 0 ),
		polygon ((101, 107, 71),(101, 107, 71), 0 ),
		polygon ((71, 107, 72),(71, 107, 72), 0 ),
		polygon ((108, 105, 100),(108, 105, 100), 0 ),
		polygon ((101, 100, 105),(101, 100, 105), 0 ),
		polygon ((105, 108, 109),(105, 108, 109), 0 ),
		polygon ((104, 105, 109),(104, 105, 109), 0 ),
		polygon ((109, 98, 104),(109, 98, 104), 0 ),
		polygon ((98, 109, 110),(98, 109, 110), 0 ),
		polygon ((98, 110, 91),(98, 110, 91), 0 ),
		polygon ((91, 110, 97),(91, 110, 97), 0 ),
		polygon ((110, 109, 97),(110, 109, 97), 0 ),
		polygon ((111, 97, 109),(111, 97, 109), 0 ),
		polygon ((112, 111, 109),(112, 111, 109), 0 ),
		polygon ((112, 109, 108),(112, 109, 108), 0 ),
		polygon ((112, 100, 113),(112, 100, 113), 0 ),
		polygon ((100, 112, 108),(100, 112, 108), 0 ),
		polygon ((100, 114, 113),(100, 114, 113), 0 ),
		polygon ((97, 115, 96),(97, 115, 96), 0 ),
		polygon ((97, 116, 115),(97, 116, 115), 0 ),
		polygon ((116, 97, 111),(116, 97, 111), 0 ),
		polygon ((116, 111, 112),(116, 111, 112), 0 ),
		polygon ((117, 116, 112),(117, 116, 112), 0 ),
		polygon ((113, 118, 112),(113, 118, 112), 0 ),
		polygon ((117, 112, 118),(117, 112, 118), 0 ),
		polygon ((118, 113, 114),(118, 113, 114), 0 ),
		polygon ((114, 119, 118),(114, 119, 118), 0 ),
		polygon ((83, 84, 114),(83, 84, 114), 0 ),
		polygon ((119, 114, 84),(119, 114, 84), 0 ),
		polygon ((83, 114, 80),(83, 114, 80), 0 ),
		polygon ((114, 100, 102),(114, 100, 102), 0 ),
		polygon ((100, 71, 102),(100, 71, 102), 0 ),
		polygon ((70, 80, 71),(70, 80, 71), 0 ),
		polygon ((102, 80, 114),(102, 80, 114), 0 )
	)
); /* end of polyset 'park_Net1' */

polyset park_goal_pole_1 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (pole ),
	casts_shadow = TRUE,
	vertices = ((cv((7.803393, 2.95533, 0.05067), 1)),
			(cv((7.776678, 2.987061, 0.110336), 1)),
			(cv((7.776678, 3.024553, 0.072845), 1)),
			(cv((7.80318, 2.985818, -0.002137), 1)),
			(cv((7.776678, 3.024553, -0.077119), 1)),
			(cv((7.803393, 2.95533, -0.054945), 1)),
			(cv((7.776678, 2.987061, -0.11461), 1)),
			(cv((7.776678, 2.874588, -0.11461), 1)),
			(cv((7.803819, 2.894355, -0.054945), 1)),
			(cv((7.776678, 2.837097, -0.077119), 1)),
			(cv((7.776678, 2.837097, 0.072845), 1)),
			(cv((7.804032, 2.863867, -0.002137), 1)),
			(cv((7.803819, 2.894355, 0.05067), 1)),
			(cv((7.776678, 2.874588, 0.110336), 1)),
			(cv((7.803393, 2.391429, 0.05067), 1)),
			(cv((7.776678, 2.42316, 0.110336), 1)),
			(cv((7.776678, 2.460651, 0.072845), 1)),
			(cv((7.80318, 2.421916, -0.002137), 1)),
			(cv((7.776678, 2.460651, -0.077119), 1)),
			(cv((7.803394, 2.391429, -0.054945), 1)),
			(cv((7.776678, 2.42316, -0.11461), 1)),
			(cv((7.776678, 2.310686, -0.11461), 1)),
			(cv((7.803819, 2.330453, -0.054945), 1)),
			(cv((7.776678, 2.273195, -0.077119), 1)),
			(cv((7.776678, 2.273195, 0.072845), 1)),
			(cv((7.804032, 2.299965, -0.002137), 1)),
			(cv((7.803819, 2.330453, 0.05067), 1)),
			(cv((7.776678, 2.310686, 0.110336), 1)),
			(cv((8.535996, 2.240977, 0.05067), 1)),
			(cv((8.219178, 2.358251, 0.05067), 1)),
			(cv((8.226805, 2.389762, -0.002137), 1)),
			(cv((8.558505, 2.267533, -0.002137), 1)),
			(cv((8.219178, 2.358251, -0.054945), 1)),
			(cv((8.535996, 2.240977, -0.054945), 1)),
			(cv((8.211932, 2.312685, 0.05067), 1)),
			(cv((8.512473, 2.204406, 0.05067), 1)),
			(cv((8.203963, 2.279945, -0.002137), 1)),
			(cv((8.487512, 2.168443, -0.002137), 1)),
			(cv((8.211932, 2.312685, -0.054945), 1)),
			(cv((8.512473, 2.204406, -0.054945), 1)),
			(cv((8.75619, 2.043319, 0.05067), 1)),
			(cv((8.777715, 2.064135, -0.002137), 1)),
			(cv((8.75619, 2.043319, -0.054945), 1)),
			(cv((8.717561, 2.003898, 0.05067), 1)),
			(cv((8.696037, 1.97866, -0.002137), 1)),
			(cv((8.717561, 2.003898, -0.054945), 1)),
			(cv((8.461681, 2.895331, -0.002137), 1)),
			(cv((8.113475, 2.971525, -0.002137), 1)),
			(cv((8.447214, 2.855625, -0.054945), 1)),
			(cv((8.107478, 2.942162, -0.054945), 1)),
			(cv((8.099901, 2.883436, -0.054945), 1)),
			(cv((8.434095, 2.815777, -0.054945), 1)),
			(cv((8.107478, 2.942162, 0.05067), 1)),
			(cv((8.447214, 2.855625, 0.05067), 1)),
			(cv((8.434095, 2.815777, 0.05067), 1)),
			(cv((8.099901, 2.883436, 0.05067), 1)),
			(cv((8.42121, 2.783984, -0.002137), 1)),
			(cv((8.096114, 2.854073, -0.002137), 1)),
			(cv((8.756456, 2.730594, -0.002137), 1)),
			(cv((8.737244, 2.706714, -0.054945), 1)),
			(cv((8.703565, 2.665283, -0.054945), 1)),
			(cv((8.737244, 2.706714, 0.05067), 1)),
			(cv((8.703565, 2.665283, 0.05067), 1)),
			(cv((8.679609, 2.638238, -0.002137), 1)),
			(cv((8.9507, 2.473737, -0.002137), 1)),
			(cv((8.922747, 2.461562, 0.05067), 1)),
			(cv((8.866843, 2.437214, 0.05067), 1)),
			(cv((8.83889, 2.425039, -0.002137), 1)),
			(cv((8.866843, 2.437214, -0.054945), 1)),
			(cv((8.998427, 2.179716, -0.054945), 1)),
			(cv((8.922747, 2.461562, -0.054945), 1)),
			(cv((8.93745, 2.179716, -0.054945), 1)),
			(cv((8.906962, 2.179716, -0.002137), 1)),
			(cv((9.028915, 2.179716, -0.002137), 1)),
			(cv((8.922621, 1.797651, -0.002137), 1)),
			(cv((8.936055, 1.736617, -0.054945), 1)),
			(cv((8.93745, 2.179716, 0.05067), 1)),
			(cv((8.936055, 1.736617, 0.05067), 1)),
			(cv((9.014086, 1.733185, 0.05067), 1)),
			(cv((8.998427, 2.179716, 0.05067), 1)),
			(cv((9.014086, 1.733185, -0.054945), 1)),
			(cv((8.911044, 1.658052, -0.054945), 1)),
			(cv((8.911044, 1.658052, 0.05067), 1)),
			(cv((9.044574, 1.190578, -0.002137), 1)),
			(cv((9.014086, 1.190578, 0.05067), 1)),
			(cv((9.044574, 1.733185, -0.002137), 1)),
			(cv((9.014086, 1.190578, -0.054945), 1)),
			(cv((8.922621, 1.190578, -0.002137), 1)),
			(cv((8.881313, 1.651297, -0.002137), 1)),
			(cv((8.953109, 1.190578, 0.05067), 1)),
			(cv((8.953109, 1.190578, -0.054945), 1)),
			(cv((9.044574, 0.56064, -0.002137), 1)),
			(cv((7.80318, 2.421916, -0.002137), 1)),
			(cv((7.803394, 2.391429, -0.054945), 1)),
			(cv((7.803819, 2.330453, -0.054945), 1)),
			(cv((7.804032, 2.299965, -0.002137), 1)),
			(cv((7.803393, 2.391429, 0.05067), 1)),
			(cv((7.803819, 2.330453, 0.05067), 1)),
			(cv((7.80318, 2.985818, -0.002137), 1)),
			(cv((7.803393, 2.95533, -0.054945), 1)),
			(cv((7.803819, 2.894355, -0.054945), 1)),
			(cv((7.803393, 2.95533, 0.05067), 1)),
			(cv((7.803819, 2.894355, 0.05067), 1)),
			(cv((7.804032, 2.863867, -0.002137), 1)),
			(cv((9.014086, 0.0, -0.054945), 1)),
			(cv((9.014086, 0.56064, -0.054945), 1)),
			(cv((8.953109, 0.0, -0.054945), 1)),
			(cv((8.953109, 0.56064, -0.054945), 1)),
			(cv((9.044574, 0.0, -0.002137), 1)),
			(cv((9.014086, 0.56064, 0.05067), 1)),
			(cv((9.014086, 0.0, 0.05067), 1)),
			(cv((8.953109, 0.56064, 0.05067), 1)),
			(cv((8.953109, 0.0, 0.05067), 1)),
			(cv((8.922621, 0.0, -0.002137), 1)),
			(cv((8.922621, 0.56064, -0.002137), 1))	),
	texture_vertices = (
			st( 1.000000, 1.000000 ),
			st( 0.875754, 0.866021 ),
			st( 0.875754, 0.866021 ),
			st( 0.875754, 0.866021 ),
			st( 1.000000, 0.000000 ),
			st( 0.915040, 0.957573 ),
			st( 0.915040, 0.957573 ),
			st( 0.915040, 0.957573 ),
			st( 0.000000, 0.000000 ),
			st( 0.961457, 0.900046 ),
			st( 0.961457, 0.900046 ),
			st( 0.961457, 0.900046 ),
			st( 1.000000, 0.000000 ),
			st( 0.913500, 0.784992 ),
			st( 0.913500, 0.784992 ),
			st( 0.913500, 0.784992 ),
			st( 1.000000, 0.000000 ),
			st( 0.961457, 0.669937 ),
			st( 0.961457, 0.669937 ),
			st( 0.961457, 0.669937 ),
			st( 1.000000, 1.000000 ),
			st( 0.875754, 0.703963 ),
			st( 0.875754, 0.703963 ),
			st( 0.875754, 0.703963 ),
			st( 0.875754, 0.703963 ),
			st( 1.000000, 0.000000 ),
			st( 0.915040, 0.612410 ),
			st( 0.915040, 0.612410 ),
			st( 1.000000, 1.000000 ),
			st( 0.775789, 0.612410 ),
			st( 0.775789, 0.612410 ),
			st( 0.775789, 0.612410 ),
			st( 1.000000, 1.000000 ),
			st( 0.800262, 0.703963 ),
			st( 0.800262, 0.703963 ),
			st( 0.800262, 0.703963 ),
			st( 1.000000, 1.000000 ),
			st( 0.729373, 0.669937 ),
			st( 0.729373, 0.669937 ),
			st( 0.729373, 0.669937 ),
			st( 1.000000, 0.000000 ),
			st( 0.729373, 0.900046 ),
			st( 0.729373, 0.900046 ),
			st( 0.729373, 0.900046 ),
			st( 1.000000, 0.000000 ),
			st( 0.762516, 0.784992 ),
			st( 0.762516, 0.784992 ),
			st( 0.762516, 0.784992 ),
			st( 1.000000, 1.000000 ),
			st( 0.800262, 0.866021 ),
			st( 0.800262, 0.866021 ),
			st( 0.800262, 0.866021 ),
			st( 0.800262, 0.866021 ),
			st( 1.000000, 0.000000 ),
			st( 0.775789, 0.957573 ),
			st( 0.775789, 0.957573 ),
			st( 1.000000, 1.000000 ),
			st( 0.177600, 0.866021 ),
			st( 0.177600, 0.866021 ),
			st( 0.177600, 0.866021 ),
			st( 1.000000, 0.000000 ),
			st( 0.216886, 0.957573 ),
			st( 0.216886, 0.957573 ),
			st( 0.216886, 0.957573 ),
			st( 0.000000, 0.000000 ),
			st( 0.263303, 0.900046 ),
			st( 0.263303, 0.900046 ),
			st( 0.263303, 0.900046 ),
			st( 1.000000, 0.000000 ),
			st( 0.215347, 0.784992 ),
			st( 0.215347, 0.784992 ),
			st( 0.215347, 0.784992 ),
			st( 1.000000, 0.000000 ),
			st( 0.263303, 0.669937 ),
			st( 0.263303, 0.669937 ),
			st( 0.263303, 0.669937 ),
			st( 0.166666, 1.000000 ),
			st( 0.177600, 0.703963 ),
			st( 0.177600, 0.703963 ),
			st( 0.177600, 0.703963 ),
			st( 0.177600, 0.703963 ),
			st( 1.000000, 0.000000 ),
			st( 0.216886, 0.612410 ),
			st( 0.216886, 0.612410 ),
			st( 1.000000, 1.000000 ),
			st( 0.077636, 0.612410 ),
			st( 0.077636, 0.612410 ),
			st( 0.077636, 0.612410 ),
			st( 0.333333, 1.000000 ),
			st( 0.102108, 0.703963 ),
			st( 0.102108, 0.703963 ),
			st( 0.102108, 0.703963 ),
			st( 1.000000, 1.000000 ),
			st( 0.031219, 0.669937 ),
			st( 0.031219, 0.669937 ),
			st( 0.031219, 0.669937 ),
			st( 1.000000, 0.000000 ),
			st( 0.031219, 0.900046 ),
			st( 0.031219, 0.900046 ),
			st( 0.031219, 0.900046 ),
			st( 0.500000, 1.000000 ),
			st( 0.064362, 0.784992 ),
			st( 0.064362, 0.784992 ),
			st( 0.064362, 0.784992 ),
			st( 0.666660, 1.000000 ),
			st( 0.102108, 0.866021 ),
			st( 0.102108, 0.866021 ),
			st( 0.102108, 0.866021 ),
			st( 0.102108, 0.866021 ),
			st( 1.000000, 0.000000 ),
			st( 0.077636, 0.957573 ),
			st( 0.077636, 0.957573 ),
			st( 0.832676, 0.773312 ),
			st( 0.833333, 0.773617 ),
			st( 0.833333, 0.773617 ),
			st( 0.833333, 0.850000 ),
			st( 1.000000, 0.850000 ),
			st( 0.000202, 0.850000 ),
			st( -0.001111, 0.850000 ),
			st( -0.001111, 0.850000 ),
			st( 1.000000, 0.850000 ),
			st( 0.999882, 0.771887 ),
			st( 0.001515, 0.774647 ),
			st( 0.001515, 0.774647 ),
			st( 0.999529, 0.772881 ),
			st( 0.999529, 0.772881 ),
			st( 0.001094, 0.773617 ),
			st( 0.166666, 0.850000 ),
			st( 0.166009, 0.767948 ),
			st( 0.165959, 0.770570 ),
			st( 0.165959, 0.770570 ),
			st( 0.165959, 0.770570 ),
			st( 0.666660, 0.850000 ),
			st( 0.665169, 0.773779 ),
			st( 0.667013, 0.773462 ),
			st( 0.667013, 0.773462 ),
			st( 0.667013, 0.773462 ),
			st( 0.500000, 0.850000 ),
			st( 0.500186, 0.773456 ),
			st( 0.500118, 0.773417 ),
			st( 0.500118, 0.773417 ),
			st( 0.500118, 0.773417 ),
			st( 0.500118, 0.773417 ),
			st( 0.333330, 0.850000 ),
			st( 0.333987, 0.772845 ),
			st( 0.332977, 0.772707 ),
			st( 0.332977, 0.772707 ),
			st( 0.332977, 0.772707 ),
			st( 0.833333, 0.700000 ),
			st( 1.000000, 0.700000 ),
			st( 0.001515, 0.700000 ),
			st( 0.001515, 0.700000 ),
			st( 1.000000, 0.700000 ),
			st( -0.001111, 0.700000 ),
			st( 0.166666, 0.700000 ),
			st( 0.666600, 0.700000 ),
			st( 0.500000, 0.700000 ),
			st( 0.333330, 0.700000 ),
			st( 0.000000, 0.846065 ),
			st( 0.998706, 0.846472 ),
			st( 0.998706, 0.846472 ),
			st( 0.000000, 0.846622 ),
			st( 0.000000, 0.846622 ),
			st( 0.998728, 0.845792 ),
			st( 0.000000, 0.900000 ),
			st( 0.998728, 0.901057 ),
			st( 0.000000, 0.900000 ),
			st( 0.000000, 0.900000 ),
			st( 0.998728, 0.901057 ),
			st( 0.998728, 0.901057 ),
			st( 0.166660, 0.847337 ),
			st( 0.166666, 0.847333 ),
			st( 0.166666, 0.847333 ),
			st( 0.166666, 0.900000 ),
			st( 0.333333, 0.900000 ),
			st( 0.333333, 0.847452 ),
			st( 0.332882, 0.847257 ),
			st( 0.332882, 0.847257 ),
			st( 0.332882, 0.847257 ),
			st( 0.833333, 0.900000 ),
			st( 0.833333, 0.847318 ),
			st( 0.833711, 0.846847 ),
			st( 0.833711, 0.846847 ),
			st( 0.833711, 0.846847 ),
			st( 0.833711, 0.846847 ),
			st( 0.666660, 0.847781 ),
			st( 0.666666, 0.847699 ),
			st( 0.666666, 0.847699 ),
			st( 0.666666, 0.847699 ),
			st( 0.666666, 0.900000 ),
			st( 0.500000, 0.847683 ),
			st( 0.500000, 0.848045 ),
			st( 0.500000, 0.848045 ),
			st( 0.500000, 0.848045 ),
			st( 0.500000, 0.900000 ),
			st( 0.000000, 0.800000 ),
			st( 0.998706, 0.799367 ),
			st( 0.998706, 0.799367 ),
			st( 0.998706, 0.799367 ),
			st( 0.998706, 0.799367 ),
			st( 0.000000, 0.800000 ),
			st( 0.166660, 0.800000 ),
			st( 0.333333, 0.800000 ),
			st( 0.833333, 0.800000 ),
			st( 0.666660, 0.800000 ),
			st( 0.500000, 0.800000 ),
			st( 0.000000, 0.700000 ),
			st( 0.999345, 0.702159 ),
			st( 0.000000, 0.700000 ),
			st( 0.999345, 0.702159 ),
			st( 0.999345, 0.702159 ),
			st( 0.000000, 0.700000 ),
			st( 0.000000, 0.700000 ),
			st( 0.833333, 0.700000 ),
			st( 0.666666, 0.700000 ),
			st( 0.500000, 0.700000 ),
			st( 0.333333, 0.700000 ),
			st( 0.166666, 0.650000 ),
			st( 0.166660, 0.700000 ),
			st( 0.333330, 0.650000 ),
			st( 0.500000, 0.650000 ),
			st( 0.000000, 0.650000 ),
			st( 0.999692, 0.649894 ),
			st( 0.999692, 0.649894 ),
			st( 0.000000, 0.650000 ),
			st( 0.998258, 0.528172 ),
			st( 0.115427, 0.530975 ),
			st( 0.496444, 0.475362 ),
			st( 0.496444, 0.475362 ),
			st( 0.496444, 0.475362 ),
			st( 0.496444, 0.475362 ),
			st( 0.998258, 0.528172 ),
			st( 0.115427, 0.530975 ),
			st( 0.301677, 0.462889 ),
			st( 0.250000, 0.530000 ),
			st( 0.250000, 0.530000 ),
			st( 0.250000, 0.530000 ),
			st( 0.250000, 0.530000 ),
			st( 0.250000, 0.530000 ),
			st( 0.246380, 0.533569 ),
			st( 0.666660, 0.650000 ),
			st( 0.693198, 0.464210 ),
			st( 0.700000, 0.530000 ),
			st( 0.832068, 0.533118 ),
			st( 0.700000, 0.530000 ),
			st( 0.700000, 0.530000 ),
			st( 0.700000, 0.530000 ),
			st( 0.833333, 0.520000 ),
			st( 0.833333, 0.650000 ),
			st( 0.166667, 0.520000 ),
			st( 0.333330, 0.500000 ),
			st( 0.666660, 0.500000 ),
			st( 0.998492, 0.400000 ),
			st( 0.000000, 0.400000 ),
			st( 0.000000, 0.400000 ),
			st( 0.000000, 0.400000 ),
			st( 0.998492, 0.400000 ),
			st( 0.833333, 0.400000 ),
			st( 0.998492, 0.521718 ),
			st( 0.000000, 0.518000 ),
			st( 0.997385, 0.520982 ),
			st( 0.997385, 0.520982 ),
			st( 0.000000, 0.518000 ),
			st( 0.000000, 0.518000 ),
			st( 0.166666, 0.400000 ),
			st( 0.500000, 0.400000 ),
			st( 0.500000, 0.480000 ),
			st( 0.666600, 0.400000 ),
			st( 0.333330, 0.400000 ),
			st( 0.001508, 0.179744 ),
			st( -0.000281, 0.150000 ),
			st( 1.000000, 0.150000 ),
			st( 1.000000, 0.150000 ),
			st( 1.000000, 0.150000 ),
			st( -0.000281, 0.150000 ),
			st( 1.000000, 0.000000 ),
			st( -0.001111, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.166666, 1.000000 ),
			st( 0.333333, 1.000000 ),
			st( 0.500000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.833333, 1.000000 ),
			st( 0.833333, 1.000000 ),
			st( 0.833333, 1.000000 ),
			st( 0.666660, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.997980, 0.998808 ),
			st( 1.000000, 1.000000 ),
			st( 0.166660, 1.000000 ),
			st( 0.166660, 1.000000 ),
			st( 0.166660, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.333333, 1.000000 ),
			st( 0.333333, 1.000000 ),
			st( 0.333333, 1.000000 ),
			st( 0.333333, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.833333, 1.000000 ),
			st( 0.833333, 1.000000 ),
			st( 0.833333, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.666660, 1.000000 ),
			st( 0.666660, 1.000000 ),
			st( 0.666660, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.500000, 1.000000 ),
			st( 0.500000, 1.000000 ),
			st( 0.500000, 1.000000 ),
			st( 0.166666, 0.000000 ),
			st( 0.166667, 0.150000 ),
			st( 0.333330, 0.000000 ),
			st( 0.333333, 0.150000 ),
			st( 0.000000, 0.000000 ),
			st( 0.998492, 0.000000 ),
			st( 0.998492, 0.000000 ),
			st( 0.833333, 0.150000 ),
			st( 0.833333, 0.000000 ),
			st( 0.666600, 0.150000 ),
			st( 0.666660, 0.000000 ),
			st( 0.500000, 0.000000 ),
			st( 0.500000, 0.150000 ) ),
	polygons = (
		polygon ((0, 1, 2),(1, 5, 9), 0 ),
		polygon ((2, 3, 0),(10, 13, 2), 0 ),
		polygon ((2, 4, 3),(11, 17, 14), 0 ),
		polygon ((4, 5, 3),(18, 21, 15), 0 ),
		polygon ((4, 6, 5),(19, 26, 22), 0 ),
		polygon ((5, 6, 7),(23, 27, 29), 0 ),
		polygon ((8, 5, 7),(33, 24, 30), 0 ),
		polygon ((8, 7, 9),(34, 31, 37), 0 ),
		polygon ((9, 10, 11),(38, 41, 45), 0 ),
		polygon ((11, 8, 9),(46, 35, 39), 0 ),
		polygon ((12, 11, 10),(49, 47, 42), 0 ),
		polygon ((10, 13, 12),(43, 54, 50), 0 ),
		polygon ((12, 13, 1),(51, 55, 6), 0 ),
		polygon ((1, 0, 12),(7, 3, 52), 0 ),
		polygon ((14, 15, 16),(57, 61, 65), 0 ),
		polygon ((16, 17, 14),(66, 69, 58), 0 ),
		polygon ((16, 18, 17),(67, 73, 70), 0 ),
		polygon ((18, 19, 17),(74, 77, 71), 0 ),
		polygon ((18, 20, 19),(75, 82, 78), 0 ),
		polygon ((19, 20, 21),(79, 83, 85), 0 ),
		polygon ((22, 19, 21),(89, 80, 86), 0 ),
		polygon ((22, 21, 23),(90, 87, 93), 0 ),
		polygon ((23, 24, 25),(94, 97, 101), 0 ),
		polygon ((25, 22, 23),(102, 91, 95), 0 ),
		polygon ((26, 25, 24),(105, 103, 98), 0 ),
		polygon ((24, 27, 26),(99, 110, 106), 0 ),
		polygon ((26, 27, 15),(107, 111, 62), 0 ),
		polygon ((15, 14, 26),(63, 59, 108), 0 ),
		polygon ((28, 29, 30),(112, 115, 116), 0 ),
		polygon ((30, 31, 28),(116, 121, 112), 0 ),
		polygon ((31, 30, 32),(122, 117, 127), 0 ),
		polygon ((32, 33, 31),(127, 128, 123), 0 ),
		polygon ((34, 29, 28),(132, 115, 112), 0 ),
		polygon ((28, 35, 34),(112, 133, 132), 0 ),
		polygon ((36, 34, 35),(137, 132, 133), 0 ),
		polygon ((35, 37, 36),(133, 138, 137), 0 ),
		polygon ((33, 32, 38),(128, 127, 143), 0 ),
		polygon ((38, 39, 33),(143, 144, 128), 0 ),
		polygon ((39, 38, 36),(144, 143, 137), 0 ),
		polygon ((36, 37, 39),(137, 138, 144), 0 ),
		polygon ((40, 28, 31),(148, 113, 124), 0 ),
		polygon ((31, 41, 40),(125, 149, 148), 0 ),
		polygon ((41, 31, 33),(150, 126, 129), 0 ),
		polygon ((33, 42, 41),(130, 154, 151), 0 ),
		polygon ((35, 28, 40),(134, 114, 148), 0 ),
		polygon ((40, 43, 35),(148, 155, 135), 0 ),
		polygon ((37, 35, 43),(139, 136, 155), 0 ),
		polygon ((43, 44, 37),(155, 156, 140), 0 ),
		polygon ((42, 33, 39),(154, 131, 145), 0 ),
		polygon ((39, 45, 42),(146, 157, 154), 0 ),
		polygon ((45, 39, 37),(157, 147, 141), 0 ),
		polygon ((37, 44, 45),(142, 156, 157), 0 ),
		polygon ((46, 47, 48),(158, 164, 170), 0 ),
		polygon ((49, 50, 48),(173, 174, 170), 0 ),
		polygon ((48, 47, 49),(170, 164, 173), 0 ),
		polygon ((48, 50, 51),(170, 174, 175), 0 ),
		polygon ((52, 53, 54),(179, 180, 185), 0 ),
		polygon ((54, 55, 52),(185, 189, 179), 0 ),
		polygon ((55, 54, 56),(189, 185, 190), 0 ),
		polygon ((56, 57, 55),(190, 194, 189), 0 ),
		polygon ((51, 50, 57),(175, 174, 194), 0 ),
		polygon ((57, 56, 51),(194, 190, 175), 0 ),
		polygon ((46, 52, 47),(159, 179, 165), 0 ),
		polygon ((53, 52, 46),(180, 179, 160), 0 ),
		polygon ((58, 46, 59),(195, 161, 201), 0 ),
		polygon ((48, 51, 59),(171, 176, 201), 0 ),
		polygon ((59, 46, 48),(201, 162, 172), 0 ),
		polygon ((59, 51, 60),(201, 177, 202), 0 ),
		polygon ((53, 61, 62),(181, 203, 204), 0 ),
		polygon ((62, 54, 53),(204, 186, 182), 0 ),
		polygon ((54, 62, 63),(187, 204, 205), 0 ),
		polygon ((63, 56, 54),(205, 191, 188), 0 ),
		polygon ((60, 51, 56),(202, 178, 192), 0 ),
		polygon ((56, 63, 60),(193, 205, 202), 0 ),
		polygon ((58, 53, 46),(196, 183, 163), 0 ),
		polygon ((61, 53, 58),(203, 184, 197), 0 ),
		polygon ((58, 64, 65),(198, 207, 213), 0 ),
		polygon ((65, 61, 58),(213, 203, 199), 0 ),
		polygon ((61, 65, 66),(203, 213, 214), 0 ),
		polygon ((66, 62, 61),(214, 204, 203), 0 ),
		polygon ((62, 66, 67),(204, 214, 215), 0 ),
		polygon ((67, 63, 62),(215, 205, 204), 0 ),
		polygon ((67, 68, 60),(215, 216, 202), 0 ),
		polygon ((60, 63, 67),(202, 205, 215), 0 ),
		polygon ((69, 70, 71),(217, 218, 219), 0 ),
		polygon ((71, 70, 68),(219, 218, 216), 0 ),
		polygon ((68, 67, 71),(216, 215, 219), 0 ),
		polygon ((71, 67, 72),(219, 215, 220), 0 ),
		polygon ((69, 73, 70),(217, 221, 218), 0 ),
		polygon ((70, 73, 64),(218, 221, 208), 0 ),
		polygon ((40, 41, 74),(148, 152, 225), 0 ),
		polygon ((74, 41, 42),(226, 153, 154), 0 ),
		polygon ((74, 75, 71),(227, 233, 219), 0 ),
		polygon ((72, 74, 71),(220, 228, 219), 0 ),
		polygon ((72, 76, 74),(220, 240, 229), 0 ),
		polygon ((74, 76, 77),(230, 240, 241), 0 ),
		polygon ((78, 77, 76),(247, 242, 240), 0 ),
		polygon ((76, 79, 78),(240, 248, 247), 0 ),
		polygon ((75, 80, 69),(234, 249, 217), 0 ),
		polygon ((69, 71, 75),(217, 219, 235), 0 ),
		polygon ((77, 40, 74),(243, 148, 231), 0 ),
		polygon ((81, 75, 45),(250, 236, 157), 0 ),
		polygon ((82, 43, 77),(251, 155, 244), 0 ),
		polygon ((74, 42, 75),(232, 154, 237), 0 ),
		polygon ((75, 42, 45),(238, 154, 157), 0 ),
		polygon ((83, 84, 78),(252, 257, 247), 0 ),
		polygon ((78, 85, 83),(247, 258, 252), 0 ),
		polygon ((83, 85, 80),(253, 259, 249), 0 ),
		polygon ((80, 86, 83),(249, 264, 254), 0 ),
		polygon ((87, 88, 82),(265, 266, 251), 0 ),
		polygon ((82, 89, 87),(251, 267, 265), 0 ),
		polygon ((81, 88, 87),(250, 266, 265), 0 ),
		polygon ((87, 90, 81),(265, 268, 250), 0 ),
		polygon ((81, 45, 44),(250, 157, 156), 0 ),
		polygon ((44, 88, 81),(156, 266, 250), 0 ),
		polygon ((88, 44, 43),(266, 156, 155), 0 ),
		polygon ((43, 82, 88),(155, 251, 266), 0 ),
		polygon ((78, 82, 77),(247, 251, 245), 0 ),
		polygon ((91, 83, 86),(269, 255, 264), 0 ),
		polygon ((64, 73, 79),(209, 222, 248), 0 ),
		polygon ((79, 65, 64),(248, 213, 210), 0 ),
		polygon ((77, 43, 40),(246, 155, 148), 0 ),
		polygon ((30, 92, 93),(118, 276, 279), 0 ),
		polygon ((93, 32, 30),(279, 127, 119), 0 ),
		polygon ((32, 93, 38),(127, 279, 143), 0 ),
		polygon ((38, 93, 94),(143, 279, 280), 0 ),
		polygon ((38, 94, 95),(143, 280, 281), 0 ),
		polygon ((95, 36, 38),(281, 137, 143), 0 ),
		polygon ((92, 30, 29),(277, 120, 115), 0 ),
		polygon ((29, 96, 92),(115, 283, 278), 0 ),
		polygon ((96, 29, 34),(284, 115, 132), 0 ),
		polygon ((34, 97, 96),(132, 286, 285), 0 ),
		polygon ((97, 34, 36),(286, 132, 137), 0 ),
		polygon ((36, 95, 97),(137, 281, 286), 0 ),
		polygon ((47, 98, 99),(166, 288, 291), 0 ),
		polygon ((99, 49, 47),(292, 173, 167), 0 ),
		polygon ((49, 99, 100),(173, 293, 295), 0 ),
		polygon ((100, 50, 49),(296, 174, 173), 0 ),
		polygon ((47, 52, 101),(168, 179, 300), 0 ),
		polygon ((101, 98, 47),(301, 289, 169), 0 ),
		polygon ((52, 55, 102),(179, 189, 304), 0 ),
		polygon ((102, 101, 52),(305, 302, 179), 0 ),
		polygon ((57, 50, 100),(194, 174, 297), 0 ),
		polygon ((100, 103, 57),(298, 308, 194), 0 ),
		polygon ((55, 57, 103),(189, 194, 309), 0 ),
		polygon ((103, 102, 55),(310, 306, 189), 0 ),
		polygon ((104, 105, 106),(311, 312, 313), 0 ),
		polygon ((107, 106, 105),(314, 313, 312), 0 ),
		polygon ((105, 104, 108),(312, 311, 315), 0 ),
		polygon ((108, 91, 105),(315, 270, 312), 0 ),
		polygon ((109, 91, 108),(318, 271, 316), 0 ),
		polygon ((108, 110, 109),(317, 319, 318), 0 ),
		polygon ((111, 109, 110),(320, 318, 319), 0 ),
		polygon ((110, 112, 111),(319, 321, 320), 0 ),
		polygon ((112, 113, 114),(321, 322, 323), 0 ),
		polygon ((114, 111, 112),(323, 320, 321), 0 ),
		polygon ((107, 114, 113),(314, 323, 322), 0 ),
		polygon ((113, 106, 107),(322, 313, 314), 0 ),
		polygon ((114, 87, 111),(323, 265, 320), 0 ),
		polygon ((111, 87, 89),(320, 265, 267), 0 ),
		polygon ((89, 109, 111),(267, 318, 320), 0 ),
		polygon ((109, 89, 84),(318, 267, 257), 0 ),
		polygon ((91, 109, 84),(272, 318, 257), 0 ),
		polygon ((84, 83, 91),(257, 256, 273), 0 ),
		polygon ((80, 75, 81),(249, 239, 250), 0 ),
		polygon ((86, 105, 91),(264, 312, 274), 0 ),
		polygon ((105, 86, 90),(312, 264, 268), 0 ),
		polygon ((90, 107, 105),(268, 314, 312), 0 ),
		polygon ((107, 90, 87),(314, 268, 265), 0 ),
		polygon ((87, 114, 107),(265, 323, 314), 0 ),
		polygon ((65, 79, 76),(213, 248, 240), 0 ),
		polygon ((76, 66, 65),(240, 214, 213), 0 ),
		polygon ((66, 76, 72),(214, 240, 220), 0 ),
		polygon ((72, 67, 66),(220, 215, 214), 0 ),
		polygon ((85, 78, 79),(260, 247, 248), 0 ),
		polygon ((79, 73, 85),(248, 223, 261), 0 ),
		polygon ((85, 73, 69),(262, 224, 217), 0 ),
		polygon ((69, 80, 85),(217, 249, 263), 0 ),
		polygon ((82, 84, 89),(251, 257, 267), 0 ),
		polygon ((84, 82, 78),(257, 251, 247), 0 ),
		polygon ((80, 81, 86),(249, 250, 264), 0 ),
		polygon ((90, 86, 81),(268, 264, 250), 0 ),
		polygon ((60, 68, 70),(202, 216, 218), 0 ),
		polygon ((70, 59, 60),(218, 201, 202), 0 ),
		polygon ((70, 64, 59),(218, 211, 201), 0 ),
		polygon ((59, 64, 58),(201, 212, 200), 0 )
	)
); /* end of polyset 'park_goal_pole_1' */

polyset park_backboard_1 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (vinyl_board ),
	casts_shadow = TRUE,
	vertices = ((cv((7.704959, 2.217327, 0.188521), 1)),
			(cv((7.704959, 2.21732, -0.002394), 1)),
			(cv((7.704959, 2.642379, -0.002394), 1)),
			(cv((7.704959, 2.343752, 0.611566), 1)),
			(cv((7.704959, 2.846172, 0.568453), 1)),
			(cv((7.704959, 2.67912, 0.639225), 1)),
			(cv((7.704959, 2.986626, 0.415342), 1)),
			(cv((7.704959, 3.06222, 0.20674), 1)),
			(cv((7.704959, 3.082309, -0.002394), 1)),
			(cv((7.704959, 3.06222, -0.211527), 1)),
			(cv((7.704959, 2.986626, -0.420129), 1)),
			(cv((7.704959, 2.846172, -0.57324), 1)),
			(cv((7.704959, 2.67912, -0.644012), 1)),
			(cv((7.704959, 2.382843, -0.644004), 1)),
			(cv((7.704959, 2.343752, -0.616353), 1)),
			(cv((7.704959, 2.217327, -0.193308), 1)),
			(cv((7.704959, 2.382843, 0.639217), 1)),
			(cv((7.739873, 2.202205, -0.002394), 1)),
			(cv((7.739873, 2.202211, 0.19531), 1)),
			(cv((7.739873, 2.333132, 0.633399), 1)),
			(cv((7.739873, 2.373614, 0.662034), 1)),
			(cv((7.739873, 2.680427, 0.662042), 1)),
			(cv((7.739873, 2.853419, 0.588753), 1)),
			(cv((7.739873, 2.998868, 0.430197), 1)),
			(cv((7.739873, 3.07715, 0.214177), 1)),
			(cv((7.739873, 3.097954, -0.002394), 1)),
			(cv((7.739873, 3.07715, -0.218964), 1)),
			(cv((7.739873, 2.998868, -0.434985), 1)),
			(cv((7.739873, 2.853419, -0.59354), 1)),
			(cv((7.739873, 2.680427, -0.666829), 1)),
			(cv((7.739873, 2.373614, -0.666821), 1)),
			(cv((7.739873, 2.333132, -0.638187), 1)),
			(cv((7.739873, 2.202211, -0.200097), 1)),
			(cv((7.772444, 2.217327, 0.188521), 1)),
			(cv((7.772444, 2.21732, -0.002394), 1)),
			(cv((7.772444, 2.642379, -0.002394), 1)),
			(cv((7.772444, 2.343752, 0.611566), 1)),
			(cv((7.772444, 2.846172, 0.568453), 1)),
			(cv((7.772444, 2.67912, 0.639225), 1)),
			(cv((7.772444, 2.986626, 0.415342), 1)),
			(cv((7.772444, 3.06222, 0.20674), 1)),
			(cv((7.772444, 3.082309, -0.002394), 1)),
			(cv((7.772444, 3.06222, -0.211527), 1)),
			(cv((7.772444, 2.986626, -0.420129), 1)),
			(cv((7.772444, 2.846172, -0.57324), 1)),
			(cv((7.772444, 2.67912, -0.644012), 1)),
			(cv((7.772444, 2.382843, -0.644004), 1)),
			(cv((7.772444, 2.343752, -0.616353), 1)),
			(cv((7.772444, 2.217327, -0.193308), 1)),
			(cv((7.772444, 2.382843, 0.639217), 1))	),
	texture_vertices = (
			st( 0.371263, 0.112245 ),
			st( 0.492903, 0.112239 ),
			st( 0.492903, 0.508190 ),
			st( 0.101724, 0.230013 ),
			st( 0.129193, 0.698027 ),
			st( 0.084101, 0.542415 ),
			st( 0.226746, 0.828863 ),
			st( 0.359655, 0.899280 ),
			st( 0.492903, 0.917994 ),
			st( 0.626150, 0.899280 ),
			st( 0.759059, 0.828863 ),
			st( 0.856612, 0.698027 ),
			st( 0.901704, 0.542415 ),
			st( 0.901699, 0.266427 ),
			st( 0.884081, 0.230013 ),
			st( 0.614542, 0.112245 ),
			st( 0.084106, 0.266427 ),
			st( 0.492903, 0.009191 ),
			st( 0.348377, 0.009198 ),
			st( 0.028125, 0.153221 ),
			st( 0.002026, 0.267194 ),
			st( 0.007187, 0.535270 ),
			st( 0.060762, 0.725574 ),
			st( 0.176670, 0.885579 ),
			st( 0.334585, 0.971695 ),
			st( 0.492903, 0.994581 ),
			st( 0.651220, 0.971695 ),
			st( 0.809136, 0.885579 ),
			st( 0.925043, 0.725574 ),
			st( 0.978619, 0.542231 ),
			st( 0.978613, 0.197754 ),
			st( 0.957680, 0.153221 ),
			st( 0.637428, 0.009198 ),
			st( 0.371263, 0.112245 ),
			st( 0.492903, 0.112239 ),
			st( 0.492903, 0.508190 ),
			st( 0.101724, 0.230013 ),
			st( 0.129193, 0.698027 ),
			st( 0.084101, 0.542415 ),
			st( 0.226746, 0.828863 ),
			st( 0.359655, 0.899280 ),
			st( 0.492903, 0.917994 ),
			st( 0.626150, 0.899280 ),
			st( 0.759059, 0.828863 ),
			st( 0.856612, 0.698027 ),
			st( 0.901704, 0.542415 ),
			st( 0.901699, 0.266427 ),
			st( 0.884081, 0.230013 ),
			st( 0.614542, 0.112245 ),
			st( 0.084106, 0.266427 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 2),(4, 5, 2), 0 ),
		polygon ((2, 6, 4),(2, 6, 4), 0 ),
		polygon ((7, 6, 2),(7, 6, 2), 0 ),
		polygon ((8, 7, 2),(8, 7, 2), 0 ),
		polygon ((2, 9, 8),(2, 9, 8), 0 ),
		polygon ((10, 9, 2),(10, 9, 2), 0 ),
		polygon ((2, 11, 10),(2, 11, 10), 0 ),
		polygon ((12, 11, 2),(12, 11, 2), 0 ),
		polygon ((2, 13, 12),(2, 13, 12), 0 ),
		polygon ((14, 13, 2),(14, 13, 2), 0 ),
		polygon ((2, 15, 14),(2, 15, 14), 0 ),
		polygon ((1, 15, 2),(1, 15, 2), 0 ),
		polygon ((2, 5, 16),(2, 5, 16), 0 ),
		polygon ((16, 3, 2),(16, 3, 2), 0 ),
		polygon ((17, 1, 0),(17, 1, 0), 0 ),
		polygon ((0, 18, 17),(0, 18, 17), 0 ),
		polygon ((18, 0, 19),(18, 0, 19), 0 ),
		polygon ((19, 0, 3),(19, 0, 3), 0 ),
		polygon ((19, 3, 16),(19, 3, 16), 0 ),
		polygon ((16, 20, 19),(16, 20, 19), 0 ),
		polygon ((20, 16, 5),(20, 16, 5), 0 ),
		polygon ((5, 21, 20),(5, 21, 20), 0 ),
		polygon ((5, 4, 22),(5, 4, 22), 0 ),
		polygon ((22, 21, 5),(22, 21, 5), 0 ),
		polygon ((22, 4, 6),(22, 4, 6), 0 ),
		polygon ((6, 23, 22),(6, 23, 22), 0 ),
		polygon ((23, 6, 7),(23, 6, 7), 0 ),
		polygon ((7, 24, 23),(7, 24, 23), 0 ),
		polygon ((24, 7, 8),(24, 7, 8), 0 ),
		polygon ((8, 25, 24),(8, 25, 24), 0 ),
		polygon ((26, 25, 8),(26, 25, 8), 0 ),
		polygon ((8, 9, 26),(8, 9, 26), 0 ),
		polygon ((26, 9, 10),(26, 9, 10), 0 ),
		polygon ((10, 27, 26),(10, 27, 26), 0 ),
		polygon ((28, 27, 10),(28, 27, 10), 0 ),
		polygon ((10, 11, 28),(10, 11, 28), 0 ),
		polygon ((28, 11, 29),(28, 11, 29), 0 ),
		polygon ((29, 11, 12),(29, 11, 12), 0 ),
		polygon ((12, 13, 29),(12, 13, 29), 0 ),
		polygon ((29, 13, 30),(29, 13, 30), 0 ),
		polygon ((30, 13, 31),(30, 13, 31), 0 ),
		polygon ((31, 13, 14),(31, 13, 14), 0 ),
		polygon ((32, 31, 14),(32, 31, 14), 0 ),
		polygon ((14, 15, 32),(14, 15, 32), 0 ),
		polygon ((32, 15, 1),(32, 15, 1), 0 ),
		polygon ((1, 17, 32),(1, 17, 32), 0 ),
		polygon ((35, 34, 33),(35, 34, 33), 0 ),
		polygon ((33, 36, 35),(33, 36, 35), 0 ),
		polygon ((35, 38, 37),(35, 38, 37), 0 ),
		polygon ((37, 39, 35),(37, 39, 35), 0 ),
		polygon ((35, 39, 40),(35, 39, 40), 0 ),
		polygon ((35, 40, 41),(35, 40, 41), 0 ),
		polygon ((41, 42, 35),(41, 42, 35), 0 ),
		polygon ((35, 42, 43),(35, 42, 43), 0 ),
		polygon ((43, 44, 35),(43, 44, 35), 0 ),
		polygon ((35, 44, 45),(35, 44, 45), 0 ),
		polygon ((45, 46, 35),(45, 46, 35), 0 ),
		polygon ((35, 46, 47),(35, 46, 47), 0 ),
		polygon ((47, 48, 35),(47, 48, 35), 0 ),
		polygon ((35, 48, 34),(35, 48, 34), 0 ),
		polygon ((49, 38, 35),(49, 38, 35), 0 ),
		polygon ((35, 36, 49),(35, 36, 49), 0 ),
		polygon ((33, 34, 17),(33, 34, 17), 0 ),
		polygon ((17, 18, 33),(17, 18, 33), 0 ),
		polygon ((19, 33, 18),(19, 33, 18), 0 ),
		polygon ((36, 33, 19),(36, 33, 19), 0 ),
		polygon ((49, 36, 19),(49, 36, 19), 0 ),
		polygon ((19, 20, 49),(19, 20, 49), 0 ),
		polygon ((38, 49, 20),(38, 49, 20), 0 ),
		polygon ((20, 21, 38),(20, 21, 38), 0 ),
		polygon ((22, 37, 38),(22, 37, 38), 0 ),
		polygon ((38, 21, 22),(38, 21, 22), 0 ),
		polygon ((39, 37, 22),(39, 37, 22), 0 ),
		polygon ((22, 23, 39),(22, 23, 39), 0 ),
		polygon ((40, 39, 23),(40, 39, 23), 0 ),
		polygon ((23, 24, 40),(23, 24, 40), 0 ),
		polygon ((41, 40, 24),(41, 40, 24), 0 ),
		polygon ((24, 25, 41),(24, 25, 41), 0 ),
		polygon ((41, 25, 26),(41, 25, 26), 0 ),
		polygon ((26, 42, 41),(26, 42, 41), 0 ),
		polygon ((43, 42, 26),(43, 42, 26), 0 ),
		polygon ((26, 27, 43),(26, 27, 43), 0 ),
		polygon ((43, 27, 28),(43, 27, 28), 0 ),
		polygon ((28, 44, 43),(28, 44, 43), 0 ),
		polygon ((29, 44, 28),(29, 44, 28), 0 ),
		polygon ((45, 44, 29),(45, 44, 29), 0 ),
		polygon ((29, 46, 45),(29, 46, 45), 0 ),
		polygon ((30, 46, 29),(30, 46, 29), 0 ),
		polygon ((31, 46, 30),(31, 46, 30), 0 ),
		polygon ((47, 46, 31),(47, 46, 31), 0 ),
		polygon ((47, 31, 32),(47, 31, 32), 0 ),
		polygon ((32, 48, 47),(32, 48, 47), 0 ),
		polygon ((34, 48, 32),(34, 48, 32), 0 ),
		polygon ((32, 17, 34),(32, 17, 34), 0 )
	)
); /* end of polyset 'park_backboard_1' */

polyset park_goal_grass2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (grass ),
	casts_shadow = TRUE,
	vertices = ((cv((-8.842647, 0.0, 0.060761), 1)),
			(cv((-8.765566, 0.171198, 0.087907), 1)),
			(cv((-8.805081, 0.171198, -0.148227), 1)),
			(cv((-8.868864, 0.0, -0.09591), 1)),
			(cv((-9.029337, 0.171198, -0.232072), 1)),
			(cv((-9.017653, 0.0, -0.15154), 1)),
			(cv((-8.950306, 0.171198, 0.240196), 1)),
			(cv((-8.965218, 0.0, 0.1618), 1)),
			(cv((-9.114008, 0.0, 0.106171), 1)),
			(cv((-9.174562, 0.171198, 0.15635), 1)),
			(cv((-9.140225, 0.0, -0.0505), 1)),
			(cv((-9.214077, 0.171198, -0.079784), 1)),
			(cv((-8.944415, 0.0, -0.074369), 1)),
			(cv((-8.901103, 0.325603, -0.144151), 1)),
			(cv((-9.070061, 0.325603, -0.144151), 1)),
			(cv((-9.017653, 0.0, -0.15154), 1)),
			(cv((-9.029337, 0.171198, -0.232072), 1)),
			(cv((-9.214077, 0.171198, -0.079784), 1)),
			(cv((-8.944416, 0.0, 0.078581), 1)),
			(cv((-8.901103, 0.325603, 0.148493), 1)),
			(cv((-8.816624, 0.325603, 0.002171), 1)),
			(cv((-8.900263, 0.0, 0.002106), 1)),
			(cv((-8.901103, 0.325603, -0.144151), 1)),
			(cv((-8.944415, 0.0, -0.074369), 1)),
			(cv((-9.070061, 0.325603, 0.148493), 1)),
			(cv((-9.032721, 0.0, 0.078581), 1)),
			(cv((-9.076874, 0.0, 0.002106), 1)),
			(cv((-9.15454, 0.325603, 0.002171), 1)),
			(cv((-9.032721, 0.0, -0.074369), 1)),
			(cv((-9.070061, 0.325603, -0.144151), 1))	),
	texture_vertices = (
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((3, 2, 4),(3, 2, 4), 0 ),
		polygon ((4, 5, 3),(4, 5, 3), 0 ),
		polygon ((0, 6, 1),(0, 6, 1), 0 ),
		polygon ((6, 0, 7),(6, 0, 7), 0 ),
		polygon ((6, 7, 8),(6, 7, 8), 0 ),
		polygon ((8, 9, 6),(8, 9, 6), 0 ),
		polygon ((9, 8, 10),(9, 8, 10), 0 ),
		polygon ((10, 11, 9),(10, 11, 9), 0 ),
		polygon ((11, 10, 5),(11, 10, 5), 0 ),
		polygon ((12, 13, 14),(12, 13, 14), 0 ),
		polygon ((15, 16, 17),(15, 16, 17), 0 ),
		polygon ((18, 19, 20),(18, 19, 20), 0 ),
		polygon ((20, 21, 18),(20, 21, 18), 0 ),
		polygon ((21, 20, 22),(21, 20, 22), 0 ),
		polygon ((22, 23, 21),(22, 23, 21), 0 ),
		polygon ((18, 24, 19),(18, 24, 19), 0 ),
		polygon ((24, 18, 25),(24, 18, 25), 0 ),
		polygon ((24, 25, 26),(24, 25, 26), 0 ),
		polygon ((26, 27, 24),(26, 27, 24), 0 ),
		polygon ((27, 26, 28),(27, 26, 28), 0 ),
		polygon ((28, 29, 27),(28, 29, 27), 0 ),
		polygon ((29, 28, 23),(29, 28, 23), 0 )
	)
); /* end of polyset 'park_goal_grass2' */

polyset park_goal_target_2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (cush ),
	shader = (TARGET ),
	casts_shadow = TRUE,
	vertices = ((cv((-7.697901, 2.324613, 0.201584), 1)),
			(cv((-7.697901, 2.62251, 0.201584), 1)),
			(cv((-7.697901, 2.62251, -0.196796), 1)),
			(cv((-7.697901, 2.586275, -0.160562), 1)),
			(cv((-7.697901, 2.360827, 0.165229), 1)),
			(cv((-7.697901, 2.360827, -0.160562), 1)),
			(cv((-7.697901, 2.324613, -0.196796), 1)),
			(cv((-7.697901, 2.586275, 0.165229), 1))	),
	texture_vertices = (
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.900000, 0.000000 ) ),
	polygons = (
		polygon ((4, 1, 7),(4, 1, 7), 1 ),
		polygon ((6, 0, 4),(6, 0, 4), 1 ),
		polygon ((4, 5, 6),(4, 5, 6), 1 ),
		polygon ((7, 1, 3),(7, 1, 3), 1 ),
		polygon ((0, 1, 4),(0, 1, 4), 1 ),
		polygon ((3, 1, 2),(3, 1, 2), 1 ),
		polygon ((5, 3, 2),(5, 3, 2), 1 ),
		polygon ((2, 6, 5),(2, 6, 5), 1 )
	)
); /* end of polyset 'park_goal_target_2' */

polyset park_Rim2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (ORANGE ),
	shader = (HOOP ),
	casts_shadow = TRUE,
	vertices = ((cv((-7.704092, 2.322238, 0.002394), 1)),
			(cv((-7.64829, 2.322238, 0.002394), 1)),
			(cv((-7.704092, 2.277873, 0.002394), 1)),
			(cv((-7.64829, 2.322238, -0.045083), 1)),
			(cv((-7.64829, 2.322238, 0.044907), 1)),
			(cv((-7.704092, 2.322238, 0.04481), 1)),
			(cv((-7.704092, 2.322238, -0.044974), 1)),
			(cv((-7.64829, 2.322238, 0.044907), 1)),
			(cv((-7.629308, 2.301843, 0.04481), 1)),
			(cv((-7.64829, 2.322238, -0.045083), 1)),
			(cv((-7.598217, 2.322238, 0.136435), 1)),
			(cv((-7.584416, 2.301843, 0.122565), 1)),
			(cv((-7.629308, 2.301843, -0.044974), 1)),
			(cv((-7.506661, 2.301843, 0.167457), 1)),
			(cv((-7.506661, 2.342989, 0.167457), 1)),
			(cv((-7.584416, 2.342989, 0.122565), 1)),
			(cv((-7.629308, 2.342989, 0.04481), 1)),
			(cv((-7.629308, 2.342989, -0.044974), 1)),
			(cv((-7.584416, 2.342989, -0.122729), 1)),
			(cv((-7.584416, 2.301843, -0.122729), 1)),
			(cv((-7.506661, 2.342989, -0.167621), 1)),
			(cv((-7.506661, 2.301843, -0.167621), 1)),
			(cv((-7.339122, 2.342989, 0.122565), 1)),
			(cv((-7.416877, 2.342989, 0.167457), 1)),
			(cv((-7.416877, 2.301843, 0.167457), 1)),
			(cv((-7.416877, 2.342989, -0.167621), 1)),
			(cv((-7.416877, 2.301843, -0.167621), 1)),
			(cv((-7.339122, 2.301843, -0.122729), 1)),
			(cv((-7.339122, 2.342989, -0.122729), 1)),
			(cv((-7.29423, 2.301843, -0.044974), 1)),
			(cv((-7.29423, 2.342989, -0.044974), 1)),
			(cv((-7.29423, 2.342989, 0.04481), 1)),
			(cv((-7.29423, 2.301843, 0.04481), 1)),
			(cv((-7.339122, 2.301843, 0.122565), 1)),
			(cv((-7.511488, 2.322238, 0.186508), 1)),
			(cv((-7.411341, 2.322238, 0.186508), 1)),
			(cv((-7.324612, 2.322238, 0.136435), 1)),
			(cv((-7.274538, 2.322238, 0.049705), 1)),
			(cv((-7.274538, 2.322238, -0.050441), 1)),
			(cv((-7.324612, 2.322238, -0.137171), 1)),
			(cv((-7.411341, 2.322238, -0.187244), 1)),
			(cv((-7.511488, 2.322238, -0.187244), 1)),
			(cv((-7.598217, 2.322238, -0.137171), 1))	),
	texture_vertices = (
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.500000, 0.000000 ),
			st( 0.964657, 0.716186 ),
			st( 0.003119, 0.705100 ),
			st( 0.001040, 0.006623 ),
			st( 0.962578, 0.011086 ),
			st( 1.000000, 0.450000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ),
			st( 0.000000, 0.450000 ),
			st( 1.000000, 0.450000 ) ),
	polygons = (
		polygon ((2, 1, 0),(2, 1, 0), 0 ),
		polygon ((3, 4, 5),(3, 4, 5), 0 ),
		polygon ((5, 6, 3),(5, 6, 3), 0 ),
		polygon ((13, 11, 10),(13, 11, 10), 1 ),
		polygon ((7, 8, 9),(7, 8, 9), 1 ),
		polygon ((10, 11, 8),(10, 11, 8), 1 ),
		polygon ((8, 7, 10),(8, 7, 10), 1 ),
		polygon ((9, 8, 12),(9, 8, 12), 1 ),
		polygon ((13, 14, 11),(13, 14, 11), 1 ),
		polygon ((11, 14, 15),(11, 14, 15), 1 ),
		polygon ((15, 8, 11),(15, 8, 11), 1 ),
		polygon ((15, 16, 8),(15, 16, 8), 1 ),
		polygon ((16, 17, 8),(16, 17, 8), 1 ),
		polygon ((8, 17, 12),(8, 17, 12), 1 ),
		polygon ((12, 17, 18),(12, 17, 18), 1 ),
		polygon ((18, 19, 12),(18, 19, 12), 1 ),
		polygon ((19, 18, 20),(19, 18, 20), 1 ),
		polygon ((20, 21, 19),(20, 21, 19), 1 ),
		polygon ((22, 23, 24),(22, 23, 24), 1 ),
		polygon ((25, 21, 20),(25, 21, 20), 1 ),
		polygon ((21, 25, 26),(21, 25, 26), 1 ),
		polygon ((23, 13, 24),(23, 13, 24), 1 ),
		polygon ((23, 14, 13),(23, 14, 13), 1 ),
		polygon ((25, 27, 26),(25, 27, 26), 1 ),
		polygon ((25, 28, 27),(25, 28, 27), 1 ),
		polygon ((27, 28, 29),(27, 28, 29), 1 ),
		polygon ((29, 28, 30),(29, 28, 30), 1 ),
		polygon ((29, 30, 31),(29, 30, 31), 1 ),
		polygon ((31, 32, 29),(31, 32, 29), 1 ),
		polygon ((32, 31, 33),(32, 31, 33), 1 ),
		polygon ((33, 31, 22),(33, 31, 22), 1 ),
		polygon ((22, 24, 33),(22, 24, 33), 1 ),
		polygon ((16, 10, 7),(16, 10, 7), 1 ),
		polygon ((10, 16, 15),(10, 16, 15), 1 ),
		polygon ((10, 15, 14),(10, 15, 14), 1 ),
		polygon ((14, 34, 10),(14, 34, 10), 1 ),
		polygon ((14, 35, 34),(14, 35, 34), 1 ),
		polygon ((35, 14, 23),(35, 14, 23), 1 ),
		polygon ((35, 23, 22),(35, 23, 22), 1 ),
		polygon ((22, 36, 35),(22, 36, 35), 1 ),
		polygon ((22, 37, 36),(22, 37, 36), 1 ),
		polygon ((37, 22, 31),(37, 22, 31), 1 ),
		polygon ((37, 31, 30),(37, 31, 30), 1 ),
		polygon ((30, 38, 37),(30, 38, 37), 1 ),
		polygon ((30, 39, 38),(30, 39, 38), 1 ),
		polygon ((39, 30, 28),(39, 30, 28), 1 ),
		polygon ((39, 28, 25),(39, 28, 25), 1 ),
		polygon ((25, 40, 39),(25, 40, 39), 1 ),
		polygon ((25, 41, 40),(25, 41, 40), 1 ),
		polygon ((41, 25, 20),(41, 25, 20), 1 ),
		polygon ((41, 20, 18),(41, 20, 18), 1 ),
		polygon ((18, 42, 41),(18, 42, 41), 1 ),
		polygon ((18, 9, 42),(18, 9, 42), 1 ),
		polygon ((9, 18, 17),(9, 18, 17), 1 ),
		polygon ((9, 17, 16),(9, 17, 16), 1 ),
		polygon ((16, 7, 9),(16, 7, 9), 1 ),
		polygon ((19, 42, 9),(19, 42, 9), 1 ),
		polygon ((9, 12, 19),(9, 12, 19), 1 ),
		polygon ((19, 41, 42),(19, 41, 42), 1 ),
		polygon ((19, 21, 41),(19, 21, 41), 1 ),
		polygon ((21, 26, 41),(21, 26, 41), 1 ),
		polygon ((40, 41, 26),(40, 41, 26), 1 ),
		polygon ((26, 27, 39),(26, 27, 39), 1 ),
		polygon ((39, 40, 26),(39, 40, 26), 1 ),
		polygon ((39, 27, 29),(39, 27, 29), 1 ),
		polygon ((29, 38, 39),(29, 38, 39), 1 ),
		polygon ((38, 29, 37),(38, 29, 37), 1 ),
		polygon ((37, 29, 32),(37, 29, 32), 1 ),
		polygon ((33, 37, 32),(33, 37, 32), 1 ),
		polygon ((37, 33, 36),(37, 33, 36), 1 ),
		polygon ((35, 33, 24),(35, 33, 24), 1 ),
		polygon ((33, 35, 36),(33, 35, 36), 1 ),
		polygon ((13, 35, 24),(13, 35, 24), 1 ),
		polygon ((35, 13, 34),(35, 13, 34), 1 ),
		polygon ((10, 34, 13),(10, 34, 13), 1 )
	)
); /* end of polyset 'park_Rim2' */

polyset park_Net2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (NET ),
	casts_shadow = TRUE,
	vertices = ((cv((-7.416877, 2.301843, -0.167621), 1)),
			(cv((-7.42696, 2.200817, -0.12909), 1)),
			(cv((-7.506661, 2.301843, -0.167621), 1)),
			(cv((-7.496127, 2.200817, -0.129211), 1)),
			(cv((-7.556088, 2.200817, -0.094732), 1)),
			(cv((-7.521413, 1.946636, -0.059726), 1)),
			(cv((-7.543244, 1.946636, -0.021913), 1)),
			(cv((-7.530894, 2.044886, -0.069449), 1)),
			(cv((-7.556316, 2.044886, -0.025593), 1)),
			(cv((-7.339122, 2.301843, -0.122729), 1)),
			(cv((-7.367119, 2.200817, -0.094402), 1)),
			(cv((-7.33264, 2.200817, -0.034441), 1)),
			(cv((-7.29423, 2.301843, -0.044974), 1)),
			(cv((-7.584416, 2.301843, -0.122729), 1)),
			(cv((-7.629308, 2.301843, -0.044974), 1)),
			(cv((-7.590777, 2.200817, -0.034891), 1)),
			(cv((-7.569109, 2.117504, -0.028844), 1)),
			(cv((-7.540347, 2.117504, -0.078661), 1)),
			(cv((-7.490531, 2.117504, -0.107423), 1)),
			(cv((-7.433007, 2.117504, -0.107423), 1)),
			(cv((-7.38319, 2.117504, -0.078661), 1)),
			(cv((-7.436258, 2.044886, -0.09463), 1)),
			(cv((-7.48695, 2.044886, -0.094718), 1)),
			(cv((-7.392402, 2.044886, -0.069207), 1)),
			(cv((-7.402125, 1.946636, -0.059726), 1)),
			(cv((-7.439937, 1.946636, -0.081557), 1)),
			(cv((-7.4836, 1.946636, -0.081557), 1)),
			(cv((-7.590897, 2.200817, 0.034276), 1)),
			(cv((-7.629308, 2.301843, 0.04481), 1)),
			(cv((-7.584416, 2.301843, 0.122565), 1)),
			(cv((-7.569109, 2.117504, 0.02868), 1)),
			(cv((-7.540347, 2.117504, 0.078497), 1)),
			(cv((-7.556418, 2.200817, 0.094237), 1)),
			(cv((-7.556405, 2.044886, 0.025099), 1)),
			(cv((-7.531136, 2.044886, 0.069043), 1)),
			(cv((-7.543244, 1.946636, 0.021749), 1)),
			(cv((-7.521413, 1.946636, 0.059562), 1)),
			(cv((-7.48728, 2.044886, 0.094466), 1)),
			(cv((-7.496578, 2.200817, 0.128926), 1)),
			(cv((-7.506661, 2.301843, 0.167457), 1)),
			(cv((-7.332761, 2.200817, 0.034727), 1)),
			(cv((-7.354428, 2.117504, 0.02868), 1)),
			(cv((-7.354428, 2.117504, -0.028844), 1)),
			(cv((-7.416877, 2.301843, 0.167457), 1)),
			(cv((-7.42741, 2.200817, 0.129046), 1)),
			(cv((-7.367449, 2.200817, 0.094567), 1)),
			(cv((-7.339121, 2.301843, 0.122565), 1)),
			(cv((-7.29423, 2.301843, 0.04481), 1)),
			(cv((-7.38319, 2.117504, 0.078497), 1)),
			(cv((-7.433007, 2.117504, 0.107258), 1)),
			(cv((-7.490531, 2.117504, 0.107258), 1)),
			(cv((-7.436588, 2.044886, 0.094554), 1)),
			(cv((-7.392644, 2.044886, 0.069285), 1)),
			(cv((-7.367221, 2.044886, 0.025429), 1)),
			(cv((-7.367132, 2.044886, -0.025263), 1)),
			(cv((-7.4836, 1.946636, 0.081393), 1)),
			(cv((-7.439938, 1.946636, 0.081393), 1)),
			(cv((-7.402125, 1.946636, 0.059562), 1)),
			(cv((-7.380293, 1.946636, 0.021749), 1)),
			(cv((-7.380293, 1.946636, -0.021913), 1)),
			(cv((-7.506661, 2.301843, -0.167621), 1)),
			(cv((-7.42696, 2.200817, -0.12909), 1)),
			(cv((-7.416877, 2.301843, -0.167621), 1)),
			(cv((-7.556088, 2.200817, -0.094732), 1)),
			(cv((-7.496127, 2.200817, -0.129211), 1)),
			(cv((-7.530894, 2.044886, -0.069449), 1)),
			(cv((-7.543244, 1.946636, -0.021913), 1)),
			(cv((-7.521413, 1.946636, -0.059726), 1)),
			(cv((-7.556316, 2.044886, -0.025593), 1)),
			(cv((-7.339122, 2.301843, -0.122729), 1)),
			(cv((-7.367119, 2.200817, -0.094402), 1)),
			(cv((-7.33264, 2.200817, -0.034441), 1)),
			(cv((-7.29423, 2.301843, -0.044974), 1)),
			(cv((-7.584416, 2.301843, -0.122729), 1)),
			(cv((-7.629308, 2.301843, -0.044974), 1)),
			(cv((-7.590777, 2.200817, -0.034891), 1)),
			(cv((-7.569109, 2.117504, -0.028844), 1)),
			(cv((-7.540347, 2.117504, -0.078661), 1)),
			(cv((-7.490531, 2.117504, -0.107423), 1)),
			(cv((-7.433007, 2.117504, -0.107423), 1)),
			(cv((-7.38319, 2.117504, -0.078661), 1)),
			(cv((-7.48695, 2.044886, -0.094718), 1)),
			(cv((-7.436258, 2.044886, -0.09463), 1)),
			(cv((-7.392402, 2.044886, -0.069207), 1)),
			(cv((-7.402125, 1.946636, -0.059726), 1)),
			(cv((-7.439937, 1.946636, -0.081557), 1)),
			(cv((-7.4836, 1.946636, -0.081557), 1)),
			(cv((-7.590897, 2.200817, 0.034276), 1)),
			(cv((-7.629308, 2.301843, 0.04481), 1)),
			(cv((-7.584416, 2.301843, 0.122565), 1)),
			(cv((-7.569109, 2.117504, 0.02868), 1)),
			(cv((-7.540347, 2.117504, 0.078497), 1)),
			(cv((-7.556418, 2.200817, 0.094237), 1)),
			(cv((-7.531136, 2.044886, 0.069043), 1)),
			(cv((-7.556405, 2.044886, 0.025099), 1)),
			(cv((-7.543244, 1.946636, 0.021749), 1)),
			(cv((-7.521413, 1.946636, 0.059562), 1)),
			(cv((-7.48728, 2.044886, 0.094466), 1)),
			(cv((-7.496578, 2.200817, 0.128926), 1)),
			(cv((-7.506661, 2.301843, 0.167457), 1)),
			(cv((-7.354428, 2.117504, 0.02868), 1)),
			(cv((-7.332761, 2.200817, 0.034727), 1)),
			(cv((-7.354428, 2.117504, -0.028844), 1)),
			(cv((-7.416877, 2.301843, 0.167457), 1)),
			(cv((-7.42741, 2.200817, 0.129046), 1)),
			(cv((-7.367449, 2.200817, 0.094567), 1)),
			(cv((-7.339121, 2.301843, 0.122565), 1)),
			(cv((-7.29423, 2.301843, 0.04481), 1)),
			(cv((-7.38319, 2.117504, 0.078497), 1)),
			(cv((-7.433007, 2.117504, 0.107258), 1)),
			(cv((-7.490531, 2.117504, 0.107258), 1)),
			(cv((-7.436588, 2.044886, 0.094554), 1)),
			(cv((-7.392644, 2.044886, 0.069285), 1)),
			(cv((-7.367221, 2.044886, 0.025429), 1)),
			(cv((-7.367132, 2.044886, -0.025263), 1)),
			(cv((-7.4836, 1.946636, 0.081393), 1)),
			(cv((-7.439938, 1.946636, 0.081393), 1)),
			(cv((-7.402125, 1.946636, 0.059562), 1)),
			(cv((-7.380293, 1.946636, 0.021749), 1)),
			(cv((-7.380293, 1.946636, -0.021913), 1))	),
	texture_vertices = (
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.704342 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.704342 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.704342 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.466794 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.704342 ),
			st( 1.000000, 0.704342 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.466794 ),
			st( 1.000000, 0.458493 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 0.000000, 0.250000 ),
			st( 1.000000, 0.250000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((3, 4, 2),(3, 4, 2), 0 ),
		polygon ((3, 2, 1),(3, 2, 1), 0 ),
		polygon ((5, 6, 7),(5, 6, 7), 0 ),
		polygon ((8, 7, 6),(8, 7, 6), 0 ),
		polygon ((1, 0, 9),(1, 0, 9), 0 ),
		polygon ((9, 10, 1),(9, 10, 1), 0 ),
		polygon ((9, 11, 10),(9, 11, 10), 0 ),
		polygon ((11, 9, 12),(11, 9, 12), 0 ),
		polygon ((4, 13, 2),(4, 13, 2), 0 ),
		polygon ((4, 14, 13),(4, 14, 13), 0 ),
		polygon ((14, 4, 15),(14, 4, 15), 0 ),
		polygon ((4, 16, 15),(4, 16, 15), 0 ),
		polygon ((16, 4, 17),(16, 4, 17), 0 ),
		polygon ((4, 18, 17),(4, 18, 17), 0 ),
		polygon ((4, 3, 18),(4, 3, 18), 0 ),
		polygon ((18, 1, 19),(18, 1, 19), 0 ),
		polygon ((1, 18, 3),(1, 18, 3), 0 ),
		polygon ((20, 19, 1),(20, 19, 1), 0 ),
		polygon ((20, 1, 10),(20, 1, 10), 0 ),
		polygon ((18, 21, 22),(18, 21, 22), 0 ),
		polygon ((22, 7, 18),(22, 7, 18), 0 ),
		polygon ((17, 18, 7),(17, 18, 7), 0 ),
		polygon ((8, 16, 7),(8, 16, 7), 0 ),
		polygon ((21, 18, 19),(21, 18, 19), 0 ),
		polygon ((21, 20, 23),(21, 20, 23), 0 ),
		polygon ((20, 21, 19),(20, 21, 19), 0 ),
		polygon ((23, 24, 21),(23, 24, 21), 0 ),
		polygon ((24, 25, 21),(24, 25, 21), 0 ),
		polygon ((25, 26, 21),(25, 26, 21), 0 ),
		polygon ((22, 21, 26),(22, 21, 26), 0 ),
		polygon ((7, 22, 26),(7, 22, 26), 0 ),
		polygon ((7, 26, 5),(7, 26, 5), 0 ),
		polygon ((27, 14, 15),(27, 14, 15), 0 ),
		polygon ((28, 14, 27),(28, 14, 27), 0 ),
		polygon ((27, 29, 28),(27, 29, 28), 0 ),
		polygon ((27, 15, 16),(27, 15, 16), 0 ),
		polygon ((30, 27, 16),(30, 27, 16), 0 ),
		polygon ((30, 31, 27),(30, 31, 27), 0 ),
		polygon ((32, 27, 31),(32, 27, 31), 0 ),
		polygon ((31, 33, 34),(31, 33, 34), 0 ),
		polygon ((33, 31, 30),(33, 31, 30), 0 ),
		polygon ((33, 30, 16),(33, 30, 16), 0 ),
		polygon ((8, 33, 16),(8, 33, 16), 0 ),
		polygon ((17, 7, 16),(17, 7, 16), 0 ),
		polygon ((33, 6, 35),(33, 6, 35), 0 ),
		polygon ((6, 33, 8),(6, 33, 8), 0 ),
		polygon ((35, 36, 33),(35, 36, 33), 0 ),
		polygon ((34, 33, 36),(34, 33, 36), 0 ),
		polygon ((37, 34, 36),(37, 34, 36), 0 ),
		polygon ((31, 34, 37),(31, 34, 37), 0 ),
		polygon ((38, 32, 31),(38, 32, 31), 0 ),
		polygon ((39, 29, 38),(39, 29, 38), 0 ),
		polygon ((11, 40, 41),(11, 40, 41), 0 ),
		polygon ((29, 27, 32),(29, 27, 32), 0 ),
		polygon ((38, 29, 32),(38, 29, 32), 0 ),
		polygon ((20, 11, 42),(20, 11, 42), 0 ),
		polygon ((38, 43, 39),(38, 43, 39), 0 ),
		polygon ((43, 38, 44),(43, 38, 44), 0 ),
		polygon ((43, 44, 45),(43, 44, 45), 0 ),
		polygon ((46, 43, 45),(46, 43, 45), 0 ),
		polygon ((40, 47, 45),(40, 47, 45), 0 ),
		polygon ((46, 45, 47),(46, 45, 47), 0 ),
		polygon ((11, 47, 40),(11, 47, 40), 0 ),
		polygon ((12, 47, 11),(12, 47, 11), 0 ),
		polygon ((41, 45, 48),(41, 45, 48), 0 ),
		polygon ((45, 41, 40),(45, 41, 40), 0 ),
		polygon ((49, 48, 45),(49, 48, 45), 0 ),
		polygon ((49, 45, 44),(49, 45, 44), 0 ),
		polygon ((44, 38, 49),(44, 38, 49), 0 ),
		polygon ((50, 49, 38),(50, 49, 38), 0 ),
		polygon ((31, 50, 38),(31, 50, 38), 0 ),
		polygon ((37, 50, 31),(37, 50, 31), 0 ),
		polygon ((37, 49, 50),(37, 49, 50), 0 ),
		polygon ((49, 37, 51),(49, 37, 51), 0 ),
		polygon ((49, 51, 52),(49, 51, 52), 0 ),
		polygon ((48, 49, 52),(48, 49, 52), 0 ),
		polygon ((53, 41, 52),(53, 41, 52), 0 ),
		polygon ((48, 52, 41),(48, 52, 41), 0 ),
		polygon ((53, 54, 41),(53, 54, 41), 0 ),
		polygon ((36, 55, 37),(36, 55, 37), 0 ),
		polygon ((55, 56, 37),(55, 56, 37), 0 ),
		polygon ((51, 37, 56),(51, 37, 56), 0 ),
		polygon ((52, 51, 56),(52, 51, 56), 0 ),
		polygon ((52, 56, 57),(52, 56, 57), 0 ),
		polygon ((52, 58, 53),(52, 58, 53), 0 ),
		polygon ((58, 52, 57),(58, 52, 57), 0 ),
		polygon ((54, 53, 58),(54, 53, 58), 0 ),
		polygon ((58, 59, 54),(58, 59, 54), 0 ),
		polygon ((54, 24, 23),(54, 24, 23), 0 ),
		polygon ((24, 54, 59),(24, 54, 59), 0 ),
		polygon ((20, 54, 23),(20, 54, 23), 0 ),
		polygon ((42, 41, 54),(42, 41, 54), 0 ),
		polygon ((42, 11, 41),(42, 11, 41), 0 ),
		polygon ((11, 20, 10),(11, 20, 10), 0 ),
		polygon ((54, 20, 42),(54, 20, 42), 0 ),
		polygon ((60, 61, 62),(60, 61, 62), 0 ),
		polygon ((60, 63, 64),(60, 63, 64), 0 ),
		polygon ((61, 60, 64),(61, 60, 64), 0 ),
		polygon ((65, 66, 67),(65, 66, 67), 0 ),
		polygon ((66, 65, 68),(66, 65, 68), 0 ),
		polygon ((69, 62, 61),(69, 62, 61), 0 ),
		polygon ((61, 70, 69),(61, 70, 69), 0 ),
		polygon ((70, 71, 69),(70, 71, 69), 0 ),
		polygon ((72, 69, 71),(72, 69, 71), 0 ),
		polygon ((60, 73, 63),(60, 73, 63), 0 ),
		polygon ((73, 74, 63),(73, 74, 63), 0 ),
		polygon ((75, 63, 74),(75, 63, 74), 0 ),
		polygon ((75, 76, 63),(75, 76, 63), 0 ),
		polygon ((77, 63, 76),(77, 63, 76), 0 ),
		polygon ((77, 78, 63),(77, 78, 63), 0 ),
		polygon ((78, 64, 63),(78, 64, 63), 0 ),
		polygon ((79, 61, 78),(79, 61, 78), 0 ),
		polygon ((64, 78, 61),(64, 78, 61), 0 ),
		polygon ((61, 79, 80),(61, 79, 80), 0 ),
		polygon ((70, 61, 80),(70, 61, 80), 0 ),
		polygon ((81, 82, 78),(81, 82, 78), 0 ),
		polygon ((78, 65, 81),(78, 65, 81), 0 ),
		polygon ((65, 78, 77),(65, 78, 77), 0 ),
		polygon ((65, 76, 68),(65, 76, 68), 0 ),
		polygon ((79, 78, 82),(79, 78, 82), 0 ),
		polygon ((83, 80, 82),(83, 80, 82), 0 ),
		polygon ((79, 82, 80),(79, 82, 80), 0 ),
		polygon ((82, 84, 83),(82, 84, 83), 0 ),
		polygon ((82, 85, 84),(82, 85, 84), 0 ),
		polygon ((82, 86, 85),(82, 86, 85), 0 ),
		polygon ((86, 82, 81),(86, 82, 81), 0 ),
		polygon ((86, 81, 65),(86, 81, 65), 0 ),
		polygon ((67, 86, 65),(67, 86, 65), 0 ),
		polygon ((75, 74, 87),(75, 74, 87), 0 ),
		polygon ((87, 74, 88),(87, 74, 88), 0 ),
		polygon ((88, 89, 87),(88, 89, 87), 0 ),
		polygon ((76, 75, 87),(76, 75, 87), 0 ),
		polygon ((76, 87, 90),(76, 87, 90), 0 ),
		polygon ((87, 91, 90),(87, 91, 90), 0 ),
		polygon ((91, 87, 92),(91, 87, 92), 0 ),
		polygon ((93, 94, 91),(93, 94, 91), 0 ),
		polygon ((90, 91, 94),(90, 91, 94), 0 ),
		polygon ((76, 90, 94),(76, 90, 94), 0 ),
		polygon ((76, 94, 68),(76, 94, 68), 0 ),
		polygon ((76, 65, 77),(76, 65, 77), 0 ),
		polygon ((95, 66, 94),(95, 66, 94), 0 ),
		polygon ((68, 94, 66),(68, 94, 66), 0 ),
		polygon ((94, 96, 95),(94, 96, 95), 0 ),
		polygon ((96, 94, 93),(96, 94, 93), 0 ),
		polygon ((96, 93, 97),(96, 93, 97), 0 ),
		polygon ((97, 93, 91),(97, 93, 91), 0 ),
		polygon ((91, 92, 98),(91, 92, 98), 0 ),
		polygon ((98, 89, 99),(98, 89, 99), 0 ),
		polygon ((100, 101, 71),(100, 101, 71), 0 ),
		polygon ((92, 87, 89),(92, 87, 89), 0 ),
		polygon ((92, 89, 98),(92, 89, 98), 0 ),
		polygon ((102, 71, 80),(102, 71, 80), 0 ),
		polygon ((99, 103, 98),(99, 103, 98), 0 ),
		polygon ((104, 98, 103),(104, 98, 103), 0 ),
		polygon ((105, 104, 103),(105, 104, 103), 0 ),
		polygon ((105, 103, 106),(105, 103, 106), 0 ),
		polygon ((105, 107, 101),(105, 107, 101), 0 ),
		polygon ((107, 105, 106),(107, 105, 106), 0 ),
		polygon ((101, 107, 71),(101, 107, 71), 0 ),
		polygon ((71, 107, 72),(71, 107, 72), 0 ),
		polygon ((108, 105, 100),(108, 105, 100), 0 ),
		polygon ((101, 100, 105),(101, 100, 105), 0 ),
		polygon ((105, 108, 109),(105, 108, 109), 0 ),
		polygon ((104, 105, 109),(104, 105, 109), 0 ),
		polygon ((109, 98, 104),(109, 98, 104), 0 ),
		polygon ((98, 109, 110),(98, 109, 110), 0 ),
		polygon ((98, 110, 91),(98, 110, 91), 0 ),
		polygon ((91, 110, 97),(91, 110, 97), 0 ),
		polygon ((110, 109, 97),(110, 109, 97), 0 ),
		polygon ((111, 97, 109),(111, 97, 109), 0 ),
		polygon ((112, 111, 109),(112, 111, 109), 0 ),
		polygon ((112, 109, 108),(112, 109, 108), 0 ),
		polygon ((112, 100, 113),(112, 100, 113), 0 ),
		polygon ((100, 112, 108),(100, 112, 108), 0 ),
		polygon ((100, 114, 113),(100, 114, 113), 0 ),
		polygon ((97, 115, 96),(97, 115, 96), 0 ),
		polygon ((97, 116, 115),(97, 116, 115), 0 ),
		polygon ((116, 97, 111),(116, 97, 111), 0 ),
		polygon ((116, 111, 112),(116, 111, 112), 0 ),
		polygon ((117, 116, 112),(117, 116, 112), 0 ),
		polygon ((113, 118, 112),(113, 118, 112), 0 ),
		polygon ((117, 112, 118),(117, 112, 118), 0 ),
		polygon ((118, 113, 114),(118, 113, 114), 0 ),
		polygon ((114, 119, 118),(114, 119, 118), 0 ),
		polygon ((83, 84, 114),(83, 84, 114), 0 ),
		polygon ((119, 114, 84),(119, 114, 84), 0 ),
		polygon ((83, 114, 80),(83, 114, 80), 0 ),
		polygon ((114, 100, 102),(114, 100, 102), 0 ),
		polygon ((100, 71, 102),(100, 71, 102), 0 ),
		polygon ((70, 80, 71),(70, 80, 71), 0 ),
		polygon ((102, 80, 114),(102, 80, 114), 0 )
	)
); /* end of polyset 'park_Net2' */

polyset park_goal_pole_2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (pole ),
	casts_shadow = TRUE,
	vertices = ((cv((-7.803393, 2.95533, -0.05067), 1)),
			(cv((-7.776678, 2.987061, -0.110336), 1)),
			(cv((-7.776678, 3.024553, -0.072845), 1)),
			(cv((-7.80318, 2.985818, 0.002137), 1)),
			(cv((-7.776678, 3.024553, 0.077119), 1)),
			(cv((-7.803393, 2.95533, 0.054945), 1)),
			(cv((-7.776678, 2.987061, 0.11461), 1)),
			(cv((-7.776678, 2.874588, 0.11461), 1)),
			(cv((-7.803819, 2.894355, 0.054945), 1)),
			(cv((-7.776678, 2.837097, 0.077119), 1)),
			(cv((-7.776678, 2.837097, -0.072845), 1)),
			(cv((-7.804032, 2.863867, 0.002137), 1)),
			(cv((-7.803819, 2.894355, -0.05067), 1)),
			(cv((-7.776678, 2.874588, -0.110336), 1)),
			(cv((-7.803393, 2.391429, -0.05067), 1)),
			(cv((-7.776678, 2.42316, -0.110336), 1)),
			(cv((-7.776678, 2.460651, -0.072845), 1)),
			(cv((-7.80318, 2.421916, 0.002137), 1)),
			(cv((-7.776678, 2.460651, 0.077119), 1)),
			(cv((-7.803394, 2.391429, 0.054945), 1)),
			(cv((-7.776678, 2.42316, 0.11461), 1)),
			(cv((-7.776678, 2.310686, 0.11461), 1)),
			(cv((-7.803819, 2.330453, 0.054945), 1)),
			(cv((-7.776678, 2.273195, 0.077119), 1)),
			(cv((-7.776678, 2.273195, -0.072845), 1)),
			(cv((-7.804032, 2.299965, 0.002137), 1)),
			(cv((-7.803819, 2.330453, -0.05067), 1)),
			(cv((-7.776678, 2.310686, -0.110336), 1)),
			(cv((-8.535996, 2.240977, -0.05067), 1)),
			(cv((-8.219178, 2.358251, -0.05067), 1)),
			(cv((-8.226805, 2.389762, 0.002137), 1)),
			(cv((-8.558505, 2.267533, 0.002137), 1)),
			(cv((-8.219178, 2.358251, 0.054945), 1)),
			(cv((-8.535996, 2.240977, 0.054945), 1)),
			(cv((-8.211932, 2.312685, -0.05067), 1)),
			(cv((-8.512473, 2.204406, -0.05067), 1)),
			(cv((-8.203963, 2.279945, 0.002137), 1)),
			(cv((-8.487512, 2.168443, 0.002137), 1)),
			(cv((-8.211932, 2.312685, 0.054945), 1)),
			(cv((-8.512473, 2.204406, 0.054945), 1)),
			(cv((-8.75619, 2.043319, -0.05067), 1)),
			(cv((-8.777715, 2.064135, 0.002137), 1)),
			(cv((-8.75619, 2.043319, 0.054945), 1)),
			(cv((-8.717561, 2.003898, -0.05067), 1)),
			(cv((-8.696037, 1.97866, 0.002137), 1)),
			(cv((-8.717561, 2.003898, 0.054945), 1)),
			(cv((-8.461681, 2.895331, 0.002137), 1)),
			(cv((-8.113475, 2.971525, 0.002137), 1)),
			(cv((-8.447214, 2.855625, 0.054945), 1)),
			(cv((-8.107478, 2.942162, 0.054945), 1)),
			(cv((-8.099901, 2.883436, 0.054945), 1)),
			(cv((-8.434095, 2.815777, 0.054945), 1)),
			(cv((-8.107478, 2.942162, -0.05067), 1)),
			(cv((-8.447214, 2.855625, -0.05067), 1)),
			(cv((-8.434095, 2.815777, -0.05067), 1)),
			(cv((-8.099901, 2.883436, -0.05067), 1)),
			(cv((-8.42121, 2.783984, 0.002137), 1)),
			(cv((-8.096114, 2.854073, 0.002137), 1)),
			(cv((-8.756456, 2.730594, 0.002137), 1)),
			(cv((-8.737244, 2.706714, 0.054945), 1)),
			(cv((-8.703565, 2.665283, 0.054945), 1)),
			(cv((-8.737244, 2.706714, -0.05067), 1)),
			(cv((-8.703565, 2.665283, -0.05067), 1)),
			(cv((-8.679609, 2.638238, 0.002137), 1)),
			(cv((-8.9507, 2.473737, 0.002137), 1)),
			(cv((-8.922747, 2.461562, -0.05067), 1)),
			(cv((-8.866843, 2.437214, -0.05067), 1)),
			(cv((-8.83889, 2.425039, 0.002137), 1)),
			(cv((-8.866843, 2.437214, 0.054945), 1)),
			(cv((-8.998427, 2.179716, 0.054945), 1)),
			(cv((-8.922747, 2.461562, 0.054945), 1)),
			(cv((-8.93745, 2.179716, 0.054945), 1)),
			(cv((-8.906962, 2.179716, 0.002137), 1)),
			(cv((-9.028915, 2.179716, 0.002137), 1)),
			(cv((-8.922621, 1.797651, 0.002137), 1)),
			(cv((-8.936055, 1.736617, 0.054945), 1)),
			(cv((-8.93745, 2.179716, -0.05067), 1)),
			(cv((-8.936055, 1.736617, -0.05067), 1)),
			(cv((-9.014086, 1.733185, -0.05067), 1)),
			(cv((-8.998427, 2.179716, -0.05067), 1)),
			(cv((-9.014086, 1.733185, 0.054945), 1)),
			(cv((-8.911044, 1.658052, 0.054945), 1)),
			(cv((-8.911044, 1.658052, -0.05067), 1)),
			(cv((-9.044574, 1.190578, 0.002137), 1)),
			(cv((-9.014086, 1.190578, -0.05067), 1)),
			(cv((-9.044574, 1.733185, 0.002137), 1)),
			(cv((-9.014086, 1.190578, 0.054945), 1)),
			(cv((-8.922621, 1.190578, 0.002137), 1)),
			(cv((-8.881313, 1.651297, 0.002137), 1)),
			(cv((-8.953109, 1.190578, -0.05067), 1)),
			(cv((-8.953109, 1.190578, 0.054945), 1)),
			(cv((-9.044574, 0.56064, 0.002137), 1)),
			(cv((-7.80318, 2.421916, 0.002137), 1)),
			(cv((-7.803394, 2.391429, 0.054945), 1)),
			(cv((-7.803819, 2.330453, 0.054945), 1)),
			(cv((-7.804032, 2.299965, 0.002137), 1)),
			(cv((-7.803393, 2.391429, -0.05067), 1)),
			(cv((-7.803819, 2.330453, -0.05067), 1)),
			(cv((-7.80318, 2.985818, 0.002137), 1)),
			(cv((-7.803393, 2.95533, 0.054945), 1)),
			(cv((-7.803819, 2.894355, 0.054945), 1)),
			(cv((-7.803393, 2.95533, -0.05067), 1)),
			(cv((-7.803819, 2.894355, -0.05067), 1)),
			(cv((-7.804032, 2.863867, 0.002137), 1)),
			(cv((-9.014086, 0.0, 0.054945), 1)),
			(cv((-9.014086, 0.56064, 0.054945), 1)),
			(cv((-8.953109, 0.0, 0.054945), 1)),
			(cv((-8.953109, 0.56064, 0.054945), 1)),
			(cv((-9.044574, 0.0, 0.002137), 1)),
			(cv((-9.014086, 0.56064, -0.05067), 1)),
			(cv((-9.014086, 0.0, -0.05067), 1)),
			(cv((-8.953109, 0.56064, -0.05067), 1)),
			(cv((-8.953109, 0.0, -0.05067), 1)),
			(cv((-8.922621, 0.0, 0.002137), 1)),
			(cv((-8.922621, 0.56064, 0.002137), 1))	),
	texture_vertices = (
			st( 1.000000, 1.000000 ),
			st( 0.875754, 0.866021 ),
			st( 0.875754, 0.866021 ),
			st( 0.875754, 0.866021 ),
			st( 1.000000, 0.000000 ),
			st( 0.915040, 0.957573 ),
			st( 0.915040, 0.957573 ),
			st( 0.915040, 0.957573 ),
			st( 0.000000, 0.000000 ),
			st( 0.961457, 0.900046 ),
			st( 0.961457, 0.900046 ),
			st( 0.961457, 0.900046 ),
			st( 1.000000, 0.000000 ),
			st( 0.913500, 0.784992 ),
			st( 0.913500, 0.784992 ),
			st( 0.913500, 0.784992 ),
			st( 1.000000, 0.000000 ),
			st( 0.961457, 0.669937 ),
			st( 0.961457, 0.669937 ),
			st( 0.961457, 0.669937 ),
			st( 1.000000, 1.000000 ),
			st( 0.875754, 0.703963 ),
			st( 0.875754, 0.703963 ),
			st( 0.875754, 0.703963 ),
			st( 0.875754, 0.703963 ),
			st( 1.000000, 0.000000 ),
			st( 0.915040, 0.612410 ),
			st( 0.915040, 0.612410 ),
			st( 1.000000, 1.000000 ),
			st( 0.775789, 0.612410 ),
			st( 0.775789, 0.612410 ),
			st( 0.775789, 0.612410 ),
			st( 1.000000, 1.000000 ),
			st( 0.800262, 0.703963 ),
			st( 0.800262, 0.703963 ),
			st( 0.800262, 0.703963 ),
			st( 1.000000, 1.000000 ),
			st( 0.729373, 0.669937 ),
			st( 0.729373, 0.669937 ),
			st( 0.729373, 0.669937 ),
			st( 1.000000, 0.000000 ),
			st( 0.729373, 0.900046 ),
			st( 0.729373, 0.900046 ),
			st( 0.729373, 0.900046 ),
			st( 1.000000, 0.000000 ),
			st( 0.762516, 0.784992 ),
			st( 0.762516, 0.784992 ),
			st( 0.762516, 0.784992 ),
			st( 1.000000, 1.000000 ),
			st( 0.800262, 0.866021 ),
			st( 0.800262, 0.866021 ),
			st( 0.800262, 0.866021 ),
			st( 0.800262, 0.866021 ),
			st( 1.000000, 0.000000 ),
			st( 0.775789, 0.957573 ),
			st( 0.775789, 0.957573 ),
			st( 1.000000, 1.000000 ),
			st( 0.177600, 0.866021 ),
			st( 0.177600, 0.866021 ),
			st( 0.177600, 0.866021 ),
			st( 1.000000, 0.000000 ),
			st( 0.216886, 0.957573 ),
			st( 0.216886, 0.957573 ),
			st( 0.216886, 0.957573 ),
			st( 0.000000, 0.000000 ),
			st( 0.263303, 0.900046 ),
			st( 0.263303, 0.900046 ),
			st( 0.263303, 0.900046 ),
			st( 1.000000, 0.000000 ),
			st( 0.215347, 0.784992 ),
			st( 0.215347, 0.784992 ),
			st( 0.215347, 0.784992 ),
			st( 1.000000, 0.000000 ),
			st( 0.263303, 0.669937 ),
			st( 0.263303, 0.669937 ),
			st( 0.263303, 0.669937 ),
			st( 0.166666, 1.000000 ),
			st( 0.177600, 0.703963 ),
			st( 0.177600, 0.703963 ),
			st( 0.177600, 0.703963 ),
			st( 0.177600, 0.703963 ),
			st( 1.000000, 0.000000 ),
			st( 0.216886, 0.612410 ),
			st( 0.216886, 0.612410 ),
			st( 1.000000, 1.000000 ),
			st( 0.077636, 0.612410 ),
			st( 0.077636, 0.612410 ),
			st( 0.077636, 0.612410 ),
			st( 0.333333, 1.000000 ),
			st( 0.102108, 0.703963 ),
			st( 0.102108, 0.703963 ),
			st( 0.102108, 0.703963 ),
			st( 1.000000, 1.000000 ),
			st( 0.031219, 0.669937 ),
			st( 0.031219, 0.669937 ),
			st( 0.031219, 0.669937 ),
			st( 1.000000, 0.000000 ),
			st( 0.031219, 0.900046 ),
			st( 0.031219, 0.900046 ),
			st( 0.031219, 0.900046 ),
			st( 0.500000, 1.000000 ),
			st( 0.064362, 0.784992 ),
			st( 0.064362, 0.784992 ),
			st( 0.064362, 0.784992 ),
			st( 0.666660, 1.000000 ),
			st( 0.102108, 0.866021 ),
			st( 0.102108, 0.866021 ),
			st( 0.102108, 0.866021 ),
			st( 0.102108, 0.866021 ),
			st( 1.000000, 0.000000 ),
			st( 0.077636, 0.957573 ),
			st( 0.077636, 0.957573 ),
			st( 0.832676, 0.773312 ),
			st( 0.833333, 0.773617 ),
			st( 0.833333, 0.773617 ),
			st( 0.833333, 0.850000 ),
			st( 1.000000, 0.850000 ),
			st( 0.000202, 0.850000 ),
			st( -0.001111, 0.850000 ),
			st( -0.001111, 0.850000 ),
			st( 1.000000, 0.850000 ),
			st( 0.999882, 0.771887 ),
			st( 0.001515, 0.774647 ),
			st( 0.001515, 0.774647 ),
			st( 0.999529, 0.772881 ),
			st( 0.999529, 0.772881 ),
			st( 0.001094, 0.773617 ),
			st( 0.166666, 0.850000 ),
			st( 0.166009, 0.767948 ),
			st( 0.165959, 0.770570 ),
			st( 0.165959, 0.770570 ),
			st( 0.165959, 0.770570 ),
			st( 0.666660, 0.850000 ),
			st( 0.665169, 0.773779 ),
			st( 0.667013, 0.773462 ),
			st( 0.667013, 0.773462 ),
			st( 0.667013, 0.773462 ),
			st( 0.500000, 0.850000 ),
			st( 0.500186, 0.773456 ),
			st( 0.500118, 0.773417 ),
			st( 0.500118, 0.773417 ),
			st( 0.500118, 0.773417 ),
			st( 0.500118, 0.773417 ),
			st( 0.333330, 0.850000 ),
			st( 0.333987, 0.772845 ),
			st( 0.332977, 0.772707 ),
			st( 0.332977, 0.772707 ),
			st( 0.332977, 0.772707 ),
			st( 0.833333, 0.700000 ),
			st( 1.000000, 0.700000 ),
			st( 0.001515, 0.700000 ),
			st( 0.001515, 0.700000 ),
			st( 1.000000, 0.700000 ),
			st( -0.001111, 0.700000 ),
			st( 0.166666, 0.700000 ),
			st( 0.666600, 0.700000 ),
			st( 0.500000, 0.700000 ),
			st( 0.333330, 0.700000 ),
			st( 0.000000, 0.846065 ),
			st( 0.998706, 0.846472 ),
			st( 0.998706, 0.846472 ),
			st( 0.000000, 0.846622 ),
			st( 0.000000, 0.846622 ),
			st( 0.998728, 0.845792 ),
			st( 0.000000, 0.900000 ),
			st( 0.998728, 0.901057 ),
			st( 0.000000, 0.900000 ),
			st( 0.000000, 0.900000 ),
			st( 0.998728, 0.901057 ),
			st( 0.998728, 0.901057 ),
			st( 0.166660, 0.847337 ),
			st( 0.166666, 0.847333 ),
			st( 0.166666, 0.847333 ),
			st( 0.166666, 0.900000 ),
			st( 0.333333, 0.900000 ),
			st( 0.333333, 0.847452 ),
			st( 0.332882, 0.847257 ),
			st( 0.332882, 0.847257 ),
			st( 0.332882, 0.847257 ),
			st( 0.833333, 0.900000 ),
			st( 0.833333, 0.847318 ),
			st( 0.833711, 0.846847 ),
			st( 0.833711, 0.846847 ),
			st( 0.833711, 0.846847 ),
			st( 0.833711, 0.846847 ),
			st( 0.666660, 0.847781 ),
			st( 0.666666, 0.847699 ),
			st( 0.666666, 0.847699 ),
			st( 0.666666, 0.847699 ),
			st( 0.666666, 0.900000 ),
			st( 0.500000, 0.847683 ),
			st( 0.500000, 0.848045 ),
			st( 0.500000, 0.848045 ),
			st( 0.500000, 0.848045 ),
			st( 0.500000, 0.900000 ),
			st( 0.000000, 0.800000 ),
			st( 0.998706, 0.799367 ),
			st( 0.998706, 0.799367 ),
			st( 0.998706, 0.799367 ),
			st( 0.998706, 0.799367 ),
			st( 0.000000, 0.800000 ),
			st( 0.166660, 0.800000 ),
			st( 0.333333, 0.800000 ),
			st( 0.833333, 0.800000 ),
			st( 0.666660, 0.800000 ),
			st( 0.500000, 0.800000 ),
			st( 0.000000, 0.700000 ),
			st( 0.999345, 0.702159 ),
			st( 0.000000, 0.700000 ),
			st( 0.999345, 0.702159 ),
			st( 0.999345, 0.702159 ),
			st( 0.000000, 0.700000 ),
			st( 0.000000, 0.700000 ),
			st( 0.833333, 0.700000 ),
			st( 0.666666, 0.700000 ),
			st( 0.500000, 0.700000 ),
			st( 0.333333, 0.700000 ),
			st( 0.166666, 0.650000 ),
			st( 0.166660, 0.700000 ),
			st( 0.333330, 0.650000 ),
			st( 0.500000, 0.650000 ),
			st( 0.000000, 0.650000 ),
			st( 0.999692, 0.649894 ),
			st( 0.999692, 0.649894 ),
			st( 0.000000, 0.650000 ),
			st( 0.998258, 0.528172 ),
			st( 0.115427, 0.530975 ),
			st( 0.496444, 0.475362 ),
			st( 0.496444, 0.475362 ),
			st( 0.496444, 0.475362 ),
			st( 0.496444, 0.475362 ),
			st( 0.998258, 0.528172 ),
			st( 0.115427, 0.530975 ),
			st( 0.301677, 0.462889 ),
			st( 0.250000, 0.530000 ),
			st( 0.250000, 0.530000 ),
			st( 0.250000, 0.530000 ),
			st( 0.250000, 0.530000 ),
			st( 0.250000, 0.530000 ),
			st( 0.246380, 0.533569 ),
			st( 0.666660, 0.650000 ),
			st( 0.693198, 0.464210 ),
			st( 0.700000, 0.530000 ),
			st( 0.832068, 0.533118 ),
			st( 0.700000, 0.530000 ),
			st( 0.700000, 0.530000 ),
			st( 0.700000, 0.530000 ),
			st( 0.833333, 0.520000 ),
			st( 0.833333, 0.650000 ),
			st( 0.166667, 0.520000 ),
			st( 0.333330, 0.500000 ),
			st( 0.666660, 0.500000 ),
			st( 0.998492, 0.400000 ),
			st( 0.000000, 0.400000 ),
			st( 0.000000, 0.400000 ),
			st( 0.000000, 0.400000 ),
			st( 0.998492, 0.400000 ),
			st( 0.833333, 0.400000 ),
			st( 0.998492, 0.521718 ),
			st( 0.000000, 0.518000 ),
			st( 0.997385, 0.520982 ),
			st( 0.997385, 0.520982 ),
			st( 0.000000, 0.518000 ),
			st( 0.000000, 0.518000 ),
			st( 0.166666, 0.400000 ),
			st( 0.500000, 0.400000 ),
			st( 0.500000, 0.480000 ),
			st( 0.666600, 0.400000 ),
			st( 0.333330, 0.400000 ),
			st( 0.001508, 0.179744 ),
			st( -0.000281, 0.150000 ),
			st( 1.000000, 0.150000 ),
			st( 1.000000, 0.150000 ),
			st( 1.000000, 0.150000 ),
			st( -0.000281, 0.150000 ),
			st( 1.000000, 0.000000 ),
			st( -0.001111, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.166666, 1.000000 ),
			st( 0.333333, 1.000000 ),
			st( 0.500000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.833333, 1.000000 ),
			st( 0.833333, 1.000000 ),
			st( 0.833333, 1.000000 ),
			st( 0.666660, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.997980, 0.998808 ),
			st( 1.000000, 1.000000 ),
			st( 0.166660, 1.000000 ),
			st( 0.166660, 1.000000 ),
			st( 0.166660, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.333333, 1.000000 ),
			st( 0.333333, 1.000000 ),
			st( 0.333333, 1.000000 ),
			st( 0.333333, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.833333, 1.000000 ),
			st( 0.833333, 1.000000 ),
			st( 0.833333, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.666660, 1.000000 ),
			st( 0.666660, 1.000000 ),
			st( 0.666660, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.500000, 1.000000 ),
			st( 0.500000, 1.000000 ),
			st( 0.500000, 1.000000 ),
			st( 0.166666, 0.000000 ),
			st( 0.166667, 0.150000 ),
			st( 0.333330, 0.000000 ),
			st( 0.333333, 0.150000 ),
			st( 0.000000, 0.000000 ),
			st( 0.998492, 0.000000 ),
			st( 0.998492, 0.000000 ),
			st( 0.833333, 0.150000 ),
			st( 0.833333, 0.000000 ),
			st( 0.666600, 0.150000 ),
			st( 0.666660, 0.000000 ),
			st( 0.500000, 0.000000 ),
			st( 0.500000, 0.150000 ) ),
	polygons = (
		polygon ((0, 1, 2),(1, 5, 9), 0 ),
		polygon ((2, 3, 0),(10, 13, 2), 0 ),
		polygon ((2, 4, 3),(11, 17, 14), 0 ),
		polygon ((4, 5, 3),(18, 21, 15), 0 ),
		polygon ((4, 6, 5),(19, 26, 22), 0 ),
		polygon ((5, 6, 7),(23, 27, 29), 0 ),
		polygon ((8, 5, 7),(33, 24, 30), 0 ),
		polygon ((8, 7, 9),(34, 31, 37), 0 ),
		polygon ((9, 10, 11),(38, 41, 45), 0 ),
		polygon ((11, 8, 9),(46, 35, 39), 0 ),
		polygon ((12, 11, 10),(49, 47, 42), 0 ),
		polygon ((10, 13, 12),(43, 54, 50), 0 ),
		polygon ((12, 13, 1),(51, 55, 6), 0 ),
		polygon ((1, 0, 12),(7, 3, 52), 0 ),
		polygon ((14, 15, 16),(57, 61, 65), 0 ),
		polygon ((16, 17, 14),(66, 69, 58), 0 ),
		polygon ((16, 18, 17),(67, 73, 70), 0 ),
		polygon ((18, 19, 17),(74, 77, 71), 0 ),
		polygon ((18, 20, 19),(75, 82, 78), 0 ),
		polygon ((19, 20, 21),(79, 83, 85), 0 ),
		polygon ((22, 19, 21),(89, 80, 86), 0 ),
		polygon ((22, 21, 23),(90, 87, 93), 0 ),
		polygon ((23, 24, 25),(94, 97, 101), 0 ),
		polygon ((25, 22, 23),(102, 91, 95), 0 ),
		polygon ((26, 25, 24),(105, 103, 98), 0 ),
		polygon ((24, 27, 26),(99, 110, 106), 0 ),
		polygon ((26, 27, 15),(107, 111, 62), 0 ),
		polygon ((15, 14, 26),(63, 59, 108), 0 ),
		polygon ((28, 29, 30),(112, 115, 116), 0 ),
		polygon ((30, 31, 28),(116, 121, 112), 0 ),
		polygon ((31, 30, 32),(122, 117, 127), 0 ),
		polygon ((32, 33, 31),(127, 128, 123), 0 ),
		polygon ((34, 29, 28),(132, 115, 112), 0 ),
		polygon ((28, 35, 34),(112, 133, 132), 0 ),
		polygon ((36, 34, 35),(137, 132, 133), 0 ),
		polygon ((35, 37, 36),(133, 138, 137), 0 ),
		polygon ((33, 32, 38),(128, 127, 143), 0 ),
		polygon ((38, 39, 33),(143, 144, 128), 0 ),
		polygon ((39, 38, 36),(144, 143, 137), 0 ),
		polygon ((36, 37, 39),(137, 138, 144), 0 ),
		polygon ((40, 28, 31),(148, 113, 124), 0 ),
		polygon ((31, 41, 40),(125, 149, 148), 0 ),
		polygon ((41, 31, 33),(150, 126, 129), 0 ),
		polygon ((33, 42, 41),(130, 154, 151), 0 ),
		polygon ((35, 28, 40),(134, 114, 148), 0 ),
		polygon ((40, 43, 35),(148, 155, 135), 0 ),
		polygon ((37, 35, 43),(139, 136, 155), 0 ),
		polygon ((43, 44, 37),(155, 156, 140), 0 ),
		polygon ((42, 33, 39),(154, 131, 145), 0 ),
		polygon ((39, 45, 42),(146, 157, 154), 0 ),
		polygon ((45, 39, 37),(157, 147, 141), 0 ),
		polygon ((37, 44, 45),(142, 156, 157), 0 ),
		polygon ((46, 47, 48),(158, 164, 170), 0 ),
		polygon ((49, 50, 48),(173, 174, 170), 0 ),
		polygon ((48, 47, 49),(170, 164, 173), 0 ),
		polygon ((48, 50, 51),(170, 174, 175), 0 ),
		polygon ((52, 53, 54),(179, 180, 185), 0 ),
		polygon ((54, 55, 52),(185, 189, 179), 0 ),
		polygon ((55, 54, 56),(189, 185, 190), 0 ),
		polygon ((56, 57, 55),(190, 194, 189), 0 ),
		polygon ((51, 50, 57),(175, 174, 194), 0 ),
		polygon ((57, 56, 51),(194, 190, 175), 0 ),
		polygon ((46, 52, 47),(159, 179, 165), 0 ),
		polygon ((53, 52, 46),(180, 179, 160), 0 ),
		polygon ((58, 46, 59),(195, 161, 201), 0 ),
		polygon ((48, 51, 59),(171, 176, 201), 0 ),
		polygon ((59, 46, 48),(201, 162, 172), 0 ),
		polygon ((59, 51, 60),(201, 177, 202), 0 ),
		polygon ((53, 61, 62),(181, 203, 204), 0 ),
		polygon ((62, 54, 53),(204, 186, 182), 0 ),
		polygon ((54, 62, 63),(187, 204, 205), 0 ),
		polygon ((63, 56, 54),(205, 191, 188), 0 ),
		polygon ((60, 51, 56),(202, 178, 192), 0 ),
		polygon ((56, 63, 60),(193, 205, 202), 0 ),
		polygon ((58, 53, 46),(196, 183, 163), 0 ),
		polygon ((61, 53, 58),(203, 184, 197), 0 ),
		polygon ((58, 64, 65),(198, 207, 213), 0 ),
		polygon ((65, 61, 58),(213, 203, 199), 0 ),
		polygon ((61, 65, 66),(203, 213, 214), 0 ),
		polygon ((66, 62, 61),(214, 204, 203), 0 ),
		polygon ((62, 66, 67),(204, 214, 215), 0 ),
		polygon ((67, 63, 62),(215, 205, 204), 0 ),
		polygon ((67, 68, 60),(215, 216, 202), 0 ),
		polygon ((60, 63, 67),(202, 205, 215), 0 ),
		polygon ((69, 70, 71),(217, 218, 219), 0 ),
		polygon ((71, 70, 68),(219, 218, 216), 0 ),
		polygon ((68, 67, 71),(216, 215, 219), 0 ),
		polygon ((71, 67, 72),(219, 215, 220), 0 ),
		polygon ((69, 73, 70),(217, 221, 218), 0 ),
		polygon ((70, 73, 64),(218, 221, 208), 0 ),
		polygon ((40, 41, 74),(148, 152, 225), 0 ),
		polygon ((74, 41, 42),(226, 153, 154), 0 ),
		polygon ((74, 75, 71),(227, 233, 219), 0 ),
		polygon ((72, 74, 71),(220, 228, 219), 0 ),
		polygon ((72, 76, 74),(220, 240, 229), 0 ),
		polygon ((74, 76, 77),(230, 240, 241), 0 ),
		polygon ((78, 77, 76),(247, 242, 240), 0 ),
		polygon ((76, 79, 78),(240, 248, 247), 0 ),
		polygon ((75, 80, 69),(234, 249, 217), 0 ),
		polygon ((69, 71, 75),(217, 219, 235), 0 ),
		polygon ((77, 40, 74),(243, 148, 231), 0 ),
		polygon ((81, 75, 45),(250, 236, 157), 0 ),
		polygon ((82, 43, 77),(251, 155, 244), 0 ),
		polygon ((74, 42, 75),(232, 154, 237), 0 ),
		polygon ((75, 42, 45),(238, 154, 157), 0 ),
		polygon ((83, 84, 78),(252, 257, 247), 0 ),
		polygon ((78, 85, 83),(247, 258, 252), 0 ),
		polygon ((83, 85, 80),(253, 259, 249), 0 ),
		polygon ((80, 86, 83),(249, 264, 254), 0 ),
		polygon ((87, 88, 82),(265, 266, 251), 0 ),
		polygon ((82, 89, 87),(251, 267, 265), 0 ),
		polygon ((81, 88, 87),(250, 266, 265), 0 ),
		polygon ((87, 90, 81),(265, 268, 250), 0 ),
		polygon ((81, 45, 44),(250, 157, 156), 0 ),
		polygon ((44, 88, 81),(156, 266, 250), 0 ),
		polygon ((88, 44, 43),(266, 156, 155), 0 ),
		polygon ((43, 82, 88),(155, 251, 266), 0 ),
		polygon ((78, 82, 77),(247, 251, 245), 0 ),
		polygon ((91, 83, 86),(269, 255, 264), 0 ),
		polygon ((64, 73, 79),(209, 222, 248), 0 ),
		polygon ((79, 65, 64),(248, 213, 210), 0 ),
		polygon ((77, 43, 40),(246, 155, 148), 0 ),
		polygon ((30, 92, 93),(118, 276, 279), 0 ),
		polygon ((93, 32, 30),(279, 127, 119), 0 ),
		polygon ((32, 93, 38),(127, 279, 143), 0 ),
		polygon ((38, 93, 94),(143, 279, 280), 0 ),
		polygon ((38, 94, 95),(143, 280, 281), 0 ),
		polygon ((95, 36, 38),(281, 137, 143), 0 ),
		polygon ((92, 30, 29),(277, 120, 115), 0 ),
		polygon ((29, 96, 92),(115, 283, 278), 0 ),
		polygon ((96, 29, 34),(284, 115, 132), 0 ),
		polygon ((34, 97, 96),(132, 286, 285), 0 ),
		polygon ((97, 34, 36),(286, 132, 137), 0 ),
		polygon ((36, 95, 97),(137, 281, 286), 0 ),
		polygon ((47, 98, 99),(166, 288, 291), 0 ),
		polygon ((99, 49, 47),(292, 173, 167), 0 ),
		polygon ((49, 99, 100),(173, 293, 295), 0 ),
		polygon ((100, 50, 49),(296, 174, 173), 0 ),
		polygon ((47, 52, 101),(168, 179, 300), 0 ),
		polygon ((101, 98, 47),(301, 289, 169), 0 ),
		polygon ((52, 55, 102),(179, 189, 304), 0 ),
		polygon ((102, 101, 52),(305, 302, 179), 0 ),
		polygon ((57, 50, 100),(194, 174, 297), 0 ),
		polygon ((100, 103, 57),(298, 308, 194), 0 ),
		polygon ((55, 57, 103),(189, 194, 309), 0 ),
		polygon ((103, 102, 55),(310, 306, 189), 0 ),
		polygon ((104, 105, 106),(311, 312, 313), 0 ),
		polygon ((107, 106, 105),(314, 313, 312), 0 ),
		polygon ((105, 104, 108),(312, 311, 315), 0 ),
		polygon ((108, 91, 105),(315, 270, 312), 0 ),
		polygon ((109, 91, 108),(318, 271, 316), 0 ),
		polygon ((108, 110, 109),(317, 319, 318), 0 ),
		polygon ((111, 109, 110),(320, 318, 319), 0 ),
		polygon ((110, 112, 111),(319, 321, 320), 0 ),
		polygon ((112, 113, 114),(321, 322, 323), 0 ),
		polygon ((114, 111, 112),(323, 320, 321), 0 ),
		polygon ((107, 114, 113),(314, 323, 322), 0 ),
		polygon ((113, 106, 107),(322, 313, 314), 0 ),
		polygon ((114, 87, 111),(323, 265, 320), 0 ),
		polygon ((111, 87, 89),(320, 265, 267), 0 ),
		polygon ((89, 109, 111),(267, 318, 320), 0 ),
		polygon ((109, 89, 84),(318, 267, 257), 0 ),
		polygon ((91, 109, 84),(272, 318, 257), 0 ),
		polygon ((84, 83, 91),(257, 256, 273), 0 ),
		polygon ((80, 75, 81),(249, 239, 250), 0 ),
		polygon ((86, 105, 91),(264, 312, 274), 0 ),
		polygon ((105, 86, 90),(312, 264, 268), 0 ),
		polygon ((90, 107, 105),(268, 314, 312), 0 ),
		polygon ((107, 90, 87),(314, 268, 265), 0 ),
		polygon ((87, 114, 107),(265, 323, 314), 0 ),
		polygon ((65, 79, 76),(213, 248, 240), 0 ),
		polygon ((76, 66, 65),(240, 214, 213), 0 ),
		polygon ((66, 76, 72),(214, 240, 220), 0 ),
		polygon ((72, 67, 66),(220, 215, 214), 0 ),
		polygon ((85, 78, 79),(260, 247, 248), 0 ),
		polygon ((79, 73, 85),(248, 223, 261), 0 ),
		polygon ((85, 73, 69),(262, 224, 217), 0 ),
		polygon ((69, 80, 85),(217, 249, 263), 0 ),
		polygon ((82, 84, 89),(251, 257, 267), 0 ),
		polygon ((84, 82, 78),(257, 251, 247), 0 ),
		polygon ((80, 81, 86),(249, 250, 264), 0 ),
		polygon ((90, 86, 81),(268, 264, 250), 0 ),
		polygon ((60, 68, 70),(202, 216, 218), 0 ),
		polygon ((70, 59, 60),(218, 201, 202), 0 ),
		polygon ((70, 64, 59),(218, 211, 201), 0 ),
		polygon ((59, 64, 58),(201, 212, 200), 0 )
	)
); /* end of polyset 'park_goal_pole_2' */

polyset park_backboard_2 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (vinyl_board ),
	casts_shadow = TRUE,
	vertices = ((cv((-7.704959, 2.217327, -0.188521), 1)),
			(cv((-7.704959, 2.21732, 0.002394), 1)),
			(cv((-7.704959, 2.642379, 0.002394), 1)),
			(cv((-7.704959, 2.343752, -0.611566), 1)),
			(cv((-7.704959, 2.846172, -0.568453), 1)),
			(cv((-7.704959, 2.67912, -0.639225), 1)),
			(cv((-7.704959, 2.986626, -0.415342), 1)),
			(cv((-7.704959, 3.06222, -0.20674), 1)),
			(cv((-7.704959, 3.082309, 0.002394), 1)),
			(cv((-7.704959, 3.06222, 0.211527), 1)),
			(cv((-7.704959, 2.986626, 0.420129), 1)),
			(cv((-7.704959, 2.846172, 0.57324), 1)),
			(cv((-7.704959, 2.67912, 0.644012), 1)),
			(cv((-7.704959, 2.382843, 0.644004), 1)),
			(cv((-7.704959, 2.343752, 0.616353), 1)),
			(cv((-7.704959, 2.217327, 0.193308), 1)),
			(cv((-7.704959, 2.382843, -0.639217), 1)),
			(cv((-7.739873, 2.202205, 0.002394), 1)),
			(cv((-7.739873, 2.202211, -0.19531), 1)),
			(cv((-7.739873, 2.333132, -0.633399), 1)),
			(cv((-7.739873, 2.373614, -0.662034), 1)),
			(cv((-7.739873, 2.680427, -0.662042), 1)),
			(cv((-7.739873, 2.853419, -0.588753), 1)),
			(cv((-7.739873, 2.998868, -0.430197), 1)),
			(cv((-7.739873, 3.07715, -0.214177), 1)),
			(cv((-7.739873, 3.097954, 0.002394), 1)),
			(cv((-7.739873, 3.07715, 0.218964), 1)),
			(cv((-7.739873, 2.998868, 0.434985), 1)),
			(cv((-7.739873, 2.853419, 0.59354), 1)),
			(cv((-7.739873, 2.680427, 0.666829), 1)),
			(cv((-7.739873, 2.373614, 0.666821), 1)),
			(cv((-7.739873, 2.333132, 0.638187), 1)),
			(cv((-7.739873, 2.202211, 0.200097), 1)),
			(cv((-7.772444, 2.217327, -0.188521), 1)),
			(cv((-7.772444, 2.21732, 0.002394), 1)),
			(cv((-7.772444, 2.642379, 0.002394), 1)),
			(cv((-7.772444, 2.343752, -0.611566), 1)),
			(cv((-7.772444, 2.846172, -0.568453), 1)),
			(cv((-7.772444, 2.67912, -0.639225), 1)),
			(cv((-7.772444, 2.986626, -0.415342), 1)),
			(cv((-7.772444, 3.06222, -0.20674), 1)),
			(cv((-7.772444, 3.082309, 0.002394), 1)),
			(cv((-7.772444, 3.06222, 0.211527), 1)),
			(cv((-7.772444, 2.986626, 0.420129), 1)),
			(cv((-7.772444, 2.846172, 0.57324), 1)),
			(cv((-7.772444, 2.67912, 0.644012), 1)),
			(cv((-7.772444, 2.382843, 0.644004), 1)),
			(cv((-7.772444, 2.343752, 0.616353), 1)),
			(cv((-7.772444, 2.217327, 0.193308), 1)),
			(cv((-7.772444, 2.382843, -0.639217), 1))	),
	texture_vertices = (
			st( 0.371263, 0.112245 ),
			st( 0.492903, 0.112239 ),
			st( 0.492903, 0.508190 ),
			st( 0.101724, 0.230013 ),
			st( 0.129193, 0.698027 ),
			st( 0.084101, 0.542415 ),
			st( 0.226746, 0.828863 ),
			st( 0.359655, 0.899280 ),
			st( 0.492903, 0.917994 ),
			st( 0.626150, 0.899280 ),
			st( 0.759059, 0.828863 ),
			st( 0.856612, 0.698027 ),
			st( 0.901704, 0.542415 ),
			st( 0.901699, 0.266427 ),
			st( 0.884081, 0.230013 ),
			st( 0.614542, 0.112245 ),
			st( 0.084106, 0.266427 ),
			st( 0.492903, 0.009191 ),
			st( 0.348377, 0.009198 ),
			st( 0.028125, 0.153221 ),
			st( 0.002026, 0.267194 ),
			st( 0.007187, 0.535270 ),
			st( 0.060762, 0.725574 ),
			st( 0.176670, 0.885579 ),
			st( 0.334585, 0.971695 ),
			st( 0.492903, 0.994581 ),
			st( 0.651220, 0.971695 ),
			st( 0.809136, 0.885579 ),
			st( 0.925043, 0.725574 ),
			st( 0.978619, 0.542231 ),
			st( 0.978613, 0.197754 ),
			st( 0.957680, 0.153221 ),
			st( 0.637428, 0.009198 ),
			st( 0.371263, 0.112245 ),
			st( 0.492903, 0.112239 ),
			st( 0.492903, 0.508190 ),
			st( 0.101724, 0.230013 ),
			st( 0.129193, 0.698027 ),
			st( 0.084101, 0.542415 ),
			st( 0.226746, 0.828863 ),
			st( 0.359655, 0.899280 ),
			st( 0.492903, 0.917994 ),
			st( 0.626150, 0.899280 ),
			st( 0.759059, 0.828863 ),
			st( 0.856612, 0.698027 ),
			st( 0.901704, 0.542415 ),
			st( 0.901699, 0.266427 ),
			st( 0.884081, 0.230013 ),
			st( 0.614542, 0.112245 ),
			st( 0.084106, 0.266427 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 2),(4, 5, 2), 0 ),
		polygon ((2, 6, 4),(2, 6, 4), 0 ),
		polygon ((7, 6, 2),(7, 6, 2), 0 ),
		polygon ((8, 7, 2),(8, 7, 2), 0 ),
		polygon ((2, 9, 8),(2, 9, 8), 0 ),
		polygon ((10, 9, 2),(10, 9, 2), 0 ),
		polygon ((2, 11, 10),(2, 11, 10), 0 ),
		polygon ((12, 11, 2),(12, 11, 2), 0 ),
		polygon ((2, 13, 12),(2, 13, 12), 0 ),
		polygon ((14, 13, 2),(14, 13, 2), 0 ),
		polygon ((2, 15, 14),(2, 15, 14), 0 ),
		polygon ((1, 15, 2),(1, 15, 2), 0 ),
		polygon ((2, 5, 16),(2, 5, 16), 0 ),
		polygon ((16, 3, 2),(16, 3, 2), 0 ),
		polygon ((17, 1, 0),(17, 1, 0), 0 ),
		polygon ((0, 18, 17),(0, 18, 17), 0 ),
		polygon ((18, 0, 19),(18, 0, 19), 0 ),
		polygon ((19, 0, 3),(19, 0, 3), 0 ),
		polygon ((19, 3, 16),(19, 3, 16), 0 ),
		polygon ((16, 20, 19),(16, 20, 19), 0 ),
		polygon ((20, 16, 5),(20, 16, 5), 0 ),
		polygon ((5, 21, 20),(5, 21, 20), 0 ),
		polygon ((5, 4, 22),(5, 4, 22), 0 ),
		polygon ((22, 21, 5),(22, 21, 5), 0 ),
		polygon ((22, 4, 6),(22, 4, 6), 0 ),
		polygon ((6, 23, 22),(6, 23, 22), 0 ),
		polygon ((23, 6, 7),(23, 6, 7), 0 ),
		polygon ((7, 24, 23),(7, 24, 23), 0 ),
		polygon ((24, 7, 8),(24, 7, 8), 0 ),
		polygon ((8, 25, 24),(8, 25, 24), 0 ),
		polygon ((26, 25, 8),(26, 25, 8), 0 ),
		polygon ((8, 9, 26),(8, 9, 26), 0 ),
		polygon ((26, 9, 10),(26, 9, 10), 0 ),
		polygon ((10, 27, 26),(10, 27, 26), 0 ),
		polygon ((28, 27, 10),(28, 27, 10), 0 ),
		polygon ((10, 11, 28),(10, 11, 28), 0 ),
		polygon ((28, 11, 29),(28, 11, 29), 0 ),
		polygon ((29, 11, 12),(29, 11, 12), 0 ),
		polygon ((12, 13, 29),(12, 13, 29), 0 ),
		polygon ((29, 13, 30),(29, 13, 30), 0 ),
		polygon ((30, 13, 31),(30, 13, 31), 0 ),
		polygon ((31, 13, 14),(31, 13, 14), 0 ),
		polygon ((32, 31, 14),(32, 31, 14), 0 ),
		polygon ((14, 15, 32),(14, 15, 32), 0 ),
		polygon ((32, 15, 1),(32, 15, 1), 0 ),
		polygon ((1, 17, 32),(1, 17, 32), 0 ),
		polygon ((35, 34, 33),(35, 34, 33), 0 ),
		polygon ((33, 36, 35),(33, 36, 35), 0 ),
		polygon ((35, 38, 37),(35, 38, 37), 0 ),
		polygon ((37, 39, 35),(37, 39, 35), 0 ),
		polygon ((35, 39, 40),(35, 39, 40), 0 ),
		polygon ((35, 40, 41),(35, 40, 41), 0 ),
		polygon ((41, 42, 35),(41, 42, 35), 0 ),
		polygon ((35, 42, 43),(35, 42, 43), 0 ),
		polygon ((43, 44, 35),(43, 44, 35), 0 ),
		polygon ((35, 44, 45),(35, 44, 45), 0 ),
		polygon ((45, 46, 35),(45, 46, 35), 0 ),
		polygon ((35, 46, 47),(35, 46, 47), 0 ),
		polygon ((47, 48, 35),(47, 48, 35), 0 ),
		polygon ((35, 48, 34),(35, 48, 34), 0 ),
		polygon ((49, 38, 35),(49, 38, 35), 0 ),
		polygon ((35, 36, 49),(35, 36, 49), 0 ),
		polygon ((33, 34, 17),(33, 34, 17), 0 ),
		polygon ((17, 18, 33),(17, 18, 33), 0 ),
		polygon ((19, 33, 18),(19, 33, 18), 0 ),
		polygon ((36, 33, 19),(36, 33, 19), 0 ),
		polygon ((49, 36, 19),(49, 36, 19), 0 ),
		polygon ((19, 20, 49),(19, 20, 49), 0 ),
		polygon ((38, 49, 20),(38, 49, 20), 0 ),
		polygon ((20, 21, 38),(20, 21, 38), 0 ),
		polygon ((22, 37, 38),(22, 37, 38), 0 ),
		polygon ((38, 21, 22),(38, 21, 22), 0 ),
		polygon ((39, 37, 22),(39, 37, 22), 0 ),
		polygon ((22, 23, 39),(22, 23, 39), 0 ),
		polygon ((40, 39, 23),(40, 39, 23), 0 ),
		polygon ((23, 24, 40),(23, 24, 40), 0 ),
		polygon ((41, 40, 24),(41, 40, 24), 0 ),
		polygon ((24, 25, 41),(24, 25, 41), 0 ),
		polygon ((41, 25, 26),(41, 25, 26), 0 ),
		polygon ((26, 42, 41),(26, 42, 41), 0 ),
		polygon ((43, 42, 26),(43, 42, 26), 0 ),
		polygon ((26, 27, 43),(26, 27, 43), 0 ),
		polygon ((43, 27, 28),(43, 27, 28), 0 ),
		polygon ((28, 44, 43),(28, 44, 43), 0 ),
		polygon ((29, 44, 28),(29, 44, 28), 0 ),
		polygon ((45, 44, 29),(45, 44, 29), 0 ),
		polygon ((29, 46, 45),(29, 46, 45), 0 ),
		polygon ((30, 46, 29),(30, 46, 29), 0 ),
		polygon ((31, 46, 30),(31, 46, 30), 0 ),
		polygon ((47, 46, 31),(47, 46, 31), 0 ),
		polygon ((47, 31, 32),(47, 31, 32), 0 ),
		polygon ((32, 48, 47),(32, 48, 47), 0 ),
		polygon ((34, 48, 32),(34, 48, 32), 0 ),
		polygon ((32, 17, 34),(32, 17, 34), 0 )
	)
); /* end of polyset 'park_backboard_2' */

ENVIRONMENT
background ( 
        color = (0.0, 0.0, 0.0)
);
shader_glow ( 
,
        glow_type =  LINEAR_GLOW,
        halo_type =  LINEAR_GLOW,
        auto_exposure = ON,
        quality = 0.5,
        threshold = 0.0,
        glow_color = (100.0, 100.0, 100.0),
        glow_intensity = 1.0,
        glow_spread = 0.05,
        glow_eccentricity = 0.1,
        glow_radial_noise = 0.0,
        glow_star_level = 0.0,
        glow_opacity = 0.0,
        halo_color = (100.0, 100.0, 100.0),
        halo_intensity = 1.0,
        halo_spread = 0.3,
        halo_eccentricity = 0.1,
        halo_radial_noise = 0.0,
        halo_star_level = 0.0,
        halo_lens_flare = 0.0,
        rotation = 0.0,
        radial_noise_frequency = 0.5,
        star_points = 4.0
);
photo_effects ( 
,
        film_grain = 0.0,
        filter = (255.0, 255.0, 255.0)
);
master_light ( 
,
        intensity = 1.0,
        light_color = (255.0, 255.0, 255.0)
);
dynamics ( 
,
        gravity = 1.0,
        air_density = 0.05,
        Floor = ON,
        floor_offset = 0.0,
        ceiling = OFF,
        ceiling_offset = 20.0,
        left = OFF,
        left_offset = -10.0,
        right = OFF,
        right_offset = 10.0,
        front = OFF,
        front_offset = -10.0,
        back = OFF,
        back_offset = 10.0,
        wall_friction = 0.0,
        wall_elasticity = 0.707,
        turbulence_intensity = 0.0,
        turbulence_spread = 0.5,
        turbulence_persistence = 5.0,
        turbulence_animated = ON,
        turbulence_space_resolution =  16,
        turbulence_time_resolution =  16,
        turbulence_roughness = 0.5,
        turbulence_variability = 0.5,
        turbulence_granularity = 0.0
);

MODEL
/* Only expression assignments should appear above this line and below the MODEL directive. */
/* Placing any other commands in the above section will produce incorrect expression behaviour. */
{
	trn(7.670269, 2.24798, -0.513724);
	rot (zaxis, 90.0);
	rot (xaxis, 90.0);
	scale (0.807704, 0.65171, 0.166693);
	Projection_tform = cur_xform();
}
{
	trn(7.680481, 2.126802, 0.658667);
	rot (yaxis, 90.0);
	scale (1.324638, 1.097737, -0.089212);
	Projection_tform#6 = cur_xform();
}
{
	trn_ro(7.778604, 2.679701, 0.649369);
	trn_ri(-7.778604, -2.679701, -0.649369);
	trn_so(7.778604, 2.679701, 0.649369);
	trn_si(-7.778604, -2.679701, -0.649369);
	{
		instance park_goal_grass1();
	}
	{
		instance park_goal_target_1();
	}
	{
		instance park_Rim1();
	}
	{
		instance park_Net1();
	}
	{
		instance park_goal_pole_1();
	}
	{
		instance park_backboard_1();
	}
}
{
	{
		instance park_goal_grass2();
	}
	{
		instance park_goal_target_2();
	}
	{
		instance park_Rim2();
	}
	{
		instance park_Net2();
	}
	{
		instance park_goal_pole_2();
	}
	{
		instance park_backboard_2();
	}
}
{
	trn(0.0, 0.0, 12.0);
	{
		inst Light();
	}
	{
		trn(-2.0, -2.0, 0.0);
		Lightview = current_position(( 0.0,  0.0,  0.0));
	}
	{
		trn(0.0, 10.0, 0.0);
		Lightup = current_position(( 0.0,  0.0,  0.0));
	}
}
{
	{
		trn(-6.116472, 6.39804, 9.940421);
		camera (
			perspective = TRUE,
			eye   = ( 0.0,  0.0,  0.0),
			active = ON,
			pix   = "pix/parkgoal.sdl",
			view  = Camera_view,
			up  = Camera_up,
			aov = 55.0,
			filmaperture_x = 0.4,
			filmaperture_y = 0.285,
			filmoffset_x = 0.0,
			filmoffset_y = 0.0,
			placement_fit_code = 0,
			placement_shift = 0.0,
			aspect   = pixel_aspect,
			aspect_ratio_pixel = pixel_aspect,
			near = 0.1,
			far = 554.522499,
			depth_of_field = 0.0,
			scaling_factor = 1.0,
			f_stop = 3.5,
			focal_distance = 12.0,
			auto_focus = OFF,
			motion_blur = 0.0
		);
	}
	{
		trn(-6.289592, 5.36311, 7.958921);
		Camera_view = current_position( (0, 0, 0) );
	}
	{
		trn(-6.156644, 7.285146, 9.480602);
		Camera_up = current_position( (0, 0, 0) );
	}
}

