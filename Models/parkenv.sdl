DEFINITION	/* ALIAS SDL File Version 8.5 */
			/* Apparently from wire file '/matt/mgilmore/user_data/NBAonNBC/wire/FLOORS/PARK/park12cENVIRONMENT'. */
	version = 8.5;

	xleft  = 0;
	xright = 1279;
	ylow   = 0;
	yhigh  = 1023;
	resolution = 1280 1024;
	aalevelmin   = 3;
	aalevelmax   = 12;
	aathreshold  = 0.6;
	post_filter   = OFF;
	post_center   = 8;    /* Values for a bartlet filter. */
	post_adjacent = 1;
	post_diagonal = 1;

	composite_rendering = OFF;
	invisible_objects_cast_shadows = OFF;
	image_format = ALIAS;
	jitter       = ON;
	reduced_samples = OFF;
	textures_active    = ON;

	clamp_bumpsize = 0.0;

	up = yaxis;

	motion_blur_on = OFF;
	shutter_angle  = 144.0;
	animation  = OFF;
	startframe = 3.0;
	endframe = 3.0;
	fields          = FALSE;
	odd             = FALSE;
	even            = FALSE;
	odd_field_first = TRUE;

	triple Camera_view(0.0, 0.0, 0.0);
	triple Camera_up(0.0, 0.0, 0.0);

	subdivision_recursion_limit = 2;
	grid_cache = 4000;
	bbox_memory = FULL;
	rt_voxel_res_type = AUTOMATIC;

	max_reflections             = 10;
	max_refractions             = 10;
	max_shadow_level            = 10;
	preview_ray_trace           = OFF;

	scalar pixel_aspect ( 1.0 );
	hline_to_fill_color  = FALSE;
	hline_fill_color     = (255.0, 255.0, 255.0);
	hline_line_color     = (0.0, 255.0, 255.0);
	hline_isoparam_u     = 0;
	hline_isoparam_v     = 0;

	show_particles       = TRUE;
	simulation_substeps  = 1;
	simulation_frames_per_second = 30;

xform     Projection_tform#46;
xform     Projection_tform#47;
triple Lightview(0.0, 0.0, 0.0);
triple Lightup(0.0, 0.0, 0.0);

light Light ( model = ambient,
	active = ON,
	exclusive = FALSE,
	light_emission = ON,
	color = (255.0, 255.0, 255.0),
	shadow_color = (0.0, 0.0, 0.0),
	intensity = 1.0,
	force_type = OFF,
	force_intensity = 1.0,
	warp = OFF,
	glow_type = OFF,
	halo_type = OFF,
	fog_type = OFF,
	flare = OFF,
	psys_emission = OFF,
	shadow = FALSE,
	soft_shadows = FALSE,
	light_radius = 1.0,
	shadow_samples = 2.0,
	use_shadow_map = 0.0,
	ambient_shade = 0.011628
);

texture crtfile3 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/parn03.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader court_3 ( model = lambert,
        diffuse = 0.8,
        color = crtfile3,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture crtfile8 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/parn08.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader court_8 ( model = lambert,
        diffuse = 0.8,
        color = crtfile8,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture crtfile5 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/parn05.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader court_5 ( model = lambert,
        diffuse = 0.8,
        color = crtfile5,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture crtfile7 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/parn07.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader court_7 ( model = lambert,
        diffuse = 0.8,
        color = crtfile7,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture crtfile2 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/parn02.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader court_2 ( model = lambert,
        diffuse = 0.8,
        color = crtfile2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture crtfile1 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/parn01.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader court_1 ( model = lambert,
        diffuse = 0.8,
        color = crtfile1,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture crtfile4 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/parn04.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader court_4 ( model = lambert,
        diffuse = 0.8,
        color = crtfile4,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture crtfile6 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/parn06.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader court_6 ( model = lambert,
        diffuse = 0.8,
        color = crtfile6,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture outbound_floor (
        procedure = file,
        rgbout = (0.0, 0.0, 0.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/atlhaw/8way/atln10.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader outofbnd ( model = lambert,
        diffuse = 0.8,
        color = outbound_floor,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture grassfile (
        procedure = file,
        rgbout = (18.497383, 0.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/grssfrng.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.05814,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = OFF,
        vwrap = OFF,
        invert = OFF
);

shader grass ( model = lambert,
        diffuse = 0.8,
        color = grassfile,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture file2 (
        procedure = file,
        rgbout = (18.497383, 0.0, 255.0),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/pole1.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.05814,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = OFF,
        vwrap = OFF,
        invert = OFF
);

shader cush4 ( model = lambert,
        diffuse = 0.8,
        color = file2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture METAL1texture (
        procedure = file,
        rgbout = (113.120346, 120.298462, 134.76683),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/metal1.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.05814,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader METAL1 ( model = lambert,
        diffuse = 0.8,
        color = METAL1texture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture ORANGEtexture (
        procedure = file,
        rgbout = (255.0, 71.347153, 0.0),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/bracket.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader ORANGE ( model = lambert,
        diffuse = 0.8,
        color = ORANGEtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture HOOPtexture (
        procedure = file,
        rgbout = (255.0, 71.347153, 0.0),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/hoop.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader HOOP ( model = lambert,
        diffuse = 0.8,
        color = HOOPtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture NETtexture (
        procedure = file,
        rgbout = (151.943008, 143.597137, 99.983223),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/net.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = -0.01,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader NET ( model = lambert,
        diffuse = 0.8,
        color = NETtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture scrtxt (
        procedure = file,
        rgbout = (222.383728, 11.522475, 11.522475),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/Scortabl.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader scortabl ( model = lambert,
        diffuse = 0.8,
        color = scrtxt,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture bench1file (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/bench1.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader bench1 ( model = lambert,
        diffuse = 0.8,
        color = bench1file,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture Projection2 (
        procedure = Projection,
        xform_name = Projection_tform#47,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        sfile_type =  PLANAR,
        xamplitude = 0.0,
        yamplitude = 0.0,
        ratio = 0.3,
        level_min = 0.0,
        level_max = 10.0,
        xripples = 1.0,
        yripples = 1.0,
        zripples = 1.0,
        stagger = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        wrap = ON,
        blend = 0.0,
        invert = OFF
);

shader projector ( model = lambert,
        diffuse = 0.8,
        color = Projection2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture bench2file (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/bench2.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader bench2 ( model = lambert,
        diffuse = 0.8,
        color = bench2file,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture File (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/splatter.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader Shader ( model = lambert,
        diffuse = 0.8,
        color = File,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture cush_image (
        procedure = file,
        rgbout = (18.497383, 0.0, 255.0),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/cush4.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.05814,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = OFF,
        vwrap = OFF,
        invert = OFF
);

shader cush ( model = lambert,
        diffuse = 0.8,
        color = cush_image,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture sealtexture (
        procedure = file,
        rgbout = (133.048538, 136.964493, 151.943008),
        active = ON,
        image = "/usr/people/mgilmore/user_data/NBAonNBC/pix/seal.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = -0.01,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader seal ( model = lambert,
        diffuse = 0.8,
        color = sealtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture TARGETtexture (
        procedure = file,
        rgbout = (255.0, 254.555023, 248.393784),
        active = ON,
        image = "/disk3/people/mgilmore/user_data/NBAonNBC/pix/target.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader TARGET ( model = lambert,
        diffuse = 0.8,
        color = TARGETtexture,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture a1file (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/pkwalla1.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader buildinga1 ( model = lambert,
        diffuse = 0.8,
        color = a1file,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture a2file (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/pkwalla2.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader buildinga2 ( model = lambert,
        diffuse = 0.8,
        color = a2file,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture a3file (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/pkwalla3.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader buildinga3 ( model = lambert,
        diffuse = 0.8,
        color = a3file,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture a4file (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/pkwalla4.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader buildinga4 ( model = lambert,
        diffuse = 0.8,
        color = a4file,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture a5file (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/pkwalla5.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader buildinga5 ( model = lambert,
        diffuse = 0.8,
        color = a5file,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture a6file (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/pkwalla6.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader buildinga6 ( model = lambert,
        diffuse = 0.8,
        color = a6file,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture stormfanfile1 (
        procedure = file,
        rgbout = (0.0, 150.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/stormfan.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader stormfan ( model = blinn,
        diffuse = 0.8,
        specular = (0.5, 0.5, 0.5),
        specular_rolloff = 0.3,
        eccentricity = 0.323093,
        reflectivity = 0.5,
        reflect_background = OFF,
        color = stormfanfile1,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture b1file (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/pkwallb1.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader buildingb1 ( model = lambert,
        diffuse = 0.8,
        color = b1file,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture b2file (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/pkwallb2.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader buildingb2 ( model = lambert,
        diffuse = 0.8,
        color = b2file,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture b3file (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/pkwallb3.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader buildingb3 ( model = lambert,
        diffuse = 0.8,
        color = b3file,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture b4file (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/pkwallb4.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader buildingb4 ( model = lambert,
        diffuse = 0.8,
        color = b4file,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture b5file (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/pkwallb5.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader buildingb5 ( model = lambert,
        diffuse = 0.8,
        color = b5file,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture b6file (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/pkwallb6.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader buildingb6 ( model = lambert,
        diffuse = 0.8,
        color = b6file,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture stormfanfile2 (
        procedure = file,
        rgbout = (0.0, 150.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/stormfan.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader stormfan_2 ( model = lambert,
        diffuse = 0.8,
        color = stormfanfile2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture fencefile (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/parkfnce.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader fence ( model = lambert,
        diffuse = 0.8,
        color = fencefile,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture concrete_image (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/sidewlk1.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader concrete ( model = lambert,
        diffuse = 0.8,
        color = concrete_image,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture lawnIMAGE (
        procedure = file,
        rgbout = (133.048538, 136.964493, 151.943008),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/lawn.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader lawn ( model = lambert,
        diffuse = 0.8,
        color = lawnIMAGE,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture streetIMAGE (
        procedure = file,
        rgbout = (133.048538, 136.964493, 151.943008),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/street.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 0.978836,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = -0.01,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader street ( model = lambert,
        diffuse = 0.8,
        color = streetIMAGE,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture towerimage1 (
        procedure = file,
        rgbout = (133.048538, 136.964493, 151.943008),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/watrtowr.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 0.978836,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = -0.01,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader water_tower ( model = lambert,
        diffuse = 0.8,
        color = towerimage1,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture sky_file (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/parksky3.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader skydome ( model = lambert,
        diffuse = 0.8,
        color = sky_file,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture File7 (
        procedure = file,
        rgbout = (0.0, 150.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/trashcan.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader DefaultShader ( model = lambert,
        diffuse = 0.8,
        color = File7,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture houseart1 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/house01.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader house1 ( model = lambert,
        diffuse = 0.8,
        color = houseart1,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture houseart2 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/house02.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader house2 ( model = lambert,
        diffuse = 0.8,
        color = houseart2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture houseart3 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/house03.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader house3 ( model = lambert,
        diffuse = 0.8,
        color = houseart3,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture houseart4 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/house04.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader house4 ( model = lambert,
        diffuse = 0.8,
        color = houseart4,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture houseart5 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/house05.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader house5 ( model = lambert,
        diffuse = 0.8,
        color = houseart5,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture housear6 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/house06.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader house6 ( model = lambert,
        diffuse = 0.8,
        color = housear6,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture concrete_image2 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/sidewlk2.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader concrete2 ( model = lambert,
        diffuse = 0.8,
        color = concrete_image2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture yardfile (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/yard.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader yard ( model = lambert,
        diffuse = 0.8,
        color = yardfile,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture rooftop_file (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/rooftop.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader rooftop ( model = lambert,
        diffuse = 0.8,
        color = rooftop_file,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture distantfile (
        procedure = file,
        rgbout = (133.048538, 136.964493, 151.943008),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/distant1.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 0.978836,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = -0.01,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader distantwatertower ( model = lambert,
        diffuse = 0.8,
        color = distantfile,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture gatefile (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/parkgate.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader gate ( model = lambert,
        diffuse = 0.8,
        color = gatefile,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture concfile3 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/sidewlk3.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader sidewalk3 ( model = lambert,
        diffuse = 0.8,
        color = concfile3,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture concfile4 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/sidewlk4.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader sidewalk4 ( model = lambert,
        diffuse = 0.8,
        color = concfile4,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture concfile5 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/sidewlk5.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader sidewalk5 ( model = lambert,
        diffuse = 0.8,
        color = concfile5,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture concfile6 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/sidewlk6.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader sidewalk6 ( model = lambert,
        diffuse = 0.8,
        color = concfile6,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture skylineart (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/skyline.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader skyline ( model = lambert,
        diffuse = 0.8,
        color = skylineart,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture Projection (
        procedure = Projection,
        xform_name = Projection_tform#46,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        sfile_type =  PLANAR,
        xamplitude = 0.0,
        yamplitude = 0.0,
        ratio = 0.3,
        level_min = 0.0,
        level_max = 10.0,
        xripples = 1.0,
        yripples = 1.0,
        zripples = 1.0,
        stagger = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        wrap = ON,
        blend = 0.0,
        invert = OFF
);

shader projectorContinent ( model = lambert,
        diffuse = 0.8,
        color = Projection,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture houseartfd (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/housefd.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader housefd ( model = lambert,
        diffuse = 0.8,
        color = houseartfd,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture streetfdIMAGE (
        procedure = file,
        rgbout = (133.048538, 136.964493, 151.943008),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/streetfd.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.069767,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 0.978836,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = -0.01,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader streetfd ( model = lambert,
        diffuse = 0.8,
        color = streetfdIMAGE,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture concfile6#2 (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/sidewlk7.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader sidewalk7 ( model = lambert,
        diffuse = 0.8,
        color = concfile6#2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture yardfader (
        procedure = file,
        rgbout = (255.0, 255.0, 255.0),
        active = ON,
        image = "/matt/mgilmore/user_data/NBAonNBC/pix/park/yardfd.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader yardfd ( model = lambert,
        diffuse = 0.8,
        color = yardfader,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

polyset BG_NorthEast (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = ON,
	opposite = OFF,
	shader = (street ),
	shader = (streetfd ),
	shader = (concrete ),
	shader = (yard ),
	shader = (house4 ),
	shader = (house2 ),
	shader = (house6 ),
	shader = (house5 ),
	shader = (house1 ),
	shader = (yardfd ),
	shader = (sidewalk7 ),
	shader = (housefd ),
	shader = (house3 ),
	casts_shadow = TRUE,
	vertices = ((cv((13.581774, -0.121657, -177.572595), 1)),
			(cv((13.581415, -0.121657, -59.14488), 1)),
			(cv((11.59918, -0.121657, -59.144878), 1)),
			(cv((11.599539, -0.121657, -177.572602), 1)),
			(cv((26.473461, 0.0, -177.434647), 1)),
			(cv((26.470963, 0.0, -143.077944), 1)),
			(cv((12.683142, 0.0, -143.077944), 1)),
			(cv((12.68564, 0.0, -177.434647), 1)),
			(cv((28.438694, 0.0, -98.5748), 1)),
			(cv((26.467283, 0.0, -98.5748), 1)),
			(cv((26.468466, 0.0, -143.077944), 1)),
			(cv((28.439877, 0.0, -143.077944), 1)),
			(cv((38.453434, 0.0, -143.077946), 1)),
			(cv((28.438694, 0.0, -143.077946), 1)),
			(cv((28.438694, 0.0, -98.574802), 1)),
			(cv((38.453434, 0.0, -98.574802), 1)),
			(cv((37.389033, 0.0, -86.084352), 1)),
			(cv((37.389033, 9.244611, -79.560348), 1)),
			(cv((37.389033, 0.0, -79.560348), 1)),
			(cv((37.389033, 9.244611, -86.084352), 1)),
			(cv((37.389033, -0.117144, -73.688111), 1)),
			(cv((37.389033, 9.666098, -67.399254), 1)),
			(cv((37.389033, -0.117144, -67.399254), 1)),
			(cv((37.389033, 9.666098, -73.688111), 1)),
			(cv((37.510326, -0.117144, -62.626613), 1)),
			(cv((37.510326, 9.666098, -55.722492), 1)),
			(cv((37.510326, -0.117144, -55.722492), 1)),
			(cv((37.510326, 9.666098, -62.626613), 1)),
			(cv((37.874202, -0.117144, -68.146626), 1)),
			(cv((37.874202, 9.666098, -61.652681), 1)),
			(cv((37.874202, -0.117144, -61.652681), 1)),
			(cv((37.874202, 9.666098, -68.146626), 1)),
			(cv((37.874202, 0.0, -80.217921), 1)),
			(cv((37.874202, 9.783242, -73.3138), 1)),
			(cv((37.874202, 0.0, -73.3138), 1)),
			(cv((37.874202, 9.783242, -80.217921), 1)),
			(cv((37.874202, -0.117144, -91.826977), 1)),
			(cv((37.874202, 9.666098, -85.538121), 1)),
			(cv((37.874202, -0.117144, -85.538121), 1)),
			(cv((37.874202, 9.666098, -91.826977), 1)),
			(cv((26.472278, 0.0, -143.077944), 1)),
			(cv((26.46978, 0.0, -98.5748), 1)),
			(cv((12.68196, 0.0, -98.5748), 1)),
			(cv((12.684458, 0.0, -143.077944), 1)),
			(cv((28.438694, 0.0, -143.077946), 1)),
			(cv((28.438694, 0.0, -177.434641), 1)),
			(cv((38.453434, 0.0, -177.434641), 1)),
			(cv((38.453434, 0.0, -143.077946), 1)),
			(cv((28.438694, 0.0, -143.077944), 1)),
			(cv((26.467283, 0.0, -143.077944), 1)),
			(cv((26.468466, 0.0, -177.434647), 1)),
			(cv((28.439877, 0.0, -177.434647), 1)),
			(cv((28.438694, 0.0, -59.14488), 1)),
			(cv((26.467283, 0.0, -59.14488), 1)),
			(cv((26.468466, 0.0, -98.5748), 1)),
			(cv((28.439877, 0.0, -98.5748), 1)),
			(cv((38.453434, 0.0, -98.574802), 1)),
			(cv((38.453434, 0.0, -59.14488), 1)),
			(cv((28.438694, 0.0, -59.14488), 1)),
			(cv((28.438694, 0.0, -98.574802), 1)),
			(cv((26.472278, 0.0, -98.5748), 1)),
			(cv((26.46978, 0.0, -59.14488), 1)),
			(cv((12.68196, 0.0, -59.14488), 1)),
			(cv((12.684458, 0.0, -98.5748), 1)),
			(cv((37.510326, -0.117144, -137.058559), 1)),
			(cv((37.510326, 9.666098, -130.154438), 1)),
			(cv((37.510326, -0.117144, -130.154438), 1)),
			(cv((37.510326, 9.666098, -137.058559), 1)),
			(cv((37.874202, -0.117144, -142.578572), 1)),
			(cv((37.874202, 9.666098, -136.084627), 1)),
			(cv((37.874202, -0.117144, -136.084627), 1)),
			(cv((37.874202, 9.666098, -142.578572), 1)),
			(cv((37.631618, -0.117144, -111.476093), 1)),
			(cv((37.631618, 9.666098, -104.571973), 1)),
			(cv((37.631618, -0.117144, -104.571973), 1)),
			(cv((37.631618, 9.666098, -111.476093), 1)),
			(cv((37.874202, -0.117144, -130.897373), 1)),
			(cv((37.874202, 9.127467, -124.373368), 1)),
			(cv((37.874202, -0.117144, -124.373368), 1)),
			(cv((37.874202, 9.127467, -130.897373), 1)),
			(cv((37.874202, -0.117144, -105.341224), 1)),
			(cv((37.874202, 9.666098, -98.84728), 1)),
			(cv((37.874202, -0.117144, -98.84728), 1)),
			(cv((37.874202, 9.666098, -105.341224), 1)),
			(cv((37.389033, -0.117144, -176.757716), 1)),
			(cv((37.389033, 9.666098, -141.8312), 1)),
			(cv((37.389033, -0.117144, -141.8312), 1)),
			(cv((37.389033, 9.666098, -176.757716), 1)),
			(cv((37.267741, -0.117144, -99.71523), 1)),
			(cv((37.267741, 6.613409, -91.30713), 1)),
			(cv((37.267741, -0.117144, -91.30713), 1)),
			(cv((37.267741, 6.613409, -99.71523), 1)),
			(cv((37.874202, -0.175457, -117.163896), 1)),
			(cv((37.874202, 9.607786, -110.259775), 1)),
			(cv((37.874202, -0.175457, -110.259775), 1)),
			(cv((37.874202, 9.607786, -117.163896), 1)),
			(cv((37.510326, -0.117144, -124.889775), 1)),
			(cv((37.510326, 6.613409, -116.481675), 1)),
			(cv((37.510326, -0.117144, -116.481675), 1)),
			(cv((37.510326, 6.613409, -124.889775), 1))	),
	texture_vertices = (
			st( 5.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.110000 ),
			st( 5.000000, 0.110000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 19.000000, 0.000000 ),
			st( 19.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 5.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 5.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 19.000000, 0.000000 ),
			st( 19.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 5.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 5.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 1 ),
		polygon ((6, 7, 4),(6, 7, 4), 1 ),
		polygon ((8, 9, 10),(8, 9, 10), 2 ),
		polygon ((10, 11, 8),(10, 11, 8), 2 ),
		polygon ((12, 13),(12, 13), 3 ),
		polygon ((14, 12, 15),(14, 12, 15), 3 ),
		polygon ((14, 13, 12),(14, 13, 12), 3 ),
		polygon ((12, 15),(12, 15), 3 ),
		polygon ((16, 17, 18),(16, 17, 18), 4 ),
		polygon ((19, 17, 16),(19, 17, 16), 4 ),
		polygon ((20, 21, 22),(20, 21, 22), 5 ),
		polygon ((23, 21, 20),(23, 21, 20), 5 ),
		polygon ((24, 25, 26),(24, 25, 26), 6 ),
		polygon ((27, 25, 24),(27, 25, 24), 6 ),
		polygon ((28, 29, 30),(28, 29, 30), 7 ),
		polygon ((31, 29, 28),(31, 29, 28), 7 ),
		polygon ((32, 33, 34),(32, 33, 34), 8 ),
		polygon ((35, 33, 32),(35, 33, 32), 8 ),
		polygon ((36, 37, 38),(36, 37, 38), 5 ),
		polygon ((39, 37, 36),(39, 37, 36), 5 ),
		polygon ((40, 41, 42),(40, 41, 42), 0 ),
		polygon ((42, 43, 40),(42, 43, 40), 0 ),
		polygon ((44, 45, 46),(44, 45, 46), 9 ),
		polygon ((46, 47),(46, 47), 9 ),
		polygon ((44, 46, 47),(44, 46, 47), 9 ),
		polygon ((46, 45),(46, 45), 9 ),
		polygon ((48, 49, 50),(48, 49, 50), 10 ),
		polygon ((50, 51, 48),(50, 51, 48), 10 ),
		polygon ((52, 53, 54),(52, 53, 54), 2 ),
		polygon ((54, 55, 52),(54, 55, 52), 2 ),
		polygon ((56, 57),(56, 57), 3 ),
		polygon ((58, 56, 57),(58, 56, 57), 3 ),
		polygon ((58, 59, 56),(58, 59, 56), 3 ),
		polygon ((56, 59),(56, 59), 3 ),
		polygon ((60, 61, 62),(60, 61, 62), 0 ),
		polygon ((62, 63, 60),(62, 63, 60), 0 ),
		polygon ((64, 65, 66),(64, 65, 66), 6 ),
		polygon ((67, 65, 64),(67, 65, 64), 6 ),
		polygon ((68, 69, 70),(68, 69, 70), 4 ),
		polygon ((71, 69, 68),(71, 69, 68), 4 ),
		polygon ((72, 73, 74),(72, 73, 74), 6 ),
		polygon ((75, 73, 72),(75, 73, 72), 6 ),
		polygon ((76, 77, 78),(76, 77, 78), 4 ),
		polygon ((79, 77, 76),(79, 77, 76), 4 ),
		polygon ((80, 81, 82),(80, 81, 82), 7 ),
		polygon ((83, 81, 80),(83, 81, 80), 7 ),
		polygon ((84, 85, 86),(84, 85, 86), 11 ),
		polygon ((87, 85, 84),(87, 85, 84), 11 ),
		polygon ((88, 89, 90),(88, 89, 90), 12 ),
		polygon ((91, 89, 88),(91, 89, 88), 12 ),
		polygon ((92, 93, 94),(92, 93, 94), 8 ),
		polygon ((95, 93, 92),(95, 93, 92), 8 ),
		polygon ((96, 97, 98),(96, 97, 98), 12 ),
		polygon ((99, 97, 96),(99, 97, 96), 12 )
	)
); /* end of polyset 'BG_NorthEast' */

polyset BG_Northwest (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (streetfd ),
	shader = (concrete ),
	shader = (yard ),
	shader = (house4 ),
	shader = (house2 ),
	shader = (house6 ),
	shader = (house5 ),
	shader = (house1 ),
	shader = (street ),
	shader = (yardfd ),
	shader = (sidewalk7 ),
	shader = (housefd ),
	shader = (house3 ),
	casts_shadow = TRUE,
	vertices = ((cv((-12.676965, 0.0, -143.077944), 1)),
			(cv((-26.464785, 0.0, -143.077944), 1)),
			(cv((-26.467284, 0.0, -177.434647), 1)),
			(cv((-12.679463, 0.0, -177.434647), 1)),
			(cv((-26.462288, 0.0, -143.077944), 1)),
			(cv((-26.461106, 0.0, -98.5748), 1)),
			(cv((-28.432516, 0.0, -98.5748), 1)),
			(cv((-28.433699, 0.0, -143.077944), 1)),
			(cv((-38.447256, 0.0, -143.077946), 1)),
			(cv((-28.432516, 0.0, -143.077946), 1)),
			(cv((-38.447256, 0.0, -98.574802), 1)),
			(cv((-28.432516, 0.0, -98.574802), 1)),
			(cv((-37.382856, 0.0, -79.560348), 1)),
			(cv((-37.382856, 9.244611, -79.560348), 1)),
			(cv((-37.382856, 0.0, -86.084352), 1)),
			(cv((-37.382856, 9.244611, -86.084352), 1)),
			(cv((-37.382856, -0.117144, -67.399254), 1)),
			(cv((-37.382856, 9.666098, -67.399254), 1)),
			(cv((-37.382856, -0.117144, -73.688111), 1)),
			(cv((-37.382856, 9.666098, -73.688111), 1)),
			(cv((-37.504148, -0.117144, -55.722492), 1)),
			(cv((-37.504148, 9.666098, -55.722492), 1)),
			(cv((-37.504148, -0.117144, -62.626613), 1)),
			(cv((-37.504148, 9.666098, -62.626613), 1)),
			(cv((-37.868025, -0.117144, -61.652681), 1)),
			(cv((-37.868025, 9.666098, -61.652681), 1)),
			(cv((-37.868025, -0.117144, -68.146626), 1)),
			(cv((-37.868025, 9.666098, -68.146626), 1)),
			(cv((-37.868025, 0.0, -73.3138), 1)),
			(cv((-37.868025, 9.783242, -73.3138), 1)),
			(cv((-37.868025, 0.0, -80.217921), 1)),
			(cv((-37.868025, 9.783242, -80.217921), 1)),
			(cv((-37.868025, -0.117144, -85.538121), 1)),
			(cv((-37.868025, 9.666098, -85.538121), 1)),
			(cv((-37.868025, -0.117144, -91.826977), 1)),
			(cv((-37.868025, 9.666098, -91.826977), 1)),
			(cv((-12.675782, 0.0, -98.5748), 1)),
			(cv((-26.463603, 0.0, -98.5748), 1)),
			(cv((-26.466101, 0.0, -143.077944), 1)),
			(cv((-12.67828, 0.0, -143.077944), 1)),
			(cv((-38.447256, 0.0, -177.434641), 1)),
			(cv((-28.432516, 0.0, -177.434641), 1)),
			(cv((-28.432516, 0.0, -143.077946), 1)),
			(cv((-38.447256, 0.0, -143.077946), 1)),
			(cv((-26.462288, 0.0, -177.434647), 1)),
			(cv((-26.461106, 0.0, -143.077944), 1)),
			(cv((-28.432516, 0.0, -143.077944), 1)),
			(cv((-28.433699, 0.0, -177.434647), 1)),
			(cv((-26.462288, 0.0, -98.5748), 1)),
			(cv((-26.461106, 0.0, -59.14488), 1)),
			(cv((-28.432516, 0.0, -59.14488), 1)),
			(cv((-28.433699, 0.0, -98.5748), 1)),
			(cv((-38.447256, 0.0, -98.574802), 1)),
			(cv((-38.447256, 0.0, -59.14488), 1)),
			(cv((-28.432516, 0.0, -59.14488), 1)),
			(cv((-28.432516, 0.0, -98.574802), 1)),
			(cv((-12.675782, 0.0, -59.14488), 1)),
			(cv((-26.463603, 0.0, -59.14488), 1)),
			(cv((-26.466101, 0.0, -98.5748), 1)),
			(cv((-12.67828, 0.0, -98.5748), 1)),
			(cv((-37.504148, -0.117144, -130.154438), 1)),
			(cv((-37.504148, 9.666098, -130.154438), 1)),
			(cv((-37.504148, -0.117144, -137.058559), 1)),
			(cv((-37.504148, 9.666098, -137.058559), 1)),
			(cv((-37.868025, -0.117144, -136.084627), 1)),
			(cv((-37.868025, 9.666098, -136.084627), 1)),
			(cv((-37.868025, -0.117144, -142.578572), 1)),
			(cv((-37.868025, 9.666098, -142.578572), 1)),
			(cv((-37.62544, -0.117144, -104.571973), 1)),
			(cv((-37.62544, 9.666098, -104.571973), 1)),
			(cv((-37.62544, -0.117144, -111.476093), 1)),
			(cv((-37.62544, 9.666098, -111.476093), 1)),
			(cv((-37.868025, -0.117144, -124.373368), 1)),
			(cv((-37.868025, 9.127467, -124.373368), 1)),
			(cv((-37.868025, -0.117144, -130.897373), 1)),
			(cv((-37.868025, 9.127467, -130.897373), 1)),
			(cv((-37.868025, -0.117144, -98.84728), 1)),
			(cv((-37.868025, 9.666098, -98.84728), 1)),
			(cv((-37.868025, -0.117144, -105.341224), 1)),
			(cv((-37.868025, 9.666098, -105.341224), 1)),
			(cv((-37.382856, -0.117144, -141.8312), 1)),
			(cv((-37.382856, 9.666098, -141.8312), 1)),
			(cv((-37.382856, -0.117144, -176.757716), 1)),
			(cv((-37.382856, 9.666098, -176.757716), 1)),
			(cv((-37.261563, -0.117144, -91.30713), 1)),
			(cv((-37.261563, 6.613409, -91.30713), 1)),
			(cv((-37.261563, -0.117144, -99.71523), 1)),
			(cv((-37.261563, 6.613409, -99.71523), 1)),
			(cv((-37.868025, -0.175457, -110.259775), 1)),
			(cv((-37.868025, 9.607786, -110.259775), 1)),
			(cv((-37.868025, -0.175457, -117.163896), 1)),
			(cv((-37.868025, 9.607786, -117.163896), 1)),
			(cv((-37.504148, -0.117144, -116.481675), 1)),
			(cv((-37.504148, 6.613409, -116.481675), 1)),
			(cv((-37.504148, -0.117144, -124.889775), 1)),
			(cv((-37.504148, 6.613409, -124.889775), 1)),
			(cv((-11.726781, -0.146389, -177.572595), 1)),
			(cv((-11.72714, -0.146389, -59.14488), 1)),
			(cv((-13.709375, -0.146389, -59.144878), 1)),
			(cv((-13.709016, -0.146389, -177.572602), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 19.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 19.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 5.000000, 1.000000 ),
			st( 5.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 19.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 19.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 5.000000, 1.000000 ),
			st( 5.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 5.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.110000 ),
			st( 5.000000, 0.110000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 1 ),
		polygon ((6, 7, 4),(6, 7, 4), 1 ),
		polygon ((8, 9),(8, 9), 2 ),
		polygon ((10, 8, 11),(10, 8, 11), 2 ),
		polygon ((8, 9, 11),(8, 9, 11), 2 ),
		polygon ((8, 10),(8, 10), 2 ),
		polygon ((12, 13, 14),(12, 13, 14), 3 ),
		polygon ((14, 13, 15),(14, 13, 15), 3 ),
		polygon ((16, 17, 18),(16, 17, 18), 4 ),
		polygon ((18, 17, 19),(18, 17, 19), 4 ),
		polygon ((20, 21, 22),(20, 21, 22), 5 ),
		polygon ((22, 21, 23),(22, 21, 23), 5 ),
		polygon ((24, 25, 26),(24, 25, 26), 6 ),
		polygon ((26, 25, 27),(26, 25, 27), 6 ),
		polygon ((28, 29, 30),(28, 29, 30), 7 ),
		polygon ((30, 29, 31),(30, 29, 31), 7 ),
		polygon ((32, 33, 34),(32, 33, 34), 4 ),
		polygon ((34, 33, 35),(34, 33, 35), 4 ),
		polygon ((36, 37, 38),(36, 37, 38), 8 ),
		polygon ((38, 39, 36),(38, 39, 36), 8 ),
		polygon ((40, 41, 42),(40, 41, 42), 9 ),
		polygon ((40, 43),(40, 43), 9 ),
		polygon ((43, 40, 42),(43, 40, 42), 9 ),
		polygon ((40, 41),(40, 41), 9 ),
		polygon ((44, 45, 46),(44, 45, 46), 10 ),
		polygon ((46, 47, 44),(46, 47, 44), 10 ),
		polygon ((48, 49, 50),(48, 49, 50), 1 ),
		polygon ((50, 51, 48),(50, 51, 48), 1 ),
		polygon ((52, 53),(52, 53), 2 ),
		polygon ((53, 52, 54),(53, 52, 54), 2 ),
		polygon ((52, 55, 54),(52, 55, 54), 2 ),
		polygon ((52, 55),(52, 55), 2 ),
		polygon ((56, 57, 58),(56, 57, 58), 8 ),
		polygon ((58, 59, 56),(58, 59, 56), 8 ),
		polygon ((60, 61, 62),(60, 61, 62), 5 ),
		polygon ((62, 61, 63),(62, 61, 63), 5 ),
		polygon ((64, 65, 66),(64, 65, 66), 3 ),
		polygon ((66, 65, 67),(66, 65, 67), 3 ),
		polygon ((68, 69, 70),(68, 69, 70), 5 ),
		polygon ((70, 69, 71),(70, 69, 71), 5 ),
		polygon ((72, 73, 74),(72, 73, 74), 3 ),
		polygon ((74, 73, 75),(74, 73, 75), 3 ),
		polygon ((76, 77, 78),(76, 77, 78), 6 ),
		polygon ((78, 77, 79),(78, 77, 79), 6 ),
		polygon ((80, 81, 82),(80, 81, 82), 11 ),
		polygon ((82, 81, 83),(82, 81, 83), 11 ),
		polygon ((84, 85, 86),(84, 85, 86), 12 ),
		polygon ((86, 85, 87),(86, 85, 87), 12 ),
		polygon ((88, 89, 90),(88, 89, 90), 7 ),
		polygon ((90, 89, 91),(90, 89, 91), 7 ),
		polygon ((92, 93, 94),(92, 93, 94), 12 ),
		polygon ((94, 93, 95),(94, 93, 95), 12 ),
		polygon ((96, 97, 98),(96, 97, 98), 8 ),
		polygon ((98, 99, 96),(98, 99, 96), 8 )
	)
); /* end of polyset 'BG_Northwest' */

polyset BG_southeast (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (streetfd ),
	shader = (concrete ),
	shader = (yard ),
	shader = (house4 ),
	shader = (house2 ),
	shader = (house6 ),
	shader = (house5 ),
	shader = (house1 ),
	shader = (street ),
	shader = (yardfd ),
	shader = (sidewalk7 ),
	shader = (housefd ),
	shader = (house3 ),
	casts_shadow = TRUE,
	vertices = ((cv((12.679462, 1.464834, 143.065159), 1)),
			(cv((26.467282, 1.464834, 143.065159), 1)),
			(cv((26.46978, 2.064441, 177.416629), 1)),
			(cv((12.68196, 2.064441, 177.416629), 1)),
			(cv((26.464785, 1.464834, 143.065159), 1)),
			(cv((26.463603, 0.688147, 98.568793), 1)),
			(cv((28.435013, 0.688147, 98.568793), 1)),
			(cv((28.436196, 1.464834, 143.065159), 1)),
			(cv((38.449753, 1.464834, 143.06516), 1)),
			(cv((28.435013, 1.464834, 143.06516), 1)),
			(cv((38.449753, 0.688147, 98.568795), 1)),
			(cv((28.435013, 0.688147, 98.568795), 1)),
			(cv((37.385353, 0.356299, 79.557236), 1)),
			(cv((37.385353, 9.599502, 79.395896), 1)),
			(cv((37.385353, 0.470159, 86.080247), 1)),
			(cv((37.385353, 9.713362, 85.918906), 1)),
			(cv((37.385353, 0.026932, 67.40004), 1)),
			(cv((37.385353, 9.808685, 67.229298), 1)),
			(cv((37.385353, 0.136688, 73.687939), 1)),
			(cv((37.385353, 9.91844, 73.517197), 1)),
			(cv((37.506645, -0.176855, 55.725056), 1)),
			(cv((37.506645, 9.604897, 55.554315), 1)),
			(cv((37.506645, -0.056362, 62.628126), 1)),
			(cv((37.506645, 9.725391, 62.457384), 1)),
			(cv((37.870522, -0.073359, 61.654342), 1)),
			(cv((37.870522, 9.708393, 61.483601), 1)),
			(cv((37.870522, 0.039976, 68.147298), 1)),
			(cv((37.870522, 9.821728, 67.976557), 1)),
			(cv((37.870522, 0.247282, 73.31164), 1)),
			(cv((37.870522, 10.029034, 73.140899), 1)),
			(cv((37.870522, 0.367775, 80.214709), 1)),
			(cv((37.870522, 10.149528, 80.043968), 1)),
			(cv((37.870522, 0.343499, 85.536143), 1)),
			(cv((37.870522, 10.125252, 85.365402), 1)),
			(cv((37.870522, 0.453255, 91.824042), 1)),
			(cv((37.870522, 10.235007, 91.653301), 1)),
			(cv((12.678279, 0.688147, 98.568793), 1)),
			(cv((26.4661, 0.688147, 98.568793), 1)),
			(cv((26.468598, 1.464834, 143.065159), 1)),
			(cv((12.680777, 1.464834, 143.065159), 1)),
			(cv((38.449753, 2.064441, 177.416623), 1)),
			(cv((28.435013, 2.064441, 177.416623), 1)),
			(cv((28.435013, 1.464834, 143.06516), 1)),
			(cv((38.449753, 1.464834, 143.06516), 1)),
			(cv((26.464785, 2.064441, 177.416629), 1)),
			(cv((26.463603, 1.464834, 143.065159), 1)),
			(cv((28.435013, 1.464834, 143.065159), 1)),
			(cv((28.436196, 2.064441, 177.416629), 1)),
			(cv((26.464785, 0.688147, 98.568793), 1)),
			(cv((26.463603, 0.0, 59.144878), 1)),
			(cv((28.435013, 0.0, 59.144878), 1)),
			(cv((28.436196, 0.688147, 98.568793), 1)),
			(cv((38.449753, 0.688147, 98.568795), 1)),
			(cv((38.449753, 0.0, 59.144878), 1)),
			(cv((28.435013, 0.0, 59.144878), 1)),
			(cv((28.435013, 0.688147, 98.568795), 1)),
			(cv((12.678279, 0.0, 59.144878), 1)),
			(cv((26.4661, 0.0, 59.144878), 1)),
			(cv((26.468598, 0.688147, 98.568793), 1)),
			(cv((12.680777, 0.688147, 98.568793), 1)),
			(cv((37.506645, 1.122161, 130.145666), 1)),
			(cv((37.506645, 10.903914, 129.974925), 1)),
			(cv((37.506645, 1.242655, 137.048735), 1)),
			(cv((37.506645, 11.024407, 136.877994), 1)),
			(cv((37.870522, 1.225657, 136.074951), 1)),
			(cv((37.870522, 11.00741, 135.90421), 1)),
			(cv((37.870522, 1.338992, 142.567907), 1)),
			(cv((37.870522, 11.120745, 142.397166), 1)),
			(cv((37.627937, 0.675686, 104.567096), 1)),
			(cv((37.627937, 10.457438, 104.396355), 1)),
			(cv((37.627937, 0.796179, 111.470166), 1)),
			(cv((37.627937, 10.577932, 111.299425), 1)),
			(cv((37.870522, 1.021268, 124.365476), 1)),
			(cv((37.870522, 10.264471, 124.204136), 1)),
			(cv((37.870522, 1.135127, 130.888487), 1)),
			(cv((37.870522, 10.37833, 130.727146), 1)),
			(cv((37.870522, 0.575776, 98.843275), 1)),
			(cv((37.870522, 10.357528, 98.672534), 1)),
			(cv((37.870522, 0.689111, 105.336231), 1)),
			(cv((37.870522, 10.470863, 105.16549), 1)),
			(cv((37.385353, 1.325949, 141.820649), 1)),
			(cv((37.385353, 11.107701, 141.649908), 1)),
			(cv((37.385353, 1.935501, 176.741846), 1)),
			(cv((37.385353, 11.717253, 176.571105), 1)),
			(cv((37.26406, 0.444182, 91.304274), 1)),
			(cv((37.26406, 7.173711, 91.18681), 1)),
			(cv((37.26406, 0.590924, 99.711094), 1)),
			(cv((37.26406, 7.320452, 99.593629), 1)),
			(cv((37.870522, 0.716648, 110.255051), 1)),
			(cv((37.870522, 10.4984, 110.08431), 1)),
			(cv((37.870522, 0.837141, 117.15812), 1)),
			(cv((37.870522, 10.618894, 116.987379), 1)),
			(cv((37.506645, 0.883539, 116.474985), 1)),
			(cv((37.506645, 7.613067, 116.357521), 1)),
			(cv((37.506645, 1.03028, 124.881804), 1)),
			(cv((37.506645, 7.759809, 124.76434), 1)),
			(cv((13.685479, -0.121657, 59.14488), 1)),
			(cv((13.685119, -0.121657, 176.078), 1)),
			(cv((11.702885, -0.121657, 176.078001), 1)),
			(cv((11.703244, -0.121657, 59.144874), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 19.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 19.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 5.000000, 1.000000 ),
			st( 5.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 19.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 19.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 5.000000, 1.000000 ),
			st( 5.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 5.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.110000 ),
			st( 5.000000, 0.110000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 1 ),
		polygon ((6, 7, 4),(6, 7, 4), 1 ),
		polygon ((8, 9),(8, 9), 2 ),
		polygon ((10, 8, 11),(10, 8, 11), 2 ),
		polygon ((8, 9, 11),(8, 9, 11), 2 ),
		polygon ((8, 10),(8, 10), 2 ),
		polygon ((12, 13, 14),(12, 13, 14), 3 ),
		polygon ((14, 13, 15),(14, 13, 15), 3 ),
		polygon ((16, 17, 18),(16, 17, 18), 4 ),
		polygon ((18, 17, 19),(18, 17, 19), 4 ),
		polygon ((20, 21, 22),(20, 21, 22), 5 ),
		polygon ((22, 21, 23),(22, 21, 23), 5 ),
		polygon ((24, 25, 26),(24, 25, 26), 6 ),
		polygon ((26, 25, 27),(26, 25, 27), 6 ),
		polygon ((28, 29, 30),(28, 29, 30), 7 ),
		polygon ((30, 29, 31),(30, 29, 31), 7 ),
		polygon ((32, 33, 34),(32, 33, 34), 4 ),
		polygon ((34, 33, 35),(34, 33, 35), 4 ),
		polygon ((36, 37, 38),(36, 37, 38), 8 ),
		polygon ((38, 39, 36),(38, 39, 36), 8 ),
		polygon ((40, 41, 42),(40, 41, 42), 9 ),
		polygon ((40, 43),(40, 43), 9 ),
		polygon ((43, 40, 42),(43, 40, 42), 9 ),
		polygon ((40, 41),(40, 41), 9 ),
		polygon ((44, 45, 46),(44, 45, 46), 10 ),
		polygon ((46, 47, 44),(46, 47, 44), 10 ),
		polygon ((48, 49, 50),(48, 49, 50), 1 ),
		polygon ((50, 51, 48),(50, 51, 48), 1 ),
		polygon ((52, 53),(52, 53), 2 ),
		polygon ((53, 52, 54),(53, 52, 54), 2 ),
		polygon ((52, 55, 54),(52, 55, 54), 2 ),
		polygon ((52, 55),(52, 55), 2 ),
		polygon ((56, 57, 58),(56, 57, 58), 8 ),
		polygon ((58, 59, 56),(58, 59, 56), 8 ),
		polygon ((60, 61, 62),(60, 61, 62), 5 ),
		polygon ((62, 61, 63),(62, 61, 63), 5 ),
		polygon ((64, 65, 66),(64, 65, 66), 3 ),
		polygon ((66, 65, 67),(66, 65, 67), 3 ),
		polygon ((68, 69, 70),(68, 69, 70), 5 ),
		polygon ((70, 69, 71),(70, 69, 71), 5 ),
		polygon ((72, 73, 74),(72, 73, 74), 3 ),
		polygon ((74, 73, 75),(74, 73, 75), 3 ),
		polygon ((76, 77, 78),(76, 77, 78), 6 ),
		polygon ((78, 77, 79),(78, 77, 79), 6 ),
		polygon ((80, 81, 82),(80, 81, 82), 11 ),
		polygon ((82, 81, 83),(82, 81, 83), 11 ),
		polygon ((84, 85, 86),(84, 85, 86), 12 ),
		polygon ((86, 85, 87),(86, 85, 87), 12 ),
		polygon ((88, 89, 90),(88, 89, 90), 7 ),
		polygon ((90, 89, 91),(90, 89, 91), 7 ),
		polygon ((92, 93, 94),(92, 93, 94), 12 ),
		polygon ((94, 93, 95),(94, 93, 95), 12 ),
		polygon ((96, 97, 98),(96, 97, 98), 8 ),
		polygon ((98, 99, 96),(98, 99, 96), 8 )
	)
); /* end of polyset 'BG_southeast' */

polyset BG_southwest (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = ON,
	opposite = OFF,
	shader = (streetfd ),
	shader = (concrete ),
	shader = (yard ),
	shader = (house4 ),
	shader = (house2 ),
	shader = (house6 ),
	shader = (house5 ),
	shader = (house1 ),
	shader = (street ),
	shader = (yardfd ),
	shader = (sidewalk7 ),
	shader = (housefd ),
	shader = (house3 ),
	casts_shadow = TRUE,
	vertices = ((cv((-26.473462, 0.0, 177.434647), 1)),
			(cv((-26.470964, 0.0, 143.077944), 1)),
			(cv((-12.683143, 0.0, 143.077944), 1)),
			(cv((-12.685641, 0.0, 177.434647), 1)),
			(cv((-28.438695, 0.0, 98.5748), 1)),
			(cv((-26.467284, 0.0, 98.5748), 1)),
			(cv((-26.468467, 0.0, 143.077944), 1)),
			(cv((-28.439878, 0.0, 143.077944), 1)),
			(cv((-38.453435, 0.0, 143.077946), 1)),
			(cv((-28.438695, 0.0, 143.077946), 1)),
			(cv((-28.438695, 0.0, 98.574802), 1)),
			(cv((-38.453435, 0.0, 98.574802), 1)),
			(cv((-37.389034, 0.0, 86.084352), 1)),
			(cv((-37.389034, 9.244611, 79.560348), 1)),
			(cv((-37.389034, 0.0, 79.560348), 1)),
			(cv((-37.389034, 9.244611, 86.084352), 1)),
			(cv((-37.389034, -0.117144, 73.688111), 1)),
			(cv((-37.389034, 9.666098, 67.399254), 1)),
			(cv((-37.389034, -0.117144, 67.399254), 1)),
			(cv((-37.389034, 9.666098, 73.688111), 1)),
			(cv((-37.510326, -0.117144, 62.626613), 1)),
			(cv((-37.510326, 9.666098, 55.722492), 1)),
			(cv((-37.510326, -0.117144, 55.722492), 1)),
			(cv((-37.510326, 9.666098, 62.626613), 1)),
			(cv((-37.874203, -0.117144, 68.146626), 1)),
			(cv((-37.874203, 9.666098, 61.652681), 1)),
			(cv((-37.874203, -0.117144, 61.652681), 1)),
			(cv((-37.874203, 9.666098, 68.146626), 1)),
			(cv((-37.874203, 0.0, 80.217921), 1)),
			(cv((-37.874203, 9.783242, 73.3138), 1)),
			(cv((-37.874203, 0.0, 73.3138), 1)),
			(cv((-37.874203, 9.783242, 80.217921), 1)),
			(cv((-37.874203, -0.117144, 91.826977), 1)),
			(cv((-37.874203, 9.666098, 85.538121), 1)),
			(cv((-37.874203, -0.117144, 85.538121), 1)),
			(cv((-37.874203, 9.666098, 91.826977), 1)),
			(cv((-26.472279, 0.0, 143.077944), 1)),
			(cv((-26.469781, 0.0, 98.5748), 1)),
			(cv((-12.68196, 0.0, 98.5748), 1)),
			(cv((-12.684458, 0.0, 143.077944), 1)),
			(cv((-28.438695, 0.0, 143.077946), 1)),
			(cv((-28.438695, 0.0, 177.434641), 1)),
			(cv((-38.453435, 0.0, 177.434641), 1)),
			(cv((-38.453435, 0.0, 143.077946), 1)),
			(cv((-28.438695, 0.0, 143.077944), 1)),
			(cv((-26.467284, 0.0, 143.077944), 1)),
			(cv((-26.468467, 0.0, 177.434647), 1)),
			(cv((-28.439877, 0.0, 177.434647), 1)),
			(cv((-28.438695, 0.0, 59.14488), 1)),
			(cv((-26.467284, 0.0, 59.14488), 1)),
			(cv((-26.468467, 0.0, 98.5748), 1)),
			(cv((-28.439878, 0.0, 98.5748), 1)),
			(cv((-38.453435, 0.0, 98.574802), 1)),
			(cv((-38.453435, 0.0, 59.14488), 1)),
			(cv((-28.438695, 0.0, 59.14488), 1)),
			(cv((-28.438695, 0.0, 98.574802), 1)),
			(cv((-26.472279, 0.0, 98.5748), 1)),
			(cv((-26.469781, 0.0, 59.14488), 1)),
			(cv((-12.68196, 0.0, 59.14488), 1)),
			(cv((-12.684458, 0.0, 98.5748), 1)),
			(cv((-37.510326, -0.117144, 137.058559), 1)),
			(cv((-37.510326, 9.666098, 130.154438), 1)),
			(cv((-37.510326, -0.117144, 130.154438), 1)),
			(cv((-37.510326, 9.666098, 137.058559), 1)),
			(cv((-37.874203, -0.117144, 142.578572), 1)),
			(cv((-37.874203, 9.666098, 136.084627), 1)),
			(cv((-37.874203, -0.117144, 136.084627), 1)),
			(cv((-37.874203, 9.666098, 142.578572), 1)),
			(cv((-37.631619, -0.117144, 111.476093), 1)),
			(cv((-37.631619, 9.666098, 104.571973), 1)),
			(cv((-37.631619, -0.117144, 104.571973), 1)),
			(cv((-37.631619, 9.666098, 111.476093), 1)),
			(cv((-37.874203, -0.117144, 130.897373), 1)),
			(cv((-37.874203, 9.127467, 124.373368), 1)),
			(cv((-37.874203, -0.117144, 124.373368), 1)),
			(cv((-37.874203, 9.127467, 130.897373), 1)),
			(cv((-37.874203, -0.117144, 105.341224), 1)),
			(cv((-37.874203, 9.666098, 98.84728), 1)),
			(cv((-37.874203, -0.117144, 98.84728), 1)),
			(cv((-37.874203, 9.666098, 105.341224), 1)),
			(cv((-37.389034, -0.117144, 176.757716), 1)),
			(cv((-37.389034, 9.666098, 141.8312), 1)),
			(cv((-37.389034, -0.117144, 141.8312), 1)),
			(cv((-37.389034, 9.666098, 176.757716), 1)),
			(cv((-37.267742, -0.117144, 99.71523), 1)),
			(cv((-37.267742, 6.613409, 91.30713), 1)),
			(cv((-37.267742, -0.117144, 91.30713), 1)),
			(cv((-37.267742, 6.613409, 99.71523), 1)),
			(cv((-37.874203, -0.175457, 117.163896), 1)),
			(cv((-37.874203, 9.607786, 110.259775), 1)),
			(cv((-37.874203, -0.175457, 110.259775), 1)),
			(cv((-37.874203, 9.607786, 117.163896), 1)),
			(cv((-37.510326, -0.117144, 124.889775), 1)),
			(cv((-37.510326, 6.613409, 116.481675), 1)),
			(cv((-37.510326, -0.117144, 116.481675), 1)),
			(cv((-37.510326, 6.613409, 124.889775), 1)),
			(cv((-11.728812, -0.146389, 59.14488), 1)),
			(cv((-11.729171, -0.146389, 176.078), 1)),
			(cv((-13.711406, -0.146389, 176.078001), 1)),
			(cv((-13.711047, -0.146389, 59.144874), 1))	),
	texture_vertices = (
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 19.000000, 0.000000 ),
			st( 19.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 5.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 5.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 19.000000, 0.000000 ),
			st( 19.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 5.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 5.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 5.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.110000 ),
			st( 5.000000, 0.110000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 1 ),
		polygon ((6, 7, 4),(6, 7, 4), 1 ),
		polygon ((8, 9),(8, 9), 2 ),
		polygon ((10, 8, 11),(10, 8, 11), 2 ),
		polygon ((10, 9, 8),(10, 9, 8), 2 ),
		polygon ((8, 11),(8, 11), 2 ),
		polygon ((12, 13, 14),(12, 13, 14), 3 ),
		polygon ((15, 13, 12),(15, 13, 12), 3 ),
		polygon ((16, 17, 18),(16, 17, 18), 4 ),
		polygon ((19, 17, 16),(19, 17, 16), 4 ),
		polygon ((20, 21, 22),(20, 21, 22), 5 ),
		polygon ((23, 21, 20),(23, 21, 20), 5 ),
		polygon ((24, 25, 26),(24, 25, 26), 6 ),
		polygon ((27, 25, 24),(27, 25, 24), 6 ),
		polygon ((28, 29, 30),(28, 29, 30), 7 ),
		polygon ((31, 29, 28),(31, 29, 28), 7 ),
		polygon ((32, 33, 34),(32, 33, 34), 4 ),
		polygon ((35, 33, 32),(35, 33, 32), 4 ),
		polygon ((36, 37, 38),(36, 37, 38), 8 ),
		polygon ((38, 39, 36),(38, 39, 36), 8 ),
		polygon ((40, 41, 42),(40, 41, 42), 9 ),
		polygon ((42, 43),(42, 43), 9 ),
		polygon ((40, 42, 43),(40, 42, 43), 9 ),
		polygon ((42, 41),(42, 41), 9 ),
		polygon ((44, 45, 46),(44, 45, 46), 10 ),
		polygon ((46, 47, 44),(46, 47, 44), 10 ),
		polygon ((48, 49, 50),(48, 49, 50), 1 ),
		polygon ((50, 51, 48),(50, 51, 48), 1 ),
		polygon ((52, 53),(52, 53), 2 ),
		polygon ((54, 52, 53),(54, 52, 53), 2 ),
		polygon ((54, 55, 52),(54, 55, 52), 2 ),
		polygon ((52, 55),(52, 55), 2 ),
		polygon ((56, 57, 58),(56, 57, 58), 8 ),
		polygon ((58, 59, 56),(58, 59, 56), 8 ),
		polygon ((60, 61, 62),(60, 61, 62), 5 ),
		polygon ((63, 61, 60),(63, 61, 60), 5 ),
		polygon ((64, 65, 66),(64, 65, 66), 3 ),
		polygon ((67, 65, 64),(67, 65, 64), 3 ),
		polygon ((68, 69, 70),(68, 69, 70), 5 ),
		polygon ((71, 69, 68),(71, 69, 68), 5 ),
		polygon ((72, 73, 74),(72, 73, 74), 3 ),
		polygon ((75, 73, 72),(75, 73, 72), 3 ),
		polygon ((76, 77, 78),(76, 77, 78), 6 ),
		polygon ((79, 77, 76),(79, 77, 76), 6 ),
		polygon ((80, 81, 82),(80, 81, 82), 11 ),
		polygon ((83, 81, 80),(83, 81, 80), 11 ),
		polygon ((84, 85, 86),(84, 85, 86), 12 ),
		polygon ((87, 85, 84),(87, 85, 84), 12 ),
		polygon ((88, 89, 90),(88, 89, 90), 7 ),
		polygon ((91, 89, 88),(91, 89, 88), 7 ),
		polygon ((92, 93, 94),(92, 93, 94), 12 ),
		polygon ((95, 93, 92),(95, 93, 92), 12 ),
		polygon ((96, 97, 98),(96, 97, 98), 8 ),
		polygon ((98, 99, 96),(98, 99, 96), 8 )
	)
); /* end of polyset 'BG_southwest' */

polyset park_sidewalk (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = ON,
	opposite = OFF,
	shader = (concrete ),
	shader = (concrete2 ),
	shader = (sidewalk3 ),
	shader = (sidewalk6 ),
	shader = (sidewalk4 ),
	shader = (sidewalk5 ),
	casts_shadow = TRUE,
	vertices = ((cv((-9.315167, -0.039622, -7.931321), 1)),
			(cv((-9.930478, -0.039622, -7.931321), 1)),
			(cv((-9.930478, -0.039622, -14.842626), 1)),
			(cv((-9.315167, -0.039622, -14.842626), 1)),
			(cv((-10.428607, -0.039622, 3.94637), 1)),
			(cv((-11.043918, -0.039622, 3.94637), 1)),
			(cv((-11.043918, -0.039622, -3.741402), 1)),
			(cv((-10.428607, -0.039622, -3.741402), 1)),
			(cv((11.015416, -0.039622, 3.94637), 1)),
			(cv((10.400105, -0.039622, 3.94637), 1)),
			(cv((10.400105, -0.039622, -3.741402), 1)),
			(cv((11.015416, -0.039622, -3.741402), 1)),
			(cv((10.438077, -0.039622, -7.513223), 1)),
			(cv((9.822766, -0.039622, -7.513223), 1)),
			(cv((9.822766, -0.039622, -14.842626), 1)),
			(cv((10.438077, -0.039622, -14.842626), 1)),
			(cv((1.777991, -0.039622, -7.513223), 1)),
			(cv((1.16268, -0.039622, -7.513223), 1)),
			(cv((1.16268, -0.039622, -14.842626), 1)),
			(cv((1.777991, -0.039622, -14.842626), 1)),
			(cv((-9.315167, -0.039622, 13.805283), 1)),
			(cv((-9.930478, -0.039622, 13.805283), 1)),
			(cv((-9.930478, -0.039622, 8.267729), 1)),
			(cv((-9.315167, -0.039622, 8.267729), 1)),
			(cv((10.438077, -0.039622, 14.223381), 1)),
			(cv((9.822766, -0.039622, 14.223381), 1)),
			(cv((9.822766, -0.039622, 8.267729), 1)),
			(cv((10.438077, -0.039622, 8.267729), 1)),
			(cv((1.777991, -0.039622, 14.223381), 1)),
			(cv((1.16268, -0.039622, 14.223381), 1)),
			(cv((1.16268, -0.039622, 8.267729), 1)),
			(cv((1.777991, -0.039622, 8.267729), 1)),
			(cv((-0.902512, -0.039622, -7.513223), 1)),
			(cv((-1.517823, -0.039622, -7.513223), 1)),
			(cv((-1.517823, -0.039622, -14.842626), 1)),
			(cv((-0.902512, -0.039622, -14.842626), 1)),
			(cv((-0.902512, -0.039622, 14.223381), 1)),
			(cv((-1.517823, -0.039622, 14.223381), 1)),
			(cv((-1.517823, -0.039622, 8.267729), 1)),
			(cv((-0.902512, -0.039622, 8.267729), 1)),
			(cv((1.269156, 0.0, -5.857167), 1)),
			(cv((-1.138145, 0.0, -5.857167), 1)),
			(cv((-1.138145, 0.0, -8.277084), 1)),
			(cv((1.269156, 0.0, -8.277084), 1)),
			(cv((-1.25402, 0.0, 5.865443), 1)),
			(cv((1.470654, 0.0, 5.865443), 1)),
			(cv((1.470654, 0.0, 8.51534), 1)),
			(cv((-1.25402, 0.0, 8.51534), 1)),
			(cv((1.470654, 0.0, 22.502793), 1)),
			(cv((10.143068, 0.0, 22.502792), 1)),
			(cv((10.143068, 0.0, 24.474204), 1)),
			(cv((1.470654, 0.0, 24.474204), 1)),
			(cv((-9.60057, 0.0, -22.816772), 1)),
			(cv((-12.67828, 0.0, -22.816772), 1)),
			(cv((-12.67828, 0.0, -24.788183), 1)),
			(cv((-9.60057, 0.0, -24.788183), 1)),
			(cv((-1.25402, 0.0, 22.502792), 1)),
			(cv((-1.25402, 0.0, 24.474203), 1)),
			(cv((1.269156, 0.0, -22.816772), 1)),
			(cv((-1.138145, 0.0, -22.816772), 1)),
			(cv((-1.138145, 0.0, -24.788183), 1)),
			(cv((1.269156, 0.0, -24.788183), 1)),
			(cv((-9.60057, 0.0, -8.277084), 1)),
			(cv((-12.67828, 0.0, -8.277084), 1)),
			(cv((-12.679462, 0.015005, 3.373955), 1)),
			(cv((-10.708052, 0.015005, 3.373955), 1)),
			(cv((-9.60057, 0.015005, 5.864588), 1)),
			(cv((-12.679462, 0.015005, 5.864588), 1)),
			(cv((-12.67828, 0.0, -3.366534), 1)),
			(cv((-10.708052, 0.015005, -3.366534), 1)),
			(cv((12.67828, 0.0, 22.502792), 1)),
			(cv((12.67828, 0.0, 24.474203), 1)),
			(cv((12.679462, 0.0, -22.816772), 1)),
			(cv((10.143068, 0.0, -22.816772), 1)),
			(cv((10.143068, 0.0, -24.788183), 1)),
			(cv((12.679462, 0.0, -24.788183), 1)),
			(cv((-9.60057, 0.0, 8.515339), 1)),
			(cv((-12.679462, 0.0, 8.515339), 1)),
			(cv((-9.60057, 0.0, 22.502793), 1)),
			(cv((-9.60057, 0.0, 24.474204), 1)),
			(cv((-12.67828, 0.0, -5.857167), 1)),
			(cv((-9.60057, 0.0, -5.857167), 1)),
			(cv((-12.679462, 0.0, 22.502793), 1)),
			(cv((12.67828, 0.0, 3.373955), 1)),
			(cv((10.708052, 0.015005, 3.373955), 1)),
			(cv((10.708052, 0.015005, -3.366534), 1)),
			(cv((12.67828, 0.0, -3.366534), 1)),
			(cv((10.143068, 0.0, -5.857167), 1)),
			(cv((10.143068, 0.0, -8.277084), 1)),
			(cv((12.67828, 0.0, 5.865443), 1)),
			(cv((10.143068, 0.0, 5.865443), 1)),
			(cv((10.143068, 0.0, 8.515339), 1)),
			(cv((-12.679462, 0.0, 24.474203), 1)),
			(cv((12.679462, 0.015005, -5.857167), 1)),
			(cv((1.470654, 0.0, 13.889828), 1)),
			(cv((-1.253526, 0.0, 13.889828), 1)),
			(cv((-1.25649, 0.0, 20.439296), 1)),
			(cv((1.469666, 0.0, 20.439296), 1)),
			(cv((-1.139626, 0.0, -14.366421), 1)),
			(cv((1.268662, 0.0, -14.366421), 1)),
			(cv((-1.141108, 0.0, -16.396179), 1)),
			(cv((1.267181, 0.0, -16.396179), 1)),
			(cv((10.143368, -0.015005, 15.919587), 1)),
			(cv((12.679762, -0.015005, 15.919587), 1)),
			(cv((12.675317, -0.015005, 20.310422), 1)),
			(cv((10.143368, -0.015005, 20.310422), 1)),
			(cv((-1.136663, 0.0, -20.787014), 1)),
			(cv((1.270637, 0.0, -20.787014), 1)),
			(cv((12.67828, -0.015005, 8.515339), 1)),
			(cv((12.67828, -0.015005, 13.889828), 1)),
			(cv((10.141886, -0.015005, 13.889828), 1)),
			(cv((1.469666, 0.0, 15.960328), 1)),
			(cv((-1.253033, 0.0, 15.960328), 1)),
			(cv((12.679462, 0.0, -8.277084), 1)),
			(cv((10.143068, 0.0, -14.366421), 1)),
			(cv((12.679462, 0.0, -14.366421), 1)),
			(cv((12.679462, 0.0, -16.396179), 1)),
			(cv((10.143068, 0.0, -16.396179), 1)),
			(cv((10.147512, 0.0, -20.787014), 1)),
			(cv((12.679462, 0.0, -20.787014), 1)),
			(cv((-0.567084, -0.055103, -13.88424), 1)),
			(cv((-1.661126, -0.055103, -13.88424), 1)),
			(cv((-1.656681, -0.055103, -23.413132), 1)),
			(cv((-0.563627, -0.055103, -23.413132), 1)),
			(cv((4.93238, -0.055103, -25.292982), 1)),
			(cv((4.93238, -0.055103, -24.45678), 1)),
			(cv((-4.49896, -0.055103, -24.460177), 1)),
			(cv((-4.49896, -0.055103, -25.295624), 1)),
			(cv((4.93238, -0.055103, 24.095397), 1)),
			(cv((4.93238, -0.055103, 24.9316), 1)),
			(cv((-4.49896, -0.055103, 24.928203), 1)),
			(cv((-4.49896, -0.055103, 24.092755), 1)),
			(cv((-0.567084, -0.055103, 22.815614), 1)),
			(cv((-1.661126, -0.055103, 22.815614), 1)),
			(cv((-1.656681, -0.055103, 13.286722), 1)),
			(cv((-0.563627, -0.055103, 13.286722), 1)),
			(cv((1.947127, -0.055103, 22.815614), 1)),
			(cv((0.853085, -0.055103, 22.815614), 1)),
			(cv((0.857529, -0.055103, 13.286722), 1)),
			(cv((1.950583, -0.055103, 13.286722), 1)),
			(cv((1.947127, -0.055103, -13.88424), 1)),
			(cv((0.853085, -0.055103, -13.88424), 1)),
			(cv((0.857529, -0.055103, -23.413132), 1)),
			(cv((1.950583, -0.055103, -23.413132), 1))	),
	texture_vertices = (
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 5.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 5.000000, 1.000000 ),
			st( 5.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 5.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.001676, 0.000000 ),
			st( 5.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 5.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 5.000000, 1.000000 ),
			st( 5.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 5.000000, 0.000000 ),
			st( 5.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 5.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 5.000000, 1.000000 ),
			st( 5.000000, 0.000000 ),
			st( 5.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 5.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 3.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 3.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.998324, 0.000000 ),
			st( 0.998324, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 5.000000, 0.000000 ),
			st( 5.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 5.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 5.000000, 0.000000 ),
			st( 5.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 5.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 5.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 3.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 3.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 5.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 5.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 5.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 5.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 2.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 2.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 2.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 2.000000 ),
			st( 0.000000, 2.000000 ),
			st( 0.000000, 3.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 3.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.001676, 0.000000 ),
			st( 0.010209, 0.994360 ),
			st( 0.998324, 0.000000 ),
			st( 0.998324, 0.994359 ),
			st( 0.998324, 0.994359 ),
			st( 0.994057, 1.994360 ),
			st( 0.998324, 0.994359 ),
			st( -0.002590, 1.994360 ),
			st( 0.010209, 0.994360 ),
			st( 0.010209, 0.994360 ),
			st( 0.000000, 2.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 2.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 3.000000 ),
			st( 0.998324, 0.000000 ),
			st( 0.000000, 3.000000 ),
			st( 0.001676, 0.000000 ),
			st( 0.001676, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 3.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 3.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 2.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 2.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.900000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.900000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.900000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.900000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.900000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.900000, 1.000000 ),
			st( 1.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 0 ),
		polygon ((6, 7, 4),(6, 7, 4), 0 ),
		polygon ((8, 9, 10),(8, 9, 10), 0 ),
		polygon ((10, 11, 8),(10, 11, 8), 0 ),
		polygon ((12, 13, 14),(12, 13, 14), 0 ),
		polygon ((14, 15, 12),(14, 15, 12), 0 ),
		polygon ((16, 17, 18),(16, 17, 18), 0 ),
		polygon ((18, 19, 16),(18, 19, 16), 0 ),
		polygon ((20, 21, 22),(20, 21, 22), 0 ),
		polygon ((22, 23, 20),(22, 23, 20), 0 ),
		polygon ((24, 25, 26),(24, 25, 26), 0 ),
		polygon ((26, 27, 24),(26, 27, 24), 0 ),
		polygon ((28, 29, 30),(28, 29, 30), 0 ),
		polygon ((30, 31, 28),(30, 31, 28), 0 ),
		polygon ((32, 33, 34),(32, 33, 34), 0 ),
		polygon ((34, 35, 32),(34, 35, 32), 0 ),
		polygon ((36, 37, 38),(36, 37, 38), 0 ),
		polygon ((38, 39, 36),(38, 39, 36), 0 ),
		polygon ((40, 41, 42),(40, 42, 45), 1 ),
		polygon ((42, 43, 40),(45, 48, 40), 1 ),
		polygon ((44, 45, 46),(53, 55, 58), 1 ),
		polygon ((46, 47, 44),(58, 61, 53), 1 ),
		polygon ((48, 49, 50),(66, 70, 74), 0 ),
		polygon ((50, 51, 48),(74, 76, 66), 0 ),
		polygon ((52, 53, 54),(79, 83, 86), 0 ),
		polygon ((54, 55, 52),(87, 88, 80), 0 ),
		polygon ((56, 48, 51),(91, 67, 77), 0 ),
		polygon ((51, 57, 56),(78, 95, 92), 0 ),
		polygon ((58, 59, 60),(98, 102, 107), 0 ),
		polygon ((60, 61, 58),(108, 110, 99), 0 ),
		polygon ((62, 63, 53),(113, 117, 84), 0 ),
		polygon ((53, 52, 62),(85, 81, 113), 0 ),
		polygon ((64, 65, 66),(120, 123, 126), 0 ),
		polygon ((66, 67, 64),(127, 131, 121), 0 ),
		polygon ((59, 52, 55),(103, 82, 89), 0 ),
		polygon ((55, 60, 59),(90, 109, 104), 0 ),
		polygon ((65, 64, 68),(124, 122, 134), 0 ),
		polygon ((68, 69, 65),(134, 136, 125), 0 ),
		polygon ((49, 70, 71),(71, 139, 142), 0 ),
		polygon ((71, 50, 49),(143, 75, 72), 0 ),
		polygon ((72, 73, 74),(144, 147, 152), 0 ),
		polygon ((74, 75, 72),(153, 155, 145), 0 ),
		polygon ((67, 66, 76),(132, 128, 156), 0 ),
		polygon ((76, 77, 67),(157, 160, 133), 0 ),
		polygon ((78, 56, 57),(163, 93, 96), 0 ),
		polygon ((57, 79, 78),(97, 167, 163), 0 ),
		polygon ((69, 68, 80),(137, 135, 170), 0 ),
		polygon ((80, 81, 69),(171, 173, 138), 0 ),
		polygon ((77, 76, 78),(161, 158, 164), 0 ),
		polygon ((78, 82, 77),(165, 177, 162), 0 ),
		polygon ((83, 84, 85),(180, 182, 185), 0 ),
		polygon ((85, 86, 83),(185, 187, 180), 0 ),
		polygon ((41, 81, 62),(43, 174, 114), 0 ),
		polygon ((62, 42, 41),(115, 46, 44), 0 ),
		polygon ((73, 58, 61),(148, 100, 111), 0 ),
		polygon ((61, 74, 73),(112, 154, 149), 0 ),
		polygon ((87, 40, 43),(189, 41, 49), 0 ),
		polygon ((43, 88, 87),(50, 194, 189), 0 ),
		polygon ((66, 44, 47),(129, 54, 62), 0 ),
		polygon ((47, 76, 66),(63, 159, 130), 0 ),
		polygon ((81, 80, 63),(175, 172, 118), 0 ),
		polygon ((63, 62, 81),(119, 116, 176), 0 ),
		polygon ((89, 90, 84),(197, 201, 183), 0 ),
		polygon ((84, 83, 89),(184, 181, 198), 0 ),
		polygon ((45, 90, 91),(56, 202, 204), 0 ),
		polygon ((91, 46, 45),(204, 59, 57), 0 ),
		polygon ((82, 78, 79),(178, 166, 168), 0 ),
		polygon ((79, 92, 82),(169, 209, 179), 0 ),
		polygon ((86, 85, 87),(187, 186, 190), 0 ),
		polygon ((87, 93, 86),(191, 210, 188), 0 ),
		polygon ((47, 46, 94),(64, 60, 212), 0 ),
		polygon ((94, 95, 47),(212, 214, 65), 0 ),
		polygon ((96, 97, 48),(217, 219, 68), 2 ),
		polygon ((48, 56, 96),(69, 94, 217), 2 ),
		polygon ((43, 42, 98),(51, 47, 222), 0 ),
		polygon ((98, 99, 43),(222, 224, 52), 0 ),
		polygon ((99, 98, 100),(225, 223, 227), 2 ),
		polygon ((100, 101, 99),(227, 229, 226), 2 ),
		polygon ((102, 103, 104),(232, 234, 237), 3 ),
		polygon ((102, 104, 105),(232, 237, 239), 3 ),
		polygon ((101, 100, 106),(230, 228, 242), 4 ),
		polygon ((101, 106, 107),(231, 242, 244), 4 ),
		polygon ((91, 108, 109),(205, 247, 249), 0 ),
		polygon ((109, 110, 91),(249, 251, 206), 0 ),
		polygon ((95, 94, 111),(215, 213, 254), 2 ),
		polygon ((111, 112, 95),(254, 256, 216), 2 ),
		polygon ((113, 88, 114),(259, 195, 262), 0 ),
		polygon ((114, 115, 113),(262, 264, 259), 0 ),
		polygon ((107, 106, 59),(245, 243, 105), 2 ),
		polygon ((59, 58, 107),(106, 101, 246), 2 ),
		polygon ((113, 87, 88),(260, 192, 196), 0 ),
		polygon ((113, 93, 87),(261, 211, 193), 0 ),
		polygon ((116, 117, 118),(267, 269, 272), 3 ),
		polygon ((116, 118, 119),(267, 272, 274), 3 ),
		polygon ((112, 111, 97),(257, 255, 220), 4 ),
		polygon ((112, 97, 96),(258, 221, 218), 4 ),
		polygon ((110, 109, 103),(252, 250, 235), 5 ),
		polygon ((103, 102, 110),(236, 233, 253), 5 ),
		polygon ((115, 114, 117),(265, 263, 270), 5 ),
		polygon ((117, 116, 115),(271, 268, 266), 5 ),
		polygon ((105, 104, 70),(240, 238, 140), 5 ),
		polygon ((70, 49, 105),(141, 73, 241), 5 ),
		polygon ((91, 89, 108),(207, 199, 248), 0 ),
		polygon ((91, 90, 89),(208, 203, 200), 0 ),
		polygon ((119, 118, 73),(275, 273, 150), 5 ),
		polygon ((73, 72, 119),(151, 146, 276), 5 ),
		polygon ((120, 121, 122),(277, 278, 279), 4 ),
		polygon ((120, 122, 123),(277, 279, 280), 4 ),
		polygon ((124, 125, 126),(281, 282, 283), 4 ),
		polygon ((124, 126, 127),(281, 283, 284), 4 ),
		polygon ((128, 129, 130),(285, 286, 287), 4 ),
		polygon ((128, 130, 131),(285, 287, 288), 4 ),
		polygon ((132, 133, 134),(289, 290, 291), 4 ),
		polygon ((132, 134, 135),(289, 291, 292), 4 ),
		polygon ((136, 137, 138),(293, 294, 295), 4 ),
		polygon ((136, 138, 139),(293, 295, 296), 4 ),
		polygon ((140, 141, 142),(297, 298, 299), 4 ),
		polygon ((140, 142, 143),(297, 299, 300), 4 )
	)
); /* end of polyset 'park_sidewalk' */

polyset street_northeast (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = ON,
	opposite = OFF,
	shader = (street ),
	casts_shadow = TRUE,
	vertices = ((cv((26.46978, 0.0, -59.14488), 1)),
			(cv((26.467282, 0.0, -24.788184), 1)),
			(cv((12.679462, 0.0, -24.788184), 1)),
			(cv((12.68196, 0.0, -59.14488), 1)),
			(cv((13.581415, -0.121657, -59.14488), 1)),
			(cv((13.581056, -0.121657, -24.788184), 1)),
			(cv((11.598821, -0.121657, -24.788183), 1)),
			(cv((11.59918, -0.121657, -59.144882), 1))	),
	texture_vertices = (
			st( 5.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 5.000000, 0.000000 ),
			st( 5.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.110000 ),
			st( 5.000000, 0.110000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 0 ),
		polygon ((6, 7, 4),(6, 7, 4), 0 )
	)
); /* end of polyset 'street_northeast' */

polyset street_northwest (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = ON,
	opposite = OFF,
	shader = (street ),
	casts_shadow = TRUE,
	vertices = ((cv((-12.675782, 0.0, -59.14488), 1)),
			(cv((-12.67828, 0.0, -24.788184), 1)),
			(cv((-26.466101, 0.0, -24.788184), 1)),
			(cv((-26.463603, 0.0, -59.14488), 1)),
			(cv((-11.72714, -0.146389, -59.14488), 1)),
			(cv((-11.727499, -0.146389, -24.788184), 1)),
			(cv((-13.709734, -0.146389, -24.788183), 1)),
			(cv((-13.709375, -0.146389, -59.144882), 1))	),
	texture_vertices = (
			st( 5.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 5.000000, 1.000000 ),
			st( 5.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.110000 ),
			st( 5.000000, 0.110000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 0 ),
		polygon ((6, 7, 4),(6, 7, 4), 0 )
	)
); /* end of polyset 'street_northwest' */

polyset street_southeast (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = ON,
	opposite = OFF,
	shader = (street ),
	casts_shadow = TRUE,
	vertices = ((cv((26.468598, 0.0, 19.71496), 1)),
			(cv((26.4661, 0.0, 59.14488), 1)),
			(cv((12.678279, 0.0, 59.14488), 1)),
			(cv((12.680777, 0.0, 19.71496), 1)),
			(cv((13.685838, -0.121657, 19.656797), 1)),
			(cv((13.685479, -0.121657, 59.14488), 1)),
			(cv((11.703244, -0.121657, 59.144881), 1)),
			(cv((11.703603, -0.121657, 19.656795), 1))	),
	texture_vertices = (
			st( 5.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 5.000000, 0.000000 ),
			st( 5.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.110000 ),
			st( 5.000000, 0.110000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 0 ),
		polygon ((6, 7, 4),(6, 7, 4), 0 )
	)
); /* end of polyset 'street_southeast' */

polyset street_southwest (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = ON,
	opposite = OFF,
	shader = (street ),
	casts_shadow = TRUE,
	vertices = ((cv((-12.679462, 0.0, 19.71496), 1)),
			(cv((-12.68196, 0.0, 59.14488), 1)),
			(cv((-26.469781, 0.0, 59.14488), 1)),
			(cv((-26.467283, 0.0, 19.71496), 1)),
			(cv((-11.728453, -0.146389, 19.656797), 1)),
			(cv((-11.728812, -0.146389, 59.14488), 1)),
			(cv((-13.711047, -0.146389, 59.144881), 1)),
			(cv((-13.710688, -0.146389, 19.656795), 1))	),
	texture_vertices = (
			st( 5.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 5.000000, 1.000000 ),
			st( 5.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.110000 ),
			st( 5.000000, 0.110000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 0 ),
		polygon ((6, 7, 4),(6, 7, 4), 0 )
	)
); /* end of polyset 'street_southwest' */

polyset street_east (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = ON,
	opposite = OFF,
	shader = (street ),
	casts_shadow = TRUE,
	vertices = ((cv((26.468598, 0.0, -24.788184), 1)),
			(cv((26.4661, 0.0, 19.71496), 1)),
			(cv((12.678279, 0.0, 19.71496), 1)),
			(cv((12.680777, 0.0, -24.788184), 1)),
			(cv((13.581415, -0.121657, -24.753587), 1)),
			(cv((13.581056, -0.121657, 19.71496), 1)),
			(cv((11.598821, -0.121657, 19.714961), 1)),
			(cv((11.59918, -0.121657, -24.753589), 1))	),
	texture_vertices = (
			st( 5.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 5.000000, 0.000000 ),
			st( 5.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.110000 ),
			st( 5.000000, 0.110000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 0 ),
		polygon ((6, 7, 4),(6, 7, 4), 0 )
	)
); /* end of polyset 'street_east' */

polyset street_west (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = ON,
	opposite = OFF,
	shader = (street ),
	casts_shadow = TRUE,
	vertices = ((cv((-12.676965, 0.0, -24.788184), 1)),
			(cv((-12.679463, 0.0, 19.71496), 1)),
			(cv((-26.467283, 0.0, 19.71496), 1)),
			(cv((-26.464785, 0.0, -24.788184), 1)),
			(cv((-11.728453, -0.146389, -24.753587), 1)),
			(cv((-11.728812, -0.146389, 19.71496), 1)),
			(cv((-13.711047, -0.146389, 19.714961), 1)),
			(cv((-13.710688, -0.146389, -24.753589), 1))	),
	texture_vertices = (
			st( 5.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 5.000000, 1.000000 ),
			st( 5.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.110000 ),
			st( 5.000000, 0.110000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 0 ),
		polygon ((6, 7, 4),(6, 7, 4), 0 )
	)
); /* end of polyset 'street_west' */

polyset continent (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = ON,
	opposite = OFF,
	shader = (yard ),
	shader = (yardfd ),
	casts_shadow = TRUE,
	vertices = ((cv((0.0, 0.0, -205.424694), 1)),
			(cv((12.68564, 0.0, -177.434647), 1)),
			(cv((-12.679463, 0.0, -177.434647), 1)),
			(cv((-28.432516, 0.0, -177.434641), 1)),
			(cv((-38.447256, 0.0, -177.434641), 1)),
			(cv((-102.457743, 0.0, -178.630139), 1)),
			(cv((28.438694, 0.0, -177.434641), 1)),
			(cv((38.453434, 0.0, -177.434641), 1)),
			(cv((102.457743, 0.0, -178.630139), 1)),
			(cv((38.453434, 0.0, -143.077946), 1)),
			(cv((176.739599, 0.0, -102.712347), 1)),
			(cv((38.453434, 0.0, -98.574802), 1)),
			(cv((38.453434, 0.0, -59.14488), 1)),
			(cv((204.915486, 0.0, 0.0), 1)),
			(cv((38.449753, 0.0, -24.788185), 1)),
			(cv((38.449753, 0.0, 19.714958), 1)),
			(cv((176.739599, 0.0, 102.712347), 1)),
			(cv((38.449753, 0.0, 59.144878), 1)),
			(cv((38.449753, 0.688147, 98.568795), 1)),
			(cv((38.449753, 1.464834, 143.06516), 1)),
			(cv((102.457743, 0.0, 178.630139), 1)),
			(cv((38.449753, 2.064441, 177.416623), 1)),
			(cv((0.0, 0.0, 205.424694), 1)),
			(cv((26.46978, 2.064441, 177.416629), 1)),
			(cv((12.68196, 2.064441, 177.416629), 1)),
			(cv((-12.685641, 0.0, 177.434647), 1)),
			(cv((-28.438695, 0.0, 177.434641), 1)),
			(cv((-38.453435, 0.0, 177.434641), 1)),
			(cv((-102.457743, 0.0, 178.630139), 1)),
			(cv((-38.453435, 0.0, 143.077946), 1)),
			(cv((-176.739599, 0.0, 102.712347), 1)),
			(cv((-38.453435, 0.0, 98.574802), 1)),
			(cv((-38.453435, 0.0, 59.14488), 1)),
			(cv((-204.915486, 0.0, 0.0), 1)),
			(cv((-38.455932, 0.0, 19.714958), 1)),
			(cv((-38.447256, 0.0, -143.077946), 1)),
			(cv((-176.739599, 0.0, -102.712347), 1)),
			(cv((-38.455932, 0.0, -24.788185), 1)),
			(cv((-38.447256, 0.0, -59.14488), 1)),
			(cv((-38.447256, 0.0, -98.574802), 1)),
			(cv((-12.683143, 0.0, 143.077944), 1)),
			(cv((12.679462, 1.464834, 143.065159), 1)),
			(cv((-12.68196, 0.0, 98.5748), 1)),
			(cv((12.678279, 0.688147, 98.568793), 1)),
			(cv((-12.68196, 0.0, 59.14488), 1)),
			(cv((12.678279, 0.0, 59.144878), 1)),
			(cv((-12.679462, 0.0, 32.0924), 1)),
			(cv((12.680777, 0.0, 32.0924), 1)),
			(cv((-12.676965, 0.0, -143.077944), 1)),
			(cv((12.683142, 0.0, -143.077944), 1)),
			(cv((12.68196, 0.0, -98.5748), 1)),
			(cv((-12.675782, 0.0, -98.5748), 1)),
			(cv((12.68196, 0.0, -59.14488), 1)),
			(cv((-12.675782, 0.0, -59.14488), 1)),
			(cv((12.679462, 0.0, -31.850431), 1)),
			(cv((-12.67828, 0.0, -31.850431), 1))	),
	texture_vertices = (
			st( 0.502238, 0.014389 ),
			st( 0.532517, 0.080718 ),
			st( 0.984749, 0.013034 ),
			st( 0.984749, 0.013034 ),
			st( 0.471974, 0.080718 ),
			st( 0.983935, 0.983174 ),
			st( 0.434373, 0.080718 ),
			st( 0.410470, 0.080718 ),
			st( 0.257684, 0.077885 ),
			st( 0.570118, 0.080718 ),
			st( 0.594022, 0.080718 ),
			st( 0.746792, 0.077885 ),
			st( 0.594022, 0.162135 ),
			st( 0.924094, 0.257791 ),
			st( 0.594022, 0.267596 ),
			st( 0.594022, 0.361035 ),
			st( 0.991346, 0.501193 ),
			st( 0.594013, 0.442451 ),
			st( 0.594013, 0.547912 ),
			st( 0.924094, 0.744594 ),
			st( 0.594013, 0.641351 ),
			st( 0.594013, 0.734775 ),
			st( 0.594013, 0.840220 ),
			st( 0.746792, 0.924500 ),
			st( 0.594013, 0.921624 ),
			st( 0.502238, 0.987996 ),
			st( 0.565418, 0.921624 ),
			st( 0.532509, 0.921624 ),
			st( 0.976208, 0.013529 ),
			st( 0.976208, 0.013529 ),
			st( 0.471959, 0.921667 ),
			st( 0.988187, 0.978070 ),
			st( 0.434359, 0.921667 ),
			st( 0.410455, 0.921667 ),
			st( 0.257684, 0.924500 ),
			st( 0.410455, 0.840250 ),
			st( 0.080383, 0.744594 ),
			st( 0.410455, 0.734789 ),
			st( 0.410455, 0.641351 ),
			st( 0.013130, 0.501193 ),
			st( 0.410449, 0.547912 ),
			st( 0.410470, 0.162135 ),
			st( 0.080383, 0.257791 ),
			st( 0.410449, 0.442451 ),
			st( 0.410470, 0.361035 ),
			st( 0.410470, 0.267596 ),
			st( 0.006934, 0.986899 ),
			st( 0.471965, 0.840250 ),
			st( 0.007743, 0.005449 ),
			st( 0.532503, 0.840220 ),
			st( 0.532503, 0.840220 ),
			st( 0.471968, 0.734789 ),
			st( 0.532500, 0.734775 ),
			st( 0.471968, 0.641351 ),
			st( 0.532500, 0.641351 ),
			st( 0.471974, 0.547912 ),
			st( 0.532506, 0.547912 ),
			st( 0.015482, 0.991266 ),
			st( 0.471980, 0.162135 ),
			st( 0.471980, 0.162135 ),
			st( 0.016284, 0.015486 ),
			st( 0.532511, 0.162135 ),
			st( 0.532509, 0.267596 ),
			st( 0.471983, 0.267596 ),
			st( 0.532509, 0.361035 ),
			st( 0.471983, 0.361035 ),
			st( 0.532503, 0.442451 ),
			st( 0.471977, 0.442451 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 4), 0 ),
		polygon ((2, 3, 0),(4, 6, 0), 0 ),
		polygon ((0, 3, 4),(0, 6, 7), 0 ),
		polygon ((4, 5, 0),(7, 8, 0), 0 ),
		polygon ((0, 6, 1),(0, 9, 1), 0 ),
		polygon ((6, 0, 7),(9, 0, 10), 0 ),
		polygon ((7, 0, 8),(10, 0, 11), 0 ),
		polygon ((8, 9, 7),(11, 12, 10), 0 ),
		polygon ((9, 8, 10),(12, 11, 13), 0 ),
		polygon ((10, 11, 9),(13, 14, 12), 0 ),
		polygon ((11, 10, 12),(14, 13, 15), 0 ),
		polygon ((12, 10, 13),(15, 13, 16), 0 ),
		polygon ((13, 14, 12),(16, 17, 15), 0 ),
		polygon ((14, 13, 15),(17, 16, 18), 0 ),
		polygon ((15, 13, 16),(18, 16, 19), 0 ),
		polygon ((16, 17, 15),(19, 20, 18), 0 ),
		polygon ((17, 16, 18),(20, 19, 21), 0 ),
		polygon ((18, 16, 19),(21, 19, 22), 0 ),
		polygon ((19, 16, 20),(22, 19, 23), 0 ),
		polygon ((20, 21, 19),(23, 24, 22), 0 ),
		polygon ((21, 20, 22),(24, 23, 25), 0 ),
		polygon ((22, 23, 21),(25, 26, 24), 0 ),
		polygon ((23, 22, 24),(26, 25, 27), 0 ),
		polygon ((24, 22, 25),(27, 25, 30), 0 ),
		polygon ((25, 22, 26),(30, 25, 32), 0 ),
		polygon ((26, 22, 27),(32, 25, 33), 0 ),
		polygon ((27, 22, 28),(33, 25, 34), 0 ),
		polygon ((28, 29, 27),(34, 35, 33), 0 ),
		polygon ((29, 28, 30),(35, 34, 36), 0 ),
		polygon ((30, 31, 29),(36, 37, 35), 0 ),
		polygon ((31, 30, 32),(37, 36, 38), 0 ),
		polygon ((32, 30, 33),(38, 36, 39), 0 ),
		polygon ((33, 34, 32),(39, 40, 38), 0 ),
		polygon ((34, 33, 36),(40, 39, 42), 0 ),
		polygon ((36, 37, 34),(42, 43, 40), 0 ),
		polygon ((37, 36, 38),(43, 42, 44), 0 ),
		polygon ((38, 36, 39),(44, 42, 45), 0 ),
		polygon ((39, 36, 35),(45, 42, 41), 0 ),
		polygon ((35, 36, 5),(41, 42, 8), 0 ),
		polygon ((5, 4, 35),(8, 7, 41), 0 ),
		polygon ((24, 25, 40),(28, 31, 46), 1 ),
		polygon ((40, 41, 24),(46, 48, 29), 1 ),
		polygon ((41, 40, 42),(49, 47, 51), 0 ),
		polygon ((42, 43, 41),(51, 52, 50), 0 ),
		polygon ((43, 42, 44),(52, 51, 53), 0 ),
		polygon ((44, 45, 43),(53, 54, 52), 0 ),
		polygon ((45, 44, 46),(54, 53, 55), 0 ),
		polygon ((46, 47, 45),(55, 56, 54), 0 ),
		polygon ((48, 2, 1),(57, 5, 2), 1 ),
		polygon ((1, 49, 48),(3, 60, 57), 1 ),
		polygon ((48, 49, 50),(58, 61, 62), 0 ),
		polygon ((50, 51, 48),(62, 63, 59), 0 ),
		polygon ((51, 50, 52),(63, 62, 64), 0 ),
		polygon ((52, 53, 51),(64, 65, 63), 0 ),
		polygon ((53, 52, 54),(65, 64, 66), 0 ),
		polygon ((54, 55, 53),(66, 67, 65), 0 )
	)
); /* end of polyset 'continent' */

polyset chimney06 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = ON,
	opposite = OFF,
	shader = (buildinga2 ),
	shader = (buildingb3 ),
	casts_shadow = TRUE,
	vertices = ((cv((8.506604, 8.837607, -29.130624), 1)),
			(cv((8.61483, 4.879981, -29.022398), 1)),
			(cv((7.412221, 4.879981, -29.022398), 1)),
			(cv((7.358991, 8.962578, -28.969169), 1)),
			(cv((7.358991, 9.351927, -28.969169), 1)),
			(cv((8.668059, 9.351927, -28.969169), 1)),
			(cv((8.506604, 8.837607, -30.116781), 1)),
			(cv((8.668059, 8.962578, -30.278237), 1)),
			(cv((7.358991, 8.962578, -30.278237), 1)),
			(cv((7.520446, 8.837607, -30.116781), 1)),
			(cv((8.61483, 4.879981, -30.225007), 1)),
			(cv((7.412221, 4.879981, -30.225007), 1)),
			(cv((8.668059, 9.351927, -30.278237), 1)),
			(cv((7.358991, 9.351927, -30.278237), 1)),
			(cv((8.426721, 9.425051, -30.036899), 1)),
			(cv((7.600329, 9.425051, -30.036899), 1)),
			(cv((8.013525, 8.76758, -29.623703), 1)),
			(cv((8.668059, 8.962578, -28.969169), 1)),
			(cv((7.600329, 9.425051, -29.210507), 1)),
			(cv((8.426721, 9.425051, -29.210507), 1)),
			(cv((8.731457, 0.409812, -30.341634), 1)),
			(cv((8.731457, 0.409812, -28.905771), 1)),
			(cv((7.295594, 0.409812, -30.341634), 1)),
			(cv((7.520446, 8.837607, -29.130624), 1)),
			(cv((7.295594, 0.409812, -28.905771), 1)),
			(cv((-2.483885, 8.837607, -42.176247), 1)),
			(cv((-2.375659, 4.879981, -42.068021), 1)),
			(cv((-3.578269, 4.879981, -42.068021), 1)),
			(cv((-3.631498, 8.962578, -42.014792), 1)),
			(cv((-3.631498, 9.351927, -42.014792), 1)),
			(cv((-2.32243, 9.351927, -42.014792), 1)),
			(cv((-2.483885, 8.837607, -43.162405), 1)),
			(cv((-2.32243, 8.962578, -43.32386), 1)),
			(cv((-3.631498, 8.962578, -43.32386), 1)),
			(cv((-3.470043, 8.837607, -43.162405), 1)),
			(cv((-2.375659, 4.879981, -43.27063), 1)),
			(cv((-3.578269, 4.879981, -43.27063), 1)),
			(cv((-2.32243, 9.351927, -43.32386), 1)),
			(cv((-3.631498, 9.351927, -43.32386), 1)),
			(cv((-2.563768, 9.425051, -43.082522), 1)),
			(cv((-3.39016, 9.425051, -43.082522), 1)),
			(cv((-2.976964, 8.76758, -42.669326), 1)),
			(cv((-2.32243, 8.962578, -42.014792), 1)),
			(cv((-3.39016, 9.425051, -42.25613), 1)),
			(cv((-2.563768, 9.425051, -42.25613), 1)),
			(cv((-2.259032, 0.409812, -43.387257), 1)),
			(cv((-2.259032, 0.409812, -41.951394), 1)),
			(cv((-3.694896, 0.409812, -43.387257), 1)),
			(cv((-3.470043, 8.837607, -42.176247), 1)),
			(cv((-3.694896, 0.409812, -41.951394), 1))	),
	texture_vertices = (
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.140000 ),
			st( 0.590000, 0.140000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.860000 ),
			st( 0.310000, 0.140000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.320000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.310000, 0.140000 ),
			st( 0.590000, 0.140000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.860000 ),
			st( 0.590000, 0.140000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.860000 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.839556, 0.971449 ),
			st( 0.590000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.600000, 0.970000 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.600000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.600000, 0.140000 ),
			st( 0.600000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.600000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.140000 ),
			st( 0.590000, 0.140000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.860000 ),
			st( 0.310000, 0.140000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.320000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.310000, 0.140000 ),
			st( 0.590000, 0.140000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.860000 ),
			st( 0.590000, 0.140000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.860000 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.839556, 0.971449 ),
			st( 0.590000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.600000, 0.970000 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.600000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.600000, 0.140000 ),
			st( 0.600000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.600000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 6, 12), 0 ),
		polygon ((3, 4, 5),(18, 23, 27), 0 ),
		polygon ((6, 7, 8),(32, 36, 40), 0 ),
		polygon ((8, 9, 6),(40, 44, 32), 0 ),
		polygon ((10, 6, 9),(48, 32, 44), 0 ),
		polygon ((9, 11, 10),(44, 53, 48), 0 ),
		polygon ((7, 12, 13),(36, 59, 63), 0 ),
		polygon ((13, 8, 7),(63, 40, 36), 0 ),
		polygon ((12, 14, 15),(59, 67, 72), 0 ),
		polygon ((15, 13, 12),(72, 63, 59), 0 ),
		polygon ((15, 14, 16),(73, 68, 76), 1 ),
		polygon ((5, 17, 3),(27, 77, 18), 0 ),
		polygon ((4, 18, 19),(23, 83, 88), 0 ),
		polygon ((0, 17, 7),(1, 78, 37), 0 ),
		polygon ((7, 6, 0),(38, 33, 2), 0 ),
		polygon ((1, 0, 6),(7, 3, 34), 0 ),
		polygon ((6, 10, 1),(35, 49, 8), 0 ),
		polygon ((17, 5, 12),(79, 28, 60), 0 ),
		polygon ((12, 7, 17),(61, 39, 80), 0 ),
		polygon ((5, 19, 14),(29, 89, 69), 0 ),
		polygon ((14, 12, 5),(70, 62, 30), 0 ),
		polygon ((14, 19, 16),(71, 90, 76), 1 ),
		polygon ((20, 21, 10),(93, 96, 50), 0 ),
		polygon ((10, 21, 1),(51, 96, 9), 0 ),
		polygon ((22, 20, 11),(98, 94, 54), 0 ),
		polygon ((11, 20, 10),(55, 95, 52), 0 ),
		polygon ((19, 5, 4),(91, 31, 23), 0 ),
		polygon ((19, 18, 16),(92, 84, 76), 1 ),
		polygon ((9, 8, 3),(45, 41, 19), 0 ),
		polygon ((3, 23, 9),(20, 101, 46), 0 ),
		polygon ((11, 9, 23),(56, 47, 101), 0 ),
		polygon ((23, 2, 11),(101, 13, 57), 0 ),
		polygon ((8, 13, 4),(42, 64, 24), 0 ),
		polygon ((4, 3, 8),(25, 21, 43), 0 ),
		polygon ((13, 15, 18),(65, 74, 85), 0 ),
		polygon ((18, 4, 13),(86, 26, 66), 0 ),
		polygon ((18, 15, 16),(87, 75, 76), 1 ),
		polygon ((24, 22, 2),(105, 99, 14), 0 ),
		polygon ((2, 22, 11),(15, 100, 58), 0 ),
		polygon ((21, 24, 1),(97, 106, 10), 0 ),
		polygon ((1, 24, 2),(11, 107, 16), 0 ),
		polygon ((23, 3, 17),(102, 22, 81), 0 ),
		polygon ((17, 0, 23),(82, 4, 103), 0 ),
		polygon ((2, 23, 0),(17, 104, 5), 0 ),
		polygon ((25, 26, 27),(108, 114, 120), 0 ),
		polygon ((28, 29, 30),(126, 131, 135), 0 ),
		polygon ((31, 32, 33),(140, 144, 148), 0 ),
		polygon ((33, 34, 31),(148, 152, 140), 0 ),
		polygon ((35, 31, 34),(156, 140, 152), 0 ),
		polygon ((34, 36, 35),(152, 161, 156), 0 ),
		polygon ((32, 37, 38),(144, 167, 171), 0 ),
		polygon ((38, 33, 32),(171, 148, 144), 0 ),
		polygon ((37, 39, 40),(167, 175, 180), 0 ),
		polygon ((40, 38, 37),(180, 171, 167), 0 ),
		polygon ((40, 39, 41),(181, 176, 184), 1 ),
		polygon ((30, 42, 28),(135, 185, 126), 0 ),
		polygon ((29, 43, 44),(131, 191, 196), 0 ),
		polygon ((25, 42, 32),(109, 186, 145), 0 ),
		polygon ((32, 31, 25),(146, 141, 110), 0 ),
		polygon ((26, 25, 31),(115, 111, 142), 0 ),
		polygon ((31, 35, 26),(143, 157, 116), 0 ),
		polygon ((42, 30, 37),(187, 136, 168), 0 ),
		polygon ((37, 32, 42),(169, 147, 188), 0 ),
		polygon ((30, 44, 39),(137, 197, 177), 0 ),
		polygon ((39, 37, 30),(178, 170, 138), 0 ),
		polygon ((39, 44, 41),(179, 198, 184), 1 ),
		polygon ((45, 46, 35),(201, 204, 158), 0 ),
		polygon ((35, 46, 26),(159, 204, 117), 0 ),
		polygon ((47, 45, 36),(206, 202, 162), 0 ),
		polygon ((36, 45, 35),(163, 203, 160), 0 ),
		polygon ((44, 30, 29),(199, 139, 131), 0 ),
		polygon ((44, 43, 41),(200, 192, 184), 1 ),
		polygon ((34, 33, 28),(153, 149, 127), 0 ),
		polygon ((28, 48, 34),(128, 209, 154), 0 ),
		polygon ((36, 34, 48),(164, 155, 209), 0 ),
		polygon ((48, 27, 36),(209, 121, 165), 0 ),
		polygon ((33, 38, 29),(150, 172, 132), 0 ),
		polygon ((29, 28, 33),(133, 129, 151), 0 ),
		polygon ((38, 40, 43),(173, 182, 193), 0 ),
		polygon ((43, 29, 38),(194, 134, 174), 0 ),
		polygon ((43, 40, 41),(195, 183, 184), 1 ),
		polygon ((49, 47, 27),(213, 207, 122), 0 ),
		polygon ((27, 47, 36),(123, 208, 166), 0 ),
		polygon ((46, 49, 26),(205, 214, 118), 0 ),
		polygon ((26, 49, 27),(119, 215, 124), 0 ),
		polygon ((48, 28, 42),(210, 130, 189), 0 ),
		polygon ((42, 25, 48),(190, 112, 211), 0 ),
		polygon ((27, 48, 25),(125, 212, 113), 0 )
	)
); /* end of polyset 'chimney06' */

polyset watertower_tank (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (water_tower ),
	casts_shadow = TRUE,
	vertices = ((cv((6.875608, 8.726679, -52.323731), 1)),
			(cv((6.875608, 9.346274, -52.323731), 1)),
			(cv((9.954924, 9.346274, -52.323731), 1)),
			(cv((9.954924, 8.726679, -52.323731), 1)),
			(cv((6.875608, 8.726679, -55.765813), 1)),
			(cv((6.875608, 9.346274, -55.765813), 1)),
			(cv((9.954924, 9.346274, -55.765813), 1)),
			(cv((9.954924, 8.726679, -55.765813), 1)),
			(cv((6.875608, 8.726679, -52.323731), 1)),
			(cv((9.954924, 8.726679, -52.323731), 1)),
			(cv((9.954924, 8.726679, -55.765813), 1)),
			(cv((6.875608, 8.726679, -55.765813), 1)),
			(cv((6.949449, 11.233671, -54.044772), 1)),
			(cv((7.145831, 11.233671, -54.777681), 1)),
			(cv((8.415266, 11.937587, -54.044772), 1)),
			(cv((7.145831, 11.233671, -53.311864), 1)),
			(cv((7.682357, 11.233671, -52.775337), 1)),
			(cv((8.415266, 11.233671, -52.578955), 1)),
			(cv((7.12225, 11.116462, -54.044772), 1)),
			(cv((7.12225, 8.812945, -54.044772), 1)),
			(cv((7.295481, 8.812945, -54.69128), 1)),
			(cv((7.295481, 8.812945, -53.398264), 1)),
			(cv((7.295481, 11.116462, -53.398264), 1)),
			(cv((7.768758, 11.116462, -52.924987), 1)),
			(cv((8.415266, 11.116462, -52.751756), 1)),
			(cv((8.415266, 8.812945, -52.751756), 1)),
			(cv((7.768758, 8.812945, -52.924987), 1)),
			(cv((7.295481, 11.116462, -54.69128), 1)),
			(cv((9.148175, 11.233671, -52.775337), 1)),
			(cv((8.415266, 11.233671, -52.578955), 1)),
			(cv((8.415266, 11.937587, -54.044772), 1)),
			(cv((9.684701, 11.233671, -53.311864), 1)),
			(cv((9.881083, 11.233671, -54.044772), 1)),
			(cv((9.684701, 11.233671, -54.777681), 1)),
			(cv((9.061774, 11.116462, -52.924987), 1)),
			(cv((9.061774, 8.812945, -52.924987), 1)),
			(cv((8.415266, 8.812945, -52.751756), 1)),
			(cv((9.535051, 8.812945, -53.398264), 1)),
			(cv((9.535051, 11.116462, -53.398264), 1)),
			(cv((9.708282, 11.116462, -54.044772), 1)),
			(cv((9.535051, 11.116462, -54.69128), 1)),
			(cv((9.535051, 8.812945, -54.69128), 1)),
			(cv((9.708282, 8.812945, -54.044772), 1)),
			(cv((8.415266, 11.116462, -52.751756), 1)),
			(cv((9.954924, 9.346274, -52.323731), 1)),
			(cv((6.875608, 9.346274, -52.323731), 1)),
			(cv((6.875608, 8.726679, -52.323731), 1)),
			(cv((9.954924, 8.726679, -52.323731), 1)),
			(cv((6.875608, 9.346274, -55.765813), 1)),
			(cv((6.875608, 8.726679, -55.765813), 1)),
			(cv((9.954924, 8.726679, -55.765813), 1)),
			(cv((9.954924, 9.346274, -55.765813), 1)),
			(cv((9.954924, 8.726679, -55.765813), 1)),
			(cv((9.954924, 8.726679, -52.323731), 1)),
			(cv((6.875608, 8.726679, -52.323731), 1)),
			(cv((6.875608, 8.726679, -55.765813), 1)),
			(cv((-4.88166, 8.726679, -76.880198), 1)),
			(cv((-4.88166, 9.346274, -76.880198), 1)),
			(cv((-1.802343, 9.346274, -76.880198), 1)),
			(cv((-1.802343, 8.726679, -76.880198), 1)),
			(cv((-4.88166, 8.726679, -80.32228), 1)),
			(cv((-4.88166, 9.346274, -80.32228), 1)),
			(cv((-1.802343, 9.346274, -80.32228), 1)),
			(cv((-1.802343, 8.726679, -80.32228), 1)),
			(cv((-4.88166, 8.726679, -76.880198), 1)),
			(cv((-1.802343, 8.726679, -76.880198), 1)),
			(cv((-1.802343, 8.726679, -80.32228), 1)),
			(cv((-4.88166, 8.726679, -80.32228), 1)),
			(cv((-4.807819, 11.233671, -78.601239), 1)),
			(cv((-4.611437, 11.233671, -79.334148), 1)),
			(cv((-3.342002, 11.937587, -78.601239), 1)),
			(cv((-4.611437, 11.233671, -77.868331), 1)),
			(cv((-4.07491, 11.233671, -77.331804), 1)),
			(cv((-3.342002, 11.233671, -77.135422), 1)),
			(cv((-4.635018, 11.116462, -78.601239), 1)),
			(cv((-4.635018, 8.812945, -78.601239), 1)),
			(cv((-4.461787, 8.812945, -79.247747), 1)),
			(cv((-4.461787, 8.812945, -77.954731), 1)),
			(cv((-4.461787, 11.116462, -77.954731), 1)),
			(cv((-3.98851, 11.116462, -77.481454), 1)),
			(cv((-3.342002, 11.116462, -77.308223), 1)),
			(cv((-3.342002, 8.812945, -77.308223), 1)),
			(cv((-3.98851, 8.812945, -77.481454), 1)),
			(cv((-4.461787, 11.116462, -79.247747), 1)),
			(cv((-2.609093, 11.233671, -77.331804), 1)),
			(cv((-3.342002, 11.233671, -77.135422), 1)),
			(cv((-3.342002, 11.937587, -78.601239), 1)),
			(cv((-2.072567, 11.233671, -77.868331), 1)),
			(cv((-1.876184, 11.233671, -78.601239), 1)),
			(cv((-2.072567, 11.233671, -79.334148), 1)),
			(cv((-2.695493, 11.116462, -77.481454), 1)),
			(cv((-2.695493, 8.812945, -77.481454), 1)),
			(cv((-3.342002, 8.812945, -77.308223), 1)),
			(cv((-2.222217, 8.812945, -77.954731), 1)),
			(cv((-2.222217, 11.116462, -77.954731), 1)),
			(cv((-2.048985, 11.116462, -78.601239), 1)),
			(cv((-2.222217, 11.116462, -79.247747), 1)),
			(cv((-2.222217, 8.812945, -79.247747), 1)),
			(cv((-2.048985, 8.812945, -78.601239), 1)),
			(cv((-3.342002, 11.116462, -77.308223), 1)),
			(cv((-1.802343, 9.346274, -76.880198), 1)),
			(cv((-4.88166, 9.346274, -76.880198), 1)),
			(cv((-4.88166, 8.726679, -76.880198), 1)),
			(cv((-1.802343, 8.726679, -76.880198), 1)),
			(cv((-4.88166, 9.346274, -80.32228), 1)),
			(cv((-4.88166, 8.726679, -80.32228), 1)),
			(cv((-1.802343, 8.726679, -80.32228), 1)),
			(cv((-1.802343, 9.346274, -80.32228), 1)),
			(cv((-1.802343, 8.726679, -80.32228), 1)),
			(cv((-1.802343, 8.726679, -76.880198), 1)),
			(cv((-4.88166, 8.726679, -76.880198), 1)),
			(cv((-4.88166, 8.726679, -80.32228), 1))	),
	texture_vertices = (
			st( 0.000000, 0.515000 ),
			st( 0.000000, 0.635000 ),
			st( 1.000000, 0.635000 ),
			st( 1.000000, 0.515000 ),
			st( 1.000000, 0.515000 ),
			st( 1.000000, 0.635000 ),
			st( 0.000000, 0.635000 ),
			st( 0.000000, 0.515000 ),
			st( 0.000000, 0.628000 ),
			st( 1.000000, 0.628000 ),
			st( 1.000000, 0.510000 ),
			st( 0.000000, 0.510000 ),
			st( 0.250000, 0.880000 ),
			st( 0.000000, 0.880000 ),
			st( 0.500000, 1.000000 ),
			st( 0.500000, 0.880000 ),
			st( 0.750000, 0.880000 ),
			st( 1.000000, 0.880000 ),
			st( 0.250000, 0.880000 ),
			st( 0.250000, 0.635000 ),
			st( 0.000000, 0.635000 ),
			st( 0.500000, 0.635000 ),
			st( 0.500000, 0.880000 ),
			st( 0.750000, 0.875000 ),
			st( 1.000000, 0.875000 ),
			st( 1.000000, 0.635000 ),
			st( 0.750000, 0.635000 ),
			st( 0.000000, 0.880000 ),
			st( 0.250000, 0.880000 ),
			st( 0.000000, 0.880000 ),
			st( 0.500000, 1.000000 ),
			st( 0.500000, 0.880000 ),
			st( 0.750000, 0.880000 ),
			st( 1.000000, 0.880000 ),
			st( 0.250000, 0.880000 ),
			st( 0.250000, 0.635000 ),
			st( 0.000000, 0.635000 ),
			st( 0.500000, 0.635000 ),
			st( 0.500000, 0.880000 ),
			st( 0.750000, 0.875000 ),
			st( 1.000000, 0.875000 ),
			st( 1.000000, 0.635000 ),
			st( 0.750000, 0.635000 ),
			st( 0.000000, 0.880000 ),
			st( 1.000000, 0.635000 ),
			st( 0.000000, 0.635000 ),
			st( 0.000000, 0.515000 ),
			st( 1.000000, 0.515000 ),
			st( 1.000000, 0.635000 ),
			st( 1.000000, 0.515000 ),
			st( 0.000000, 0.515000 ),
			st( 0.000000, 0.635000 ),
			st( 1.000000, 0.510000 ),
			st( 1.000000, 0.628000 ),
			st( 0.000000, 0.628000 ),
			st( 0.000000, 0.510000 ),
			st( 0.000000, 0.515000 ),
			st( 0.000000, 0.635000 ),
			st( 1.000000, 0.635000 ),
			st( 1.000000, 0.515000 ),
			st( 1.000000, 0.515000 ),
			st( 1.000000, 0.635000 ),
			st( 0.000000, 0.635000 ),
			st( 0.000000, 0.515000 ),
			st( 0.000000, 0.628000 ),
			st( 1.000000, 0.628000 ),
			st( 1.000000, 0.510000 ),
			st( 0.000000, 0.510000 ),
			st( 0.250000, 0.880000 ),
			st( 0.000000, 0.880000 ),
			st( 0.500000, 1.000000 ),
			st( 0.500000, 0.880000 ),
			st( 0.750000, 0.880000 ),
			st( 1.000000, 0.880000 ),
			st( 0.250000, 0.880000 ),
			st( 0.250000, 0.635000 ),
			st( 0.000000, 0.635000 ),
			st( 0.500000, 0.635000 ),
			st( 0.500000, 0.880000 ),
			st( 0.750000, 0.875000 ),
			st( 1.000000, 0.875000 ),
			st( 1.000000, 0.635000 ),
			st( 0.750000, 0.635000 ),
			st( 0.000000, 0.880000 ),
			st( 0.250000, 0.880000 ),
			st( 0.000000, 0.880000 ),
			st( 0.500000, 1.000000 ),
			st( 0.500000, 0.880000 ),
			st( 0.750000, 0.880000 ),
			st( 1.000000, 0.880000 ),
			st( 0.250000, 0.880000 ),
			st( 0.250000, 0.635000 ),
			st( 0.000000, 0.635000 ),
			st( 0.500000, 0.635000 ),
			st( 0.500000, 0.880000 ),
			st( 0.750000, 0.875000 ),
			st( 1.000000, 0.875000 ),
			st( 1.000000, 0.635000 ),
			st( 0.750000, 0.635000 ),
			st( 0.000000, 0.880000 ),
			st( 1.000000, 0.635000 ),
			st( 0.000000, 0.635000 ),
			st( 0.000000, 0.515000 ),
			st( 1.000000, 0.515000 ),
			st( 1.000000, 0.635000 ),
			st( 1.000000, 0.515000 ),
			st( 0.000000, 0.515000 ),
			st( 0.000000, 0.635000 ),
			st( 1.000000, 0.510000 ),
			st( 1.000000, 0.628000 ),
			st( 0.000000, 0.628000 ),
			st( 0.000000, 0.510000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((0, 4, 5),(0, 4, 5), 0 ),
		polygon ((5, 1, 0),(5, 1, 0), 0 ),
		polygon ((6, 7, 3),(6, 7, 3), 0 ),
		polygon ((3, 2, 6),(3, 2, 6), 0 ),
		polygon ((6, 5, 4),(6, 5, 4), 0 ),
		polygon ((4, 7, 6),(4, 7, 6), 0 ),
		polygon ((8, 9, 10),(8, 9, 10), 0 ),
		polygon ((10, 11, 8),(10, 11, 8), 0 ),
		polygon ((12, 13, 14),(12, 13, 14), 0 ),
		polygon ((14, 15, 12),(14, 15, 12), 0 ),
		polygon ((16, 15, 14),(16, 15, 14), 0 ),
		polygon ((16, 14, 17),(16, 14, 17), 0 ),
		polygon ((18, 19, 20),(18, 19, 20), 0 ),
		polygon ((21, 22, 23),(21, 22, 23), 0 ),
		polygon ((24, 25, 26),(24, 25, 26), 0 ),
		polygon ((26, 23, 24),(26, 23, 24), 0 ),
		polygon ((18, 27, 13),(18, 27, 13), 0 ),
		polygon ((13, 12, 18),(13, 12, 18), 0 ),
		polygon ((18, 12, 15),(18, 12, 15), 0 ),
		polygon ((15, 22, 18),(15, 22, 18), 0 ),
		polygon ((22, 15, 16),(22, 15, 16), 0 ),
		polygon ((16, 23, 22),(16, 23, 22), 0 ),
		polygon ((23, 16, 24),(23, 16, 24), 0 ),
		polygon ((24, 16, 17),(24, 16, 17), 0 ),
		polygon ((20, 27, 18),(20, 27, 18), 0 ),
		polygon ((19, 18, 22),(19, 18, 22), 0 ),
		polygon ((22, 21, 19),(22, 21, 19), 0 ),
		polygon ((23, 26, 21),(23, 26, 21), 0 ),
		polygon ((28, 29, 30),(28, 29, 30), 0 ),
		polygon ((30, 31, 28),(30, 31, 28), 0 ),
		polygon ((32, 31, 30),(32, 31, 30), 0 ),
		polygon ((32, 30, 33),(32, 30, 33), 0 ),
		polygon ((34, 35, 36),(34, 35, 36), 0 ),
		polygon ((37, 38, 39),(37, 38, 39), 0 ),
		polygon ((40, 41, 42),(40, 41, 42), 0 ),
		polygon ((42, 39, 40),(42, 39, 40), 0 ),
		polygon ((34, 43, 29),(34, 43, 29), 0 ),
		polygon ((29, 28, 34),(29, 28, 34), 0 ),
		polygon ((34, 28, 31),(34, 28, 31), 0 ),
		polygon ((31, 38, 34),(31, 38, 34), 0 ),
		polygon ((38, 31, 32),(38, 31, 32), 0 ),
		polygon ((32, 39, 38),(32, 39, 38), 0 ),
		polygon ((39, 32, 40),(39, 32, 40), 0 ),
		polygon ((40, 32, 33),(40, 32, 33), 0 ),
		polygon ((36, 43, 34),(36, 43, 34), 0 ),
		polygon ((35, 34, 38),(35, 34, 38), 0 ),
		polygon ((38, 37, 35),(38, 37, 35), 0 ),
		polygon ((39, 42, 37),(39, 42, 37), 0 ),
		polygon ((44, 45, 46),(44, 45, 46), 0 ),
		polygon ((46, 47, 44),(46, 47, 44), 0 ),
		polygon ((48, 49, 46),(48, 49, 46), 0 ),
		polygon ((46, 45, 48),(46, 45, 48), 0 ),
		polygon ((47, 50, 51),(47, 50, 51), 0 ),
		polygon ((51, 44, 47),(51, 44, 47), 0 ),
		polygon ((49, 48, 51),(49, 48, 51), 0 ),
		polygon ((51, 50, 49),(51, 50, 49), 0 ),
		polygon ((52, 53, 54),(52, 53, 54), 0 ),
		polygon ((54, 55, 52),(54, 55, 52), 0 ),
		polygon ((56, 57, 58),(56, 57, 58), 0 ),
		polygon ((58, 59, 56),(58, 59, 56), 0 ),
		polygon ((56, 60, 61),(56, 60, 61), 0 ),
		polygon ((61, 57, 56),(61, 57, 56), 0 ),
		polygon ((62, 63, 59),(62, 63, 59), 0 ),
		polygon ((59, 58, 62),(59, 58, 62), 0 ),
		polygon ((62, 61, 60),(62, 61, 60), 0 ),
		polygon ((60, 63, 62),(60, 63, 62), 0 ),
		polygon ((64, 65, 66),(64, 65, 66), 0 ),
		polygon ((66, 67, 64),(66, 67, 64), 0 ),
		polygon ((68, 69, 70),(68, 69, 70), 0 ),
		polygon ((70, 71, 68),(70, 71, 68), 0 ),
		polygon ((72, 71, 70),(72, 71, 70), 0 ),
		polygon ((72, 70, 73),(72, 70, 73), 0 ),
		polygon ((74, 75, 76),(74, 75, 76), 0 ),
		polygon ((77, 78, 79),(77, 78, 79), 0 ),
		polygon ((80, 81, 82),(80, 81, 82), 0 ),
		polygon ((82, 79, 80),(82, 79, 80), 0 ),
		polygon ((74, 83, 69),(74, 83, 69), 0 ),
		polygon ((69, 68, 74),(69, 68, 74), 0 ),
		polygon ((74, 68, 71),(74, 68, 71), 0 ),
		polygon ((71, 78, 74),(71, 78, 74), 0 ),
		polygon ((78, 71, 72),(78, 71, 72), 0 ),
		polygon ((72, 79, 78),(72, 79, 78), 0 ),
		polygon ((79, 72, 80),(79, 72, 80), 0 ),
		polygon ((80, 72, 73),(80, 72, 73), 0 ),
		polygon ((76, 83, 74),(76, 83, 74), 0 ),
		polygon ((75, 74, 78),(75, 74, 78), 0 ),
		polygon ((78, 77, 75),(78, 77, 75), 0 ),
		polygon ((79, 82, 77),(79, 82, 77), 0 ),
		polygon ((84, 85, 86),(84, 85, 86), 0 ),
		polygon ((86, 87, 84),(86, 87, 84), 0 ),
		polygon ((88, 87, 86),(88, 87, 86), 0 ),
		polygon ((88, 86, 89),(88, 86, 89), 0 ),
		polygon ((90, 91, 92),(90, 91, 92), 0 ),
		polygon ((93, 94, 95),(93, 94, 95), 0 ),
		polygon ((96, 97, 98),(96, 97, 98), 0 ),
		polygon ((98, 95, 96),(98, 95, 96), 0 ),
		polygon ((90, 99, 85),(90, 99, 85), 0 ),
		polygon ((85, 84, 90),(85, 84, 90), 0 ),
		polygon ((90, 84, 87),(90, 84, 87), 0 ),
		polygon ((87, 94, 90),(87, 94, 90), 0 ),
		polygon ((94, 87, 88),(94, 87, 88), 0 ),
		polygon ((88, 95, 94),(88, 95, 94), 0 ),
		polygon ((95, 88, 96),(95, 88, 96), 0 ),
		polygon ((96, 88, 89),(96, 88, 89), 0 ),
		polygon ((92, 99, 90),(92, 99, 90), 0 ),
		polygon ((91, 90, 94),(91, 90, 94), 0 ),
		polygon ((94, 93, 91),(94, 93, 91), 0 ),
		polygon ((95, 98, 93),(95, 98, 93), 0 ),
		polygon ((100, 101, 102),(100, 101, 102), 0 ),
		polygon ((102, 103, 100),(102, 103, 100), 0 ),
		polygon ((104, 105, 102),(104, 105, 102), 0 ),
		polygon ((102, 101, 104),(102, 101, 104), 0 ),
		polygon ((103, 106, 107),(103, 106, 107), 0 ),
		polygon ((107, 100, 103),(107, 100, 103), 0 ),
		polygon ((105, 104, 107),(105, 104, 107), 0 ),
		polygon ((107, 106, 105),(107, 106, 105), 0 ),
		polygon ((108, 109, 110),(108, 109, 110), 0 ),
		polygon ((110, 111, 108),(110, 111, 108), 0 )
	)
); /* end of polyset 'watertower_tank' */

polyset watertower_base (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = ON,
	opposite = OFF,
	shader = (cush4 ),
	shader = (water_tower ),
	casts_shadow = TRUE,
	vertices = ((cv((8.242213, -0.128893, -54.018039), 1)),
			(cv((8.242213, 8.917708, -54.018039), 1)),
			(cv((8.415266, 8.917708, -53.841499), 1)),
			(cv((8.415266, -0.128893, -53.841499), 1)),
			(cv((8.604698, 8.917708, -54.018063), 1)),
			(cv((8.604698, -0.128893, -54.018064), 1)),
			(cv((7.334979, 8.733052, -55.125059), 1)),
			(cv((6.867991, -0.019659, -55.592048), 1)),
			(cv((6.867991, -0.019659, -52.497497), 1)),
			(cv((7.334979, 8.733052, -52.964485), 1)),
			(cv((9.495553, 8.733052, -52.964485), 1)),
			(cv((9.962541, -0.019659, -52.497497), 1)),
			(cv((9.495553, 8.733052, -55.125059), 1)),
			(cv((9.962541, -0.019659, -55.592048), 1)),
			(cv((6.867991, -0.019659, -52.497497), 1)),
			(cv((6.867991, -0.019659, -55.592048), 1)),
			(cv((7.334979, 8.733052, -55.125059), 1)),
			(cv((7.334979, 8.733052, -52.964485), 1)),
			(cv((9.495553, 8.733052, -52.964485), 1)),
			(cv((9.962541, -0.019659, -52.497497), 1)),
			(cv((9.962541, -0.019659, -55.592048), 1)),
			(cv((9.495553, 8.733052, -55.125059), 1)),
			(cv((-3.515055, -0.128893, -78.574505), 1)),
			(cv((-3.515055, 8.917708, -78.574505), 1)),
			(cv((-3.342002, 8.917708, -78.397966), 1)),
			(cv((-3.342002, -0.128893, -78.397966), 1)),
			(cv((-3.152569, 8.917708, -78.57453), 1)),
			(cv((-3.15257, -0.128893, -78.574531), 1)),
			(cv((-4.422288, 8.733052, -79.681526), 1)),
			(cv((-4.889277, -0.019659, -80.148514), 1)),
			(cv((-4.889277, -0.019659, -77.053964), 1)),
			(cv((-4.422288, 8.733052, -77.520952), 1)),
			(cv((-2.261715, 8.733052, -77.520952), 1)),
			(cv((-1.794726, -0.019659, -77.053964), 1)),
			(cv((-2.261715, 8.733052, -79.681526), 1)),
			(cv((-1.794726, -0.019659, -80.148514), 1)),
			(cv((-4.889277, -0.019659, -77.053964), 1)),
			(cv((-4.889277, -0.019659, -80.148514), 1)),
			(cv((-4.422288, 8.733052, -79.681526), 1)),
			(cv((-4.422288, 8.733052, -77.520952), 1)),
			(cv((-2.261715, 8.733052, -77.520952), 1)),
			(cv((-1.794726, -0.019659, -77.053964), 1)),
			(cv((-1.794726, -0.019659, -80.148514), 1)),
			(cv((-2.261715, 8.733052, -79.681526), 1))	),
	texture_vertices = (
			st( 0.000000, 0.550000 ),
			st( 0.000000, 1.000000 ),
			st( 0.500000, 1.000000 ),
			st( 0.500000, 0.550000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.550000 ),
			st( 0.825000, 0.507500 ),
			st( 0.980000, 0.000000 ),
			st( 0.022500, 0.000000 ),
			st( 0.180000, 0.507500 ),
			st( 0.825000, 0.507500 ),
			st( 0.980000, 0.000000 ),
			st( 0.180000, 0.507500 ),
			st( 0.022500, 0.000000 ),
			st( 0.022500, 0.000000 ),
			st( 0.980000, 0.000000 ),
			st( 0.825000, 0.507500 ),
			st( 0.180000, 0.507500 ),
			st( 0.825000, 0.507500 ),
			st( 0.980000, 0.000000 ),
			st( 0.022500, 0.000000 ),
			st( 0.180000, 0.507500 ),
			st( 0.000000, 0.550000 ),
			st( 0.000000, 1.000000 ),
			st( 0.500000, 1.000000 ),
			st( 0.500000, 0.550000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.550000 ),
			st( 0.825000, 0.507500 ),
			st( 0.980000, 0.000000 ),
			st( 0.022500, 0.000000 ),
			st( 0.180000, 0.507500 ),
			st( 0.825000, 0.507500 ),
			st( 0.980000, 0.000000 ),
			st( 0.180000, 0.507500 ),
			st( 0.022500, 0.000000 ),
			st( 0.022500, 0.000000 ),
			st( 0.980000, 0.000000 ),
			st( 0.825000, 0.507500 ),
			st( 0.180000, 0.507500 ),
			st( 0.825000, 0.507500 ),
			st( 0.980000, 0.000000 ),
			st( 0.022500, 0.000000 ),
			st( 0.180000, 0.507500 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((3, 2, 4),(3, 2, 4), 0 ),
		polygon ((4, 5, 3),(4, 5, 3), 0 ),
		polygon ((6, 7, 8),(6, 7, 8), 1 ),
		polygon ((8, 9, 6),(8, 9, 6), 1 ),
		polygon ((10, 9, 8),(10, 9, 8), 1 ),
		polygon ((8, 11, 10),(8, 11, 10), 1 ),
		polygon ((12, 13, 7),(12, 13, 7), 1 ),
		polygon ((7, 6, 12),(7, 6, 12), 1 ),
		polygon ((10, 11, 13),(10, 11, 13), 1 ),
		polygon ((13, 12, 10),(13, 12, 10), 1 ),
		polygon ((14, 15, 16),(14, 15, 16), 1 ),
		polygon ((16, 17, 14),(16, 17, 14), 1 ),
		polygon ((14, 17, 18),(14, 17, 18), 1 ),
		polygon ((18, 19, 14),(18, 19, 14), 1 ),
		polygon ((15, 20, 21),(15, 20, 21), 1 ),
		polygon ((21, 16, 15),(21, 16, 15), 1 ),
		polygon ((20, 19, 18),(20, 19, 18), 1 ),
		polygon ((18, 21, 20),(18, 21, 20), 1 ),
		polygon ((22, 23, 24),(22, 23, 24), 0 ),
		polygon ((24, 25, 22),(24, 25, 22), 0 ),
		polygon ((25, 24, 26),(25, 24, 26), 0 ),
		polygon ((26, 27, 25),(26, 27, 25), 0 ),
		polygon ((28, 29, 30),(28, 29, 30), 1 ),
		polygon ((30, 31, 28),(30, 31, 28), 1 ),
		polygon ((32, 31, 30),(32, 31, 30), 1 ),
		polygon ((30, 33, 32),(30, 33, 32), 1 ),
		polygon ((34, 35, 29),(34, 35, 29), 1 ),
		polygon ((29, 28, 34),(29, 28, 34), 1 ),
		polygon ((32, 33, 35),(32, 33, 35), 1 ),
		polygon ((35, 34, 32),(35, 34, 32), 1 ),
		polygon ((36, 37, 38),(36, 37, 38), 1 ),
		polygon ((38, 39, 36),(38, 39, 36), 1 ),
		polygon ((36, 39, 40),(36, 39, 40), 1 ),
		polygon ((40, 41, 36),(40, 41, 36), 1 ),
		polygon ((37, 42, 43),(37, 42, 43), 1 ),
		polygon ((43, 38, 37),(43, 38, 37), 1 ),
		polygon ((42, 41, 40),(42, 41, 40), 1 ),
		polygon ((40, 43, 42),(40, 43, 42), 1 )
	)
); /* end of polyset 'watertower_base' */

polyset grass_patches (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (lawn ),
	shader = (yard ),
	casts_shadow = TRUE,
	vertices = ((cv((10.143068, 0.0, 5.864588), 1)),
			(cv((8.217417, 0.015005, 5.864588), 1)),
			(cv((10.708052, 0.015005, 3.373955), 1)),
			(cv((10.708052, 0.015005, -3.366534), 1)),
			(cv((8.217417, 0.015005, -5.857167), 1)),
			(cv((10.143068, 0.015005, -5.857167), 1)),
			(cv((-8.217418, 0.015005, -5.857167), 1)),
			(cv((-10.708052, 0.015005, -3.366534), 1)),
			(cv((-9.60057, 0.0, -5.857167), 1)),
			(cv((-8.217418, 0.015005, 5.864588), 1)),
			(cv((-9.60057, 0.015005, 5.864588), 1)),
			(cv((-10.708052, 0.015005, 3.373955), 1)),
			(cv((1.269156, 0.0, -8.277084), 1)),
			(cv((1.269156, 0.0, -14.734158), 1)),
			(cv((10.143068, 0.0, -14.734158), 1)),
			(cv((10.143068, 0.0, -8.277084), 1)),
			(cv((1.269156, 0.0, -22.816772), 1)),
			(cv((1.612047, 0.0, -22.816772), 1)),
			(cv((-1.25402, 0.0, 13.900265), 1)),
			(cv((-1.25402, 0.0, 22.502792), 1)),
			(cv((-1.610192, 0.0, 22.502792), 1)),
			(cv((-1.610192, 0.0, 13.900265), 1)),
			(cv((1.612047, 0.0, -14.728894), 1)),
			(cv((10.143068, 0.0, 8.51534), 1)),
			(cv((10.143068, 0.0, 13.900265), 1)),
			(cv((1.470654, 0.0, 13.900265), 1)),
			(cv((1.470654, 0.0, 8.51534), 1)),
			(cv((-1.25402, 0.0, 8.51534), 1)),
			(cv((-9.60057, 0.0, 13.900265), 1)),
			(cv((-9.60057, 0.0, 8.51534), 1)),
			(cv((-12.67828, 0.0, -24.788183), 1)),
			(cv((-12.700437, 0.0, -31.850431), 1)),
			(cv((12.679462, 0.0, -31.850431), 1)),
			(cv((12.679462, 0.0, -24.788183), 1)),
			(cv((-12.657305, 0.0, 32.0924), 1)),
			(cv((-12.679462, 0.0, 24.474203), 1)),
			(cv((12.700437, 0.0, 24.474203), 1)),
			(cv((12.700437, 0.0, 32.0924), 1)),
			(cv((-9.60057, 0.0, -8.277084), 1)),
			(cv((-9.607524, 0.0, -14.366421), 1)),
			(cv((-1.138145, 0.0, -14.366421), 1)),
			(cv((-1.138145, 0.0, -8.277084), 1)),
			(cv((10.321681, -0.039622, -14.239223), 1)),
			(cv((1.323887, -0.039622, -14.223519), 1)),
			(cv((1.322637, -0.039622, -15.338483), 1)),
			(cv((10.320431, -0.039622, -15.354187), 1)),
			(cv((-0.866164, -0.039622, 14.291291), 1)),
			(cv((-9.863958, -0.039622, 14.306994), 1)),
			(cv((-9.865208, -0.039622, 13.591104), 1)),
			(cv((-0.867413, -0.039622, 13.575399), 1)),
			(cv((10.456474, -0.039622, 14.055223), 1)),
			(cv((1.45868, -0.039622, 14.070926), 1)),
			(cv((1.45743, -0.039622, 13.355035), 1)),
			(cv((10.455225, -0.039622, 13.339331), 1)),
			(cv((-0.866164, -0.033657, -13.848916), 1)),
			(cv((-9.863958, -0.033657, -13.833212), 1)),
			(cv((-9.865208, -0.033657, -15.031546), 1)),
			(cv((-0.867413, -0.033657, -15.04725), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.100000, 0.000000 ),
			st( 0.000887, 0.997576 ),
			st( 0.050710, 0.998540 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.053007, 0.000000 ),
			st( 0.001044, 0.998540 ),
			st( 0.100000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.900000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.900000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.900000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.900000, 0.000000 ),
			st( 0.900000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((3, 4, 5),(3, 4, 5), 0 ),
		polygon ((6, 7, 8),(6, 7, 8), 0 ),
		polygon ((9, 10, 11),(9, 10, 11), 0 ),
		polygon ((12, 13, 14),(12, 13, 14), 1 ),
		polygon ((14, 13),(14, 13), 1 ),
		polygon ((14, 15),(14, 15), 1 ),
		polygon ((12, 14, 15),(12, 14, 15), 1 ),
		polygon ((13, 16, 17),(13, 16, 17), 1 ),
		polygon ((18, 19, 20),(18, 22, 23), 1 ),
		polygon ((20, 21, 18),(23, 24, 19), 1 ),
		polygon ((17, 22, 13),(17, 25, 13), 1 ),
		polygon ((23, 24, 25),(26, 27, 28), 1 ),
		polygon ((25, 24),(28, 27), 1 ),
		polygon ((25, 26),(28, 29), 1 ),
		polygon ((23, 25, 26),(26, 28, 29), 1 ),
		polygon ((27, 18, 28),(30, 20, 31), 1 ),
		polygon ((28, 18),(31, 21), 1 ),
		polygon ((28, 29),(31, 32), 1 ),
		polygon ((27, 28, 29),(30, 31, 32), 1 ),
		polygon ((30, 31, 32),(33, 34, 35), 1 ),
		polygon ((32, 31),(35, 34), 1 ),
		polygon ((32, 33),(35, 36), 1 ),
		polygon ((30, 32, 33),(33, 35, 36), 1 ),
		polygon ((34, 35, 36),(37, 38, 39), 1 ),
		polygon ((36, 35),(39, 38), 1 ),
		polygon ((36, 37),(39, 40), 1 ),
		polygon ((34, 36, 37),(37, 39, 40), 1 ),
		polygon ((38, 39, 40),(41, 42, 43), 1 ),
		polygon ((40, 39),(43, 42), 1 ),
		polygon ((40, 41),(43, 44), 1 ),
		polygon ((38, 40, 41),(41, 43, 44), 1 ),
		polygon ((42, 43, 44),(45, 46, 47), 0 ),
		polygon ((44, 45, 42),(47, 48, 45), 0 ),
		polygon ((46, 47, 48),(49, 50, 51), 0 ),
		polygon ((48, 49, 46),(51, 52, 49), 0 ),
		polygon ((50, 51, 52),(53, 54, 55), 0 ),
		polygon ((52, 53, 50),(55, 56, 53), 0 ),
		polygon ((54, 55, 56),(57, 58, 59), 0 ),
		polygon ((56, 57, 54),(59, 60, 57), 0 )
	)
); /* end of polyset 'grass_patches' */

polyset house12 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (skyline ),
	casts_shadow = TRUE,
	vertices = ((cv((8.328517, 0.0, 176.315842), 1)),
			(cv((8.328517, 10.529953, 176.315842), 1)),
			(cv((-8.225219, 0.0, 176.315842), 1)),
			(cv((-8.225219, 10.529953, 176.315842), 1)),
			(cv((-24.778954, 0.0, 176.315842), 1)),
			(cv((-24.778954, 10.529953, 176.315842), 1)),
			(cv((-41.332689, 0.0, 176.315842), 1)),
			(cv((-41.332689, 10.529953, 176.315842), 1)),
			(cv((-8.225219, 0.0, 176.315842), 1)),
			(cv((-8.225219, 10.529953, 176.315842), 1)),
			(cv((-24.778954, 0.0, 176.315842), 1)),
			(cv((-24.778954, 10.529953, 176.315842), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 1, 3),(2, 1, 3), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 0 ),
		polygon ((6, 5, 7),(6, 5, 7), 0 ),
		polygon ((8, 9, 10),(8, 9, 10), 0 ),
		polygon ((10, 9, 11),(10, 9, 11), 0 )
	)
); /* end of polyset 'house12' */

polyset house09 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (skyline ),
	casts_shadow = TRUE,
	vertices = ((cv((-7.445254, 0.0, -177.450219), 1)),
			(cv((8.677901, 10.564537, -177.450219), 1)),
			(cv((8.677901, 0.0, -177.450219), 1)),
			(cv((-7.445254, 10.564537, -177.450219), 1)),
			(cv((24.801055, 0.0, -177.450216), 1)),
			(cv((40.92421, 10.564537, -177.450216), 1)),
			(cv((40.92421, 0.0, -177.450216), 1)),
			(cv((24.801055, 10.564537, -177.450216), 1)),
			(cv((8.677901, 0.0, -177.450217), 1)),
			(cv((24.801056, 10.564537, -177.450217), 1)),
			(cv((24.801056, 0.0, -177.450217), 1)),
			(cv((8.677901, 10.564537, -177.450217), 1))	),
	texture_vertices = (
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((3, 1, 0),(3, 1, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 0 ),
		polygon ((7, 5, 4),(7, 5, 4), 0 ),
		polygon ((8, 9, 10),(8, 9, 10), 0 ),
		polygon ((11, 9, 8),(11, 9, 8), 0 )
	)
); /* end of polyset 'house09' */

polyset house11 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (skyline ),
	casts_shadow = TRUE,
	vertices = ((cv((-39.999178, 0.0, -177.45022), 1)),
			(cv((-39.999178, 10.564537, -177.45022), 1)),
			(cv((-23.553828, 0.0, -177.45022), 1)),
			(cv((-23.553828, 10.564537, -177.45022), 1)),
			(cv((-23.553828, 0.0, -177.45022), 1)),
			(cv((-23.553828, 10.564537, -177.45022), 1)),
			(cv((-7.445253, 0.0, -177.45022), 1)),
			(cv((-7.445253, 10.564537, -177.45022), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 1, 3),(2, 1, 3), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 0 ),
		polygon ((6, 5, 7),(6, 5, 7), 0 )
	)
); /* end of polyset 'house11' */

polyset house10 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (skyline ),
	casts_shadow = TRUE,
	vertices = ((cv((41.060269, 0.0, 176.315842), 1)),
			(cv((24.506534, 10.529953, 176.315842), 1)),
			(cv((24.506534, 0.0, 176.315842), 1)),
			(cv((41.060269, 10.529953, 176.315842), 1)),
			(cv((24.506534, 0.0, 176.315842), 1)),
			(cv((8.328388, 10.529953, 176.315842), 1)),
			(cv((8.328388, 0.0, 176.315842), 1)),
			(cv((24.506534, 10.529953, 176.315842), 1))	),
	texture_vertices = (
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((3, 1, 0),(3, 1, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 0 ),
		polygon ((7, 5, 4),(7, 5, 4), 0 )
	)
); /* end of polyset 'house10' */

polyset scenery (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (water_tower ),
	shader = (cush4 ),
	shader = (buildinga2 ),
	shader = (buildingb3 ),
	casts_shadow = TRUE,
	vertices = ((cv((47.80466, 8.538018, 26.087367), 1)),
			(cv((47.80466, 9.135396, 26.087367), 1)),
			(cv((47.80466, 9.135396, 29.056262), 1)),
			(cv((47.80466, 8.538018, 29.056262), 1)),
			(cv((51.123312, 8.538018, 26.087367), 1)),
			(cv((51.123312, 9.135396, 26.087367), 1)),
			(cv((51.123312, 9.135396, 29.056262), 1)),
			(cv((51.123312, 8.538018, 29.056262), 1)),
			(cv((47.80466, 8.538018, 26.087367), 1)),
			(cv((47.80466, 8.538018, 29.056262), 1)),
			(cv((51.123312, 8.538018, 29.056262), 1)),
			(cv((51.123312, 8.538018, 26.087367), 1)),
			(cv((49.463986, 10.955112, 26.158561), 1)),
			(cv((50.170613, 10.955112, 26.347901), 1)),
			(cv((49.463986, 11.633786, 27.571815), 1)),
			(cv((48.757359, 10.955112, 26.347901), 1)),
			(cv((48.240072, 10.955112, 26.865188), 1)),
			(cv((48.050731, 10.955112, 27.571815), 1)),
			(cv((49.463986, 10.842105, 26.325165), 1)),
			(cv((49.463986, 8.621191, 26.325165), 1)),
			(cv((50.087311, 8.621191, 26.492184), 1)),
			(cv((48.840661, 8.621191, 26.492184), 1)),
			(cv((48.840661, 10.842105, 26.492184), 1)),
			(cv((48.384355, 10.842105, 26.94849), 1)),
			(cv((48.217336, 10.842105, 27.571815), 1)),
			(cv((48.217336, 8.621191, 27.571815), 1)),
			(cv((48.384355, 8.621191, 26.94849), 1)),
			(cv((50.087311, 10.842105, 26.492184), 1)),
			(cv((48.240072, 10.955112, 28.278442), 1)),
			(cv((48.050731, 10.955112, 27.571815), 1)),
			(cv((49.463986, 11.633786, 27.571815), 1)),
			(cv((48.757359, 10.955112, 28.795729), 1)),
			(cv((49.463986, 10.955112, 28.985069), 1)),
			(cv((50.170613, 10.955112, 28.795729), 1)),
			(cv((48.384355, 10.842105, 28.19514), 1)),
			(cv((48.384355, 8.621191, 28.19514), 1)),
			(cv((48.217336, 8.621191, 27.571815), 1)),
			(cv((48.840661, 8.621191, 28.651445), 1)),
			(cv((48.840661, 10.842105, 28.651445), 1)),
			(cv((49.463986, 10.842105, 28.818465), 1)),
			(cv((50.087311, 10.842105, 28.651445), 1)),
			(cv((50.087311, 8.621191, 28.651445), 1)),
			(cv((49.463986, 8.621191, 28.818465), 1)),
			(cv((48.217336, 10.842105, 27.571815), 1)),
			(cv((47.80466, 9.135396, 29.056262), 1)),
			(cv((47.80466, 9.135396, 26.087367), 1)),
			(cv((47.80466, 8.538018, 26.087367), 1)),
			(cv((47.80466, 8.538018, 29.056262), 1)),
			(cv((51.123312, 9.135396, 26.087367), 1)),
			(cv((51.123312, 8.538018, 26.087367), 1)),
			(cv((51.123312, 8.538018, 29.056262), 1)),
			(cv((51.123312, 9.135396, 29.056262), 1)),
			(cv((51.123312, 8.538018, 29.056262), 1)),
			(cv((47.80466, 8.538018, 29.056262), 1)),
			(cv((47.80466, 8.538018, 26.087367), 1)),
			(cv((51.123312, 8.538018, 26.087367), 1)),
			(cv((49.438211, 0.0, 27.404967), 1)),
			(cv((49.438211, 8.722197, 27.404967), 1)),
			(cv((49.268002, 8.722197, 27.571815), 1)),
			(cv((49.268002, 0.0, 27.571815), 1)),
			(cv((49.438235, 8.722197, 27.754454), 1)),
			(cv((49.438235, 0.0, 27.754454), 1)),
			(cv((50.505534, 8.544163, 26.530266), 1)),
			(cv((50.955777, 0.105317, 26.080024), 1)),
			(cv((47.972194, 0.105317, 26.080024), 1)),
			(cv((48.422437, 8.544163, 26.530266), 1)),
			(cv((48.422437, 8.544163, 28.613363), 1)),
			(cv((47.972194, 0.105317, 29.063606), 1)),
			(cv((50.505534, 8.544163, 28.613363), 1)),
			(cv((50.955777, 0.105317, 29.063606), 1)),
			(cv((47.972194, 0.105317, 26.080024), 1)),
			(cv((50.955777, 0.105317, 26.080024), 1)),
			(cv((50.505534, 8.544163, 26.530266), 1)),
			(cv((48.422437, 8.544163, 26.530266), 1)),
			(cv((48.422437, 8.544163, 28.613363), 1)),
			(cv((47.972194, 0.105317, 29.063606), 1)),
			(cv((50.955777, 0.105317, 29.063606), 1)),
			(cv((50.505534, 8.544163, 28.613363), 1)),
			(cv((54.390461, 11.436445, -12.463038), 1)),
			(cv((54.536903, 6.081288, -12.316595), 1)),
			(cv((52.909624, 6.081288, -12.316595), 1)),
			(cv((52.837598, 11.605546, -12.244569), 1)),
			(cv((52.837598, 12.132384, -12.244569), 1)),
			(cv((54.608929, 12.132384, -12.244569), 1)),
			(cv((54.390461, 11.436445, -13.797431), 1)),
			(cv((54.608929, 11.605546, -14.0159), 1)),
			(cv((52.837598, 11.605546, -14.0159), 1)),
			(cv((53.056067, 11.436445, -13.797431), 1)),
			(cv((54.536903, 6.081288, -13.943874), 1)),
			(cv((52.909624, 6.081288, -13.943874), 1)),
			(cv((54.608929, 12.132384, -14.0159), 1)),
			(cv((52.837598, 12.132384, -14.0159), 1)),
			(cv((54.282369, 12.23133, -13.68934), 1)),
			(cv((53.164159, 12.23133, -13.68934), 1)),
			(cv((53.723264, 11.34169, -13.130234), 1)),
			(cv((54.608929, 11.605546, -12.244569), 1)),
			(cv((53.164159, 12.23133, -12.571129), 1)),
			(cv((54.282369, 12.23133, -12.571129), 1)),
			(cv((54.694714, 0.032596, -14.101685), 1)),
			(cv((54.694714, 0.032596, -12.158784), 1)),
			(cv((52.751814, 0.032596, -14.101685), 1)),
			(cv((53.056067, 11.436445, -12.463038), 1)),
			(cv((52.751814, 0.032596, -12.158784), 1)),
			(cv((-42.150661, 11.436445, 23.179521), 1)),
			(cv((-42.004218, 6.081288, 23.325964), 1)),
			(cv((-43.631497, 6.081288, 23.325964), 1)),
			(cv((-43.703523, 11.605546, 23.397989), 1)),
			(cv((-43.703523, 12.132384, 23.397989), 1)),
			(cv((-41.932192, 12.132384, 23.397989), 1)),
			(cv((-42.150661, 11.436445, 21.845127), 1)),
			(cv((-41.932192, 11.605546, 21.626659), 1)),
			(cv((-43.703523, 11.605546, 21.626659), 1)),
			(cv((-43.485054, 11.436445, 21.845127), 1)),
			(cv((-42.004218, 6.081288, 21.698684), 1)),
			(cv((-43.631497, 6.081288, 21.698684), 1)),
			(cv((-41.932192, 12.132384, 21.626659), 1)),
			(cv((-43.703523, 12.132384, 21.626659), 1)),
			(cv((-42.258752, 12.23133, 21.953219), 1)),
			(cv((-43.376963, 12.23133, 21.953219), 1)),
			(cv((-42.817857, 11.34169, 22.512324), 1)),
			(cv((-41.932192, 11.605546, 23.397989), 1)),
			(cv((-43.376963, 12.23133, 23.071429), 1)),
			(cv((-42.258752, 12.23133, 23.071429), 1)),
			(cv((-41.846407, 0.032596, 21.540874), 1)),
			(cv((-41.846407, 0.032596, 23.483774), 1)),
			(cv((-43.789308, 0.032596, 21.540874), 1)),
			(cv((-43.485054, 11.436445, 23.179521), 1)),
			(cv((-43.789308, 0.032596, 23.483774), 1)),
			(cv((-48.077556, 0.0, -5.929784), 1)),
			(cv((-48.077556, 8.722197, -5.929784), 1)),
			(cv((-47.910708, 8.722197, -5.759575), 1)),
			(cv((-47.910708, 0.0, -5.759575), 1)),
			(cv((-47.728069, 8.722197, -5.929808), 1)),
			(cv((-47.728069, 0.0, -5.929808), 1)),
			(cv((-48.952257, 8.544163, -6.997107), 1)),
			(cv((-49.402499, 0.105317, -7.44735), 1)),
			(cv((-49.402499, 0.105317, -4.463767), 1)),
			(cv((-48.952257, 8.544163, -4.91401), 1)),
			(cv((-46.869159, 8.544163, -4.91401), 1)),
			(cv((-46.418917, 0.105317, -4.463767), 1)),
			(cv((-46.869159, 8.544163, -6.997107), 1)),
			(cv((-46.418917, 0.105317, -7.44735), 1)),
			(cv((-49.402499, 0.105317, -4.463767), 1)),
			(cv((-49.402499, 0.105317, -7.44735), 1)),
			(cv((-48.952257, 8.544163, -6.997107), 1)),
			(cv((-48.952257, 8.544163, -4.91401), 1)),
			(cv((-46.869159, 8.544163, -4.91401), 1)),
			(cv((-46.418917, 0.105317, -4.463767), 1)),
			(cv((-46.418917, 0.105317, -7.44735), 1)),
			(cv((-46.869159, 8.544163, -6.997107), 1)),
			(cv((-49.395156, 8.538018, -4.296233), 1)),
			(cv((-49.395156, 9.135396, -4.296233), 1)),
			(cv((-46.426261, 9.135396, -4.296233), 1)),
			(cv((-46.426261, 8.538018, -4.296233), 1)),
			(cv((-49.395156, 8.538018, -7.614885), 1)),
			(cv((-49.395156, 9.135396, -7.614885), 1)),
			(cv((-46.426261, 9.135396, -7.614885), 1)),
			(cv((-46.426261, 8.538018, -7.614885), 1)),
			(cv((-49.395156, 8.538018, -4.296233), 1)),
			(cv((-46.426261, 8.538018, -4.296233), 1)),
			(cv((-46.426261, 8.538018, -7.614885), 1)),
			(cv((-49.395156, 8.538018, -7.614885), 1)),
			(cv((-49.323962, 10.955112, -5.955559), 1)),
			(cv((-49.134622, 10.955112, -6.662186), 1)),
			(cv((-47.910708, 11.633786, -5.955559), 1)),
			(cv((-49.134622, 10.955112, -5.248932), 1)),
			(cv((-48.617335, 10.955112, -4.731645), 1)),
			(cv((-47.910708, 10.955112, -4.542305), 1)),
			(cv((-49.157358, 10.842105, -5.955559), 1)),
			(cv((-49.157358, 8.621191, -5.955559), 1)),
			(cv((-48.990338, 8.621191, -6.578884), 1)),
			(cv((-48.990338, 8.621191, -5.332234), 1)),
			(cv((-48.990338, 10.842105, -5.332234), 1)),
			(cv((-48.534033, 10.842105, -4.875928), 1)),
			(cv((-47.910708, 10.842105, -4.708909), 1)),
			(cv((-47.910708, 8.621191, -4.708909), 1)),
			(cv((-48.534033, 8.621191, -4.875928), 1)),
			(cv((-48.990338, 10.842105, -6.578884), 1)),
			(cv((-47.204081, 10.955112, -4.731645), 1)),
			(cv((-47.910708, 10.955112, -4.542305), 1)),
			(cv((-47.910708, 11.633786, -5.955559), 1)),
			(cv((-46.686794, 10.955112, -5.248932), 1)),
			(cv((-46.497454, 10.955112, -5.955559), 1)),
			(cv((-46.686794, 10.955112, -6.662186), 1)),
			(cv((-47.287383, 10.842105, -4.875928), 1)),
			(cv((-47.287383, 8.621191, -4.875928), 1)),
			(cv((-47.910708, 8.621191, -4.708909), 1)),
			(cv((-46.831078, 8.621191, -5.332234), 1)),
			(cv((-46.831078, 10.842105, -5.332234), 1)),
			(cv((-46.664058, 10.842105, -5.955559), 1)),
			(cv((-46.831078, 10.842105, -6.578884), 1)),
			(cv((-46.831078, 8.621191, -6.578884), 1)),
			(cv((-46.664058, 8.621191, -5.955559), 1)),
			(cv((-47.910708, 10.842105, -4.708909), 1)),
			(cv((-46.426261, 9.135396, -4.296233), 1)),
			(cv((-49.395156, 9.135396, -4.296233), 1)),
			(cv((-49.395156, 8.538018, -4.296233), 1)),
			(cv((-46.426261, 8.538018, -4.296233), 1)),
			(cv((-49.395156, 9.135396, -7.614885), 1)),
			(cv((-49.395156, 8.538018, -7.614885), 1)),
			(cv((-46.426261, 8.538018, -7.614885), 1)),
			(cv((-46.426261, 9.135396, -7.614885), 1)),
			(cv((-46.426261, 8.538018, -7.614885), 1)),
			(cv((-46.426261, 8.538018, -4.296233), 1)),
			(cv((-49.395156, 8.538018, -4.296233), 1)),
			(cv((-49.395156, 8.538018, -7.614885), 1)),
			(cv((46.62148, 11.436445, 16.346554), 1)),
			(cv((46.767923, 6.081288, 16.492997), 1)),
			(cv((45.140644, 6.081288, 16.492997), 1)),
			(cv((45.068618, 11.605546, 16.565023), 1)),
			(cv((45.068618, 12.132384, 16.565023), 1)),
			(cv((46.839949, 12.132384, 16.565023), 1)),
			(cv((46.62148, 11.436445, 15.012161), 1)),
			(cv((46.839949, 11.605546, 14.793692), 1)),
			(cv((45.068618, 11.605546, 14.793692), 1)),
			(cv((45.287087, 11.436445, 15.012161), 1)),
			(cv((46.767923, 6.081288, 14.865718), 1)),
			(cv((45.140644, 6.081288, 14.865718), 1)),
			(cv((46.839949, 12.132384, 14.793692), 1)),
			(cv((45.068618, 12.132384, 14.793692), 1)),
			(cv((46.513389, 12.23133, 15.120252), 1)),
			(cv((45.395178, 12.23133, 15.120252), 1)),
			(cv((45.954283, 11.34169, 15.679358), 1)),
			(cv((46.839949, 11.605546, 16.565023), 1)),
			(cv((45.395178, 12.23133, 16.238463), 1)),
			(cv((46.513389, 12.23133, 16.238463), 1)),
			(cv((46.925734, 0.032596, 14.707907), 1)),
			(cv((46.925734, 0.032596, 16.650808), 1)),
			(cv((44.982833, 0.032596, 14.707907), 1)),
			(cv((45.287087, 11.436445, 16.346554), 1)),
			(cv((44.982833, 0.032596, 16.650808), 1)),
			(cv((45.913708, 3.114352, -17.222056), 1)),
			(cv((45.913708, 11.836549, -17.222056), 1)),
			(cv((45.743499, 11.836549, -17.055208), 1)),
			(cv((45.743499, 3.114352, -17.055208), 1)),
			(cv((45.913732, 11.836549, -16.872569), 1)),
			(cv((45.913732, 3.114352, -16.872569), 1)),
			(cv((46.981032, 11.658515, -18.096756), 1)),
			(cv((47.431274, 3.219669, -18.546999), 1)),
			(cv((44.447692, 3.219669, -18.546999), 1)),
			(cv((44.897935, 11.658515, -18.096756), 1)),
			(cv((44.897935, 11.658515, -16.013659), 1)),
			(cv((44.447692, 3.219669, -15.563417), 1)),
			(cv((46.981032, 11.658515, -16.013659), 1)),
			(cv((47.431274, 3.219669, -15.563417), 1)),
			(cv((44.447692, 3.219669, -18.546999), 1)),
			(cv((47.431274, 3.219669, -18.546999), 1)),
			(cv((46.981032, 11.658515, -18.096756), 1)),
			(cv((44.897935, 11.658515, -18.096756), 1)),
			(cv((44.897935, 11.658515, -16.013659), 1)),
			(cv((44.447692, 3.219669, -15.563417), 1)),
			(cv((47.431274, 3.219669, -15.563417), 1)),
			(cv((46.981032, 11.658515, -16.013659), 1)),
			(cv((44.280157, 11.652371, -18.539655), 1)),
			(cv((44.280157, 12.249748, -18.539655), 1)),
			(cv((44.280157, 12.249748, -15.57076), 1)),
			(cv((44.280157, 11.652371, -15.57076), 1)),
			(cv((47.598809, 11.652371, -18.539655), 1)),
			(cv((47.598809, 12.249748, -18.539655), 1)),
			(cv((47.598809, 12.249748, -15.57076), 1)),
			(cv((47.598809, 11.652371, -15.57076), 1)),
			(cv((44.280157, 11.652371, -18.539655), 1)),
			(cv((44.280157, 11.652371, -15.57076), 1)),
			(cv((47.598809, 11.652371, -15.57076), 1)),
			(cv((47.598809, 11.652371, -18.539655), 1)),
			(cv((45.939483, 14.069464, -18.468462), 1)),
			(cv((46.64611, 14.069464, -18.279122), 1)),
			(cv((45.939483, 14.748139, -17.055208), 1)),
			(cv((45.232856, 14.069464, -18.279122), 1)),
			(cv((44.715569, 14.069464, -17.761835), 1)),
			(cv((44.526229, 14.069464, -17.055208), 1)),
			(cv((45.939483, 13.956458, -18.301858), 1)),
			(cv((45.939483, 11.735543, -18.301858), 1)),
			(cv((46.562808, 11.735543, -18.134838), 1)),
			(cv((45.316158, 11.735543, -18.134838), 1)),
			(cv((45.316158, 13.956458, -18.134838), 1)),
			(cv((44.859853, 13.956458, -17.678533), 1)),
			(cv((44.692833, 13.956458, -17.055208), 1)),
			(cv((44.692833, 11.735543, -17.055208), 1)),
			(cv((44.859853, 11.735543, -17.678533), 1)),
			(cv((46.562808, 13.956458, -18.134838), 1)),
			(cv((44.715569, 14.069464, -16.348581), 1)),
			(cv((44.526229, 14.069464, -17.055208), 1)),
			(cv((45.939483, 14.748139, -17.055208), 1)),
			(cv((45.232856, 14.069464, -15.831294), 1)),
			(cv((45.939483, 14.069464, -15.641954), 1)),
			(cv((46.64611, 14.069464, -15.831294), 1)),
			(cv((44.859853, 13.956458, -16.431883), 1)),
			(cv((44.859853, 11.735543, -16.431883), 1)),
			(cv((44.692833, 11.735543, -17.055208), 1)),
			(cv((45.316158, 11.735543, -15.975577), 1)),
			(cv((45.316158, 13.956458, -15.975577), 1)),
			(cv((45.939483, 13.956458, -15.808558), 1)),
			(cv((46.562808, 13.956458, -15.975577), 1)),
			(cv((46.562808, 11.735543, -15.975577), 1)),
			(cv((45.939483, 11.735543, -15.808558), 1)),
			(cv((44.692833, 13.956458, -17.055208), 1)),
			(cv((44.280157, 12.249748, -15.57076), 1)),
			(cv((44.280157, 12.249748, -18.539655), 1)),
			(cv((44.280157, 11.652371, -18.539655), 1)),
			(cv((44.280157, 11.652371, -15.57076), 1)),
			(cv((47.598809, 12.249748, -18.539655), 1)),
			(cv((47.598809, 11.652371, -18.539655), 1)),
			(cv((47.598809, 11.652371, -15.57076), 1)),
			(cv((47.598809, 12.249748, -15.57076), 1)),
			(cv((47.598809, 11.652371, -15.57076), 1)),
			(cv((44.280157, 11.652371, -15.57076), 1)),
			(cv((44.280157, 11.652371, -18.539655), 1)),
			(cv((47.598809, 11.652371, -18.539655), 1)),
			(cv((-45.469065, 11.436445, -24.086866), 1)),
			(cv((-45.322622, 6.081288, -23.940423), 1)),
			(cv((-46.949901, 6.081288, -23.940423), 1)),
			(cv((-47.021927, 11.605546, -23.868397), 1)),
			(cv((-47.021927, 12.132384, -23.868397), 1)),
			(cv((-45.250596, 12.132384, -23.868397), 1)),
			(cv((-45.469065, 11.436445, -25.42126), 1)),
			(cv((-45.250596, 11.605546, -25.639728), 1)),
			(cv((-47.021927, 11.605546, -25.639728), 1)),
			(cv((-46.803458, 11.436445, -25.42126), 1)),
			(cv((-45.322622, 6.081288, -25.567702), 1)),
			(cv((-46.949901, 6.081288, -25.567702), 1)),
			(cv((-45.250596, 12.132384, -25.639728), 1)),
			(cv((-47.021927, 12.132384, -25.639728), 1)),
			(cv((-45.577156, 12.23133, -25.313168), 1)),
			(cv((-46.695367, 12.23133, -25.313168), 1)),
			(cv((-46.136262, 11.34169, -24.754063), 1)),
			(cv((-45.250596, 11.605546, -23.868397), 1)),
			(cv((-46.695367, 12.23133, -24.194958), 1)),
			(cv((-45.577156, 12.23133, -24.194958), 1)),
			(cv((-45.164811, 0.032596, -25.725513), 1)),
			(cv((-45.164811, 0.032596, -23.782613), 1)),
			(cv((-47.107712, 0.032596, -25.725513), 1)),
			(cv((-46.803458, 11.436445, -24.086866), 1)),
			(cv((-47.107712, 0.032596, -23.782613), 1))	),
	texture_vertices = (
			st( 0.000000, 0.515000 ),
			st( 0.000000, 0.635000 ),
			st( 1.000000, 0.635000 ),
			st( 1.000000, 0.515000 ),
			st( 1.000000, 0.515000 ),
			st( 1.000000, 0.635000 ),
			st( 0.000000, 0.635000 ),
			st( 0.000000, 0.515000 ),
			st( 0.000000, 0.628000 ),
			st( 1.000000, 0.628000 ),
			st( 1.000000, 0.510000 ),
			st( 0.000000, 0.510000 ),
			st( 0.250000, 0.880000 ),
			st( 0.000000, 0.880000 ),
			st( 0.500000, 1.000000 ),
			st( 0.500000, 0.880000 ),
			st( 0.750000, 0.880000 ),
			st( 1.000000, 0.880000 ),
			st( 0.250000, 0.880000 ),
			st( 0.250000, 0.635000 ),
			st( 0.000000, 0.635000 ),
			st( 0.500000, 0.635000 ),
			st( 0.500000, 0.880000 ),
			st( 0.750000, 0.875000 ),
			st( 1.000000, 0.875000 ),
			st( 1.000000, 0.635000 ),
			st( 0.750000, 0.635000 ),
			st( 0.000000, 0.880000 ),
			st( 0.250000, 0.880000 ),
			st( 0.000000, 0.880000 ),
			st( 0.500000, 1.000000 ),
			st( 0.500000, 0.880000 ),
			st( 0.750000, 0.880000 ),
			st( 1.000000, 0.880000 ),
			st( 0.250000, 0.880000 ),
			st( 0.250000, 0.635000 ),
			st( 0.000000, 0.635000 ),
			st( 0.500000, 0.635000 ),
			st( 0.500000, 0.880000 ),
			st( 0.750000, 0.875000 ),
			st( 1.000000, 0.875000 ),
			st( 1.000000, 0.635000 ),
			st( 0.750000, 0.635000 ),
			st( 0.000000, 0.880000 ),
			st( 1.000000, 0.635000 ),
			st( 0.000000, 0.635000 ),
			st( 0.000000, 0.515000 ),
			st( 1.000000, 0.515000 ),
			st( 1.000000, 0.635000 ),
			st( 1.000000, 0.515000 ),
			st( 0.000000, 0.515000 ),
			st( 0.000000, 0.635000 ),
			st( 1.000000, 0.510000 ),
			st( 1.000000, 0.628000 ),
			st( 0.000000, 0.628000 ),
			st( 0.000000, 0.510000 ),
			st( 0.000000, 0.550000 ),
			st( 0.000000, 1.000000 ),
			st( 0.500000, 1.000000 ),
			st( 0.500000, 0.550000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.550000 ),
			st( 0.825000, 0.507500 ),
			st( 0.980000, 0.000000 ),
			st( 0.022500, 0.000000 ),
			st( 0.180000, 0.507500 ),
			st( 0.825000, 0.507500 ),
			st( 0.980000, 0.000000 ),
			st( 0.180000, 0.507500 ),
			st( 0.022500, 0.000000 ),
			st( 0.022500, 0.000000 ),
			st( 0.980000, 0.000000 ),
			st( 0.825000, 0.507500 ),
			st( 0.180000, 0.507500 ),
			st( 0.825000, 0.507500 ),
			st( 0.980000, 0.000000 ),
			st( 0.022500, 0.000000 ),
			st( 0.180000, 0.507500 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.140000 ),
			st( 0.590000, 0.140000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.860000 ),
			st( 0.310000, 0.140000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.320000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.310000, 0.140000 ),
			st( 0.590000, 0.140000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.860000 ),
			st( 0.590000, 0.140000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.860000 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.839556, 0.971449 ),
			st( 0.590000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.600000, 0.970000 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.600000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.600000, 0.140000 ),
			st( 0.600000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.600000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.140000 ),
			st( 0.590000, 0.140000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.860000 ),
			st( 0.310000, 0.140000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.320000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.310000, 0.140000 ),
			st( 0.590000, 0.140000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.860000 ),
			st( 0.590000, 0.140000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.860000 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.839556, 0.971449 ),
			st( 0.590000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.600000, 0.970000 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.600000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.600000, 0.140000 ),
			st( 0.600000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.600000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.000000, 0.550000 ),
			st( 0.000000, 1.000000 ),
			st( 0.500000, 1.000000 ),
			st( 0.500000, 0.550000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.550000 ),
			st( 0.825000, 0.507500 ),
			st( 0.980000, 0.000000 ),
			st( 0.022500, 0.000000 ),
			st( 0.180000, 0.507500 ),
			st( 0.825000, 0.507500 ),
			st( 0.980000, 0.000000 ),
			st( 0.180000, 0.507500 ),
			st( 0.022500, 0.000000 ),
			st( 0.022500, 0.000000 ),
			st( 0.980000, 0.000000 ),
			st( 0.825000, 0.507500 ),
			st( 0.180000, 0.507500 ),
			st( 0.825000, 0.507500 ),
			st( 0.980000, 0.000000 ),
			st( 0.022500, 0.000000 ),
			st( 0.180000, 0.507500 ),
			st( 0.000000, 0.515000 ),
			st( 0.000000, 0.635000 ),
			st( 1.000000, 0.635000 ),
			st( 1.000000, 0.515000 ),
			st( 1.000000, 0.515000 ),
			st( 1.000000, 0.635000 ),
			st( 0.000000, 0.635000 ),
			st( 0.000000, 0.515000 ),
			st( 0.000000, 0.628000 ),
			st( 1.000000, 0.628000 ),
			st( 1.000000, 0.510000 ),
			st( 0.000000, 0.510000 ),
			st( 0.250000, 0.880000 ),
			st( 0.000000, 0.880000 ),
			st( 0.500000, 1.000000 ),
			st( 0.500000, 0.880000 ),
			st( 0.750000, 0.880000 ),
			st( 1.000000, 0.880000 ),
			st( 0.250000, 0.880000 ),
			st( 0.250000, 0.635000 ),
			st( 0.000000, 0.635000 ),
			st( 0.500000, 0.635000 ),
			st( 0.500000, 0.880000 ),
			st( 0.750000, 0.875000 ),
			st( 1.000000, 0.875000 ),
			st( 1.000000, 0.635000 ),
			st( 0.750000, 0.635000 ),
			st( 0.000000, 0.880000 ),
			st( 0.250000, 0.880000 ),
			st( 0.000000, 0.880000 ),
			st( 0.500000, 1.000000 ),
			st( 0.500000, 0.880000 ),
			st( 0.750000, 0.880000 ),
			st( 1.000000, 0.880000 ),
			st( 0.250000, 0.880000 ),
			st( 0.250000, 0.635000 ),
			st( 0.000000, 0.635000 ),
			st( 0.500000, 0.635000 ),
			st( 0.500000, 0.880000 ),
			st( 0.750000, 0.875000 ),
			st( 1.000000, 0.875000 ),
			st( 1.000000, 0.635000 ),
			st( 0.750000, 0.635000 ),
			st( 0.000000, 0.880000 ),
			st( 1.000000, 0.635000 ),
			st( 0.000000, 0.635000 ),
			st( 0.000000, 0.515000 ),
			st( 1.000000, 0.515000 ),
			st( 1.000000, 0.635000 ),
			st( 1.000000, 0.515000 ),
			st( 0.000000, 0.515000 ),
			st( 0.000000, 0.635000 ),
			st( 1.000000, 0.510000 ),
			st( 1.000000, 0.628000 ),
			st( 0.000000, 0.628000 ),
			st( 0.000000, 0.510000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.140000 ),
			st( 0.590000, 0.140000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.860000 ),
			st( 0.310000, 0.140000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.320000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.310000, 0.140000 ),
			st( 0.590000, 0.140000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.860000 ),
			st( 0.590000, 0.140000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.860000 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.839556, 0.971449 ),
			st( 0.590000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.600000, 0.970000 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.600000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.600000, 0.140000 ),
			st( 0.600000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.600000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.000000, 0.550000 ),
			st( 0.000000, 1.000000 ),
			st( 0.500000, 1.000000 ),
			st( 0.500000, 0.550000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.550000 ),
			st( 0.825000, 0.507500 ),
			st( 0.980000, 0.000000 ),
			st( 0.022500, 0.000000 ),
			st( 0.180000, 0.507500 ),
			st( 0.825000, 0.507500 ),
			st( 0.980000, 0.000000 ),
			st( 0.180000, 0.507500 ),
			st( 0.022500, 0.000000 ),
			st( 0.022500, 0.000000 ),
			st( 0.980000, 0.000000 ),
			st( 0.825000, 0.507500 ),
			st( 0.180000, 0.507500 ),
			st( 0.825000, 0.507500 ),
			st( 0.980000, 0.000000 ),
			st( 0.022500, 0.000000 ),
			st( 0.180000, 0.507500 ),
			st( 0.000000, 0.515000 ),
			st( 0.000000, 0.635000 ),
			st( 1.000000, 0.635000 ),
			st( 1.000000, 0.515000 ),
			st( 1.000000, 0.515000 ),
			st( 1.000000, 0.635000 ),
			st( 0.000000, 0.635000 ),
			st( 0.000000, 0.515000 ),
			st( 0.000000, 0.628000 ),
			st( 1.000000, 0.628000 ),
			st( 1.000000, 0.510000 ),
			st( 0.000000, 0.510000 ),
			st( 0.250000, 0.880000 ),
			st( 0.000000, 0.880000 ),
			st( 0.500000, 1.000000 ),
			st( 0.500000, 0.880000 ),
			st( 0.750000, 0.880000 ),
			st( 1.000000, 0.880000 ),
			st( 0.250000, 0.880000 ),
			st( 0.250000, 0.635000 ),
			st( 0.000000, 0.635000 ),
			st( 0.500000, 0.635000 ),
			st( 0.500000, 0.880000 ),
			st( 0.750000, 0.875000 ),
			st( 1.000000, 0.875000 ),
			st( 1.000000, 0.635000 ),
			st( 0.750000, 0.635000 ),
			st( 0.000000, 0.880000 ),
			st( 0.250000, 0.880000 ),
			st( 0.000000, 0.880000 ),
			st( 0.500000, 1.000000 ),
			st( 0.500000, 0.880000 ),
			st( 0.750000, 0.880000 ),
			st( 1.000000, 0.880000 ),
			st( 0.250000, 0.880000 ),
			st( 0.250000, 0.635000 ),
			st( 0.000000, 0.635000 ),
			st( 0.500000, 0.635000 ),
			st( 0.500000, 0.880000 ),
			st( 0.750000, 0.875000 ),
			st( 1.000000, 0.875000 ),
			st( 1.000000, 0.635000 ),
			st( 0.750000, 0.635000 ),
			st( 0.000000, 0.880000 ),
			st( 1.000000, 0.635000 ),
			st( 0.000000, 0.635000 ),
			st( 0.000000, 0.515000 ),
			st( 1.000000, 0.515000 ),
			st( 1.000000, 0.635000 ),
			st( 1.000000, 0.515000 ),
			st( 0.000000, 0.515000 ),
			st( 0.000000, 0.635000 ),
			st( 1.000000, 0.510000 ),
			st( 1.000000, 0.628000 ),
			st( 0.000000, 0.628000 ),
			st( 0.000000, 0.510000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.140000 ),
			st( 0.590000, 0.140000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.860000 ),
			st( 0.310000, 0.140000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.320000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.310000, 0.140000 ),
			st( 0.590000, 0.140000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.860000 ),
			st( 0.590000, 0.140000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.860000 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.839556, 0.971449 ),
			st( 0.590000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.600000, 0.970000 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.600000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.600000, 0.140000 ),
			st( 0.600000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.600000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((0, 4, 5),(0, 4, 5), 0 ),
		polygon ((5, 1, 0),(5, 1, 0), 0 ),
		polygon ((6, 7, 3),(6, 7, 3), 0 ),
		polygon ((3, 2, 6),(3, 2, 6), 0 ),
		polygon ((6, 5, 4),(6, 5, 4), 0 ),
		polygon ((4, 7, 6),(4, 7, 6), 0 ),
		polygon ((8, 9, 10),(8, 9, 10), 0 ),
		polygon ((10, 11, 8),(10, 11, 8), 0 ),
		polygon ((12, 13, 14),(12, 13, 14), 0 ),
		polygon ((14, 15, 12),(14, 15, 12), 0 ),
		polygon ((16, 15, 14),(16, 15, 14), 0 ),
		polygon ((16, 14, 17),(16, 14, 17), 0 ),
		polygon ((18, 19, 20),(18, 19, 20), 0 ),
		polygon ((21, 22, 23),(21, 22, 23), 0 ),
		polygon ((24, 25, 26),(24, 25, 26), 0 ),
		polygon ((26, 23, 24),(26, 23, 24), 0 ),
		polygon ((18, 27, 13),(18, 27, 13), 0 ),
		polygon ((13, 12, 18),(13, 12, 18), 0 ),
		polygon ((18, 12, 15),(18, 12, 15), 0 ),
		polygon ((15, 22, 18),(15, 22, 18), 0 ),
		polygon ((22, 15, 16),(22, 15, 16), 0 ),
		polygon ((16, 23, 22),(16, 23, 22), 0 ),
		polygon ((23, 16, 24),(23, 16, 24), 0 ),
		polygon ((24, 16, 17),(24, 16, 17), 0 ),
		polygon ((20, 27, 18),(20, 27, 18), 0 ),
		polygon ((19, 18, 22),(19, 18, 22), 0 ),
		polygon ((22, 21, 19),(22, 21, 19), 0 ),
		polygon ((23, 26, 21),(23, 26, 21), 0 ),
		polygon ((28, 29, 30),(28, 29, 30), 0 ),
		polygon ((30, 31, 28),(30, 31, 28), 0 ),
		polygon ((32, 31, 30),(32, 31, 30), 0 ),
		polygon ((32, 30, 33),(32, 30, 33), 0 ),
		polygon ((34, 35, 36),(34, 35, 36), 0 ),
		polygon ((37, 38, 39),(37, 38, 39), 0 ),
		polygon ((40, 41, 42),(40, 41, 42), 0 ),
		polygon ((42, 39, 40),(42, 39, 40), 0 ),
		polygon ((34, 43, 29),(34, 43, 29), 0 ),
		polygon ((29, 28, 34),(29, 28, 34), 0 ),
		polygon ((34, 28, 31),(34, 28, 31), 0 ),
		polygon ((31, 38, 34),(31, 38, 34), 0 ),
		polygon ((38, 31, 32),(38, 31, 32), 0 ),
		polygon ((32, 39, 38),(32, 39, 38), 0 ),
		polygon ((39, 32, 40),(39, 32, 40), 0 ),
		polygon ((40, 32, 33),(40, 32, 33), 0 ),
		polygon ((36, 43, 34),(36, 43, 34), 0 ),
		polygon ((35, 34, 38),(35, 34, 38), 0 ),
		polygon ((38, 37, 35),(38, 37, 35), 0 ),
		polygon ((39, 42, 37),(39, 42, 37), 0 ),
		polygon ((44, 45, 46),(44, 45, 46), 0 ),
		polygon ((46, 47, 44),(46, 47, 44), 0 ),
		polygon ((48, 49, 46),(48, 49, 46), 0 ),
		polygon ((46, 45, 48),(46, 45, 48), 0 ),
		polygon ((47, 50, 51),(47, 50, 51), 0 ),
		polygon ((51, 44, 47),(51, 44, 47), 0 ),
		polygon ((49, 48, 51),(49, 48, 51), 0 ),
		polygon ((51, 50, 49),(51, 50, 49), 0 ),
		polygon ((52, 53, 54),(52, 53, 54), 0 ),
		polygon ((54, 55, 52),(54, 55, 52), 0 ),
		polygon ((56, 57, 58),(56, 57, 58), 1 ),
		polygon ((58, 59, 56),(58, 59, 56), 1 ),
		polygon ((59, 58, 60),(59, 58, 60), 1 ),
		polygon ((60, 61, 59),(60, 61, 59), 1 ),
		polygon ((62, 63, 64),(62, 63, 64), 0 ),
		polygon ((64, 65, 62),(64, 65, 62), 0 ),
		polygon ((66, 65, 64),(66, 65, 64), 0 ),
		polygon ((64, 67, 66),(64, 67, 66), 0 ),
		polygon ((68, 69, 63),(68, 69, 63), 0 ),
		polygon ((63, 62, 68),(63, 62, 68), 0 ),
		polygon ((66, 67, 69),(66, 67, 69), 0 ),
		polygon ((69, 68, 66),(69, 68, 66), 0 ),
		polygon ((70, 71, 72),(70, 71, 72), 0 ),
		polygon ((72, 73, 70),(72, 73, 70), 0 ),
		polygon ((70, 73, 74),(70, 73, 74), 0 ),
		polygon ((74, 75, 70),(74, 75, 70), 0 ),
		polygon ((71, 76, 77),(71, 76, 77), 0 ),
		polygon ((77, 72, 71),(77, 72, 71), 0 ),
		polygon ((76, 75, 74),(76, 75, 74), 0 ),
		polygon ((74, 77, 76),(74, 77, 76), 0 ),
		polygon ((78, 79, 80),(78, 84, 90), 2 ),
		polygon ((81, 82, 83),(96, 101, 105), 2 ),
		polygon ((84, 85, 86),(110, 114, 118), 2 ),
		polygon ((86, 87, 84),(118, 122, 110), 2 ),
		polygon ((88, 84, 87),(126, 110, 122), 2 ),
		polygon ((87, 89, 88),(122, 131, 126), 2 ),
		polygon ((85, 90, 91),(114, 137, 141), 2 ),
		polygon ((91, 86, 85),(141, 118, 114), 2 ),
		polygon ((90, 92, 93),(137, 145, 150), 2 ),
		polygon ((93, 91, 90),(150, 141, 137), 2 ),
		polygon ((93, 92, 94),(151, 146, 154), 3 ),
		polygon ((83, 95, 81),(105, 155, 96), 2 ),
		polygon ((82, 96, 97),(101, 161, 166), 2 ),
		polygon ((78, 95, 85),(79, 156, 115), 2 ),
		polygon ((85, 84, 78),(116, 111, 80), 2 ),
		polygon ((79, 78, 84),(85, 81, 112), 2 ),
		polygon ((84, 88, 79),(113, 127, 86), 2 ),
		polygon ((95, 83, 90),(157, 106, 138), 2 ),
		polygon ((90, 85, 95),(139, 117, 158), 2 ),
		polygon ((83, 97, 92),(107, 167, 147), 2 ),
		polygon ((92, 90, 83),(148, 140, 108), 2 ),
		polygon ((92, 97, 94),(149, 168, 154), 3 ),
		polygon ((98, 99, 88),(171, 174, 128), 2 ),
		polygon ((88, 99, 79),(129, 174, 87), 2 ),
		polygon ((100, 98, 89),(176, 172, 132), 2 ),
		polygon ((89, 98, 88),(133, 173, 130), 2 ),
		polygon ((97, 83, 82),(169, 109, 101), 2 ),
		polygon ((97, 96, 94),(170, 162, 154), 3 ),
		polygon ((87, 86, 81),(123, 119, 97), 2 ),
		polygon ((81, 101, 87),(98, 179, 124), 2 ),
		polygon ((89, 87, 101),(134, 125, 179), 2 ),
		polygon ((101, 80, 89),(179, 91, 135), 2 ),
		polygon ((86, 91, 82),(120, 142, 102), 2 ),
		polygon ((82, 81, 86),(103, 99, 121), 2 ),
		polygon ((91, 93, 96),(143, 152, 163), 2 ),
		polygon ((96, 82, 91),(164, 104, 144), 2 ),
		polygon ((96, 93, 94),(165, 153, 154), 3 ),
		polygon ((102, 100, 80),(183, 177, 92), 2 ),
		polygon ((80, 100, 89),(93, 178, 136), 2 ),
		polygon ((99, 102, 79),(175, 184, 88), 2 ),
		polygon ((79, 102, 80),(89, 185, 94), 2 ),
		polygon ((101, 81, 95),(180, 100, 159), 2 ),
		polygon ((95, 78, 101),(160, 82, 181), 2 ),
		polygon ((80, 101, 78),(95, 182, 83), 2 ),
		polygon ((103, 104, 105),(186, 192, 198), 2 ),
		polygon ((106, 107, 108),(204, 209, 213), 2 ),
		polygon ((109, 110, 111),(218, 222, 226), 2 ),
		polygon ((111, 112, 109),(226, 230, 218), 2 ),
		polygon ((113, 109, 112),(234, 218, 230), 2 ),
		polygon ((112, 114, 113),(230, 239, 234), 2 ),
		polygon ((110, 115, 116),(222, 245, 249), 2 ),
		polygon ((116, 111, 110),(249, 226, 222), 2 ),
		polygon ((115, 117, 118),(245, 253, 258), 2 ),
		polygon ((118, 116, 115),(258, 249, 245), 2 ),
		polygon ((118, 117, 119),(259, 254, 262), 3 ),
		polygon ((108, 120, 106),(213, 263, 204), 2 ),
		polygon ((107, 121, 122),(209, 269, 274), 2 ),
		polygon ((103, 120, 110),(187, 264, 223), 2 ),
		polygon ((110, 109, 103),(224, 219, 188), 2 ),
		polygon ((104, 103, 109),(193, 189, 220), 2 ),
		polygon ((109, 113, 104),(221, 235, 194), 2 ),
		polygon ((120, 108, 115),(265, 214, 246), 2 ),
		polygon ((115, 110, 120),(247, 225, 266), 2 ),
		polygon ((108, 122, 117),(215, 275, 255), 2 ),
		polygon ((117, 115, 108),(256, 248, 216), 2 ),
		polygon ((117, 122, 119),(257, 276, 262), 3 ),
		polygon ((123, 124, 113),(279, 282, 236), 2 ),
		polygon ((113, 124, 104),(237, 282, 195), 2 ),
		polygon ((125, 123, 114),(284, 280, 240), 2 ),
		polygon ((114, 123, 113),(241, 281, 238), 2 ),
		polygon ((122, 108, 107),(277, 217, 209), 2 ),
		polygon ((122, 121, 119),(278, 270, 262), 3 ),
		polygon ((112, 111, 106),(231, 227, 205), 2 ),
		polygon ((106, 126, 112),(206, 287, 232), 2 ),
		polygon ((114, 112, 126),(242, 233, 287), 2 ),
		polygon ((126, 105, 114),(287, 199, 243), 2 ),
		polygon ((111, 116, 107),(228, 250, 210), 2 ),
		polygon ((107, 106, 111),(211, 207, 229), 2 ),
		polygon ((116, 118, 121),(251, 260, 271), 2 ),
		polygon ((121, 107, 116),(272, 212, 252), 2 ),
		polygon ((121, 118, 119),(273, 261, 262), 3 ),
		polygon ((127, 125, 105),(291, 285, 200), 2 ),
		polygon ((105, 125, 114),(201, 286, 244), 2 ),
		polygon ((124, 127, 104),(283, 292, 196), 2 ),
		polygon ((104, 127, 105),(197, 293, 202), 2 ),
		polygon ((126, 106, 120),(288, 208, 267), 2 ),
		polygon ((120, 103, 126),(268, 190, 289), 2 ),
		polygon ((105, 126, 103),(203, 290, 191), 2 ),
		polygon ((128, 129, 130),(294, 295, 296), 1 ),
		polygon ((130, 131, 128),(296, 297, 294), 1 ),
		polygon ((131, 130, 132),(297, 296, 298), 1 ),
		polygon ((132, 133, 131),(298, 299, 297), 1 ),
		polygon ((134, 135, 136),(300, 301, 302), 0 ),
		polygon ((136, 137, 134),(302, 303, 300), 0 ),
		polygon ((138, 137, 136),(304, 303, 302), 0 ),
		polygon ((136, 139, 138),(302, 305, 304), 0 ),
		polygon ((140, 141, 135),(306, 307, 301), 0 ),
		polygon ((135, 134, 140),(301, 300, 306), 0 ),
		polygon ((138, 139, 141),(304, 305, 307), 0 ),
		polygon ((141, 140, 138),(307, 306, 304), 0 ),
		polygon ((142, 143, 144),(308, 309, 310), 0 ),
		polygon ((144, 145, 142),(310, 311, 308), 0 ),
		polygon ((142, 145, 146),(308, 311, 312), 0 ),
		polygon ((146, 147, 142),(312, 313, 308), 0 ),
		polygon ((143, 148, 149),(309, 314, 315), 0 ),
		polygon ((149, 144, 143),(315, 310, 309), 0 ),
		polygon ((148, 147, 146),(314, 313, 312), 0 ),
		polygon ((146, 149, 148),(312, 315, 314), 0 ),
		polygon ((150, 151, 152),(316, 317, 318), 0 ),
		polygon ((152, 153, 150),(318, 319, 316), 0 ),
		polygon ((150, 154, 155),(316, 320, 321), 0 ),
		polygon ((155, 151, 150),(321, 317, 316), 0 ),
		polygon ((156, 157, 153),(322, 323, 319), 0 ),
		polygon ((153, 152, 156),(319, 318, 322), 0 ),
		polygon ((156, 155, 154),(322, 321, 320), 0 ),
		polygon ((154, 157, 156),(320, 323, 322), 0 ),
		polygon ((158, 159, 160),(324, 325, 326), 0 ),
		polygon ((160, 161, 158),(326, 327, 324), 0 ),
		polygon ((162, 163, 164),(328, 329, 330), 0 ),
		polygon ((164, 165, 162),(330, 331, 328), 0 ),
		polygon ((166, 165, 164),(332, 331, 330), 0 ),
		polygon ((166, 164, 167),(332, 330, 333), 0 ),
		polygon ((168, 169, 170),(334, 335, 336), 0 ),
		polygon ((171, 172, 173),(337, 338, 339), 0 ),
		polygon ((174, 175, 176),(340, 341, 342), 0 ),
		polygon ((176, 173, 174),(342, 339, 340), 0 ),
		polygon ((168, 177, 163),(334, 343, 329), 0 ),
		polygon ((163, 162, 168),(329, 328, 334), 0 ),
		polygon ((168, 162, 165),(334, 328, 331), 0 ),
		polygon ((165, 172, 168),(331, 338, 334), 0 ),
		polygon ((172, 165, 166),(338, 331, 332), 0 ),
		polygon ((166, 173, 172),(332, 339, 338), 0 ),
		polygon ((173, 166, 174),(339, 332, 340), 0 ),
		polygon ((174, 166, 167),(340, 332, 333), 0 ),
		polygon ((170, 177, 168),(336, 343, 334), 0 ),
		polygon ((169, 168, 172),(335, 334, 338), 0 ),
		polygon ((172, 171, 169),(338, 337, 335), 0 ),
		polygon ((173, 176, 171),(339, 342, 337), 0 ),
		polygon ((178, 179, 180),(344, 345, 346), 0 ),
		polygon ((180, 181, 178),(346, 347, 344), 0 ),
		polygon ((182, 181, 180),(348, 347, 346), 0 ),
		polygon ((182, 180, 183),(348, 346, 349), 0 ),
		polygon ((184, 185, 186),(350, 351, 352), 0 ),
		polygon ((187, 188, 189),(353, 354, 355), 0 ),
		polygon ((190, 191, 192),(356, 357, 358), 0 ),
		polygon ((192, 189, 190),(358, 355, 356), 0 ),
		polygon ((184, 193, 179),(350, 359, 345), 0 ),
		polygon ((179, 178, 184),(345, 344, 350), 0 ),
		polygon ((184, 178, 181),(350, 344, 347), 0 ),
		polygon ((181, 188, 184),(347, 354, 350), 0 ),
		polygon ((188, 181, 182),(354, 347, 348), 0 ),
		polygon ((182, 189, 188),(348, 355, 354), 0 ),
		polygon ((189, 182, 190),(355, 348, 356), 0 ),
		polygon ((190, 182, 183),(356, 348, 349), 0 ),
		polygon ((186, 193, 184),(352, 359, 350), 0 ),
		polygon ((185, 184, 188),(351, 350, 354), 0 ),
		polygon ((188, 187, 185),(354, 353, 351), 0 ),
		polygon ((189, 192, 187),(355, 358, 353), 0 ),
		polygon ((194, 195, 196),(360, 361, 362), 0 ),
		polygon ((196, 197, 194),(362, 363, 360), 0 ),
		polygon ((198, 199, 196),(364, 365, 362), 0 ),
		polygon ((196, 195, 198),(362, 361, 364), 0 ),
		polygon ((197, 200, 201),(363, 366, 367), 0 ),
		polygon ((201, 194, 197),(367, 360, 363), 0 ),
		polygon ((199, 198, 201),(365, 364, 367), 0 ),
		polygon ((201, 200, 199),(367, 366, 365), 0 ),
		polygon ((202, 203, 204),(368, 369, 370), 0 ),
		polygon ((204, 205, 202),(370, 371, 368), 0 ),
		polygon ((206, 207, 208),(372, 378, 384), 2 ),
		polygon ((209, 210, 211),(390, 395, 399), 2 ),
		polygon ((212, 213, 214),(404, 408, 412), 2 ),
		polygon ((214, 215, 212),(412, 416, 404), 2 ),
		polygon ((216, 212, 215),(420, 404, 416), 2 ),
		polygon ((215, 217, 216),(416, 425, 420), 2 ),
		polygon ((213, 218, 219),(408, 431, 435), 2 ),
		polygon ((219, 214, 213),(435, 412, 408), 2 ),
		polygon ((218, 220, 221),(431, 439, 444), 2 ),
		polygon ((221, 219, 218),(444, 435, 431), 2 ),
		polygon ((221, 220, 222),(445, 440, 448), 3 ),
		polygon ((211, 223, 209),(399, 449, 390), 2 ),
		polygon ((210, 224, 225),(395, 455, 460), 2 ),
		polygon ((206, 223, 213),(373, 450, 409), 2 ),
		polygon ((213, 212, 206),(410, 405, 374), 2 ),
		polygon ((207, 206, 212),(379, 375, 406), 2 ),
		polygon ((212, 216, 207),(407, 421, 380), 2 ),
		polygon ((223, 211, 218),(451, 400, 432), 2 ),
		polygon ((218, 213, 223),(433, 411, 452), 2 ),
		polygon ((211, 225, 220),(401, 461, 441), 2 ),
		polygon ((220, 218, 211),(442, 434, 402), 2 ),
		polygon ((220, 225, 222),(443, 462, 448), 3 ),
		polygon ((226, 227, 216),(465, 468, 422), 2 ),
		polygon ((216, 227, 207),(423, 468, 381), 2 ),
		polygon ((228, 226, 217),(470, 466, 426), 2 ),
		polygon ((217, 226, 216),(427, 467, 424), 2 ),
		polygon ((225, 211, 210),(463, 403, 395), 2 ),
		polygon ((225, 224, 222),(464, 456, 448), 3 ),
		polygon ((215, 214, 209),(417, 413, 391), 2 ),
		polygon ((209, 229, 215),(392, 473, 418), 2 ),
		polygon ((217, 215, 229),(428, 419, 473), 2 ),
		polygon ((229, 208, 217),(473, 385, 429), 2 ),
		polygon ((214, 219, 210),(414, 436, 396), 2 ),
		polygon ((210, 209, 214),(397, 393, 415), 2 ),
		polygon ((219, 221, 224),(437, 446, 457), 2 ),
		polygon ((224, 210, 219),(458, 398, 438), 2 ),
		polygon ((224, 221, 222),(459, 447, 448), 3 ),
		polygon ((230, 228, 208),(477, 471, 386), 2 ),
		polygon ((208, 228, 217),(387, 472, 430), 2 ),
		polygon ((227, 230, 207),(469, 478, 382), 2 ),
		polygon ((207, 230, 208),(383, 479, 388), 2 ),
		polygon ((229, 209, 223),(474, 394, 453), 2 ),
		polygon ((223, 206, 229),(454, 376, 475), 2 ),
		polygon ((208, 229, 206),(389, 476, 377), 2 ),
		polygon ((231, 232, 233),(480, 481, 482), 1 ),
		polygon ((233, 234, 231),(482, 483, 480), 1 ),
		polygon ((234, 233, 235),(483, 482, 484), 1 ),
		polygon ((235, 236, 234),(484, 485, 483), 1 ),
		polygon ((237, 238, 239),(486, 487, 488), 0 ),
		polygon ((239, 240, 237),(488, 489, 486), 0 ),
		polygon ((241, 240, 239),(490, 489, 488), 0 ),
		polygon ((239, 242, 241),(488, 491, 490), 0 ),
		polygon ((243, 244, 238),(492, 493, 487), 0 ),
		polygon ((238, 237, 243),(487, 486, 492), 0 ),
		polygon ((241, 242, 244),(490, 491, 493), 0 ),
		polygon ((244, 243, 241),(493, 492, 490), 0 ),
		polygon ((245, 246, 247),(494, 495, 496), 0 ),
		polygon ((247, 248, 245),(496, 497, 494), 0 ),
		polygon ((245, 248, 249),(494, 497, 498), 0 ),
		polygon ((249, 250, 245),(498, 499, 494), 0 ),
		polygon ((246, 251, 252),(495, 500, 501), 0 ),
		polygon ((252, 247, 246),(501, 496, 495), 0 ),
		polygon ((251, 250, 249),(500, 499, 498), 0 ),
		polygon ((249, 252, 251),(498, 501, 500), 0 ),
		polygon ((253, 254, 255),(502, 503, 504), 0 ),
		polygon ((255, 256, 253),(504, 505, 502), 0 ),
		polygon ((253, 257, 258),(502, 506, 507), 0 ),
		polygon ((258, 254, 253),(507, 503, 502), 0 ),
		polygon ((259, 260, 256),(508, 509, 505), 0 ),
		polygon ((256, 255, 259),(505, 504, 508), 0 ),
		polygon ((259, 258, 257),(508, 507, 506), 0 ),
		polygon ((257, 260, 259),(506, 509, 508), 0 ),
		polygon ((261, 262, 263),(510, 511, 512), 0 ),
		polygon ((263, 264, 261),(512, 513, 510), 0 ),
		polygon ((265, 266, 267),(514, 515, 516), 0 ),
		polygon ((267, 268, 265),(516, 517, 514), 0 ),
		polygon ((269, 268, 267),(518, 517, 516), 0 ),
		polygon ((269, 267, 270),(518, 516, 519), 0 ),
		polygon ((271, 272, 273),(520, 521, 522), 0 ),
		polygon ((274, 275, 276),(523, 524, 525), 0 ),
		polygon ((277, 278, 279),(526, 527, 528), 0 ),
		polygon ((279, 276, 277),(528, 525, 526), 0 ),
		polygon ((271, 280, 266),(520, 529, 515), 0 ),
		polygon ((266, 265, 271),(515, 514, 520), 0 ),
		polygon ((271, 265, 268),(520, 514, 517), 0 ),
		polygon ((268, 275, 271),(517, 524, 520), 0 ),
		polygon ((275, 268, 269),(524, 517, 518), 0 ),
		polygon ((269, 276, 275),(518, 525, 524), 0 ),
		polygon ((276, 269, 277),(525, 518, 526), 0 ),
		polygon ((277, 269, 270),(526, 518, 519), 0 ),
		polygon ((273, 280, 271),(522, 529, 520), 0 ),
		polygon ((272, 271, 275),(521, 520, 524), 0 ),
		polygon ((275, 274, 272),(524, 523, 521), 0 ),
		polygon ((276, 279, 274),(525, 528, 523), 0 ),
		polygon ((281, 282, 283),(530, 531, 532), 0 ),
		polygon ((283, 284, 281),(532, 533, 530), 0 ),
		polygon ((285, 284, 283),(534, 533, 532), 0 ),
		polygon ((285, 283, 286),(534, 532, 535), 0 ),
		polygon ((287, 288, 289),(536, 537, 538), 0 ),
		polygon ((290, 291, 292),(539, 540, 541), 0 ),
		polygon ((293, 294, 295),(542, 543, 544), 0 ),
		polygon ((295, 292, 293),(544, 541, 542), 0 ),
		polygon ((287, 296, 282),(536, 545, 531), 0 ),
		polygon ((282, 281, 287),(531, 530, 536), 0 ),
		polygon ((287, 281, 284),(536, 530, 533), 0 ),
		polygon ((284, 291, 287),(533, 540, 536), 0 ),
		polygon ((291, 284, 285),(540, 533, 534), 0 ),
		polygon ((285, 292, 291),(534, 541, 540), 0 ),
		polygon ((292, 285, 293),(541, 534, 542), 0 ),
		polygon ((293, 285, 286),(542, 534, 535), 0 ),
		polygon ((289, 296, 287),(538, 545, 536), 0 ),
		polygon ((288, 287, 291),(537, 536, 540), 0 ),
		polygon ((291, 290, 288),(540, 539, 537), 0 ),
		polygon ((292, 295, 290),(541, 544, 539), 0 ),
		polygon ((297, 298, 299),(546, 547, 548), 0 ),
		polygon ((299, 300, 297),(548, 549, 546), 0 ),
		polygon ((301, 302, 299),(550, 551, 548), 0 ),
		polygon ((299, 298, 301),(548, 547, 550), 0 ),
		polygon ((300, 303, 304),(549, 552, 553), 0 ),
		polygon ((304, 297, 300),(553, 546, 549), 0 ),
		polygon ((302, 301, 304),(551, 550, 553), 0 ),
		polygon ((304, 303, 302),(553, 552, 551), 0 ),
		polygon ((305, 306, 307),(554, 555, 556), 0 ),
		polygon ((307, 308, 305),(556, 557, 554), 0 ),
		polygon ((309, 310, 311),(558, 564, 570), 2 ),
		polygon ((312, 313, 314),(576, 581, 585), 2 ),
		polygon ((315, 316, 317),(590, 594, 598), 2 ),
		polygon ((317, 318, 315),(598, 602, 590), 2 ),
		polygon ((319, 315, 318),(606, 590, 602), 2 ),
		polygon ((318, 320, 319),(602, 611, 606), 2 ),
		polygon ((316, 321, 322),(594, 617, 621), 2 ),
		polygon ((322, 317, 316),(621, 598, 594), 2 ),
		polygon ((321, 323, 324),(617, 625, 630), 2 ),
		polygon ((324, 322, 321),(630, 621, 617), 2 ),
		polygon ((324, 323, 325),(631, 626, 634), 3 ),
		polygon ((314, 326, 312),(585, 635, 576), 2 ),
		polygon ((313, 327, 328),(581, 641, 646), 2 ),
		polygon ((309, 326, 316),(559, 636, 595), 2 ),
		polygon ((316, 315, 309),(596, 591, 560), 2 ),
		polygon ((310, 309, 315),(565, 561, 592), 2 ),
		polygon ((315, 319, 310),(593, 607, 566), 2 ),
		polygon ((326, 314, 321),(637, 586, 618), 2 ),
		polygon ((321, 316, 326),(619, 597, 638), 2 ),
		polygon ((314, 328, 323),(587, 647, 627), 2 ),
		polygon ((323, 321, 314),(628, 620, 588), 2 ),
		polygon ((323, 328, 325),(629, 648, 634), 3 ),
		polygon ((329, 330, 319),(651, 654, 608), 2 ),
		polygon ((319, 330, 310),(609, 654, 567), 2 ),
		polygon ((331, 329, 320),(656, 652, 612), 2 ),
		polygon ((320, 329, 319),(613, 653, 610), 2 ),
		polygon ((328, 314, 313),(649, 589, 581), 2 ),
		polygon ((328, 327, 325),(650, 642, 634), 3 ),
		polygon ((318, 317, 312),(603, 599, 577), 2 ),
		polygon ((312, 332, 318),(578, 659, 604), 2 ),
		polygon ((320, 318, 332),(614, 605, 659), 2 ),
		polygon ((332, 311, 320),(659, 571, 615), 2 ),
		polygon ((317, 322, 313),(600, 622, 582), 2 ),
		polygon ((313, 312, 317),(583, 579, 601), 2 ),
		polygon ((322, 324, 327),(623, 632, 643), 2 ),
		polygon ((327, 313, 322),(644, 584, 624), 2 ),
		polygon ((327, 324, 325),(645, 633, 634), 3 ),
		polygon ((333, 331, 311),(663, 657, 572), 2 ),
		polygon ((311, 331, 320),(573, 658, 616), 2 ),
		polygon ((330, 333, 310),(655, 664, 568), 2 ),
		polygon ((310, 333, 311),(569, 665, 574), 2 ),
		polygon ((332, 312, 326),(660, 580, 639), 2 ),
		polygon ((326, 309, 332),(640, 562, 661), 2 ),
		polygon ((311, 332, 309),(575, 662, 563), 2 )
	)
); /* end of polyset 'scenery' */

polyset building_northeast (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = ON,
	opposite = OFF,
	shader = (rooftop ),
	shader = (buildingb3 ),
	shader = (buildingb4 ),
	shader = (buildingb1 ),
	shader = (buildingb5 ),
	shader = (buildingb2 ),
	shader = (buildingb6 ),
	casts_shadow = TRUE,
	vertices = ((cv((1.711141, 5.4744, -22.553975), 1)),
			(cv((1.268662, 5.4744, -22.553975), 1)),
			(cv((1.490532, 5.553498, -22.765566), 1)),
			(cv((1.268662, 5.4744, -22.965902), 1)),
			(cv((1.711141, 5.4744, -22.965902), 1)),
			(cv((10.1467, 5.474401, -14.316967), 1)),
			(cv((9.724844, 5.474401, -14.316967), 1)),
			(cv((9.934877, 5.553498, -14.537602), 1)),
			(cv((9.724844, 5.474401, -14.74903), 1)),
			(cv((10.1467, 5.474401, -14.74903), 1)),
			(cv((4.445856, 5.228343, -14.971074), 1)),
			(cv((1.934897, 5.228343, -17.396167), 1)),
			(cv((4.445856, 5.228343, -17.396167), 1)),
			(cv((1.934897, 5.228343, -14.971074), 1)),
			(cv((4.445856, 5.228343, -19.82126), 1)),
			(cv((1.934897, 5.228343, -19.82126), 1)),
			(cv((1.934897, 5.228343, -22.246353), 1)),
			(cv((4.445856, 5.228343, -22.246353), 1)),
			(cv((6.956816, 5.228343, -22.246353), 1)),
			(cv((6.956816, 5.228343, -19.82126), 1)),
			(cv((6.956816, 5.228343, -17.396167), 1)),
			(cv((6.956816, 5.228343, -14.971074), 1)),
			(cv((9.467775, 5.228343, -17.396167), 1)),
			(cv((9.467775, 5.228343, -14.971074), 1)),
			(cv((9.467775, 5.228343, -19.82126), 1)),
			(cv((9.467775, 5.228343, -22.246353), 1)),
			(cv((10.1467, 5.474401, -22.574111), 1)),
			(cv((9.724844, 5.474401, -22.574111), 1)),
			(cv((9.934877, 5.553498, -22.77461), 1)),
			(cv((9.724844, 5.474401, -22.986038), 1)),
			(cv((10.1467, 5.474401, -22.986038), 1)),
			(cv((1.711141, 5.474401, -14.316967), 1)),
			(cv((1.268662, 5.474401, -14.316967), 1)),
			(cv((1.490532, 5.553498, -14.528558), 1)),
			(cv((1.268662, 5.474401, -14.728894), 1)),
			(cv((1.711141, 5.474401, -14.728894), 1)),
			(cv((9.467775, 5.474401, -14.971074), 1)),
			(cv((9.803315, 5.474401, -14.652269), 1)),
			(cv((7.187354, 5.474401, -14.652269), 1)),
			(cv((6.956816, 5.474401, -14.971074), 1)),
			(cv((4.228008, 5.474401, -14.652269), 1)),
			(cv((4.445857, 5.474401, -14.971074), 1)),
			(cv((1.612047, 5.474401, -14.652269), 1)),
			(cv((1.934897, 5.474401, -14.971074), 1)),
			(cv((9.790624, 5.474401, -22.565157), 1)),
			(cv((9.803315, 5.474401, -20.096348), 1)),
			(cv((9.467775, 5.474401, -19.82126), 1)),
			(cv((9.467775, 5.474401, -22.246353), 1)),
			(cv((9.803315, 5.474401, -17.206657), 1)),
			(cv((9.467775, 5.474401, -17.396168), 1)),
			(cv((1.612047, 5.474401, -17.206657), 1)),
			(cv((1.934897, 5.474401, -17.396168), 1)),
			(cv((1.612047, 5.474401, -20.096348), 1)),
			(cv((1.934897, 5.474401, -19.82126), 1)),
			(cv((1.599357, 5.474401, -22.565157), 1)),
			(cv((1.934897, 5.474401, -22.246353), 1)),
			(cv((4.215318, 5.474401, -22.565157), 1)),
			(cv((4.445857, 5.474401, -22.246353), 1)),
			(cv((7.174664, 5.474401, -22.565157), 1)),
			(cv((6.956816, 5.474401, -22.246353), 1)),
			(cv((1.934897, 5.228343, -22.246353), 1)),
			(cv((4.445857, 5.228343, -22.246353), 1)),
			(cv((6.956816, 5.228343, -22.246353), 1)),
			(cv((9.467775, 5.228343, -22.246353), 1)),
			(cv((9.467775, 5.228343, -19.82126), 1)),
			(cv((9.467775, 5.228343, -17.396168), 1)),
			(cv((9.467775, 5.228343, -14.971074), 1)),
			(cv((1.934897, 5.228343, -14.971074), 1)),
			(cv((1.934897, 5.228343, -17.396168), 1)),
			(cv((1.934897, 5.228343, -19.82126), 1)),
			(cv((6.956816, 5.228343, -14.971074), 1)),
			(cv((4.445857, 5.228343, -14.971074), 1)),
			(cv((10.1467, 5.474401, -22.986038), 1)),
			(cv((10.1467, 2.88969, -22.986038), 1)),
			(cv((10.1467, 2.88969, -22.574111), 1)),
			(cv((10.1467, 5.474401, -22.574111), 1)),
			(cv((9.803315, 2.88969, -20.096348), 1)),
			(cv((9.803315, 5.474401, -20.096348), 1)),
			(cv((9.803315, 5.474401, -22.574111), 1)),
			(cv((9.803315, 2.88969, -22.574111), 1)),
			(cv((10.1467, 2.736042, -14.316967), 1)),
			(cv((10.1467, 2.88969, -14.316967), 1)),
			(cv((10.1467, 2.88969, -14.74903), 1)),
			(cv((10.1467, 2.736042, -14.74903), 1)),
			(cv((10.1467, 2.88969, -17.206657), 1)),
			(cv((10.1467, 2.736042, -17.206657), 1)),
			(cv((9.803315, 5.474401, -14.74903), 1)),
			(cv((9.803315, 5.474401, -17.206657), 1)),
			(cv((9.803315, 2.88969, -14.74903), 1)),
			(cv((9.803315, 2.88969, -17.206657), 1)),
			(cv((10.1467, 5.474401, -14.74903), 1)),
			(cv((9.803315, 2.736042, -14.74903), 1)),
			(cv((9.803315, 2.736042, -17.206657), 1)),
			(cv((9.803315, 0.0, -14.74903), 1)),
			(cv((10.1467, 0.0, -14.74903), 1)),
			(cv((9.803315, 0.0, -17.206657), 1)),
			(cv((10.1467, 0.0, -14.316967), 1)),
			(cv((10.1467, 5.474401, -14.316967), 1)),
			(cv((10.1467, 2.88969, -20.096348), 1)),
			(cv((10.1467, 2.736042, -20.096348), 1)),
			(cv((9.803315, 2.736042, -20.096348), 1)),
			(cv((9.803315, 0.0, -20.096348), 1)),
			(cv((10.1467, 2.736042, -22.574111), 1)),
			(cv((9.803315, 2.736042, -22.574111), 1)),
			(cv((9.803315, 0.0, -22.574111), 1)),
			(cv((10.1467, 2.736042, -22.986038), 1)),
			(cv((10.1467, 0.0, -22.574111), 1)),
			(cv((10.1467, 0.0, -22.986038), 1)),
			(cv((1.268662, 5.474401, -14.316967), 1)),
			(cv((1.268662, 2.88969, -14.316967), 1)),
			(cv((1.268662, 2.88969, -14.728894), 1)),
			(cv((1.268662, 5.474401, -14.728894), 1)),
			(cv((1.612047, 2.88969, -17.206658), 1)),
			(cv((1.612047, 5.474401, -17.206658), 1)),
			(cv((1.612047, 5.474401, -14.728894), 1)),
			(cv((1.612047, 2.88969, -14.728894), 1)),
			(cv((1.268662, 2.736042, -22.986038), 1)),
			(cv((1.268662, 2.88969, -22.986038), 1)),
			(cv((1.268662, 2.88969, -22.553975), 1)),
			(cv((1.268662, 2.736042, -22.553975), 1)),
			(cv((1.268662, 2.88969, -20.096348), 1)),
			(cv((1.268662, 2.736042, -20.096348), 1)),
			(cv((1.612047, 5.474401, -22.553975), 1)),
			(cv((1.612047, 5.474401, -20.096348), 1)),
			(cv((1.612047, 2.88969, -22.553975), 1)),
			(cv((1.612047, 2.88969, -20.096348), 1)),
			(cv((1.268662, 5.474401, -22.553975), 1)),
			(cv((1.612047, 2.736042, -22.553975), 1)),
			(cv((1.612047, 2.736042, -20.096348), 1)),
			(cv((1.612047, 0.0, -22.553975), 1)),
			(cv((1.268662, 0.0, -22.553975), 1)),
			(cv((1.612047, 0.0, -20.096348), 1)),
			(cv((1.268662, 0.0, -22.986038), 1)),
			(cv((1.268662, 5.474401, -22.986038), 1)),
			(cv((1.268662, 2.88969, -17.206658), 1)),
			(cv((1.268662, 2.736042, -17.206658), 1)),
			(cv((1.612047, 2.736042, -17.206658), 1)),
			(cv((1.612048, 0.0, -17.206657), 1)),
			(cv((1.268662, 2.736042, -14.728894), 1)),
			(cv((1.612047, 2.736042, -14.728894), 1)),
			(cv((1.612047, 0.0, -14.728894), 1)),
			(cv((1.268662, 2.736042, -14.316967), 1)),
			(cv((1.268662, 0.0, -14.728894), 1)),
			(cv((1.268662, 0.0, -14.316967), 1)),
			(cv((9.724844, 2.88969, -14.316967), 1)),
			(cv((9.724844, 5.474401, -14.316967), 1)),
			(cv((7.187354, 2.88969, -14.65227), 1)),
			(cv((7.187354, 5.474401, -14.65227), 1)),
			(cv((9.724844, 5.474401, -14.65227), 1)),
			(cv((9.724844, 2.88969, -14.65227), 1)),
			(cv((1.711141, 2.88969, -14.316967), 1)),
			(cv((1.711141, 2.736042, -14.316967), 1)),
			(cv((4.228008, 2.88969, -14.316967), 1)),
			(cv((4.228008, 2.736042, -14.316967), 1)),
			(cv((1.711141, 5.474401, -14.65227), 1)),
			(cv((4.228008, 5.474401, -14.65227), 1)),
			(cv((1.711141, 2.88969, -14.65227), 1)),
			(cv((4.228008, 2.88969, -14.65227), 1)),
			(cv((1.711141, 5.474401, -14.316967), 1)),
			(cv((1.711141, 2.736042, -14.65227), 1)),
			(cv((4.228008, 2.736042, -14.65227), 1)),
			(cv((1.711141, 0.0, -14.65227), 1)),
			(cv((1.711141, 0.0, -14.316967), 1)),
			(cv((4.228008, 0.0, -14.65227), 1)),
			(cv((7.187354, 2.88969, -14.316967), 1)),
			(cv((7.187354, 2.736042, -14.316967), 1)),
			(cv((7.187354, 2.736042, -14.65227), 1)),
			(cv((7.187354, 0.0, -14.65227), 1)),
			(cv((9.724844, 2.736042, -14.316967), 1)),
			(cv((9.724844, 2.736042, -14.65227), 1)),
			(cv((9.724844, 0.0, -14.65227), 1)),
			(cv((9.724844, 0.0, -14.316967), 1))	),
	texture_vertices = (
			st( 0.189878, 0.999619 ),
			st( 0.189224, 0.807394 ),
			st( 0.094312, 0.902541 ),
			st( 0.000651, 0.807142 ),
			st( 0.000670, 0.998527 ),
			st( 0.189878, 0.999619 ),
			st( 0.189224, 0.807394 ),
			st( 0.094312, 0.902541 ),
			st( 0.000651, 0.807142 ),
			st( 0.000670, 0.998527 ),
			st( 0.333300, 0.000000 ),
			st( 0.000000, 0.199716 ),
			st( 0.333333, 0.199718 ),
			st( 0.000000, 0.000000 ),
			st( 0.333333, 0.399438 ),
			st( 0.000000, 0.399432 ),
			st( 0.000000, 0.599154 ),
			st( 0.333333, 0.599154 ),
			st( 0.666666, 0.599154 ),
			st( 0.666666, 0.399435 ),
			st( 0.666660, 0.199718 ),
			st( 0.666660, 0.000000 ),
			st( 1.000000, 0.199718 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.399435 ),
			st( 1.000000, 0.599154 ),
			st( 0.189878, 0.999619 ),
			st( 0.189224, 0.807394 ),
			st( 0.094312, 0.902541 ),
			st( 0.000651, 0.807142 ),
			st( 0.000670, 0.998527 ),
			st( 0.189878, 0.999619 ),
			st( 0.189224, 0.807394 ),
			st( 0.094312, 0.902541 ),
			st( 0.000651, 0.807142 ),
			st( 0.000670, 0.998527 ),
			st( 0.120028, 0.760505 ),
			st( 0.000000, 0.805015 ),
			st( 0.909663, 0.807021 ),
			st( 1.000000, 0.757141 ),
			st( 2.088527, 0.807615 ),
			st( 2.000000, 0.757141 ),
			st( 3.000000, 0.809580 ),
			st( 2.896777, 0.756347 ),
			st( 3.000000, 0.809580 ),
			st( 2.088527, 0.807615 ),
			st( 2.000000, 0.757141 ),
			st( 2.896777, 0.756347 ),
			st( 0.909663, 0.807021 ),
			st( 1.000000, 0.757141 ),
			st( 2.088527, 0.807615 ),
			st( 2.000000, 0.757141 ),
			st( 0.909663, 0.807021 ),
			st( 1.000000, 0.757141 ),
			st( 0.000000, 0.805015 ),
			st( 0.120028, 0.760505 ),
			st( 0.909663, 0.807021 ),
			st( 1.000000, 0.757141 ),
			st( 2.088527, 0.807615 ),
			st( 2.000000, 0.757141 ),
			st( 0.120028, 0.612545 ),
			st( 1.000000, 0.612665 ),
			st( 2.000000, 0.612665 ),
			st( 2.896777, 0.614252 ),
			st( 2.000000, 0.612665 ),
			st( 1.000000, 0.612665 ),
			st( 0.120028, 0.612545 ),
			st( 2.896777, 0.614252 ),
			st( 2.000000, 0.612665 ),
			st( 1.000000, 0.612665 ),
			st( 1.000000, 0.612665 ),
			st( 2.000000, 0.612665 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.850000, 0.000000 ),
			st( 0.850000, 1.000000 ),
			st( 0.850000, 1.000000 ),
			st( 0.850000, 1.000000 ),
			st( 0.850000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.948500 ),
			st( 1.000000, 0.948500 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.815000, 1.000000 ),
			st( 0.815000, 0.000000 ),
			st( 0.850000, 0.948500 ),
			st( 0.850000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 1.000000, 0.948500 ),
			st( 1.000000, 0.948500 ),
			st( 1.000000, 0.948500 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.150000, 1.000000 ),
			st( 0.150000, 0.000000 ),
			st( 0.150000, 0.950000 ),
			st( 0.150000, 0.950000 ),
			st( 0.150000, 0.000000 ),
			st( 0.150000, 0.948500 ),
			st( 0.150000, 1.000000 ),
			st( 0.150000, 0.948500 ),
			st( 0.150000, 0.948500 ),
			st( 0.150000, 0.948500 ),
			st( 0.150000, 0.948500 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.950000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.948500 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.180000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.180000, 0.000000 ),
			st( 0.150000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.000000 ),
			st( 0.150000, 1.000000 ),
			st( 0.150000, 0.948500 ),
			st( 0.185000, 0.948500 ),
			st( 0.185000, 0.948500 ),
			st( 1.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.185000, 0.000000 ),
			st( 0.150000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 1.000000, 0.948500 ),
			st( 0.000000, 0.985000 ),
			st( 0.000000, 0.985000 ),
			st( 0.000000, 0.948500 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.850000, 0.948500 ),
			st( 0.850000, 0.985000 ),
			st( 0.815000, 0.948500 ),
			st( 0.815000, 0.948500 ),
			st( 0.815000, 0.948500 ),
			st( 0.815000, 0.948500 ),
			st( 0.815000, 0.000000 ),
			st( 1.000000, 0.948500 ),
			st( 0.850000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.850000, 0.000000 ),
			st( 0.850000, 1.000000 ),
			st( 0.850000, 1.000000 ),
			st( 0.850000, 1.000000 ),
			st( 0.850000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.948500 ),
			st( 1.000000, 0.948500 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.815000, 1.000000 ),
			st( 0.815000, 0.000000 ),
			st( 0.850000, 0.948500 ),
			st( 0.850000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.150000, 1.000000 ),
			st( 0.150000, 0.000000 ),
			st( 0.150000, 0.950000 ),
			st( 0.150000, 0.950000 ),
			st( 0.150000, 0.000000 ),
			st( 0.150000, 0.948500 ),
			st( 0.150000, 1.000000 ),
			st( 0.150000, 0.948500 ),
			st( 0.150000, 0.948500 ),
			st( 0.150000, 0.948500 ),
			st( 0.150000, 0.948500 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.950000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.948500 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.180000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.180000, 0.000000 ),
			st( 0.150000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.000000 ),
			st( 0.150000, 1.000000 ),
			st( 0.150000, 0.948500 ),
			st( 0.185000, 0.948500 ),
			st( 0.185000, 0.948500 ),
			st( 1.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.185000, 0.000000 ),
			st( 0.150000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 1.000000, 0.948500 ),
			st( 0.000000, 0.985000 ),
			st( 0.000000, 0.985000 ),
			st( 0.000000, 0.948500 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.850000, 0.948500 ),
			st( 0.850000, 0.985000 ),
			st( 0.815000, 0.948500 ),
			st( 0.815000, 0.948500 ),
			st( 0.815000, 0.948500 ),
			st( 0.815000, 0.948500 ),
			st( 0.815000, 0.000000 ),
			st( 1.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.850000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.850000, 0.000000 ),
			st( 0.850000, 1.000000 ),
			st( 0.850000, 1.000000 ),
			st( 0.850000, 1.000000 ),
			st( 0.850000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.948500 ),
			st( 1.000000, 0.948500 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.815000, 1.000000 ),
			st( 0.815000, 0.000000 ),
			st( 0.850000, 0.948500 ),
			st( 0.850000, 0.948500 ),
			st( 0.150000, 1.000000 ),
			st( 0.150000, 0.000000 ),
			st( 0.150000, 0.950000 ),
			st( 0.150000, 0.950000 ),
			st( 0.150000, 0.000000 ),
			st( 0.150000, 0.948500 ),
			st( 0.150000, 1.000000 ),
			st( 0.150000, 0.948500 ),
			st( 0.150000, 0.948500 ),
			st( 0.150000, 0.948500 ),
			st( 0.150000, 0.948500 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.950000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.948500 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.180000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.180000, 0.000000 ),
			st( 0.150000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.000000 ),
			st( 0.150000, 1.000000 ),
			st( 0.150000, 0.948500 ),
			st( 0.185000, 0.948500 ),
			st( 0.185000, 0.948500 ),
			st( 1.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.185000, 0.000000 ),
			st( 0.150000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 1.000000, 0.948500 ),
			st( 0.000000, 0.985000 ),
			st( 0.000000, 0.985000 ),
			st( 0.000000, 0.948500 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.850000, 0.948500 ),
			st( 0.850000, 0.985000 ),
			st( 0.815000, 0.948500 ),
			st( 0.815000, 0.948500 ),
			st( 0.815000, 0.948500 ),
			st( 0.815000, 0.948500 ),
			st( 0.815000, 0.000000 ),
			st( 0.850000, 0.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 1, 3),(2, 1, 3), 0 ),
		polygon ((3, 4, 2),(3, 4, 2), 0 ),
		polygon ((2, 4, 0),(2, 4, 0), 0 ),
		polygon ((5, 6, 7),(5, 6, 7), 0 ),
		polygon ((7, 6, 8),(7, 6, 8), 0 ),
		polygon ((8, 9, 7),(8, 9, 7), 0 ),
		polygon ((7, 9, 5),(7, 9, 5), 0 ),
		polygon ((10, 11, 12),(10, 11, 12), 0 ),
		polygon ((11, 10, 13),(11, 10, 13), 0 ),
		polygon ((11, 14, 12),(11, 14, 12), 0 ),
		polygon ((14, 11, 15),(14, 11, 15), 0 ),
		polygon ((14, 15, 16),(14, 15, 16), 0 ),
		polygon ((16, 17, 14),(16, 17, 14), 0 ),
		polygon ((14, 17, 18),(14, 17, 18), 0 ),
		polygon ((18, 19, 14),(18, 19, 14), 0 ),
		polygon ((14, 19, 20),(14, 19, 20), 0 ),
		polygon ((20, 12, 14),(20, 12, 14), 0 ),
		polygon ((12, 20),(12, 20), 0 ),
		polygon ((20, 21, 10),(20, 21, 10), 0 ),
		polygon ((10, 12, 20),(10, 12, 20), 0 ),
		polygon ((20, 22, 23),(20, 22, 23), 0 ),
		polygon ((23, 21, 20),(23, 21, 20), 0 ),
		polygon ((20, 19, 24),(20, 19, 24), 0 ),
		polygon ((24, 22, 20),(24, 22, 20), 0 ),
		polygon ((24, 19, 18),(24, 19, 18), 0 ),
		polygon ((18, 25, 24),(18, 25, 24), 0 ),
		polygon ((26, 27, 28),(26, 27, 28), 0 ),
		polygon ((28, 27, 29),(28, 27, 29), 0 ),
		polygon ((29, 30, 28),(29, 30, 28), 0 ),
		polygon ((28, 30, 26),(28, 30, 26), 0 ),
		polygon ((31, 32, 33),(31, 32, 33), 0 ),
		polygon ((33, 32, 34),(33, 32, 34), 0 ),
		polygon ((34, 35, 33),(34, 35, 33), 0 ),
		polygon ((33, 35, 31),(33, 35, 31), 0 ),
		polygon ((36, 37, 38),(36, 37, 38), 0 ),
		polygon ((38, 39, 36),(38, 39, 36), 0 ),
		polygon ((39, 38, 40),(39, 38, 40), 0 ),
		polygon ((40, 41, 39),(40, 41, 39), 0 ),
		polygon ((41, 40, 42),(41, 40, 42), 0 ),
		polygon ((42, 43, 41),(42, 43, 41), 0 ),
		polygon ((44, 45, 46),(44, 45, 46), 0 ),
		polygon ((46, 47, 44),(46, 47, 44), 0 ),
		polygon ((45, 48, 49),(45, 48, 49), 0 ),
		polygon ((49, 46, 45),(49, 46, 45), 0 ),
		polygon ((49, 48, 37),(49, 48, 37), 0 ),
		polygon ((37, 36, 49),(37, 36, 49), 0 ),
		polygon ((43, 42, 50),(43, 42, 50), 0 ),
		polygon ((50, 51, 43),(50, 51, 43), 0 ),
		polygon ((52, 53, 51),(52, 53, 51), 0 ),
		polygon ((53, 52, 54),(53, 52, 54), 0 ),
		polygon ((54, 55, 53),(54, 55, 53), 0 ),
		polygon ((51, 50, 52),(51, 50, 52), 0 ),
		polygon ((55, 54, 56),(55, 54, 56), 0 ),
		polygon ((56, 57, 55),(56, 57, 55), 0 ),
		polygon ((57, 56, 58),(57, 56, 58), 0 ),
		polygon ((58, 59, 57),(58, 59, 57), 0 ),
		polygon ((59, 58, 44),(59, 58, 44), 0 ),
		polygon ((44, 47, 59),(44, 47, 59), 0 ),
		polygon ((60, 55, 61),(60, 55, 61), 0 ),
		polygon ((61, 55, 57),(61, 55, 57), 0 ),
		polygon ((57, 59, 61),(57, 59, 61), 0 ),
		polygon ((61, 59, 62),(61, 59, 62), 0 ),
		polygon ((62, 59, 63),(62, 59, 63), 0 ),
		polygon ((63, 59, 47),(63, 59, 47), 0 ),
		polygon ((47, 46, 64),(47, 46, 64), 0 ),
		polygon ((64, 63, 47),(64, 63, 47), 0 ),
		polygon ((64, 46, 65),(64, 46, 65), 0 ),
		polygon ((65, 46, 49),(65, 46, 49), 0 ),
		polygon ((49, 36, 66),(49, 36, 66), 0 ),
		polygon ((66, 65, 49),(66, 65, 49), 0 ),
		polygon ((67, 43, 51),(67, 43, 51), 0 ),
		polygon ((51, 68, 43),(51, 68, 43), 0 ),
		polygon ((51, 53, 69),(51, 53, 69), 0 ),
		polygon ((69, 68, 51),(69, 68, 51), 0 ),
		polygon ((69, 53, 55),(69, 53, 55), 0 ),
		polygon ((55, 60, 69),(55, 60, 69), 0 ),
		polygon ((66, 36, 70),(66, 36, 70), 0 ),
		polygon ((70, 36, 39),(70, 36, 39), 0 ),
		polygon ((39, 41, 70),(39, 41, 70), 0 ),
		polygon ((70, 41, 71),(70, 41, 71), 0 ),
		polygon ((71, 41, 67),(71, 41, 67), 0 ),
		polygon ((67, 41, 43),(67, 41, 43), 0 ),
		polygon ((72, 73, 74),(72, 73, 76), 1 ),
		polygon ((74, 75, 72),(76, 80, 72), 1 ),
		polygon ((76, 77, 78),(81, 87, 89), 1 ),
		polygon ((78, 79, 76),(89, 90, 81), 1 ),
		polygon ((78, 75, 74),(89, 80, 76), 1 ),
		polygon ((74, 79, 78),(76, 90, 89), 1 ),
		polygon ((80, 81, 82),(93, 97, 103), 2 ),
		polygon ((82, 83, 80),(103, 108, 93), 2 ),
		polygon ((83, 84, 85),(108, 114, 119), 2 ),
		polygon ((82, 84, 83),(103, 114, 108), 2 ),
		polygon ((86, 87, 88),(125, 126, 129), 3 ),
		polygon ((89, 88, 87),(131, 129, 126), 3 ),
		polygon ((88, 82, 90),(129, 104, 136), 3 ),
		polygon ((90, 86, 88),(136, 125, 129), 3 ),
		polygon ((91, 83, 85),(137, 109, 120), 2 ),
		polygon ((85, 92, 91),(121, 140, 137), 2 ),
		polygon ((83, 91, 93),(110, 138, 145), 2 ),
		polygon ((93, 94, 83),(145, 146, 111), 2 ),
		polygon ((95, 93, 92),(147, 145, 140), 2 ),
		polygon ((91, 92, 93),(139, 140, 145), 2 ),
		polygon ((83, 94, 96),(112, 146, 149), 2 ),
		polygon ((96, 80, 83),(149, 93, 113), 2 ),
		polygon ((82, 88, 89),(105, 130, 132), 2 ),
		polygon ((89, 84, 82),(133, 115, 106), 2 ),
		polygon ((90, 82, 81),(136, 107, 98), 3 ),
		polygon ((81, 97, 90),(99, 151, 136), 3 ),
		polygon ((85, 98, 99),(122, 154, 159), 4 ),
		polygon ((84, 98, 85),(116, 154, 123), 4 ),
		polygon ((92, 100, 101),(141, 162, 166), 4 ),
		polygon ((101, 95, 92),(166, 148, 142), 4 ),
		polygon ((84, 89, 76),(117, 134, 82), 4 ),
		polygon ((76, 98, 84),(83, 154, 118), 4 ),
		polygon ((92, 85, 99),(143, 124, 159), 4 ),
		polygon ((99, 100, 92),(159, 162, 144), 4 ),
		polygon ((87, 77, 76),(127, 88, 84), 5 ),
		polygon ((76, 89, 87),(85, 135, 128), 5 ),
		polygon ((98, 76, 79),(155, 86, 91), 6 ),
		polygon ((79, 74, 98),(92, 77, 156), 6 ),
		polygon ((102, 103, 100),(169, 170, 163), 6 ),
		polygon ((100, 99, 102),(164, 160, 169), 6 ),
		polygon ((101, 100, 103),(167, 165, 171), 6 ),
		polygon ((103, 104, 101),(172, 175, 168), 6 ),
		polygon ((98, 74, 102),(157, 78, 169), 6 ),
		polygon ((102, 99, 98),(169, 161, 158), 6 ),
		polygon ((73, 105, 102),(74, 176, 169), 6 ),
		polygon ((102, 74, 73),(169, 79, 75), 6 ),
		polygon ((103, 102, 106),(173, 169, 177), 6 ),
		polygon ((106, 104, 103),(177, 175, 174), 6 ),
		polygon ((105, 107, 106),(176, 178, 177), 6 ),
		polygon ((106, 102, 105),(177, 169, 176), 6 ),
		polygon ((108, 109, 110),(179, 181, 187), 1 ),
		polygon ((110, 111, 108),(187, 191, 179), 1 ),
		polygon ((112, 113, 114),(192, 198, 200), 1 ),
		polygon ((114, 115, 112),(200, 201, 192), 1 ),
		polygon ((114, 111, 110),(200, 191, 187), 1 ),
		polygon ((110, 115, 114),(187, 201, 200), 1 ),
		polygon ((116, 117, 118),(204, 205, 208), 2 ),
		polygon ((118, 119, 116),(208, 213, 204), 2 ),
		polygon ((119, 120, 121),(213, 219, 224), 2 ),
		polygon ((118, 120, 119),(208, 219, 213), 2 ),
		polygon ((122, 123, 124),(230, 231, 234), 3 ),
		polygon ((125, 124, 123),(236, 234, 231), 3 ),
		polygon ((124, 118, 126),(234, 209, 241), 3 ),
		polygon ((126, 122, 124),(241, 230, 234), 3 ),
		polygon ((127, 119, 121),(242, 214, 225), 2 ),
		polygon ((121, 128, 127),(226, 245, 242), 2 ),
		polygon ((119, 127, 129),(215, 243, 250), 2 ),
		polygon ((129, 130, 119),(250, 251, 216), 2 ),
		polygon ((131, 129, 128),(252, 250, 245), 2 ),
		polygon ((127, 128, 129),(244, 245, 250), 2 ),
		polygon ((119, 130, 132),(217, 251, 254), 2 ),
		polygon ((132, 116, 119),(254, 204, 218), 2 ),
		polygon ((118, 124, 125),(210, 235, 237), 2 ),
		polygon ((125, 120, 118),(238, 220, 211), 2 ),
		polygon ((126, 118, 117),(241, 212, 206), 3 ),
		polygon ((117, 133, 126),(207, 255, 241), 3 ),
		polygon ((121, 134, 135),(227, 256, 261), 4 ),
		polygon ((120, 134, 121),(221, 256, 228), 4 ),
		polygon ((128, 136, 137),(246, 264, 268), 4 ),
		polygon ((137, 131, 128),(268, 253, 247), 4 ),
		polygon ((120, 125, 112),(222, 239, 193), 4 ),
		polygon ((112, 134, 120),(194, 256, 223), 4 ),
		polygon ((128, 121, 135),(248, 229, 261), 4 ),
		polygon ((135, 136, 128),(261, 264, 249), 4 ),
		polygon ((123, 113, 112),(232, 199, 195), 5 ),
		polygon ((112, 125, 123),(196, 240, 233), 5 ),
		polygon ((134, 112, 115),(257, 197, 202), 6 ),
		polygon ((115, 110, 134),(203, 188, 258), 6 ),
		polygon ((138, 139, 136),(271, 272, 265), 6 ),
		polygon ((136, 135, 138),(266, 262, 271), 6 ),
		polygon ((137, 136, 139),(269, 267, 273), 6 ),
		polygon ((139, 140, 137),(274, 277, 270), 6 ),
		polygon ((134, 110, 138),(259, 189, 271), 6 ),
		polygon ((138, 135, 134),(271, 263, 260), 6 ),
		polygon ((109, 141, 138),(182, 278, 271), 6 ),
		polygon ((138, 110, 109),(271, 190, 183), 6 ),
		polygon ((139, 138, 142),(275, 271, 282), 6 ),
		polygon ((142, 140, 139),(282, 277, 276), 6 ),
		polygon ((141, 143, 142),(278, 283, 282), 6 ),
		polygon ((142, 138, 141),(282, 271, 278), 6 ),
		polygon ((97, 81, 144),(152, 100, 286), 1 ),
		polygon ((144, 145, 97),(286, 290, 153), 1 ),
		polygon ((146, 147, 148),(291, 297, 299), 1 ),
		polygon ((148, 149, 146),(299, 300, 291), 1 ),
		polygon ((148, 145, 144),(299, 290, 286), 1 ),
		polygon ((144, 149, 148),(286, 300, 299), 1 ),
		polygon ((141, 109, 150),(279, 184, 303), 2 ),
		polygon ((150, 151, 141),(303, 308, 280), 2 ),
		polygon ((151, 152, 153),(308, 314, 319), 2 ),
		polygon ((150, 152, 151),(303, 314, 308), 2 ),
		polygon ((154, 155, 156),(325, 326, 329), 3 ),
		polygon ((157, 156, 155),(331, 329, 326), 3 ),
		polygon ((156, 150, 158),(329, 304, 336), 3 ),
		polygon ((158, 154, 156),(336, 325, 329), 3 ),
		polygon ((159, 151, 153),(337, 309, 320), 2 ),
		polygon ((153, 160, 159),(321, 340, 337), 2 ),
		polygon ((151, 159, 161),(310, 338, 345), 2 ),
		polygon ((161, 162, 151),(345, 346, 311), 2 ),
		polygon ((163, 161, 160),(347, 345, 340), 2 ),
		polygon ((159, 160, 161),(339, 340, 345), 2 ),
		polygon ((151, 162, 143),(312, 346, 284), 2 ),
		polygon ((143, 141, 151),(285, 281, 313), 2 ),
		polygon ((150, 156, 157),(305, 330, 332), 2 ),
		polygon ((157, 152, 150),(333, 315, 306), 2 ),
		polygon ((158, 150, 109),(336, 307, 185), 3 ),
		polygon ((109, 108, 158),(186, 180, 336), 3 ),
		polygon ((153, 164, 165),(322, 349, 354), 4 ),
		polygon ((152, 164, 153),(316, 349, 323), 4 ),
		polygon ((160, 166, 167),(341, 357, 361), 4 ),
		polygon ((167, 163, 160),(361, 348, 342), 4 ),
		polygon ((152, 157, 146),(317, 334, 292), 4 ),
		polygon ((146, 164, 152),(293, 349, 318), 4 ),
		polygon ((160, 153, 165),(343, 324, 354), 4 ),
		polygon ((165, 166, 160),(354, 357, 344), 4 ),
		polygon ((155, 147, 146),(327, 298, 294), 5 ),
		polygon ((146, 157, 155),(295, 335, 328), 5 ),
		polygon ((164, 146, 149),(350, 296, 301), 6 ),
		polygon ((149, 144, 164),(302, 287, 351), 6 ),
		polygon ((168, 169, 166),(364, 365, 358), 6 ),
		polygon ((166, 165, 168),(359, 355, 364), 6 ),
		polygon ((167, 166, 169),(362, 360, 366), 6 ),
		polygon ((169, 170, 167),(367, 370, 363), 6 ),
		polygon ((164, 144, 168),(352, 288, 364), 6 ),
		polygon ((168, 165, 164),(364, 356, 353), 6 ),
		polygon ((81, 80, 168),(101, 94, 364), 6 ),
		polygon ((168, 144, 81),(364, 289, 102), 6 ),
		polygon ((169, 168, 171),(368, 364, 371), 6 ),
		polygon ((171, 170, 169),(371, 370, 369), 6 ),
		polygon ((80, 96, 171),(95, 150, 371), 6 ),
		polygon ((171, 168, 80),(371, 364, 96), 6 )
	)
); /* end of polyset 'building_northeast' */

polyset building_southwest (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = ON,
	opposite = OFF,
	shader = (rooftop ),
	shader = (buildingb3 ),
	shader = (buildingb4 ),
	shader = (buildingb1 ),
	shader = (buildingb5 ),
	shader = (buildingb2 ),
	shader = (buildingb6 ),
	casts_shadow = TRUE,
	vertices = ((cv((-1.706953, 5.4744, 21.78235), 1)),
			(cv((-1.274889, 5.4744, 21.78235), 1)),
			(cv((-1.491536, 5.553498, 21.99394), 1)),
			(cv((-1.274889, 5.4744, 22.194277), 1)),
			(cv((-1.706953, 5.4744, 22.194277), 1)),
			(cv((-9.943961, 5.474401, 13.545342), 1)),
			(cv((-9.532034, 5.474401, 13.545342), 1)),
			(cv((-9.737123, 5.553498, 13.765977), 1)),
			(cv((-9.532034, 5.474401, 13.977405), 1)),
			(cv((-9.943961, 5.474401, 13.977405), 1)),
			(cv((-4.3773, 5.228343, 14.199449), 1)),
			(cv((-1.925443, 5.228343, 16.624542), 1)),
			(cv((-4.3773, 5.228343, 16.624542), 1)),
			(cv((-1.925443, 5.228343, 14.199449), 1)),
			(cv((-4.3773, 5.228343, 19.049635), 1)),
			(cv((-1.925443, 5.228343, 19.049635), 1)),
			(cv((-1.925443, 5.228343, 21.474728), 1)),
			(cv((-4.3773, 5.228343, 21.474728), 1)),
			(cv((-6.829158, 5.228343, 21.474728), 1)),
			(cv((-6.829158, 5.228343, 19.049635), 1)),
			(cv((-6.829158, 5.228343, 16.624542), 1)),
			(cv((-6.829158, 5.228343, 14.199449), 1)),
			(cv((-9.281016, 5.228343, 16.624542), 1)),
			(cv((-9.281016, 5.228343, 14.199449), 1)),
			(cv((-9.281016, 5.228343, 19.049635), 1)),
			(cv((-9.281016, 5.228343, 21.474728), 1)),
			(cv((-9.943961, 5.474401, 21.802486), 1)),
			(cv((-9.532034, 5.474401, 21.802486), 1)),
			(cv((-9.737123, 5.553498, 22.002985), 1)),
			(cv((-9.532034, 5.474401, 22.214413), 1)),
			(cv((-9.943961, 5.474401, 22.214413), 1)),
			(cv((-1.706953, 5.474401, 13.545342), 1)),
			(cv((-1.274889, 5.474401, 13.545342), 1)),
			(cv((-1.491536, 5.553498, 13.756932), 1)),
			(cv((-1.274889, 5.474401, 13.957269), 1)),
			(cv((-1.706953, 5.474401, 13.957269), 1)),
			(cv((-9.281016, 5.474401, 14.199449), 1)),
			(cv((-9.608658, 5.474401, 13.880644), 1)),
			(cv((-7.05427, 5.474401, 13.880644), 1)),
			(cv((-6.829158, 5.474401, 14.199449), 1)),
			(cv((-4.16458, 5.474401, 13.880644), 1)),
			(cv((-4.3773, 5.474401, 14.199449), 1)),
			(cv((-1.610192, 5.474401, 13.880644), 1)),
			(cv((-1.925443, 5.474401, 14.199449), 1)),
			(cv((-9.596266, 5.474401, 21.793532), 1)),
			(cv((-9.608658, 5.474401, 19.324723), 1)),
			(cv((-9.281016, 5.474401, 19.049635), 1)),
			(cv((-9.281016, 5.474401, 21.474728), 1)),
			(cv((-9.608658, 5.474401, 16.435032), 1)),
			(cv((-9.281016, 5.474401, 16.624542), 1)),
			(cv((-1.610192, 5.474401, 16.435032), 1)),
			(cv((-1.925443, 5.474401, 16.624542), 1)),
			(cv((-1.610192, 5.474401, 19.324723), 1)),
			(cv((-1.925443, 5.474401, 19.049635), 1)),
			(cv((-1.5978, 5.474401, 21.793532), 1)),
			(cv((-1.925443, 5.474401, 21.474728), 1)),
			(cv((-4.152188, 5.474401, 21.793532), 1)),
			(cv((-4.3773, 5.474401, 21.474728), 1)),
			(cv((-7.041879, 5.474401, 21.793532), 1)),
			(cv((-6.829158, 5.474401, 21.474728), 1)),
			(cv((-1.925443, 5.228343, 21.474728), 1)),
			(cv((-4.3773, 5.228343, 21.474728), 1)),
			(cv((-6.829158, 5.228343, 21.474728), 1)),
			(cv((-9.281016, 5.228343, 21.474728), 1)),
			(cv((-9.281016, 5.228343, 19.049635), 1)),
			(cv((-9.281016, 5.228343, 16.624542), 1)),
			(cv((-9.281016, 5.228343, 14.199449), 1)),
			(cv((-1.925443, 5.228343, 14.199449), 1)),
			(cv((-1.925443, 5.228343, 16.624542), 1)),
			(cv((-1.925443, 5.228343, 19.049635), 1)),
			(cv((-6.829158, 5.228343, 14.199449), 1)),
			(cv((-4.3773, 5.228343, 14.199449), 1)),
			(cv((-9.943961, 5.474401, 22.214413), 1)),
			(cv((-9.943961, 2.88969, 22.214413), 1)),
			(cv((-9.943961, 2.88969, 21.802486), 1)),
			(cv((-9.943961, 5.474401, 21.802486), 1)),
			(cv((-9.608658, 2.88969, 19.324722), 1)),
			(cv((-9.608658, 5.474401, 19.324722), 1)),
			(cv((-9.608658, 5.474401, 21.802486), 1)),
			(cv((-9.608658, 2.88969, 21.802486), 1)),
			(cv((-9.943961, 2.736042, 13.545342), 1)),
			(cv((-9.943961, 2.88969, 13.545342), 1)),
			(cv((-9.943961, 2.88969, 13.977405), 1)),
			(cv((-9.943961, 2.736042, 13.977405), 1)),
			(cv((-9.943961, 2.88969, 16.435032), 1)),
			(cv((-9.943961, 2.736042, 16.435032), 1)),
			(cv((-9.608658, 5.474401, 13.977405), 1)),
			(cv((-9.608658, 5.474401, 16.435032), 1)),
			(cv((-9.608658, 2.88969, 13.977405), 1)),
			(cv((-9.608658, 2.88969, 16.435032), 1)),
			(cv((-9.943961, 5.474401, 13.977405), 1)),
			(cv((-9.608658, 2.736042, 13.977405), 1)),
			(cv((-9.608658, 2.736042, 16.435032), 1)),
			(cv((-9.608658, 0.0, 13.977405), 1)),
			(cv((-9.943961, 0.0, 13.977405), 1)),
			(cv((-9.608658, 0.0, 16.435032), 1)),
			(cv((-9.943961, 0.0, 13.545342), 1)),
			(cv((-9.943961, 5.474401, 13.545342), 1)),
			(cv((-9.943961, 2.88969, 19.324722), 1)),
			(cv((-9.943961, 2.736042, 19.324722), 1)),
			(cv((-9.608658, 2.736042, 19.324722), 1)),
			(cv((-9.608658, 0.0, 19.324722), 1)),
			(cv((-9.943961, 2.736042, 21.802486), 1)),
			(cv((-9.608658, 2.736042, 21.802486), 1)),
			(cv((-9.608658, 0.0, 21.802486), 1)),
			(cv((-9.943961, 2.736042, 22.214413), 1)),
			(cv((-9.943961, 0.0, 21.802486), 1)),
			(cv((-9.943961, 0.0, 22.214413), 1)),
			(cv((-1.274889, 5.474401, 13.545342), 1)),
			(cv((-1.274889, 2.88969, 13.545342), 1)),
			(cv((-1.274889, 2.88969, 13.957269), 1)),
			(cv((-1.274889, 5.474401, 13.957269), 1)),
			(cv((-1.610192, 2.88969, 16.435032), 1)),
			(cv((-1.610192, 5.474401, 16.435032), 1)),
			(cv((-1.610192, 5.474401, 13.957269), 1)),
			(cv((-1.610192, 2.88969, 13.957269), 1)),
			(cv((-1.274889, 2.736042, 22.214413), 1)),
			(cv((-1.274889, 2.88969, 22.214413), 1)),
			(cv((-1.274889, 2.88969, 21.782349), 1)),
			(cv((-1.274889, 2.736042, 21.782349), 1)),
			(cv((-1.274889, 2.88969, 19.324723), 1)),
			(cv((-1.274889, 2.736042, 19.324723), 1)),
			(cv((-1.610192, 5.474401, 21.782349), 1)),
			(cv((-1.610192, 5.474401, 19.324723), 1)),
			(cv((-1.610192, 2.88969, 21.782349), 1)),
			(cv((-1.610192, 2.88969, 19.324723), 1)),
			(cv((-1.274889, 5.474401, 21.782349), 1)),
			(cv((-1.610192, 2.736042, 21.782349), 1)),
			(cv((-1.610192, 2.736042, 19.324723), 1)),
			(cv((-1.610192, 0.0, 21.782349), 1)),
			(cv((-1.274889, 0.0, 21.782349), 1)),
			(cv((-1.610192, 0.0, 19.324723), 1)),
			(cv((-1.274889, 0.0, 22.214413), 1)),
			(cv((-1.274889, 5.474401, 22.214413), 1)),
			(cv((-1.274889, 2.88969, 16.435032), 1)),
			(cv((-1.274889, 2.736042, 16.435032), 1)),
			(cv((-1.610192, 2.736042, 16.435032), 1)),
			(cv((-1.610192, 0.0, 16.435032), 1)),
			(cv((-1.274889, 2.736042, 13.957269), 1)),
			(cv((-1.610192, 2.736042, 13.957269), 1)),
			(cv((-1.610192, 0.0, 13.957269), 1)),
			(cv((-1.274889, 2.736042, 13.545342), 1)),
			(cv((-1.274889, 0.0, 13.957269), 1)),
			(cv((-1.274889, 0.0, 13.545342), 1)),
			(cv((-9.532033, 2.88969, 13.545342), 1)),
			(cv((-9.532033, 5.474401, 13.545342), 1)),
			(cv((-7.05427, 2.88969, 13.880644), 1)),
			(cv((-7.05427, 5.474401, 13.880644), 1)),
			(cv((-9.532033, 5.474401, 13.880644), 1)),
			(cv((-9.532033, 2.88969, 13.880644), 1)),
			(cv((-1.706953, 2.88969, 13.545342), 1)),
			(cv((-1.706953, 2.736042, 13.545342), 1)),
			(cv((-4.16458, 2.88969, 13.545342), 1)),
			(cv((-4.16458, 2.736042, 13.545342), 1)),
			(cv((-1.706953, 5.474401, 13.880644), 1)),
			(cv((-4.16458, 5.474401, 13.880644), 1)),
			(cv((-1.706953, 2.88969, 13.880644), 1)),
			(cv((-4.16458, 2.88969, 13.880644), 1)),
			(cv((-1.706953, 5.474401, 13.545342), 1)),
			(cv((-1.706953, 2.736042, 13.880644), 1)),
			(cv((-4.16458, 2.736042, 13.880644), 1)),
			(cv((-1.706953, 0.0, 13.880644), 1)),
			(cv((-1.706953, 0.0, 13.545342), 1)),
			(cv((-4.16458, 0.0, 13.880644), 1)),
			(cv((-7.05427, 2.88969, 13.545342), 1)),
			(cv((-7.05427, 2.736042, 13.545342), 1)),
			(cv((-7.05427, 2.736042, 13.880644), 1)),
			(cv((-7.05427, 0.0, 13.880645), 1)),
			(cv((-9.532033, 2.736042, 13.545342), 1)),
			(cv((-9.532033, 2.736042, 13.880644), 1)),
			(cv((-9.532033, 0.0, 13.880644), 1)),
			(cv((-9.532033, 0.0, 13.545342), 1))	),
	texture_vertices = (
			st( 0.189878, 0.999619 ),
			st( 0.189224, 0.807394 ),
			st( 0.094312, 0.902541 ),
			st( 0.000651, 0.807142 ),
			st( 0.000670, 0.998527 ),
			st( 0.189878, 0.999619 ),
			st( 0.189224, 0.807394 ),
			st( 0.094312, 0.902541 ),
			st( 0.000651, 0.807142 ),
			st( 0.000670, 0.998527 ),
			st( 0.333300, 0.000000 ),
			st( 0.000000, 0.199716 ),
			st( 0.333333, 0.199718 ),
			st( 0.000000, 0.000000 ),
			st( 0.333333, 0.399438 ),
			st( 0.000000, 0.399432 ),
			st( 0.000000, 0.599154 ),
			st( 0.333333, 0.599154 ),
			st( 0.666666, 0.599154 ),
			st( 0.666666, 0.399435 ),
			st( 0.666660, 0.199718 ),
			st( 0.666660, 0.000000 ),
			st( 1.000000, 0.199718 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.399435 ),
			st( 1.000000, 0.599154 ),
			st( 0.189878, 0.999619 ),
			st( 0.189224, 0.807394 ),
			st( 0.094312, 0.902541 ),
			st( 0.000651, 0.807142 ),
			st( 0.000670, 0.998527 ),
			st( 0.189878, 0.999619 ),
			st( 0.189224, 0.807394 ),
			st( 0.094312, 0.902541 ),
			st( 0.000651, 0.807142 ),
			st( 0.000670, 0.998527 ),
			st( 0.120028, 0.760505 ),
			st( 0.000000, 0.805015 ),
			st( 0.909663, 0.807021 ),
			st( 1.000000, 0.757141 ),
			st( 2.088527, 0.807615 ),
			st( 2.000000, 0.757141 ),
			st( 3.000000, 0.809580 ),
			st( 2.896777, 0.756347 ),
			st( 3.000000, 0.809580 ),
			st( 2.088527, 0.807615 ),
			st( 2.000000, 0.757141 ),
			st( 2.896777, 0.756347 ),
			st( 0.909663, 0.807021 ),
			st( 1.000000, 0.757141 ),
			st( 2.088527, 0.807615 ),
			st( 2.000000, 0.757141 ),
			st( 0.909663, 0.807021 ),
			st( 1.000000, 0.757141 ),
			st( 0.000000, 0.805015 ),
			st( 0.120028, 0.760505 ),
			st( 0.909663, 0.807021 ),
			st( 1.000000, 0.757141 ),
			st( 2.088527, 0.807615 ),
			st( 2.000000, 0.757141 ),
			st( 0.120028, 0.612545 ),
			st( 1.000000, 0.612665 ),
			st( 2.000000, 0.612665 ),
			st( 2.896777, 0.614252 ),
			st( 2.000000, 0.612665 ),
			st( 1.000000, 0.612665 ),
			st( 0.120028, 0.612545 ),
			st( 2.896777, 0.614252 ),
			st( 2.000000, 0.612665 ),
			st( 1.000000, 0.612665 ),
			st( 1.000000, 0.612665 ),
			st( 2.000000, 0.612665 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.850000, 0.000000 ),
			st( 0.850000, 1.000000 ),
			st( 0.850000, 1.000000 ),
			st( 0.850000, 1.000000 ),
			st( 0.850000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.948500 ),
			st( 1.000000, 0.948500 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.815000, 1.000000 ),
			st( 0.815000, 0.000000 ),
			st( 0.850000, 0.948500 ),
			st( 0.850000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 1.000000, 0.948500 ),
			st( 1.000000, 0.948500 ),
			st( 1.000000, 0.948500 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.150000, 1.000000 ),
			st( 0.150000, 0.000000 ),
			st( 0.150000, 0.950000 ),
			st( 0.150000, 0.950000 ),
			st( 0.150000, 0.000000 ),
			st( 0.150000, 0.948500 ),
			st( 0.150000, 1.000000 ),
			st( 0.150000, 0.948500 ),
			st( 0.150000, 0.948500 ),
			st( 0.150000, 0.948500 ),
			st( 0.150000, 0.948500 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.950000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.948500 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.180000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.180000, 0.000000 ),
			st( 0.150000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.000000 ),
			st( 0.150000, 1.000000 ),
			st( 0.150000, 0.948500 ),
			st( 0.185000, 0.948500 ),
			st( 0.185000, 0.948500 ),
			st( 1.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.185000, 0.000000 ),
			st( 0.150000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 1.000000, 0.948500 ),
			st( 0.000000, 0.985000 ),
			st( 0.000000, 0.985000 ),
			st( 0.000000, 0.948500 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.850000, 0.948500 ),
			st( 0.850000, 0.985000 ),
			st( 0.815000, 0.948500 ),
			st( 0.815000, 0.948500 ),
			st( 0.815000, 0.948500 ),
			st( 0.815000, 0.948500 ),
			st( 0.815000, 0.000000 ),
			st( 1.000000, 0.948500 ),
			st( 0.850000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.850000, 0.000000 ),
			st( 0.850000, 1.000000 ),
			st( 0.850000, 1.000000 ),
			st( 0.850000, 1.000000 ),
			st( 0.850000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.948500 ),
			st( 1.000000, 0.948500 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.815000, 1.000000 ),
			st( 0.815000, 0.000000 ),
			st( 0.850000, 0.948500 ),
			st( 0.850000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.150000, 1.000000 ),
			st( 0.150000, 0.000000 ),
			st( 0.150000, 0.950000 ),
			st( 0.150000, 0.950000 ),
			st( 0.150000, 0.000000 ),
			st( 0.150000, 0.948500 ),
			st( 0.150000, 1.000000 ),
			st( 0.150000, 0.948500 ),
			st( 0.150000, 0.948500 ),
			st( 0.150000, 0.948500 ),
			st( 0.150000, 0.948500 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.950000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.948500 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.180000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.180000, 0.000000 ),
			st( 0.150000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.000000 ),
			st( 0.150000, 1.000000 ),
			st( 0.150000, 0.948500 ),
			st( 0.185000, 0.948500 ),
			st( 0.185000, 0.948500 ),
			st( 1.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.185000, 0.000000 ),
			st( 0.150000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 1.000000, 0.948500 ),
			st( 0.000000, 0.985000 ),
			st( 0.000000, 0.985000 ),
			st( 0.000000, 0.948500 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.850000, 0.948500 ),
			st( 0.850000, 0.985000 ),
			st( 0.815000, 0.948500 ),
			st( 0.815000, 0.948500 ),
			st( 0.815000, 0.948500 ),
			st( 0.815000, 0.948500 ),
			st( 0.815000, 0.000000 ),
			st( 1.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.850000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.850000, 0.000000 ),
			st( 0.850000, 1.000000 ),
			st( 0.850000, 1.000000 ),
			st( 0.850000, 1.000000 ),
			st( 0.850000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.948500 ),
			st( 1.000000, 0.948500 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.815000, 1.000000 ),
			st( 0.815000, 0.000000 ),
			st( 0.850000, 0.948500 ),
			st( 0.850000, 0.948500 ),
			st( 0.150000, 1.000000 ),
			st( 0.150000, 0.000000 ),
			st( 0.150000, 0.950000 ),
			st( 0.150000, 0.950000 ),
			st( 0.150000, 0.000000 ),
			st( 0.150000, 0.948500 ),
			st( 0.150000, 1.000000 ),
			st( 0.150000, 0.948500 ),
			st( 0.150000, 0.948500 ),
			st( 0.150000, 0.948500 ),
			st( 0.150000, 0.948500 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.950000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.948500 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.180000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.180000, 0.000000 ),
			st( 0.150000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.000000 ),
			st( 0.150000, 1.000000 ),
			st( 0.150000, 0.948500 ),
			st( 0.185000, 0.948500 ),
			st( 0.185000, 0.948500 ),
			st( 1.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.185000, 0.000000 ),
			st( 0.150000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 0.000000, 0.948500 ),
			st( 1.000000, 0.948500 ),
			st( 0.000000, 0.985000 ),
			st( 0.000000, 0.985000 ),
			st( 0.000000, 0.948500 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.850000, 0.948500 ),
			st( 0.850000, 0.985000 ),
			st( 0.815000, 0.948500 ),
			st( 0.815000, 0.948500 ),
			st( 0.815000, 0.948500 ),
			st( 0.815000, 0.948500 ),
			st( 0.815000, 0.000000 ),
			st( 0.850000, 0.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 1, 3),(2, 1, 3), 0 ),
		polygon ((3, 4, 2),(3, 4, 2), 0 ),
		polygon ((2, 4, 0),(2, 4, 0), 0 ),
		polygon ((5, 6, 7),(5, 6, 7), 0 ),
		polygon ((7, 6, 8),(7, 6, 8), 0 ),
		polygon ((8, 9, 7),(8, 9, 7), 0 ),
		polygon ((7, 9, 5),(7, 9, 5), 0 ),
		polygon ((10, 11, 12),(10, 11, 12), 0 ),
		polygon ((11, 10, 13),(11, 10, 13), 0 ),
		polygon ((11, 14, 12),(11, 14, 12), 0 ),
		polygon ((14, 11, 15),(14, 11, 15), 0 ),
		polygon ((14, 15, 16),(14, 15, 16), 0 ),
		polygon ((16, 17, 14),(16, 17, 14), 0 ),
		polygon ((14, 17, 18),(14, 17, 18), 0 ),
		polygon ((18, 19, 14),(18, 19, 14), 0 ),
		polygon ((14, 19, 20),(14, 19, 20), 0 ),
		polygon ((20, 12, 14),(20, 12, 14), 0 ),
		polygon ((12, 20),(12, 20), 0 ),
		polygon ((20, 21, 10),(20, 21, 10), 0 ),
		polygon ((10, 12, 20),(10, 12, 20), 0 ),
		polygon ((20, 22, 23),(20, 22, 23), 0 ),
		polygon ((23, 21, 20),(23, 21, 20), 0 ),
		polygon ((20, 19, 24),(20, 19, 24), 0 ),
		polygon ((24, 22, 20),(24, 22, 20), 0 ),
		polygon ((24, 19, 18),(24, 19, 18), 0 ),
		polygon ((18, 25, 24),(18, 25, 24), 0 ),
		polygon ((26, 27, 28),(26, 27, 28), 0 ),
		polygon ((28, 27, 29),(28, 27, 29), 0 ),
		polygon ((29, 30, 28),(29, 30, 28), 0 ),
		polygon ((28, 30, 26),(28, 30, 26), 0 ),
		polygon ((31, 32, 33),(31, 32, 33), 0 ),
		polygon ((33, 32, 34),(33, 32, 34), 0 ),
		polygon ((34, 35, 33),(34, 35, 33), 0 ),
		polygon ((33, 35, 31),(33, 35, 31), 0 ),
		polygon ((36, 37, 38),(36, 37, 38), 0 ),
		polygon ((38, 39, 36),(38, 39, 36), 0 ),
		polygon ((39, 38, 40),(39, 38, 40), 0 ),
		polygon ((40, 41, 39),(40, 41, 39), 0 ),
		polygon ((41, 40, 42),(41, 40, 42), 0 ),
		polygon ((42, 43, 41),(42, 43, 41), 0 ),
		polygon ((44, 45, 46),(44, 45, 46), 0 ),
		polygon ((46, 47, 44),(46, 47, 44), 0 ),
		polygon ((45, 48, 49),(45, 48, 49), 0 ),
		polygon ((49, 46, 45),(49, 46, 45), 0 ),
		polygon ((49, 48, 37),(49, 48, 37), 0 ),
		polygon ((37, 36, 49),(37, 36, 49), 0 ),
		polygon ((43, 42, 50),(43, 42, 50), 0 ),
		polygon ((50, 51, 43),(50, 51, 43), 0 ),
		polygon ((52, 53, 51),(52, 53, 51), 0 ),
		polygon ((53, 52, 54),(53, 52, 54), 0 ),
		polygon ((54, 55, 53),(54, 55, 53), 0 ),
		polygon ((51, 50, 52),(51, 50, 52), 0 ),
		polygon ((55, 54, 56),(55, 54, 56), 0 ),
		polygon ((56, 57, 55),(56, 57, 55), 0 ),
		polygon ((57, 56, 58),(57, 56, 58), 0 ),
		polygon ((58, 59, 57),(58, 59, 57), 0 ),
		polygon ((59, 58, 44),(59, 58, 44), 0 ),
		polygon ((44, 47, 59),(44, 47, 59), 0 ),
		polygon ((60, 55, 61),(60, 55, 61), 0 ),
		polygon ((61, 55, 57),(61, 55, 57), 0 ),
		polygon ((57, 59, 61),(57, 59, 61), 0 ),
		polygon ((61, 59, 62),(61, 59, 62), 0 ),
		polygon ((62, 59, 63),(62, 59, 63), 0 ),
		polygon ((63, 59, 47),(63, 59, 47), 0 ),
		polygon ((47, 46, 64),(47, 46, 64), 0 ),
		polygon ((64, 63, 47),(64, 63, 47), 0 ),
		polygon ((64, 46, 65),(64, 46, 65), 0 ),
		polygon ((65, 46, 49),(65, 46, 49), 0 ),
		polygon ((49, 36, 66),(49, 36, 66), 0 ),
		polygon ((66, 65, 49),(66, 65, 49), 0 ),
		polygon ((67, 43, 51),(67, 43, 51), 0 ),
		polygon ((51, 68, 43),(51, 68, 43), 0 ),
		polygon ((51, 53, 69),(51, 53, 69), 0 ),
		polygon ((69, 68, 51),(69, 68, 51), 0 ),
		polygon ((69, 53, 55),(69, 53, 55), 0 ),
		polygon ((55, 60, 69),(55, 60, 69), 0 ),
		polygon ((66, 36, 70),(66, 36, 70), 0 ),
		polygon ((70, 36, 39),(70, 36, 39), 0 ),
		polygon ((39, 41, 70),(39, 41, 70), 0 ),
		polygon ((70, 41, 71),(70, 41, 71), 0 ),
		polygon ((71, 41, 67),(71, 41, 67), 0 ),
		polygon ((67, 41, 43),(67, 41, 43), 0 ),
		polygon ((72, 73, 74),(72, 73, 76), 1 ),
		polygon ((74, 75, 72),(76, 80, 72), 1 ),
		polygon ((76, 77, 78),(81, 87, 89), 1 ),
		polygon ((78, 79, 76),(89, 90, 81), 1 ),
		polygon ((78, 75, 74),(89, 80, 76), 1 ),
		polygon ((74, 79, 78),(76, 90, 89), 1 ),
		polygon ((80, 81, 82),(93, 97, 103), 2 ),
		polygon ((82, 83, 80),(103, 108, 93), 2 ),
		polygon ((83, 84, 85),(108, 114, 119), 2 ),
		polygon ((82, 84, 83),(103, 114, 108), 2 ),
		polygon ((86, 87, 88),(125, 126, 129), 3 ),
		polygon ((89, 88, 87),(131, 129, 126), 3 ),
		polygon ((88, 82, 90),(129, 104, 136), 3 ),
		polygon ((90, 86, 88),(136, 125, 129), 3 ),
		polygon ((91, 83, 85),(137, 109, 120), 2 ),
		polygon ((85, 92, 91),(121, 140, 137), 2 ),
		polygon ((83, 91, 93),(110, 138, 145), 2 ),
		polygon ((93, 94, 83),(145, 146, 111), 2 ),
		polygon ((95, 93, 92),(147, 145, 140), 2 ),
		polygon ((91, 92, 93),(139, 140, 145), 2 ),
		polygon ((83, 94, 96),(112, 146, 149), 2 ),
		polygon ((96, 80, 83),(149, 93, 113), 2 ),
		polygon ((82, 88, 89),(105, 130, 132), 2 ),
		polygon ((89, 84, 82),(133, 115, 106), 2 ),
		polygon ((90, 82, 81),(136, 107, 98), 3 ),
		polygon ((81, 97, 90),(99, 151, 136), 3 ),
		polygon ((85, 98, 99),(122, 154, 159), 4 ),
		polygon ((84, 98, 85),(116, 154, 123), 4 ),
		polygon ((92, 100, 101),(141, 162, 166), 4 ),
		polygon ((101, 95, 92),(166, 148, 142), 4 ),
		polygon ((84, 89, 76),(117, 134, 82), 4 ),
		polygon ((76, 98, 84),(83, 154, 118), 4 ),
		polygon ((92, 85, 99),(143, 124, 159), 4 ),
		polygon ((99, 100, 92),(159, 162, 144), 4 ),
		polygon ((87, 77, 76),(127, 88, 84), 5 ),
		polygon ((76, 89, 87),(85, 135, 128), 5 ),
		polygon ((98, 76, 79),(155, 86, 91), 6 ),
		polygon ((79, 74, 98),(92, 77, 156), 6 ),
		polygon ((102, 103, 100),(169, 170, 163), 6 ),
		polygon ((100, 99, 102),(164, 160, 169), 6 ),
		polygon ((101, 100, 103),(167, 165, 171), 6 ),
		polygon ((103, 104, 101),(172, 175, 168), 6 ),
		polygon ((98, 74, 102),(157, 78, 169), 6 ),
		polygon ((102, 99, 98),(169, 161, 158), 6 ),
		polygon ((73, 105, 102),(74, 176, 169), 6 ),
		polygon ((102, 74, 73),(169, 79, 75), 6 ),
		polygon ((103, 102, 106),(173, 169, 177), 6 ),
		polygon ((106, 104, 103),(177, 175, 174), 6 ),
		polygon ((105, 107, 106),(176, 178, 177), 6 ),
		polygon ((106, 102, 105),(177, 169, 176), 6 ),
		polygon ((108, 109, 110),(179, 181, 187), 1 ),
		polygon ((110, 111, 108),(187, 191, 179), 1 ),
		polygon ((112, 113, 114),(192, 198, 200), 1 ),
		polygon ((114, 115, 112),(200, 201, 192), 1 ),
		polygon ((114, 111, 110),(200, 191, 187), 1 ),
		polygon ((110, 115, 114),(187, 201, 200), 1 ),
		polygon ((116, 117, 118),(204, 205, 208), 2 ),
		polygon ((118, 119, 116),(208, 213, 204), 2 ),
		polygon ((119, 120, 121),(213, 219, 224), 2 ),
		polygon ((118, 120, 119),(208, 219, 213), 2 ),
		polygon ((122, 123, 124),(230, 231, 234), 3 ),
		polygon ((125, 124, 123),(236, 234, 231), 3 ),
		polygon ((124, 118, 126),(234, 209, 241), 3 ),
		polygon ((126, 122, 124),(241, 230, 234), 3 ),
		polygon ((127, 119, 121),(242, 214, 225), 2 ),
		polygon ((121, 128, 127),(226, 245, 242), 2 ),
		polygon ((119, 127, 129),(215, 243, 250), 2 ),
		polygon ((129, 130, 119),(250, 251, 216), 2 ),
		polygon ((131, 129, 128),(252, 250, 245), 2 ),
		polygon ((127, 128, 129),(244, 245, 250), 2 ),
		polygon ((119, 130, 132),(217, 251, 254), 2 ),
		polygon ((132, 116, 119),(254, 204, 218), 2 ),
		polygon ((118, 124, 125),(210, 235, 237), 2 ),
		polygon ((125, 120, 118),(238, 220, 211), 2 ),
		polygon ((126, 118, 117),(241, 212, 206), 3 ),
		polygon ((117, 133, 126),(207, 255, 241), 3 ),
		polygon ((121, 134, 135),(227, 256, 261), 4 ),
		polygon ((120, 134, 121),(221, 256, 228), 4 ),
		polygon ((128, 136, 137),(246, 264, 268), 4 ),
		polygon ((137, 131, 128),(268, 253, 247), 4 ),
		polygon ((120, 125, 112),(222, 239, 193), 4 ),
		polygon ((112, 134, 120),(194, 256, 223), 4 ),
		polygon ((128, 121, 135),(248, 229, 261), 4 ),
		polygon ((135, 136, 128),(261, 264, 249), 4 ),
		polygon ((123, 113, 112),(232, 199, 195), 5 ),
		polygon ((112, 125, 123),(196, 240, 233), 5 ),
		polygon ((134, 112, 115),(257, 197, 202), 6 ),
		polygon ((115, 110, 134),(203, 188, 258), 6 ),
		polygon ((138, 139, 136),(271, 272, 265), 6 ),
		polygon ((136, 135, 138),(266, 262, 271), 6 ),
		polygon ((137, 136, 139),(269, 267, 273), 6 ),
		polygon ((139, 140, 137),(274, 277, 270), 6 ),
		polygon ((134, 110, 138),(259, 189, 271), 6 ),
		polygon ((138, 135, 134),(271, 263, 260), 6 ),
		polygon ((109, 141, 138),(182, 278, 271), 6 ),
		polygon ((138, 110, 109),(271, 190, 183), 6 ),
		polygon ((139, 138, 142),(275, 271, 282), 6 ),
		polygon ((142, 140, 139),(282, 277, 276), 6 ),
		polygon ((141, 143, 142),(278, 283, 282), 6 ),
		polygon ((142, 138, 141),(282, 271, 278), 6 ),
		polygon ((97, 81, 144),(152, 100, 286), 1 ),
		polygon ((144, 145, 97),(286, 290, 153), 1 ),
		polygon ((146, 147, 148),(291, 297, 299), 1 ),
		polygon ((148, 149, 146),(299, 300, 291), 1 ),
		polygon ((148, 145, 144),(299, 290, 286), 1 ),
		polygon ((144, 149, 148),(286, 300, 299), 1 ),
		polygon ((141, 109, 150),(279, 184, 303), 2 ),
		polygon ((150, 151, 141),(303, 308, 280), 2 ),
		polygon ((151, 152, 153),(308, 314, 319), 2 ),
		polygon ((150, 152, 151),(303, 314, 308), 2 ),
		polygon ((154, 155, 156),(325, 326, 329), 3 ),
		polygon ((157, 156, 155),(331, 329, 326), 3 ),
		polygon ((156, 150, 158),(329, 304, 336), 3 ),
		polygon ((158, 154, 156),(336, 325, 329), 3 ),
		polygon ((159, 151, 153),(337, 309, 320), 2 ),
		polygon ((153, 160, 159),(321, 340, 337), 2 ),
		polygon ((151, 159, 161),(310, 338, 345), 2 ),
		polygon ((161, 162, 151),(345, 346, 311), 2 ),
		polygon ((163, 161, 160),(347, 345, 340), 2 ),
		polygon ((159, 160, 161),(339, 340, 345), 2 ),
		polygon ((151, 162, 143),(312, 346, 284), 2 ),
		polygon ((143, 141, 151),(285, 281, 313), 2 ),
		polygon ((150, 156, 157),(305, 330, 332), 2 ),
		polygon ((157, 152, 150),(333, 315, 306), 2 ),
		polygon ((158, 150, 109),(336, 307, 185), 3 ),
		polygon ((109, 108, 158),(186, 180, 336), 3 ),
		polygon ((153, 164, 165),(322, 349, 354), 4 ),
		polygon ((152, 164, 153),(316, 349, 323), 4 ),
		polygon ((160, 166, 167),(341, 357, 361), 4 ),
		polygon ((167, 163, 160),(361, 348, 342), 4 ),
		polygon ((152, 157, 146),(317, 334, 292), 4 ),
		polygon ((146, 164, 152),(293, 349, 318), 4 ),
		polygon ((160, 153, 165),(343, 324, 354), 4 ),
		polygon ((165, 166, 160),(354, 357, 344), 4 ),
		polygon ((155, 147, 146),(327, 298, 294), 5 ),
		polygon ((146, 157, 155),(295, 335, 328), 5 ),
		polygon ((164, 146, 149),(350, 296, 301), 6 ),
		polygon ((149, 144, 164),(302, 287, 351), 6 ),
		polygon ((168, 169, 166),(364, 365, 358), 6 ),
		polygon ((166, 165, 168),(359, 355, 364), 6 ),
		polygon ((167, 166, 169),(362, 360, 366), 6 ),
		polygon ((169, 170, 167),(367, 370, 363), 6 ),
		polygon ((164, 144, 168),(352, 288, 364), 6 ),
		polygon ((168, 165, 164),(364, 356, 353), 6 ),
		polygon ((81, 80, 168),(101, 94, 364), 6 ),
		polygon ((168, 144, 81),(364, 289, 102), 6 ),
		polygon ((169, 168, 171),(368, 364, 371), 6 ),
		polygon ((171, 170, 169),(371, 370, 369), 6 ),
		polygon ((80, 96, 171),(95, 150, 371), 6 ),
		polygon ((171, 168, 80),(371, 364, 96), 6 )
	)
); /* end of polyset 'building_southwest' */

polyset building_northwest (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (buildinga2 ),
	shader = (buildinga1 ),
	shader = (buildinga5 ),
	shader = (buildinga6 ),
	shader = (buildinga4 ),
	shader = (buildinga3 ),
	shader = (rooftop ),
	casts_shadow = TRUE,
	vertices = ((cv((-9.608348, 5.474401, -20.145801), 1)),
			(cv((-9.608348, 5.474401, -17.256111), 1)),
			(cv((-9.608348, 2.88969, -17.256111), 1)),
			(cv((-9.608348, 2.88969, -20.145801), 1)),
			(cv((-9.792138, 5.583132, -20.145801), 1)),
			(cv((-9.792138, 5.583132, -17.256111), 1)),
			(cv((-9.792138, 5.781665, -20.145801), 1)),
			(cv((-9.792138, 5.781665, -17.256111), 1)),
			(cv((-9.608348, 2.88969, -23.035492), 1)),
			(cv((-9.608348, 5.474401, -23.035492), 1)),
			(cv((-9.792138, 5.583132, -23.035492), 1)),
			(cv((-9.792138, 5.781665, -23.035492), 1)),
			(cv((-9.608348, 0.0, -17.256111), 1)),
			(cv((-9.608348, 0.0, -20.145801), 1)),
			(cv((-9.608348, 2.88969, -14.366421), 1)),
			(cv((-9.608348, 0.0, -14.366421), 1)),
			(cv((-9.608348, 0.0, -23.035492), 1)),
			(cv((-9.608348, 5.474401, -14.366421), 1)),
			(cv((-9.792138, 5.583132, -14.366421), 1)),
			(cv((-9.792138, 5.781665, -14.366421), 1)),
			(cv((-1.139626, 5.474401, -17.256111), 1)),
			(cv((-1.139626, 5.474401, -20.145801), 1)),
			(cv((-1.139626, 2.88969, -20.145801), 1)),
			(cv((-1.139626, 2.88969, -17.256111), 1)),
			(cv((-0.955836, 5.583132, -17.256111), 1)),
			(cv((-0.955836, 5.583132, -20.145801), 1)),
			(cv((-0.955836, 5.781665, -17.256111), 1)),
			(cv((-0.955836, 5.781665, -20.145801), 1)),
			(cv((-1.139626, 2.88969, -14.366421), 1)),
			(cv((-1.139626, 5.474401, -14.366421), 1)),
			(cv((-0.955836, 5.583132, -14.366421), 1)),
			(cv((-0.955836, 5.781665, -14.366421), 1)),
			(cv((-1.139626, 0.0, -20.145801), 1)),
			(cv((-1.139626, 0.0, -17.256111), 1)),
			(cv((-1.139626, 2.88969, -23.035492), 1)),
			(cv((-1.139626, 0.0, -23.035492), 1)),
			(cv((-1.139626, 0.0, -14.366421), 1)),
			(cv((-1.139626, 5.474401, -23.035492), 1)),
			(cv((-0.955836, 5.583132, -23.035492), 1)),
			(cv((-0.955836, 5.781665, -23.035492), 1)),
			(cv((-6.785441, 5.474401, -14.366421), 1)),
			(cv((-3.962533, 5.474401, -14.366421), 1)),
			(cv((-3.962533, 2.88969, -14.366421), 1)),
			(cv((-6.785441, 2.88969, -14.366421), 1)),
			(cv((-6.785441, 5.583132, -14.178282), 1)),
			(cv((-3.962533, 5.583132, -14.178282), 1)),
			(cv((-6.785441, 5.781665, -14.178282), 1)),
			(cv((-3.962533, 5.781665, -14.178282), 1)),
			(cv((-9.608348, 2.88969, -14.366421), 1)),
			(cv((-9.608348, 5.474401, -14.366421), 1)),
			(cv((-9.608348, 5.583132, -14.178282), 1)),
			(cv((-9.608348, 5.781665, -14.178282), 1)),
			(cv((-3.962533, 0.0, -14.366421), 1)),
			(cv((-6.785441, 0.0, -14.366421), 1)),
			(cv((-1.139626, 2.88969, -14.366421), 1)),
			(cv((-1.139626, 0.0, -14.366421), 1)),
			(cv((-9.608348, 0.0, -14.366421), 1)),
			(cv((-1.139626, 5.474401, -14.366421), 1)),
			(cv((-1.139626, 5.583132, -14.178282), 1)),
			(cv((-1.139626, 5.781665, -14.178282), 1)),
			(cv((-9.608348, 5.474401, -14.366421), 1)),
			(cv((-9.792138, 5.583132, -14.366421), 1)),
			(cv((-9.608348, 5.583132, -14.178282), 1)),
			(cv((-9.792138, 5.781665, -14.366421), 1)),
			(cv((-9.608348, 5.781665, -14.178282), 1)),
			(cv((-1.139626, 5.474401, -14.366421), 1)),
			(cv((-1.139626, 5.583132, -14.178282), 1)),
			(cv((-0.955836, 5.583132, -14.366421), 1)),
			(cv((-1.139626, 5.781665, -14.178282), 1)),
			(cv((-0.955836, 5.781665, -14.366421), 1)),
			(cv((-9.608348, 5.583132, -20.145801), 1)),
			(cv((-9.608348, 5.781666, -20.145802), 1)),
			(cv((-9.608348, 5.781666, -23.035492), 1)),
			(cv((-9.608348, 5.583132, -23.035492), 1)),
			(cv((-9.608348, 5.781666, -17.256111), 1)),
			(cv((-9.608348, 5.583132, -17.256111), 1)),
			(cv((-9.608348, 5.583132, -14.36642), 1)),
			(cv((-9.608348, 5.781666, -14.366421), 1)),
			(cv((-1.139626, 5.781665, -23.223631), 1)),
			(cv((-1.139626, 5.781665, -23.035492), 1)),
			(cv((-3.962533, 5.781665, -23.035492), 1)),
			(cv((-9.608348, 5.781665, -23.035492), 1)),
			(cv((-6.78544, 5.781665, -23.223631), 1)),
			(cv((-6.78544, 5.781665, -23.035492), 1)),
			(cv((-3.962533, 5.781665, -23.223631), 1)),
			(cv((-9.608348, 5.781665, -23.223631), 1)),
			(cv((-0.955836, 5.781665, -23.035492), 1)),
			(cv((-9.792139, 5.781666, -23.035492), 1)),
			(cv((-9.792138, 5.781665, -20.145802), 1)),
			(cv((-9.608348, 5.781665, -20.145801), 1)),
			(cv((-9.608348, 5.781665, -17.256111), 1)),
			(cv((-9.792138, 5.781665, -17.256111), 1)),
			(cv((-0.955836, 5.781665, -20.145802), 1)),
			(cv((-1.139626, 5.781665, -20.145802), 1)),
			(cv((-9.608348, 5.781665, -14.178283), 1)),
			(cv((-9.792139, 5.781665, -14.366421), 1)),
			(cv((-9.608348, 5.781665, -14.366421), 1)),
			(cv((-0.955836, 5.781666, -14.366421), 1)),
			(cv((-1.139626, 5.781665, -14.178283), 1)),
			(cv((-1.139626, 5.781665, -14.366421), 1)),
			(cv((-6.78544, 5.781665, -14.366421), 1)),
			(cv((-6.78544, 5.781665, -14.178283), 1)),
			(cv((-0.955836, 5.781665, -17.256111), 1)),
			(cv((-1.139626, 5.781665, -17.256111), 1)),
			(cv((-3.962533, 5.781665, -14.366421), 1)),
			(cv((-3.962533, 5.781665, -14.178283), 1)),
			(cv((-1.139626, 5.583132, -23.035492), 1)),
			(cv((-1.139626, 5.781665, -23.035492), 1)),
			(cv((-1.139626, 5.781665, -20.145802), 1)),
			(cv((-1.139626, 5.781665, -17.256111), 1)),
			(cv((-1.139626, 5.583132, -17.256111), 1)),
			(cv((-1.139626, 5.583132, -20.145801), 1)),
			(cv((-1.139626, 5.781665, -14.366421), 1)),
			(cv((-1.139626, 5.583132, -14.366421), 1)),
			(cv((-3.962533, 5.583132, -23.035492), 1)),
			(cv((-3.962533, 5.781666, -23.035492), 1)),
			(cv((-1.139626, 5.781666, -23.035492), 1)),
			(cv((-1.139626, 5.583132, -23.035492), 1)),
			(cv((-6.78544, 5.781666, -23.035492), 1)),
			(cv((-6.785441, 5.583132, -23.035492), 1)),
			(cv((-9.608348, 5.583132, -23.035492), 1)),
			(cv((-9.608348, 5.781666, -23.035492), 1)),
			(cv((-6.78544, 5.583132, -14.366421), 1)),
			(cv((-9.608348, 5.583132, -17.256111), 1)),
			(cv((-6.78544, 5.583132, -17.256111), 1)),
			(cv((-9.608348, 5.583132, -14.366421), 1)),
			(cv((-6.78544, 5.583132, -20.145802), 1)),
			(cv((-9.608348, 5.583132, -20.145802), 1)),
			(cv((-9.608348, 5.583132, -23.035492), 1)),
			(cv((-6.78544, 5.583132, -23.035492), 1)),
			(cv((-3.962533, 5.583132, -23.035492), 1)),
			(cv((-3.962533, 5.583132, -20.145802), 1)),
			(cv((-3.962533, 5.583132, -17.256111), 1)),
			(cv((-3.962533, 5.583132, -14.366421), 1)),
			(cv((-1.139626, 5.583132, -17.256111), 1)),
			(cv((-1.139626, 5.583132, -14.366421), 1)),
			(cv((-1.139626, 5.583132, -20.145802), 1)),
			(cv((-1.139626, 5.583132, -23.035492), 1))	),
	texture_vertices = (
			st( 0.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 0.000000, 0.942000 ),
			st( 0.000000, 0.942000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.942000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 0.000000, 0.942000 ),
			st( 0.000000, 0.942000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.942000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 0.000000, 0.942000 ),
			st( 0.000000, 0.942000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.942000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.942000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 0.000000, 0.942000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.942000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.942000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.942000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.942000 ),
			st( 0.000000, 0.942000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 1.000000 ),
			st( 0.333300, 0.000000 ),
			st( 0.000000, 0.199716 ),
			st( 0.333333, 0.199718 ),
			st( 0.000000, 0.000000 ),
			st( 0.333333, 0.399438 ),
			st( 0.000000, 0.399432 ),
			st( 0.000000, 0.599154 ),
			st( 0.333333, 0.599154 ),
			st( 0.666666, 0.599154 ),
			st( 0.666666, 0.399435 ),
			st( 0.666660, 0.199718 ),
			st( 0.666660, 0.000000 ),
			st( 1.000000, 0.199718 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.399435 ),
			st( 1.000000, 0.599154 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 5, 8), 0 ),
		polygon ((2, 3, 0),(8, 13, 0), 0 ),
		polygon ((1, 0, 4),(5, 0, 19), 0 ),
		polygon ((4, 5, 1),(19, 23, 5), 0 ),
		polygon ((5, 4, 6),(23, 19, 27), 0 ),
		polygon ((6, 7, 5),(27, 29, 23), 0 ),
		polygon ((3, 8, 0),(14, 32, 1), 1 ),
		polygon ((9, 0, 8),(34, 2, 32), 1 ),
		polygon ((0, 9, 10),(3, 34, 35), 1 ),
		polygon ((10, 4, 0),(35, 20, 4), 1 ),
		polygon ((4, 10, 11),(21, 35, 36), 1 ),
		polygon ((11, 6, 4),(36, 28, 22), 1 ),
		polygon ((3, 2, 12),(15, 9, 37), 2 ),
		polygon ((12, 13, 3),(37, 40, 16), 2 ),
		polygon ((14, 15, 12),(42, 44, 38), 3 ),
		polygon ((12, 2, 14),(39, 10, 42), 3 ),
		polygon ((13, 16, 3),(41, 45, 17), 4 ),
		polygon ((8, 3, 16),(33, 18, 45), 4 ),
		polygon ((17, 14, 2),(46, 43, 11), 5 ),
		polygon ((2, 1, 17),(12, 6, 46), 5 ),
		polygon ((1, 5, 17),(7, 24, 46), 5 ),
		polygon ((17, 5, 18),(46, 25, 47), 5 ),
		polygon ((18, 5, 7),(47, 26, 30), 5 ),
		polygon ((7, 19, 18),(31, 48, 47), 5 ),
		polygon ((20, 21, 22),(49, 54, 57), 0 ),
		polygon ((22, 23, 20),(57, 62, 49), 0 ),
		polygon ((21, 20, 24),(54, 49, 68), 0 ),
		polygon ((24, 25, 21),(68, 72, 54), 0 ),
		polygon ((25, 24, 26),(72, 68, 76), 0 ),
		polygon ((26, 27, 25),(76, 78, 72), 0 ),
		polygon ((23, 28, 20),(63, 81, 50), 1 ),
		polygon ((29, 20, 28),(83, 51, 81), 1 ),
		polygon ((20, 29, 30),(52, 83, 84), 1 ),
		polygon ((30, 24, 20),(84, 69, 53), 1 ),
		polygon ((24, 30, 31),(70, 84, 85), 1 ),
		polygon ((31, 26, 24),(85, 77, 71), 1 ),
		polygon ((23, 22, 32),(64, 58, 86), 2 ),
		polygon ((32, 33, 23),(86, 89, 65), 2 ),
		polygon ((34, 35, 32),(91, 93, 87), 3 ),
		polygon ((32, 22, 34),(88, 59, 91), 3 ),
		polygon ((33, 36, 23),(90, 94, 66), 4 ),
		polygon ((28, 23, 36),(82, 67, 94), 4 ),
		polygon ((37, 34, 22),(95, 92, 60), 5 ),
		polygon ((22, 21, 37),(61, 55, 95), 5 ),
		polygon ((21, 25, 37),(56, 73, 95), 5 ),
		polygon ((37, 25, 38),(95, 74, 96), 5 ),
		polygon ((38, 25, 27),(96, 75, 79), 5 ),
		polygon ((27, 39, 38),(80, 97, 96), 5 ),
		polygon ((40, 41, 42),(98, 103, 106), 0 ),
		polygon ((42, 43, 40),(106, 111, 98), 0 ),
		polygon ((41, 40, 44),(103, 98, 117), 0 ),
		polygon ((44, 45, 41),(117, 121, 103), 0 ),
		polygon ((45, 44, 46),(121, 117, 125), 0 ),
		polygon ((46, 47, 45),(125, 127, 121), 0 ),
		polygon ((43, 48, 40),(112, 130, 99), 1 ),
		polygon ((49, 40, 48),(132, 100, 130), 1 ),
		polygon ((40, 49, 50),(101, 132, 133), 1 ),
		polygon ((50, 44, 40),(133, 118, 102), 1 ),
		polygon ((44, 50, 51),(119, 133, 134), 1 ),
		polygon ((51, 46, 44),(134, 126, 120), 1 ),
		polygon ((43, 42, 52),(113, 107, 135), 2 ),
		polygon ((52, 53, 43),(135, 138, 114), 2 ),
		polygon ((54, 55, 52),(140, 142, 136), 3 ),
		polygon ((52, 42, 54),(137, 108, 140), 3 ),
		polygon ((53, 56, 43),(139, 143, 115), 4 ),
		polygon ((48, 43, 56),(131, 116, 143), 4 ),
		polygon ((57, 54, 42),(144, 141, 109), 5 ),
		polygon ((42, 41, 57),(110, 104, 144), 5 ),
		polygon ((41, 45, 57),(105, 122, 144), 5 ),
		polygon ((57, 45, 58),(144, 123, 145), 5 ),
		polygon ((58, 45, 47),(145, 124, 128), 5 ),
		polygon ((47, 59, 58),(129, 146, 145), 5 ),
		polygon ((60, 61, 62),(147, 148, 149), 1 ),
		polygon ((62, 61, 63),(149, 148, 150), 1 ),
		polygon ((63, 64, 62),(150, 151, 149), 1 ),
		polygon ((65, 66, 67),(152, 153, 154), 1 ),
		polygon ((67, 66, 68),(154, 153, 155), 1 ),
		polygon ((68, 69, 67),(155, 156, 154), 1 ),
		polygon ((70, 71, 72),(157, 159, 160), 1 ),
		polygon ((72, 73, 70),(160, 161, 157), 1 ),
		polygon ((74, 75, 76),(162, 163, 166), 5 ),
		polygon ((76, 77, 74),(166, 167, 162), 5 ),
		polygon ((71, 70, 75),(159, 158, 164), 0 ),
		polygon ((75, 74, 71),(165, 162, 159), 0 ),
		polygon ((78, 79, 80),(168, 169, 170), 5 ),
		polygon ((81, 82, 83),(171, 173, 174), 5 ),
		polygon ((80, 84, 78),(170, 175, 168), 5 ),
		polygon ((85, 82, 81),(176, 173, 171), 5 ),
		polygon ((84, 80, 83),(175, 170, 174), 5 ),
		polygon ((83, 82, 84),(174, 173, 175), 5 ),
		polygon ((78, 86, 79),(168, 177, 169), 5 ),
		polygon ((87, 85, 81),(178, 176, 171), 5 ),
		polygon ((88, 89, 90),(179, 180, 183), 5 ),
		polygon ((90, 91, 88),(183, 184, 179), 5 ),
		polygon ((79, 92, 93),(169, 185, 186), 5 ),
		polygon ((86, 92, 79),(177, 185, 169), 5 ),
		polygon ((87, 81, 89),(178, 172, 181), 5 ),
		polygon ((89, 88, 87),(182, 179, 178), 5 ),
		polygon ((94, 95, 96),(187, 188, 189), 5 ),
		polygon ((97, 98, 99),(190, 191, 192), 5 ),
		polygon ((96, 91, 90),(189, 184, 183), 5 ),
		polygon ((95, 91, 96),(188, 184, 189), 5 ),
		polygon ((94, 96, 100),(187, 189, 193), 5 ),
		polygon ((100, 101, 94),(193, 194, 187), 5 ),
		polygon ((102, 103, 93),(195, 196, 186), 5 ),
		polygon ((93, 92, 102),(186, 185, 195), 5 ),
		polygon ((101, 100, 104),(194, 193, 197), 5 ),
		polygon ((104, 105, 101),(197, 198, 194), 5 ),
		polygon ((97, 99, 103),(190, 192, 196), 5 ),
		polygon ((103, 102, 97),(196, 195, 190), 5 ),
		polygon ((99, 105, 104),(192, 198, 197), 5 ),
		polygon ((98, 105, 99),(191, 198, 192), 5 ),
		polygon ((106, 107, 108),(199, 200, 201), 5 ),
		polygon ((109, 110, 111),(202, 203, 206), 0 ),
		polygon ((111, 108, 109),(206, 201, 202), 0 ),
		polygon ((108, 111, 106),(201, 207, 199), 5 ),
		polygon ((112, 113, 110),(208, 209, 204), 1 ),
		polygon ((110, 109, 112),(205, 202, 208), 1 ),
		polygon ((114, 115, 116),(210, 212, 213), 1 ),
		polygon ((116, 117, 114),(213, 214, 210), 1 ),
		polygon ((118, 119, 120),(215, 216, 219), 5 ),
		polygon ((120, 121, 118),(219, 220, 215), 5 ),
		polygon ((115, 114, 119),(212, 211, 217), 0 ),
		polygon ((119, 118, 115),(218, 215, 212), 0 ),
		polygon ((122, 123, 124),(221, 222, 223), 6 ),
		polygon ((123, 122, 125),(222, 221, 224), 6 ),
		polygon ((123, 126, 124),(222, 225, 223), 6 ),
		polygon ((126, 123, 127),(225, 222, 226), 6 ),
		polygon ((126, 127, 128),(225, 226, 227), 6 ),
		polygon ((128, 129, 126),(227, 228, 225), 6 ),
		polygon ((126, 129, 130),(225, 228, 229), 6 ),
		polygon ((130, 131, 126),(229, 230, 225), 6 ),
		polygon ((126, 131, 132),(225, 230, 231), 6 ),
		polygon ((132, 124, 126),(231, 223, 225), 6 ),
		polygon ((124, 132),(223, 231), 6 ),
		polygon ((132, 133, 122),(231, 232, 221), 6 ),
		polygon ((122, 124, 132),(221, 223, 231), 6 ),
		polygon ((132, 134, 135),(231, 233, 234), 6 ),
		polygon ((135, 133, 132),(234, 232, 231), 6 ),
		polygon ((132, 131, 136),(231, 230, 235), 6 ),
		polygon ((136, 134, 132),(235, 233, 231), 6 ),
		polygon ((136, 131, 130),(235, 230, 229), 6 ),
		polygon ((130, 137, 136),(229, 236, 235), 6 )
	)
); /* end of polyset 'building_northwest' */

polyset building_southeast (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (buildinga2 ),
	shader = (buildinga1 ),
	shader = (buildinga5 ),
	shader = (buildinga6 ),
	shader = (buildinga4 ),
	shader = (buildinga3 ),
	shader = (rooftop ),
	casts_shadow = TRUE,
	vertices = ((cv((10.121747, 5.474401, 19.669209), 1)),
			(cv((10.121747, 5.474401, 16.779519), 1)),
			(cv((10.121747, 2.88969, 16.779519), 1)),
			(cv((10.121747, 2.88969, 19.669209), 1)),
			(cv((10.309886, 5.583132, 19.669209), 1)),
			(cv((10.309886, 5.583132, 16.779519), 1)),
			(cv((10.309886, 5.781665, 19.669209), 1)),
			(cv((10.309886, 5.781665, 16.779519), 1)),
			(cv((10.121747, 2.88969, 22.5589), 1)),
			(cv((10.121747, 5.474401, 22.5589), 1)),
			(cv((10.309886, 5.583132, 22.5589), 1)),
			(cv((10.309886, 5.781665, 22.5589), 1)),
			(cv((10.121747, 0.0, 16.779519), 1)),
			(cv((10.121747, 0.0, 19.669209), 1)),
			(cv((10.121747, 2.88969, 13.889828), 1)),
			(cv((10.121747, 0.0, 13.889828), 1)),
			(cv((10.121747, 0.0, 22.5589), 1)),
			(cv((10.121747, 5.474401, 13.889828), 1)),
			(cv((10.309886, 5.583132, 13.889828), 1)),
			(cv((10.309886, 5.781665, 13.889828), 1)),
			(cv((1.452676, 5.474401, 16.779519), 1)),
			(cv((1.452676, 5.474401, 19.669209), 1)),
			(cv((1.452676, 2.88969, 19.669209), 1)),
			(cv((1.452676, 2.88969, 16.779519), 1)),
			(cv((1.264538, 5.583132, 16.779519), 1)),
			(cv((1.264538, 5.583132, 19.669209), 1)),
			(cv((1.264538, 5.781665, 16.779519), 1)),
			(cv((1.264538, 5.781665, 19.669209), 1)),
			(cv((1.452676, 2.88969, 13.889828), 1)),
			(cv((1.452676, 5.474401, 13.889828), 1)),
			(cv((1.264538, 5.583132, 13.889828), 1)),
			(cv((1.264538, 5.781665, 13.889828), 1)),
			(cv((1.452676, 0.0, 19.669209), 1)),
			(cv((1.452676, 0.0, 16.779519), 1)),
			(cv((1.452676, 2.88969, 22.5589), 1)),
			(cv((1.452676, 0.0, 22.5589), 1)),
			(cv((1.452676, 0.0, 13.889828), 1)),
			(cv((1.452676, 5.474401, 22.5589), 1)),
			(cv((1.264538, 5.583132, 22.5589), 1)),
			(cv((1.264538, 5.781665, 22.5589), 1)),
			(cv((7.232057, 5.474401, 13.889828), 1)),
			(cv((4.342366, 5.474401, 13.889828), 1)),
			(cv((4.342366, 2.88969, 13.889828), 1)),
			(cv((7.232057, 2.88969, 13.889828), 1)),
			(cv((7.232057, 5.583132, 13.70169), 1)),
			(cv((4.342366, 5.583132, 13.70169), 1)),
			(cv((7.232057, 5.781665, 13.70169), 1)),
			(cv((4.342366, 5.781665, 13.70169), 1)),
			(cv((10.121747, 2.88969, 13.889828), 1)),
			(cv((10.121747, 5.474401, 13.889828), 1)),
			(cv((10.121747, 5.583132, 13.70169), 1)),
			(cv((10.121747, 5.781665, 13.70169), 1)),
			(cv((4.342366, 0.0, 13.889828), 1)),
			(cv((7.232057, 0.0, 13.889828), 1)),
			(cv((1.452676, 2.88969, 13.889828), 1)),
			(cv((1.452676, 0.0, 13.889828), 1)),
			(cv((10.121747, 0.0, 13.889828), 1)),
			(cv((1.452676, 5.474401, 13.889828), 1)),
			(cv((1.452676, 5.583132, 13.70169), 1)),
			(cv((1.452676, 5.781665, 13.70169), 1)),
			(cv((10.121747, 5.474401, 13.889828), 1)),
			(cv((10.309886, 5.583132, 13.889828), 1)),
			(cv((10.121747, 5.583132, 13.70169), 1)),
			(cv((10.309886, 5.781665, 13.889828), 1)),
			(cv((10.121747, 5.781665, 13.70169), 1)),
			(cv((1.452676, 5.474401, 13.889828), 1)),
			(cv((1.452676, 5.583132, 13.70169), 1)),
			(cv((1.264538, 5.583132, 13.889828), 1)),
			(cv((1.452676, 5.781665, 13.70169), 1)),
			(cv((1.264538, 5.781665, 13.889828), 1)),
			(cv((10.121747, 5.583132, 19.669209), 1)),
			(cv((10.121747, 5.781666, 19.669209), 1)),
			(cv((10.121747, 5.781666, 22.5589), 1)),
			(cv((10.121747, 5.583132, 22.5589), 1)),
			(cv((10.121747, 5.781666, 16.779519), 1)),
			(cv((10.121747, 5.583132, 16.779519), 1)),
			(cv((10.121747, 5.583132, 13.889828), 1)),
			(cv((10.121747, 5.781666, 13.889829), 1)),
			(cv((1.452676, 5.781665, 22.747039), 1)),
			(cv((1.452676, 5.781665, 22.5589), 1)),
			(cv((4.342366, 5.781665, 22.5589), 1)),
			(cv((10.121747, 5.781665, 22.5589), 1)),
			(cv((7.232057, 5.781665, 22.747039), 1)),
			(cv((7.232057, 5.781665, 22.5589), 1)),
			(cv((4.342366, 5.781665, 22.747039), 1)),
			(cv((10.121747, 5.781665, 22.747039), 1)),
			(cv((1.264538, 5.781665, 22.5589), 1)),
			(cv((10.309886, 5.781666, 22.5589), 1)),
			(cv((10.309885, 5.781665, 19.669209), 1)),
			(cv((10.121747, 5.781665, 19.669209), 1)),
			(cv((10.121747, 5.781665, 16.779519), 1)),
			(cv((10.309885, 5.781665, 16.779519), 1)),
			(cv((1.264538, 5.781665, 19.669209), 1)),
			(cv((1.452676, 5.781665, 19.669209), 1)),
			(cv((10.121747, 5.781665, 13.701691), 1)),
			(cv((10.309886, 5.781665, 13.889829), 1)),
			(cv((10.121747, 5.781665, 13.889828), 1)),
			(cv((1.264538, 5.781666, 13.889829), 1)),
			(cv((1.452676, 5.781665, 13.701691), 1)),
			(cv((1.452676, 5.781665, 13.889828), 1)),
			(cv((7.232057, 5.781665, 13.889829), 1)),
			(cv((7.232057, 5.781665, 13.701691), 1)),
			(cv((1.264538, 5.781665, 16.779519), 1)),
			(cv((1.452676, 5.781665, 16.779519), 1)),
			(cv((4.342366, 5.781665, 13.889829), 1)),
			(cv((4.342366, 5.781665, 13.701691), 1)),
			(cv((1.452676, 5.583132, 22.5589), 1)),
			(cv((1.452676, 5.781665, 22.5589), 1)),
			(cv((1.452676, 5.781665, 19.669209), 1)),
			(cv((1.452676, 5.781665, 16.779519), 1)),
			(cv((1.452676, 5.583132, 16.779519), 1)),
			(cv((1.452676, 5.583132, 19.669209), 1)),
			(cv((1.452676, 5.781665, 13.889829), 1)),
			(cv((1.452676, 5.583132, 13.889828), 1)),
			(cv((4.342366, 5.583132, 22.5589), 1)),
			(cv((4.342367, 5.781666, 22.5589), 1)),
			(cv((1.452676, 5.781666, 22.5589), 1)),
			(cv((1.452676, 5.583132, 22.5589), 1)),
			(cv((7.232057, 5.781666, 22.5589), 1)),
			(cv((7.232057, 5.583132, 22.5589), 1)),
			(cv((10.121747, 5.583132, 22.5589), 1)),
			(cv((10.121747, 5.781666, 22.5589), 1)),
			(cv((7.232057, 5.583132, 13.889829), 1)),
			(cv((10.121747, 5.583132, 16.779519), 1)),
			(cv((7.232057, 5.583132, 16.779519), 1)),
			(cv((10.121747, 5.583132, 13.889829), 1)),
			(cv((7.232057, 5.583132, 19.669209), 1)),
			(cv((10.121747, 5.583132, 19.669209), 1)),
			(cv((10.121747, 5.583132, 22.5589), 1)),
			(cv((7.232057, 5.583132, 22.5589), 1)),
			(cv((4.342366, 5.583132, 22.5589), 1)),
			(cv((4.342366, 5.583132, 19.669209), 1)),
			(cv((4.342366, 5.583132, 16.779519), 1)),
			(cv((4.342366, 5.583132, 13.889829), 1)),
			(cv((1.452676, 5.583132, 16.779519), 1)),
			(cv((1.452676, 5.583132, 13.889829), 1)),
			(cv((1.452676, 5.583132, 19.669209), 1)),
			(cv((1.452676, 5.583132, 22.5589), 1))	),
	texture_vertices = (
			st( 0.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 0.000000, 0.942000 ),
			st( 0.000000, 0.942000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.942000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 0.000000, 0.942000 ),
			st( 0.000000, 0.942000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.942000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 0.000000, 0.942000 ),
			st( 0.000000, 0.942000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.942000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.942000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 0.000000, 0.942000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.942000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.942000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.942000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 0.942000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.942000 ),
			st( 0.000000, 0.942000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 0.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 0.944000 ),
			st( 1.000000, 1.000000 ),
			st( 0.333300, 0.000000 ),
			st( 0.000000, 0.199716 ),
			st( 0.333333, 0.199718 ),
			st( 0.000000, 0.000000 ),
			st( 0.333333, 0.399438 ),
			st( 0.000000, 0.399432 ),
			st( 0.000000, 0.599154 ),
			st( 0.333333, 0.599154 ),
			st( 0.666666, 0.599154 ),
			st( 0.666666, 0.399435 ),
			st( 0.666660, 0.199718 ),
			st( 0.666660, 0.000000 ),
			st( 1.000000, 0.199718 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 0.399435 ),
			st( 1.000000, 0.599154 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 5, 8), 0 ),
		polygon ((2, 3, 0),(8, 13, 0), 0 ),
		polygon ((1, 0, 4),(5, 0, 19), 0 ),
		polygon ((4, 5, 1),(19, 23, 5), 0 ),
		polygon ((5, 4, 6),(23, 19, 27), 0 ),
		polygon ((6, 7, 5),(27, 29, 23), 0 ),
		polygon ((3, 8, 0),(14, 32, 1), 1 ),
		polygon ((9, 0, 8),(34, 2, 32), 1 ),
		polygon ((0, 9, 10),(3, 34, 35), 1 ),
		polygon ((10, 4, 0),(35, 20, 4), 1 ),
		polygon ((4, 10, 11),(21, 35, 36), 1 ),
		polygon ((11, 6, 4),(36, 28, 22), 1 ),
		polygon ((3, 2, 12),(15, 9, 37), 2 ),
		polygon ((12, 13, 3),(37, 40, 16), 2 ),
		polygon ((14, 15, 12),(42, 44, 38), 3 ),
		polygon ((12, 2, 14),(39, 10, 42), 3 ),
		polygon ((13, 16, 3),(41, 45, 17), 4 ),
		polygon ((8, 3, 16),(33, 18, 45), 4 ),
		polygon ((17, 14, 2),(46, 43, 11), 5 ),
		polygon ((2, 1, 17),(12, 6, 46), 5 ),
		polygon ((1, 5, 17),(7, 24, 46), 5 ),
		polygon ((17, 5, 18),(46, 25, 47), 5 ),
		polygon ((18, 5, 7),(47, 26, 30), 5 ),
		polygon ((7, 19, 18),(31, 48, 47), 5 ),
		polygon ((20, 21, 22),(49, 54, 57), 0 ),
		polygon ((22, 23, 20),(57, 62, 49), 0 ),
		polygon ((21, 20, 24),(54, 49, 68), 0 ),
		polygon ((24, 25, 21),(68, 72, 54), 0 ),
		polygon ((25, 24, 26),(72, 68, 76), 0 ),
		polygon ((26, 27, 25),(76, 78, 72), 0 ),
		polygon ((23, 28, 20),(63, 81, 50), 1 ),
		polygon ((29, 20, 28),(83, 51, 81), 1 ),
		polygon ((20, 29, 30),(52, 83, 84), 1 ),
		polygon ((30, 24, 20),(84, 69, 53), 1 ),
		polygon ((24, 30, 31),(70, 84, 85), 1 ),
		polygon ((31, 26, 24),(85, 77, 71), 1 ),
		polygon ((23, 22, 32),(64, 58, 86), 2 ),
		polygon ((32, 33, 23),(86, 89, 65), 2 ),
		polygon ((34, 35, 32),(91, 93, 87), 3 ),
		polygon ((32, 22, 34),(88, 59, 91), 3 ),
		polygon ((33, 36, 23),(90, 94, 66), 4 ),
		polygon ((28, 23, 36),(82, 67, 94), 4 ),
		polygon ((37, 34, 22),(95, 92, 60), 5 ),
		polygon ((22, 21, 37),(61, 55, 95), 5 ),
		polygon ((21, 25, 37),(56, 73, 95), 5 ),
		polygon ((37, 25, 38),(95, 74, 96), 5 ),
		polygon ((38, 25, 27),(96, 75, 79), 5 ),
		polygon ((27, 39, 38),(80, 97, 96), 5 ),
		polygon ((40, 41, 42),(98, 103, 106), 0 ),
		polygon ((42, 43, 40),(106, 111, 98), 0 ),
		polygon ((41, 40, 44),(103, 98, 117), 0 ),
		polygon ((44, 45, 41),(117, 121, 103), 0 ),
		polygon ((45, 44, 46),(121, 117, 125), 0 ),
		polygon ((46, 47, 45),(125, 127, 121), 0 ),
		polygon ((43, 48, 40),(112, 130, 99), 1 ),
		polygon ((49, 40, 48),(132, 100, 130), 1 ),
		polygon ((40, 49, 50),(101, 132, 133), 1 ),
		polygon ((50, 44, 40),(133, 118, 102), 1 ),
		polygon ((44, 50, 51),(119, 133, 134), 1 ),
		polygon ((51, 46, 44),(134, 126, 120), 1 ),
		polygon ((43, 42, 52),(113, 107, 135), 2 ),
		polygon ((52, 53, 43),(135, 138, 114), 2 ),
		polygon ((54, 55, 52),(140, 142, 136), 3 ),
		polygon ((52, 42, 54),(137, 108, 140), 3 ),
		polygon ((53, 56, 43),(139, 143, 115), 4 ),
		polygon ((48, 43, 56),(131, 116, 143), 4 ),
		polygon ((57, 54, 42),(144, 141, 109), 5 ),
		polygon ((42, 41, 57),(110, 104, 144), 5 ),
		polygon ((41, 45, 57),(105, 122, 144), 5 ),
		polygon ((57, 45, 58),(144, 123, 145), 5 ),
		polygon ((58, 45, 47),(145, 124, 128), 5 ),
		polygon ((47, 59, 58),(129, 146, 145), 5 ),
		polygon ((60, 61, 62),(147, 148, 149), 1 ),
		polygon ((62, 61, 63),(149, 148, 150), 1 ),
		polygon ((63, 64, 62),(150, 151, 149), 1 ),
		polygon ((65, 66, 67),(152, 153, 154), 1 ),
		polygon ((67, 66, 68),(154, 153, 155), 1 ),
		polygon ((68, 69, 67),(155, 156, 154), 1 ),
		polygon ((70, 71, 72),(157, 159, 160), 1 ),
		polygon ((72, 73, 70),(160, 161, 157), 1 ),
		polygon ((74, 75, 76),(162, 163, 166), 5 ),
		polygon ((76, 77, 74),(166, 167, 162), 5 ),
		polygon ((71, 70, 75),(159, 158, 164), 0 ),
		polygon ((75, 74, 71),(165, 162, 159), 0 ),
		polygon ((78, 79, 80),(168, 169, 170), 5 ),
		polygon ((81, 82, 83),(171, 173, 174), 5 ),
		polygon ((80, 84, 78),(170, 175, 168), 5 ),
		polygon ((85, 82, 81),(176, 173, 171), 5 ),
		polygon ((84, 80, 83),(175, 170, 174), 5 ),
		polygon ((83, 82, 84),(174, 173, 175), 5 ),
		polygon ((78, 86, 79),(168, 177, 169), 5 ),
		polygon ((87, 85, 81),(178, 176, 171), 5 ),
		polygon ((88, 89, 90),(179, 180, 183), 5 ),
		polygon ((90, 91, 88),(183, 184, 179), 5 ),
		polygon ((79, 92, 93),(169, 185, 186), 5 ),
		polygon ((86, 92, 79),(177, 185, 169), 5 ),
		polygon ((87, 81, 89),(178, 172, 181), 5 ),
		polygon ((89, 88, 87),(182, 179, 178), 5 ),
		polygon ((94, 95, 96),(187, 188, 189), 5 ),
		polygon ((97, 98, 99),(190, 191, 192), 5 ),
		polygon ((96, 91, 90),(189, 184, 183), 5 ),
		polygon ((95, 91, 96),(188, 184, 189), 5 ),
		polygon ((94, 96, 100),(187, 189, 193), 5 ),
		polygon ((100, 101, 94),(193, 194, 187), 5 ),
		polygon ((102, 103, 93),(195, 196, 186), 5 ),
		polygon ((93, 92, 102),(186, 185, 195), 5 ),
		polygon ((101, 100, 104),(194, 193, 197), 5 ),
		polygon ((104, 105, 101),(197, 198, 194), 5 ),
		polygon ((97, 99, 103),(190, 192, 196), 5 ),
		polygon ((103, 102, 97),(196, 195, 190), 5 ),
		polygon ((99, 105, 104),(192, 198, 197), 5 ),
		polygon ((98, 105, 99),(191, 198, 192), 5 ),
		polygon ((106, 107, 108),(199, 200, 201), 5 ),
		polygon ((109, 110, 111),(202, 203, 206), 0 ),
		polygon ((111, 108, 109),(206, 201, 202), 0 ),
		polygon ((108, 111, 106),(201, 207, 199), 5 ),
		polygon ((112, 113, 110),(208, 209, 204), 1 ),
		polygon ((110, 109, 112),(205, 202, 208), 1 ),
		polygon ((114, 115, 116),(210, 212, 213), 1 ),
		polygon ((116, 117, 114),(213, 214, 210), 1 ),
		polygon ((118, 119, 120),(215, 216, 219), 5 ),
		polygon ((120, 121, 118),(219, 220, 215), 5 ),
		polygon ((115, 114, 119),(212, 211, 217), 0 ),
		polygon ((119, 118, 115),(218, 215, 212), 0 ),
		polygon ((122, 123, 124),(221, 222, 223), 6 ),
		polygon ((123, 122, 125),(222, 221, 224), 6 ),
		polygon ((123, 126, 124),(222, 225, 223), 6 ),
		polygon ((126, 123, 127),(225, 222, 226), 6 ),
		polygon ((126, 127, 128),(225, 226, 227), 6 ),
		polygon ((128, 129, 126),(227, 228, 225), 6 ),
		polygon ((126, 129, 130),(225, 228, 229), 6 ),
		polygon ((130, 131, 126),(229, 230, 225), 6 ),
		polygon ((126, 131, 132),(225, 230, 231), 6 ),
		polygon ((132, 124, 126),(231, 223, 225), 6 ),
		polygon ((124, 132),(223, 231), 6 ),
		polygon ((132, 133, 122),(231, 232, 221), 6 ),
		polygon ((122, 124, 132),(221, 223, 231), 6 ),
		polygon ((132, 134, 135),(231, 233, 234), 6 ),
		polygon ((135, 133, 132),(234, 232, 231), 6 ),
		polygon ((132, 131, 136),(231, 230, 235), 6 ),
		polygon ((136, 134, 132),(235, 233, 231), 6 ),
		polygon ((136, 131, 130),(235, 230, 229), 6 ),
		polygon ((130, 137, 136),(229, 236, 235), 6 )
	)
); /* end of polyset 'building_southeast' */

polyset sidewalk_southwest (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (yard ),
	shader = (concrete ),
	casts_shadow = TRUE,
	vertices = ((cv((-38.455932, 0.0, 59.14488), 1)),
			(cv((-38.455932, 0.0, 19.714958), 1)),
			(cv((-28.441192, 0.0, 19.714958), 1)),
			(cv((-26.469781, 0.0, 59.14488), 1)),
			(cv((-28.441192, 0.0, 59.14488), 1)),
			(cv((-28.440009, 0.0, 19.71496), 1)),
			(cv((-26.468598, 0.0, 19.71496), 1)),
			(cv((-28.441192, 0.0, 19.714958), 1)),
			(cv((-28.441192, 0.0, 59.14488), 1)),
			(cv((-38.455932, 0.0, 59.14488), 1))	),
	texture_vertices = (
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 19.000000, 0.000000 ),
			st( 19.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 1),(2, 1), 0 ),
		polygon ((3, 4, 5),(3, 4, 5), 1 ),
		polygon ((5, 6, 3),(5, 6, 3), 1 ),
		polygon ((7, 8),(7, 8), 0 ),
		polygon ((9, 7, 8),(9, 7, 8), 0 )
	)
); /* end of polyset 'sidewalk_southwest' */

polyset sidewalk_west (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (yard ),
	shader = (concrete ),
	casts_shadow = TRUE,
	vertices = ((cv((-28.441192, 0.0, -24.788185), 1)),
			(cv((-28.441192, 0.0, 19.714958), 1)),
			(cv((-38.455932, 0.0, 19.714958), 1)),
			(cv((-38.455932, 0.0, -24.788185), 1)),
			(cv((-26.469781, 0.0, 19.714961), 1)),
			(cv((-28.441192, 0.0, 19.714961), 1)),
			(cv((-28.440009, 0.0, -24.788183), 1)),
			(cv((-26.468598, 0.0, -24.788183), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 19.000000, 0.000000 ),
			st( 19.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1),(0, 1), 0 ),
		polygon ((2, 0, 1),(2, 0, 1), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((0, 3),(0, 3), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 1 ),
		polygon ((6, 7, 4),(6, 7, 4), 1 )
	)
); /* end of polyset 'sidewalk_west' */

polyset sidewalk_northwest (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (concrete ),
	shader = (yard ),
	casts_shadow = TRUE,
	vertices = ((cv((-26.469781, 0.0, -24.788183), 1)),
			(cv((-28.441192, 0.0, -24.788183), 1)),
			(cv((-28.440009, 0.0, -59.14488), 1)),
			(cv((-26.468598, 0.0, -59.14488), 1)),
			(cv((-28.441192, 0.0, -59.14488), 1)),
			(cv((-28.441192, 0.0, -24.788185), 1)),
			(cv((-38.455932, 0.0, -24.788185), 1)),
			(cv((-38.455932, 0.0, -59.14488), 1))	),
	texture_vertices = (
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 19.000000, 0.000000 ),
			st( 19.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5),(4, 5), 1 ),
		polygon ((6, 4, 5),(6, 4, 5), 1 ),
		polygon ((4, 7),(4, 7), 1 ),
		polygon ((6, 7, 4),(6, 7, 4), 1 )
	)
); /* end of polyset 'sidewalk_northwest' */

polyset sidewalk_southeast (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (concrete ),
	shader = (yard ),
	casts_shadow = TRUE,
	vertices = ((cv((28.435013, 0.0, 59.14488), 1)),
			(cv((26.463603, 0.0, 59.14488), 1)),
			(cv((26.464785, 0.0, 19.71496), 1)),
			(cv((28.436196, 0.0, 19.71496), 1)),
			(cv((38.449753, 0.0, 19.714958), 1)),
			(cv((38.449753, 0.0, 59.14488), 1)),
			(cv((28.435013, 0.0, 59.14488), 1)),
			(cv((28.435013, 0.0, 19.714958), 1))	),
	texture_vertices = (
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 19.000000, 0.000000 ),
			st( 19.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5),(4, 5), 1 ),
		polygon ((6, 4, 5),(6, 4, 5), 1 ),
		polygon ((6, 7, 4),(6, 7, 4), 1 ),
		polygon ((4, 7),(4, 7), 1 )
	)
); /* end of polyset 'sidewalk_southeast' */

polyset sidewalk_east (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (concrete ),
	shader = (yard ),
	casts_shadow = TRUE,
	vertices = ((cv((28.435013, 0.0, 19.71496), 1)),
			(cv((26.463603, 0.0, 19.71496), 1)),
			(cv((26.464785, 0.0, -24.788184), 1)),
			(cv((28.436196, 0.0, -24.788184), 1)),
			(cv((38.449753, 0.0, -24.788185), 1)),
			(cv((28.435013, 0.0, -24.788185), 1)),
			(cv((38.449753, 0.0, 19.714958), 1)),
			(cv((28.435013, 0.0, 19.714958), 1))	),
	texture_vertices = (
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 19.000000, 0.000000 ),
			st( 19.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5),(4, 5), 1 ),
		polygon ((7, 4, 6),(7, 4, 6), 1 ),
		polygon ((7, 5, 4),(7, 5, 4), 1 ),
		polygon ((4, 6),(4, 6), 1 )
	)
); /* end of polyset 'sidewalk_east' */

polyset sidewalk_northeast (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (yard ),
	shader = (concrete ),
	casts_shadow = TRUE,
	vertices = ((cv((28.435013, 0.0, -24.788185), 1)),
			(cv((28.435013, 0.0, -59.14488), 1)),
			(cv((38.449753, 0.0, -59.14488), 1)),
			(cv((38.449753, 0.0, -24.788185), 1)),
			(cv((28.435013, 0.0, -24.788184), 1)),
			(cv((26.463603, 0.0, -24.788184), 1)),
			(cv((26.464785, 0.0, -59.14488), 1)),
			(cv((28.436196, 0.0, -59.14488), 1))	),
	texture_vertices = (
			st( 0.000000, 1.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 19.000000, 0.000000 ),
			st( 19.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3),(2, 3), 0 ),
		polygon ((0, 2, 3),(0, 2, 3), 0 ),
		polygon ((2, 1),(2, 1), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 1 ),
		polygon ((6, 7, 4),(6, 7, 4), 1 )
	)
); /* end of polyset 'sidewalk_northeast' */

polyset house08 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (house2 ),
	shader = (house1 ),
	shader = (house6 ),
	shader = (house5 ),
	shader = (house4 ),
	casts_shadow = TRUE,
	vertices = ((cv((-37.563903, -0.117144, 25.159753), 1)),
			(cv((-37.563903, 9.666098, 25.159753), 1)),
			(cv((-37.563903, -0.117144, 18.870897), 1)),
			(cv((-37.563903, 9.666098, 18.870897), 1)),
			(cv((-37.563903, 0.0, 37.384074), 1)),
			(cv((-37.563903, 9.783242, 37.384074), 1)),
			(cv((-37.563903, 0.0, 30.479953), 1)),
			(cv((-37.563903, 9.783242, 30.479953), 1)),
			(cv((-37.927779, -0.117144, 54.975382), 1)),
			(cv((-37.927779, 9.666098, 54.975382), 1)),
			(cv((-37.927779, -0.117144, 48.071261), 1)),
			(cv((-37.927779, 9.666098, 48.071261), 1)),
			(cv((-37.563903, -0.117144, 49.045193), 1)),
			(cv((-37.563903, 9.666098, 49.045193), 1)),
			(cv((-37.563903, -0.117144, 42.551248), 1)),
			(cv((-37.563903, 9.666098, 42.551248), 1)),
			(cv((-38.049071, -0.117144, 43.29862), 1)),
			(cv((-38.049071, 9.666098, 43.29862), 1)),
			(cv((-38.049071, -0.117144, 37.009763), 1)),
			(cv((-38.049071, 9.666098, 37.009763), 1)),
			(cv((-38.049071, 0.0, 31.137526), 1)),
			(cv((-38.049071, 9.244611, 31.137526), 1)),
			(cv((-38.049071, 0.0, 24.613522), 1)),
			(cv((-38.049071, 9.244611, 24.613522), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 1, 3),(2, 1, 3), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 1 ),
		polygon ((6, 5, 7),(6, 5, 7), 1 ),
		polygon ((8, 9, 10),(8, 9, 10), 2 ),
		polygon ((10, 9, 11),(10, 9, 11), 2 ),
		polygon ((12, 13, 14),(12, 13, 14), 3 ),
		polygon ((14, 13, 15),(14, 13, 15), 3 ),
		polygon ((16, 17, 18),(16, 17, 18), 0 ),
		polygon ((18, 17, 19),(18, 17, 19), 0 ),
		polygon ((20, 21, 22),(20, 21, 22), 4 ),
		polygon ((22, 21, 23),(22, 21, 23), 4 )
	)
); /* end of polyset 'house08' */

polyset house07 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (house2 ),
	shader = (house4 ),
	shader = (house1 ),
	shader = (house5 ),
	shader = (house6 ),
	casts_shadow = TRUE,
	vertices = ((cv((-38.049071, -0.117144, -31.133326), 1)),
			(cv((-38.049071, 9.666098, -31.133326), 1)),
			(cv((-38.049071, -0.117144, -37.422183), 1)),
			(cv((-38.049071, 9.666098, -37.422183), 1)),
			(cv((-38.049071, 0.0, -43.294419), 1)),
			(cv((-38.049071, 9.244611, -43.294419), 1)),
			(cv((-38.049071, 0.0, -49.818423), 1)),
			(cv((-38.049071, 9.244611, -49.818423), 1)),
			(cv((-37.563903, 0.0, -37.047872), 1)),
			(cv((-37.563903, 9.783242, -37.047872), 1)),
			(cv((-37.563903, 0.0, -43.951992), 1)),
			(cv((-37.563903, 9.783242, -43.951992), 1)),
			(cv((-37.563903, -0.117144, -49.272192), 1)),
			(cv((-37.563903, 9.666098, -49.272192), 1)),
			(cv((-37.563903, -0.117144, -55.561049), 1)),
			(cv((-37.563903, 9.666098, -55.561049), 1)),
			(cv((-37.563903, -0.117144, -25.386753), 1)),
			(cv((-37.563903, 9.666098, -25.386753), 1)),
			(cv((-37.563903, -0.117144, -31.880698), 1)),
			(cv((-37.563903, 9.666098, -31.880698), 1)),
			(cv((-37.927779, -0.117144, -19.456564), 1)),
			(cv((-37.927779, 9.666098, -19.456564), 1)),
			(cv((-37.927779, -0.117144, -26.360685), 1)),
			(cv((-37.927779, 9.666098, -26.360685), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 1, 3),(2, 1, 3), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 1 ),
		polygon ((6, 5, 7),(6, 5, 7), 1 ),
		polygon ((8, 9, 10),(8, 9, 10), 2 ),
		polygon ((10, 9, 11),(10, 9, 11), 2 ),
		polygon ((12, 13, 14),(12, 13, 14), 0 ),
		polygon ((14, 13, 15),(14, 13, 15), 0 ),
		polygon ((16, 17, 18),(16, 17, 18), 3 ),
		polygon ((18, 17, 19),(18, 17, 19), 3 ),
		polygon ((20, 21, 22),(20, 21, 22), 4 ),
		polygon ((22, 21, 23),(22, 21, 23), 4 )
	)
); /* end of polyset 'house07' */

polyset house06 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (house6 ),
	shader = (house5 ),
	shader = (house4 ),
	shader = (house3 ),
	shader = (house1 ),
	casts_shadow = TRUE,
	vertices = ((cv((-37.806487, -0.117144, 6.125902), 1)),
			(cv((-37.806487, 9.666098, 6.125902), 1)),
			(cv((-37.806487, -0.117144, -0.778219), 1)),
			(cv((-37.806487, 9.666098, -0.778219), 1)),
			(cv((-37.563903, -0.117144, 11.850595), 1)),
			(cv((-37.563903, 9.666098, 11.850595), 1)),
			(cv((-37.563903, -0.117144, 5.35665), 1)),
			(cv((-37.563903, 9.666098, 5.35665), 1)),
			(cv((-37.563903, -0.117144, -13.675494), 1)),
			(cv((-37.563903, 9.127467, -13.675494), 1)),
			(cv((-37.563903, -0.117144, -20.199498), 1)),
			(cv((-37.563903, 9.127467, -20.199498), 1)),
			(cv((-37.927779, -0.117144, -5.783801), 1)),
			(cv((-37.927779, 6.613409, -5.783801), 1)),
			(cv((-37.927779, -0.117144, -14.191901), 1)),
			(cv((-37.927779, 6.613409, -14.191901), 1)),
			(cv((-37.563903, -0.175457, 0.438099), 1)),
			(cv((-37.563903, 9.607786, 0.438099), 1)),
			(cv((-37.563903, -0.175457, -6.466022), 1)),
			(cv((-37.563903, 9.607786, -6.466022), 1)),
			(cv((-38.170363, -0.117144, 19.390744), 1)),
			(cv((-38.170363, 6.613409, 19.390744), 1)),
			(cv((-38.170363, -0.117144, 10.982644), 1)),
			(cv((-38.170363, 6.613409, 10.982644), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 1, 3),(2, 1, 3), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 1 ),
		polygon ((6, 5, 7),(6, 5, 7), 1 ),
		polygon ((8, 9, 10),(8, 9, 10), 2 ),
		polygon ((10, 9, 11),(10, 9, 11), 2 ),
		polygon ((12, 13, 14),(12, 13, 14), 3 ),
		polygon ((14, 13, 15),(14, 13, 15), 3 ),
		polygon ((16, 17, 18),(16, 17, 18), 4 ),
		polygon ((18, 17, 19),(18, 17, 19), 4 ),
		polygon ((20, 21, 22),(20, 21, 22), 3 ),
		polygon ((22, 21, 23),(22, 21, 23), 3 )
	)
); /* end of polyset 'house06' */

polyset house05 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (house4 ),
	shader = (house2 ),
	shader = (house6 ),
	shader = (house5 ),
	shader = (house1 ),
	casts_shadow = TRUE,
	vertices = ((cv((37.385353, 0.0, 24.613522), 1)),
			(cv((37.385353, 9.244611, 31.137526), 1)),
			(cv((37.385353, 0.0, 31.137526), 1)),
			(cv((37.385353, 9.244611, 24.613522), 1)),
			(cv((37.385353, -0.117144, 37.009763), 1)),
			(cv((37.385353, 9.666098, 43.29862), 1)),
			(cv((37.385353, -0.117144, 43.29862), 1)),
			(cv((37.385353, 9.666098, 37.009763), 1)),
			(cv((37.506645, -0.117144, 48.071261), 1)),
			(cv((37.506645, 9.666098, 54.975382), 1)),
			(cv((37.506645, -0.117144, 54.975382), 1)),
			(cv((37.506645, 9.666098, 48.071261), 1)),
			(cv((37.870522, -0.117144, 42.551248), 1)),
			(cv((37.870522, 9.666098, 49.045193), 1)),
			(cv((37.870522, -0.117144, 49.045193), 1)),
			(cv((37.870522, 9.666098, 42.551248), 1)),
			(cv((37.870522, 0.0, 30.479953), 1)),
			(cv((37.870522, 9.783242, 37.384074), 1)),
			(cv((37.870522, 0.0, 37.384074), 1)),
			(cv((37.870522, 9.783242, 30.479953), 1)),
			(cv((37.870522, -0.117144, 18.870897), 1)),
			(cv((37.870522, 9.666098, 25.159753), 1)),
			(cv((37.870522, -0.117144, 25.159753), 1)),
			(cv((37.870522, 9.666098, 18.870897), 1))	),
	texture_vertices = (
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((3, 1, 0),(3, 1, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 1 ),
		polygon ((7, 5, 4),(7, 5, 4), 1 ),
		polygon ((8, 9, 10),(8, 9, 10), 2 ),
		polygon ((11, 9, 8),(11, 9, 8), 2 ),
		polygon ((12, 13, 14),(12, 13, 14), 3 ),
		polygon ((15, 13, 12),(15, 13, 12), 3 ),
		polygon ((16, 17, 18),(16, 17, 18), 4 ),
		polygon ((19, 17, 16),(19, 17, 16), 4 ),
		polygon ((20, 21, 22),(20, 21, 22), 1 ),
		polygon ((23, 21, 20),(23, 21, 20), 1 )
	)
); /* end of polyset 'house05' */

polyset house04 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (house6 ),
	shader = (house5 ),
	shader = (house2 ),
	shader = (house1 ),
	shader = (house4 ),
	casts_shadow = TRUE,
	vertices = ((cv((37.506645, -0.117144, -26.360685), 1)),
			(cv((37.506645, 9.666098, -19.456564), 1)),
			(cv((37.506645, -0.117144, -19.456564), 1)),
			(cv((37.506645, 9.666098, -26.360685), 1)),
			(cv((37.870522, -0.117144, -31.880698), 1)),
			(cv((37.870522, 9.666098, -25.386753), 1)),
			(cv((37.870522, -0.117144, -25.386753), 1)),
			(cv((37.870522, 9.666098, -31.880698), 1)),
			(cv((37.870522, -0.117144, -55.561049), 1)),
			(cv((37.870522, 9.666098, -49.272192), 1)),
			(cv((37.870522, -0.117144, -49.272192), 1)),
			(cv((37.870522, 9.666098, -55.561049), 1)),
			(cv((37.870522, 0.0, -43.951992), 1)),
			(cv((37.870522, 9.783242, -37.047872), 1)),
			(cv((37.870522, 0.0, -37.047872), 1)),
			(cv((37.870522, 9.783242, -43.951992), 1)),
			(cv((37.385353, 0.0, -49.818423), 1)),
			(cv((37.385353, 9.244611, -43.294419), 1)),
			(cv((37.385353, 0.0, -43.294419), 1)),
			(cv((37.385353, 9.244611, -49.818423), 1)),
			(cv((37.385353, -0.117144, -37.422183), 1)),
			(cv((37.385353, 9.666098, -31.133326), 1)),
			(cv((37.385353, -0.117144, -31.133326), 1)),
			(cv((37.385353, 9.666098, -37.422183), 1))	),
	texture_vertices = (
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((3, 1, 0),(3, 1, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 1 ),
		polygon ((7, 5, 4),(7, 5, 4), 1 ),
		polygon ((8, 9, 10),(8, 9, 10), 2 ),
		polygon ((11, 9, 8),(11, 9, 8), 2 ),
		polygon ((12, 13, 14),(12, 13, 14), 3 ),
		polygon ((15, 13, 12),(15, 13, 12), 3 ),
		polygon ((16, 17, 18),(16, 17, 18), 4 ),
		polygon ((19, 17, 16),(19, 17, 16), 4 ),
		polygon ((20, 21, 22),(20, 21, 22), 2 ),
		polygon ((23, 21, 20),(23, 21, 20), 2 )
	)
); /* end of polyset 'house04' */

polyset house03 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (house3 ),
	shader = (house1 ),
	shader = (house4 ),
	shader = (house5 ),
	shader = (house6 ),
	casts_shadow = TRUE,
	vertices = ((cv((37.264061, -0.117144, 10.982644), 1)),
			(cv((37.264061, 6.613409, 19.390744), 1)),
			(cv((37.264061, -0.117144, 19.390744), 1)),
			(cv((37.264061, 6.613409, 10.982644), 1)),
			(cv((37.870522, -0.175457, -6.466022), 1)),
			(cv((37.870522, 9.607786, 0.438099), 1)),
			(cv((37.870522, -0.175457, 0.438099), 1)),
			(cv((37.870522, 9.607786, -6.466022), 1)),
			(cv((37.506645, -0.117144, -14.191901), 1)),
			(cv((37.506645, 6.613409, -5.783801), 1)),
			(cv((37.506645, -0.117144, -5.783801), 1)),
			(cv((37.506645, 6.613409, -14.191901), 1)),
			(cv((37.870522, -0.117144, -20.199498), 1)),
			(cv((37.870522, 9.127467, -13.675494), 1)),
			(cv((37.870522, -0.117144, -13.675494), 1)),
			(cv((37.870522, 9.127467, -20.199498), 1)),
			(cv((37.870522, -0.117144, 5.35665), 1)),
			(cv((37.870522, 9.666098, 11.850595), 1)),
			(cv((37.870522, -0.117144, 11.850595), 1)),
			(cv((37.870522, 9.666098, 5.35665), 1)),
			(cv((37.627937, -0.117144, -0.778219), 1)),
			(cv((37.627937, 9.666098, 6.125902), 1)),
			(cv((37.627937, -0.117144, 6.125902), 1)),
			(cv((37.627937, 9.666098, -0.778219), 1))	),
	texture_vertices = (
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 0.000000, 0.000000 ),
			st( 1.000000, 1.000000 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((3, 1, 0),(3, 1, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 1 ),
		polygon ((7, 5, 4),(7, 5, 4), 1 ),
		polygon ((8, 9, 10),(8, 9, 10), 0 ),
		polygon ((11, 9, 8),(11, 9, 8), 0 ),
		polygon ((12, 13, 14),(12, 13, 14), 2 ),
		polygon ((15, 13, 12),(15, 13, 12), 2 ),
		polygon ((16, 17, 18),(16, 17, 18), 3 ),
		polygon ((19, 17, 16),(19, 17, 16), 3 ),
		polygon ((20, 21, 22),(20, 21, 22), 4 ),
		polygon ((23, 21, 20),(23, 21, 20), 4 )
	)
); /* end of polyset 'house03' */

polyset house02 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (house3 ),
	casts_shadow = TRUE,
	vertices = ((cv((4.509152, -0.117144, -31.850431), 1)),
			(cv((4.509152, 6.613409, -31.850431), 1)),
			(cv((-3.898935, -0.117144, -31.850431), 1)),
			(cv((-3.898935, 6.613409, -31.850431), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ) ),
	polygons = (
		polygon ((2, 1, 0),(2, 1, 0), 0 ),
		polygon ((3, 1, 2),(3, 1, 2), 0 )
	)
); /* end of polyset 'house02' */

polyset house01 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (house3 ),
	casts_shadow = TRUE,
	vertices = ((cv((-4.231824, -0.117144, 32.0924), 1)),
			(cv((-4.231824, 6.613409, 32.0924), 1)),
			(cv((4.176225, -0.117144, 32.0924), 1)),
			(cv((4.176225, 6.613409, 32.0924), 1))	),
	texture_vertices = (
			st( 0.000000, 0.000000 ),
			st( 0.000000, 1.000000 ),
			st( 1.000000, 0.000000 ),
			st( 1.000000, 1.000000 ) ),
	polygons = (
		polygon ((2, 1, 0),(2, 1, 0), 0 ),
		polygon ((3, 1, 2),(3, 1, 2), 0 )
	)
); /* end of polyset 'house01' */

polyset alley_trashcans (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (DefaultShader ),
	casts_shadow = TRUE,
	vertices = ((cv((0.561737, 0.045982, -15.762804), 1)),
			(cv((-0.072571, 0.003811, -15.567688), 1)),
			(cv((0.583634, 0.164978, -15.677518), 1)),
			(cv((-0.042673, 0.098709, -15.486408), 1)),
			(cv((0.583956, 0.313003, -15.676267), 1)),
			(cv((-0.085363, 0.219624, -15.549256), 1)),
			(cv((0.562578, 0.364236, -15.759528), 1)),
			(cv((-0.109792, 0.2076, -15.652548), 1)),
			(cv((0.527667, 0.332889, -15.895499), 1)),
			(cv((-0.108539, 0.079862, -15.72442), 1)),
			(cv((0.492557, 0.366693, -16.032243), 1)),
			(cv((-0.154659, 0.173911, -15.829114), 1)),
			(cv((0.470659, 0.316979, -16.117529), 1)),
			(cv((-0.202619, 0.19649, -15.890363), 1)),
			(cv((0.470338, 0.168953, -16.11878), 1)),
			(cv((-0.211971, 0.108709, -15.891614), 1)),
			(cv((0.491716, 0.048439, -16.035518), 1)),
			(cv((-0.210593, 0.012292, -15.808353), 1)),
			(cv((0.526627, 0.001468, -15.899548), 1)),
			(cv((-0.139681, 0.001468, -15.728469), 1)),
			(cv((0.780101, 0.0, -15.332589), 1)),
			(cv((0.720127, 0.68792, -15.197251), 1)),
			(cv((0.720127, 0.0, -15.197251), 1)),
			(cv((0.780101, 0.68792, -15.332589), 1)),
			(cv((0.749071, 0.0, -15.477331), 1)),
			(cv((0.749071, 0.68792, -15.477331), 1)),
			(cv((0.63889, 0.0, -15.576191), 1)),
			(cv((0.63889, 0.68792, -15.576191), 1)),
			(cv((0.491643, 0.0, -15.591407), 1)),
			(cv((0.491643, 0.68792, -15.591407), 1)),
			(cv((0.363574, 0.0, -15.517168), 1)),
			(cv((0.363574, 0.68792, -15.517168), 1)),
			(cv((0.3036, 0.0, -15.38183), 1)),
			(cv((0.3036, 0.68792, -15.38183), 1)),
			(cv((0.33463, 0.0, -15.237088), 1)),
			(cv((0.33463, 0.68792, -15.237088), 1)),
			(cv((0.444811, 0.0, -15.138229), 1)),
			(cv((0.444811, 0.68792, -15.138229), 1)),
			(cv((0.592058, 0.0, -15.123012), 1)),
			(cv((0.592058, 0.68792, -15.123012), 1)),
			(cv((0.363573, 0.0, -15.517168), 1)),
			(cv((0.363573, 0.68792, -15.517168), 1)),
			(cv((0.3036, 0.0, -15.381831), 1)),
			(cv((0.3036, 0.68792, -15.381831), 1)),
			(cv((0.33463, 0.0, -15.237089), 1)),
			(cv((0.33463, 0.68792, -15.237089), 1)),
			(cv((0.444811, 0.0, -15.138229), 1)),
			(cv((0.444811, 0.68792, -15.138229), 1)),
			(cv((0.592057, 0.0, -15.123012), 1)),
			(cv((0.592057, 0.68792, -15.123012), 1)),
			(cv((0.720126, 0.0, -15.197251), 1)),
			(cv((0.720126, 0.68792, -15.197251), 1)),
			(cv((0.7801, 0.0, -15.332589), 1)),
			(cv((0.7801, 0.68792, -15.332589), 1)),
			(cv((0.74907, 0.0, -15.477331), 1)),
			(cv((0.74907, 0.68792, -15.477331), 1)),
			(cv((0.638889, 0.0, -15.576191), 1)),
			(cv((0.638889, 0.68792, -15.576191), 1)),
			(cv((0.491642, 0.0, -15.591408), 1)),
			(cv((0.491642, 0.68792, -15.591408), 1)),
			(cv((0.470659, 0.316978, -16.117528), 1)),
			(cv((-0.154659, 0.17391, -15.829114), 1)),
			(cv((0.492557, 0.366693, -16.032242), 1)),
			(cv((-0.202619, 0.196489, -15.890363), 1)),
			(cv((0.470338, 0.168953, -16.11878), 1)),
			(cv((-0.211971, 0.108709, -15.891614), 1)),
			(cv((0.491716, 0.048439, -16.035518), 1)),
			(cv((-0.210593, 0.012292, -15.808353), 1)),
			(cv((0.526627, 0.001468, -15.899547), 1)),
			(cv((-0.139681, 0.001468, -15.728469), 1)),
			(cv((0.561737, 0.045982, -15.762803), 1)),
			(cv((-0.072571, 0.003811, -15.567687), 1)),
			(cv((0.583635, 0.164977, -15.677518), 1)),
			(cv((-0.042673, 0.098708, -15.486408), 1)),
			(cv((0.583956, 0.313003, -15.676266), 1)),
			(cv((-0.085363, 0.219624, -15.549256), 1)),
			(cv((0.562578, 0.364236, -15.759528), 1)),
			(cv((-0.109792, 0.2076, -15.652548), 1)),
			(cv((0.527667, 0.332889, -15.895498), 1)),
			(cv((-0.108539, 0.079862, -15.72442), 1))	),
	texture_vertices = (
			st( 0.200000, 0.014247 ),
			st( 0.200000, 0.991662 ),
			st( 0.300000, 0.014247 ),
			st( 0.300000, 0.991662 ),
			st( 0.400000, 0.014247 ),
			st( 0.400000, 0.991662 ),
			st( 0.500000, 0.014247 ),
			st( 0.500000, 0.991662 ),
			st( 0.600000, 0.014247 ),
			st( 0.600000, 0.991662 ),
			st( 0.700000, 0.014247 ),
			st( 0.700000, 0.991662 ),
			st( 0.800000, 0.014247 ),
			st( 0.800000, 0.991662 ),
			st( 0.900000, 0.014247 ),
			st( 0.900000, 0.991662 ),
			st( 1.000000, 0.014247 ),
			st( 0.000000, 0.014247 ),
			st( 1.000000, 0.991662 ),
			st( 0.000000, 0.991662 ),
			st( 0.000000, 0.991662 ),
			st( 0.100000, 0.014247 ),
			st( 0.100000, 0.991662 ),
			st( 0.300000, 0.014247 ),
			st( 0.200000, 0.991662 ),
			st( 0.200000, 0.014247 ),
			st( 0.300000, 0.991662 ),
			st( 0.400000, 0.014247 ),
			st( 0.400000, 0.991662 ),
			st( 0.500000, 0.014247 ),
			st( 0.500000, 0.991662 ),
			st( 0.600000, 0.014247 ),
			st( 0.600000, 0.991662 ),
			st( 0.700000, 0.014247 ),
			st( 0.700000, 0.991662 ),
			st( 0.800000, 0.014247 ),
			st( 0.800000, 0.991662 ),
			st( 0.900000, 0.014247 ),
			st( 0.900000, 0.991662 ),
			st( 1.000000, 0.014247 ),
			st( 0.000000, 0.014247 ),
			st( 1.000000, 0.991662 ),
			st( 0.000000, 0.991662 ),
			st( 0.000000, 0.991662 ),
			st( 0.100000, 0.014247 ),
			st( 0.100000, 0.991662 ),
			st( 0.200000, 0.014247 ),
			st( 0.200000, 0.991662 ),
			st( 0.300000, 0.014247 ),
			st( 0.300000, 0.991662 ),
			st( 0.400000, 0.014247 ),
			st( 0.400000, 0.991662 ),
			st( 0.500000, 0.014247 ),
			st( 0.500000, 0.991662 ),
			st( 0.600000, 0.014247 ),
			st( 0.600000, 0.991662 ),
			st( 0.700000, 0.014247 ),
			st( 0.700000, 0.991662 ),
			st( 0.800000, 0.014247 ),
			st( 0.800000, 0.991662 ),
			st( 0.900000, 0.014247 ),
			st( 0.900000, 0.991662 ),
			st( 1.000000, 0.014247 ),
			st( 0.000000, 0.014247 ),
			st( 1.000000, 0.991662 ),
			st( 0.000000, 0.991662 ),
			st( 0.000000, 0.991662 ),
			st( 0.100000, 0.014247 ),
			st( 0.100000, 0.991662 ),
			st( 0.300000, 0.014247 ),
			st( 0.200000, 0.991662 ),
			st( 0.200000, 0.014247 ),
			st( 0.300000, 0.991662 ),
			st( 0.400000, 0.014247 ),
			st( 0.400000, 0.991662 ),
			st( 0.500000, 0.014247 ),
			st( 0.500000, 0.991662 ),
			st( 0.600000, 0.014247 ),
			st( 0.600000, 0.991662 ),
			st( 0.700000, 0.014247 ),
			st( 0.700000, 0.991662 ),
			st( 0.800000, 0.014247 ),
			st( 0.800000, 0.991662 ),
			st( 0.900000, 0.014247 ),
			st( 0.900000, 0.991662 ),
			st( 1.000000, 0.014247 ),
			st( 0.000000, 0.014247 ),
			st( 1.000000, 0.991662 ),
			st( 0.000000, 0.991662 ),
			st( 0.000000, 0.991662 ),
			st( 0.100000, 0.014247 ),
			st( 0.100000, 0.991662 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 1, 3),(2, 1, 3), 0 ),
		polygon ((2, 3, 4),(2, 3, 4), 0 ),
		polygon ((4, 3, 5),(4, 3, 5), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 0 ),
		polygon ((6, 5, 7),(6, 5, 7), 0 ),
		polygon ((6, 7, 8),(6, 7, 8), 0 ),
		polygon ((8, 7, 9),(8, 7, 9), 0 ),
		polygon ((8, 9, 10),(8, 9, 10), 0 ),
		polygon ((10, 9, 11),(10, 9, 11), 0 ),
		polygon ((10, 11, 12),(10, 11, 12), 0 ),
		polygon ((12, 11, 13),(12, 11, 13), 0 ),
		polygon ((12, 13, 14),(12, 13, 14), 0 ),
		polygon ((14, 13, 15),(14, 13, 15), 0 ),
		polygon ((14, 15, 16),(14, 15, 16), 0 ),
		polygon ((16, 15, 17),(16, 15, 18), 0 ),
		polygon ((16, 17, 18),(17, 19, 21), 0 ),
		polygon ((18, 17, 19),(21, 20, 22), 0 ),
		polygon ((18, 19, 0),(21, 22, 0), 0 ),
		polygon ((0, 19, 1),(0, 22, 1), 0 ),
		polygon ((20, 21, 22),(23, 24, 25), 0 ),
		polygon ((23, 21, 20),(26, 24, 23), 0 ),
		polygon ((24, 23, 20),(27, 26, 23), 0 ),
		polygon ((25, 23, 24),(28, 26, 27), 0 ),
		polygon ((26, 25, 24),(29, 28, 27), 0 ),
		polygon ((27, 25, 26),(30, 28, 29), 0 ),
		polygon ((28, 27, 26),(31, 30, 29), 0 ),
		polygon ((29, 27, 28),(32, 30, 31), 0 ),
		polygon ((30, 29, 28),(33, 32, 31), 0 ),
		polygon ((31, 29, 30),(34, 32, 33), 0 ),
		polygon ((32, 31, 30),(35, 34, 33), 0 ),
		polygon ((33, 31, 32),(36, 34, 35), 0 ),
		polygon ((34, 33, 32),(37, 36, 35), 0 ),
		polygon ((35, 33, 34),(38, 36, 37), 0 ),
		polygon ((36, 35, 34),(39, 38, 37), 0 ),
		polygon ((37, 35, 36),(41, 38, 39), 0 ),
		polygon ((38, 37, 36),(44, 42, 40), 0 ),
		polygon ((39, 37, 38),(45, 43, 44), 0 ),
		polygon ((22, 39, 38),(25, 45, 44), 0 ),
		polygon ((21, 39, 22),(24, 45, 25), 0 ),
		polygon ((40, 41, 42),(46, 47, 48), 0 ),
		polygon ((42, 41, 43),(48, 47, 49), 0 ),
		polygon ((42, 43, 44),(48, 49, 50), 0 ),
		polygon ((44, 43, 45),(50, 49, 51), 0 ),
		polygon ((44, 45, 46),(50, 51, 52), 0 ),
		polygon ((46, 45, 47),(52, 51, 53), 0 ),
		polygon ((46, 47, 48),(52, 53, 54), 0 ),
		polygon ((48, 47, 49),(54, 53, 55), 0 ),
		polygon ((48, 49, 50),(54, 55, 56), 0 ),
		polygon ((50, 49, 51),(56, 55, 57), 0 ),
		polygon ((50, 51, 52),(56, 57, 58), 0 ),
		polygon ((52, 51, 53),(58, 57, 59), 0 ),
		polygon ((52, 53, 54),(58, 59, 60), 0 ),
		polygon ((54, 53, 55),(60, 59, 61), 0 ),
		polygon ((54, 55, 56),(60, 61, 62), 0 ),
		polygon ((56, 55, 57),(62, 61, 64), 0 ),
		polygon ((56, 57, 58),(63, 65, 67), 0 ),
		polygon ((58, 57, 59),(67, 66, 68), 0 ),
		polygon ((58, 59, 40),(67, 68, 46), 0 ),
		polygon ((40, 59, 41),(46, 68, 47), 0 ),
		polygon ((60, 61, 62),(69, 70, 71), 0 ),
		polygon ((63, 61, 60),(72, 70, 69), 0 ),
		polygon ((64, 63, 60),(73, 72, 69), 0 ),
		polygon ((65, 63, 64),(74, 72, 73), 0 ),
		polygon ((66, 65, 64),(75, 74, 73), 0 ),
		polygon ((67, 65, 66),(76, 74, 75), 0 ),
		polygon ((68, 67, 66),(77, 76, 75), 0 ),
		polygon ((69, 67, 68),(78, 76, 77), 0 ),
		polygon ((70, 69, 68),(79, 78, 77), 0 ),
		polygon ((71, 69, 70),(80, 78, 79), 0 ),
		polygon ((72, 71, 70),(81, 80, 79), 0 ),
		polygon ((73, 71, 72),(82, 80, 81), 0 ),
		polygon ((74, 73, 72),(83, 82, 81), 0 ),
		polygon ((75, 73, 74),(84, 82, 83), 0 ),
		polygon ((76, 75, 74),(85, 84, 83), 0 ),
		polygon ((77, 75, 76),(87, 84, 85), 0 ),
		polygon ((78, 77, 76),(90, 88, 86), 0 ),
		polygon ((79, 77, 78),(91, 89, 90), 0 ),
		polygon ((62, 79, 78),(71, 91, 90), 0 ),
		polygon ((61, 79, 62),(70, 91, 71), 0 )
	)
); /* end of polyset 'alley_trashcans' */

polyset park_sky (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (skydome ),
	casts_shadow = TRUE,
	vertices = ((cv((-89.093691, 36.46306, 155.330564), 1)),
			(cv((-51.228878, 55.758783, -89.315075), 1)),
			(cv((178.187381, 36.46306, 0.0), 1)),
			(cv((-153.686623, 36.46306, 89.315075), 1)),
			(cv((-102.457743, 0.0, 178.630139), 1)),
			(cv((-51.228878, 55.758783, 89.315075), 1)),
			(cv((0.0, 36.46306, 178.630139), 1)),
			(cv((102.457743, 0.0, 178.630139), 1)),
			(cv((89.093691, 36.46306, 155.330564), 1)),
			(cv((176.739599, 0.0, -102.712347), 1)),
			(cv((51.228878, 55.758783, 89.315075), 1)),
			(cv((153.686623, 36.46306, -89.315075), 1)),
			(cv((102.457743, 0.0, -178.630139), 1)),
			(cv((89.093691, 36.46306, -155.330564), 1)),
			(cv((102.457755, 55.758783, 0.0), 1)),
			(cv((51.228878, 55.758783, -89.315075), 1)),
			(cv((0.0, 65.786127, 0.0), 1)),
			(cv((-176.739599, 0.0, 102.712347), 1)),
			(cv((-102.457755, 55.758783, 0.0), 1)),
			(cv((-176.739599, 0.0, -102.712347), 1)),
			(cv((-153.686623, 36.46306, -89.315075), 1)),
			(cv((176.739599, 0.0, 102.712347), 1)),
			(cv((153.686623, 36.46306, 89.315075), 1)),
			(cv((204.915486, 0.0, 0.0), 1)),
			(cv((0.0, 0.0, 205.424694), 1)),
			(cv((0.0, 0.0, -205.424694), 1)),
			(cv((0.0, 36.46306, -178.630139), 1)),
			(cv((-102.457743, 0.0, -178.630139), 1)),
			(cv((-89.093691, 36.46306, -155.330564), 1)),
			(cv((-204.915486, 0.0, 0.0), 1)),
			(cv((-178.187381, 36.46306, 0.0), 1))	),
	texture_vertices = (
			st( 0.330447, 0.203414 ),
			st( 0.410891, 0.658533 ),
			st( 0.843275, 0.500993 ),
			st( 0.206513, 0.329885 ),
			st( 0.256175, 0.074121 ),
			st( 0.410891, 0.343453 ),
			st( 0.501389, 0.158777 ),
			st( 0.746603, 0.074121 ),
			st( 0.672332, 0.203414 ),
			st( 0.924384, 0.746445 ),
			st( 0.591887, 0.343453 ),
			st( 0.796265, 0.672101 ),
			st( 0.746603, 0.927865 ),
			st( 0.672332, 0.798573 ),
			st( 0.682386, 0.500993 ),
			st( 0.591887, 0.658533 ),
			st( 0.501389, 0.500993 ),
			st( 0.078395, 0.255542 ),
			st( 0.320393, 0.500993 ),
			st( 0.078395, 0.746445 ),
			st( 0.206513, 0.672101 ),
			st( 0.924384, 0.255542 ),
			st( 0.796265, 0.329885 ),
			st( 0.991817, 0.500993 ),
			st( 0.501389, 0.010090 ),
			st( 0.501389, 0.991896 ),
			st( 0.501389, 0.843210 ),
			st( 0.256175, 0.927865 ),
			st( 0.330447, 0.798573 ),
			st( 0.010962, 0.500993 ),
			st( 0.159504, 0.500993 ) ),
	polygons = (
		polygon ((6, 5, 0),(6, 5, 0), 0 ),
		polygon ((2, 22, 23),(2, 22, 23), 0 ),
		polygon ((23, 22, 21),(23, 22, 21), 0 ),
		polygon ((10, 5, 6),(10, 5, 6), 0 ),
		polygon ((29, 3, 30),(29, 3, 30), 0 ),
		polygon ((3, 29, 17),(3, 29, 17), 0 ),
		polygon ((7, 22, 8),(7, 22, 8), 0 ),
		polygon ((22, 10, 8),(22, 10, 8), 0 ),
		polygon ((23, 11, 2),(23, 11, 2), 0 ),
		polygon ((11, 23, 9),(11, 23, 9), 0 ),
		polygon ((8, 6, 7),(8, 6, 7), 0 ),
		polygon ((4, 6, 0),(4, 6, 0), 0 ),
		polygon ((12, 11, 9),(12, 11, 9), 0 ),
		polygon ((13, 11, 12),(13, 11, 12), 0 ),
		polygon ((11, 14, 2),(11, 14, 2), 0 ),
		polygon ((15, 14, 11),(15, 14, 11), 0 ),
		polygon ((15, 16, 14),(15, 16, 14), 0 ),
		polygon ((13, 15, 11),(13, 15, 11), 0 ),
		polygon ((27, 20, 28),(27, 20, 28), 0 ),
		polygon ((20, 27, 19),(20, 27, 19), 0 ),
		polygon ((10, 16, 5),(10, 16, 5), 0 ),
		polygon ((8, 10, 6),(8, 10, 6), 0 ),
		polygon ((6, 4, 24),(6, 4, 24), 0 ),
		polygon ((7, 6, 24),(7, 6, 24), 0 ),
		polygon ((14, 10, 22),(14, 10, 22), 0 ),
		polygon ((14, 16, 10),(14, 16, 10), 0 ),
		polygon ((3, 4, 0),(3, 4, 0), 0 ),
		polygon ((4, 3, 17),(4, 3, 17), 0 ),
		polygon ((12, 26, 13),(12, 26, 13), 0 ),
		polygon ((26, 12, 25),(26, 12, 25), 0 ),
		polygon ((3, 18, 30),(3, 18, 30), 0 ),
		polygon ((5, 18, 3),(5, 18, 3), 0 ),
		polygon ((27, 26, 25),(27, 26, 25), 0 ),
		polygon ((28, 26, 27),(28, 26, 27), 0 ),
		polygon ((26, 15, 13),(26, 15, 13), 0 ),
		polygon ((20, 29, 30),(20, 29, 30), 0 ),
		polygon ((29, 20, 19),(29, 20, 19), 0 ),
		polygon ((26, 1, 15),(26, 1, 15), 0 ),
		polygon ((1, 26, 28),(1, 26, 28), 0 ),
		polygon ((1, 16, 15),(1, 16, 15), 0 ),
		polygon ((2, 14, 22),(2, 14, 22), 0 ),
		polygon ((20, 1, 28),(20, 1, 28), 0 ),
		polygon ((18, 1, 20),(18, 1, 20), 0 ),
		polygon ((5, 16, 18),(5, 16, 18), 0 ),
		polygon ((0, 5, 3),(0, 5, 3), 0 ),
		polygon ((18, 16, 1),(18, 16, 1), 0 ),
		polygon ((30, 18, 20),(30, 18, 20), 0 ),
		polygon ((22, 7, 21),(22, 7, 21), 0 )
	)
); /* end of polyset 'park_sky' */

polyset chimney02 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = ON,
	opposite = OFF,
	shader = (buildinga2 ),
	shader = (buildingb3 ),
	casts_shadow = TRUE,
	vertices = ((cv((9.611722, 9.929581, 22.259966), 1)),
			(cv((8.355883, 5.457635, 22.206737), 1)),
			(cv((8.464109, 9.415261, 22.098511), 1)),
			(cv((9.558493, 5.457635, 22.206737), 1)),
			(cv((9.450267, 9.415261, 21.112353), 1)),
			(cv((9.611722, 9.540231, 20.950898), 1)),
			(cv((8.302654, 9.540231, 20.950898), 1)),
			(cv((8.464109, 9.415261, 21.112353), 1)),
			(cv((9.558493, 5.457635, 21.004128), 1)),
			(cv((8.355883, 5.457635, 21.004128), 1)),
			(cv((9.611722, 9.929581, 20.950898), 1)),
			(cv((8.302654, 9.929581, 20.950898), 1)),
			(cv((9.370384, 10.002705, 21.192236), 1)),
			(cv((8.543992, 10.002705, 21.192236), 1)),
			(cv((8.957188, 9.345234, 21.605432), 1)),
			(cv((8.543992, 10.002705, 22.018628), 1)),
			(cv((9.370384, 10.002705, 22.018628), 1)),
			(cv((8.302654, 9.929581, 22.259966), 1)),
			(cv((8.302654, 9.540231, 22.259966), 1)),
			(cv((9.450267, 9.415261, 22.098511), 1)),
			(cv((9.611722, 9.540231, 22.259966), 1))	),
	texture_vertices = (
			st( 0.590000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.310000, 0.140000 ),
			st( 0.590000, 0.140000 ),
			st( 0.320000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.320000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.310000, 0.140000 ),
			st( 0.590000, 0.140000 ),
			st( 0.590000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.808372, 0.970000 ),
			st( 0.300000, 0.970000 ),
			st( 0.839556, 0.971449 ),
			st( 0.300000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ) ),
	polygons = (
		polygon ((19, 3, 1),(71, 11, 5), 0 ),
		polygon ((18, 17, 0),(67, 63, 0), 0 ),
		polygon ((4, 5, 6),(14, 18, 22), 0 ),
		polygon ((6, 7, 4),(22, 26, 14), 0 ),
		polygon ((8, 4, 7),(30, 14, 26), 0 ),
		polygon ((7, 9, 8),(26, 32, 30), 0 ),
		polygon ((5, 10, 11),(18, 35, 39), 0 ),
		polygon ((11, 6, 5),(39, 22, 18), 0 ),
		polygon ((10, 12, 13),(35, 43, 48), 0 ),
		polygon ((13, 11, 10),(48, 39, 35), 0 ),
		polygon ((13, 12, 14),(49, 44, 52), 1 ),
		polygon ((0, 20, 18),(0, 77, 67), 0 ),
		polygon ((17, 15, 16),(63, 53, 58), 0 ),
		polygon ((19, 20, 5),(72, 78, 19), 0 ),
		polygon ((5, 4, 19),(20, 15, 73), 0 ),
		polygon ((3, 19, 4),(12, 74, 16), 0 ),
		polygon ((4, 8, 3),(17, 31, 13), 0 ),
		polygon ((20, 0, 10),(79, 1, 36), 0 ),
		polygon ((10, 5, 20),(37, 21, 80), 0 ),
		polygon ((0, 16, 12),(2, 59, 45), 0 ),
		polygon ((12, 10, 0),(46, 38, 3), 0 ),
		polygon ((12, 16, 14),(47, 60, 52), 1 ),
		polygon ((15, 13, 14),(54, 50, 52), 1 ),
		polygon ((1, 2, 19),(5, 7, 75), 0 ),
		polygon ((2, 18, 20),(7, 67, 81), 0 ),
		polygon ((20, 19, 2),(82, 76, 7), 0 ),
		polygon ((16, 0, 17),(61, 4, 63), 0 ),
		polygon ((16, 15, 14),(62, 55, 52), 1 ),
		polygon ((7, 6, 18),(27, 23, 68), 0 ),
		polygon ((18, 2, 7),(69, 8, 28), 0 ),
		polygon ((9, 7, 2),(33, 29, 9), 0 ),
		polygon ((2, 1, 9),(10, 6, 34), 0 ),
		polygon ((6, 11, 17),(24, 40, 64), 0 ),
		polygon ((17, 18, 6),(65, 70, 25), 0 ),
		polygon ((11, 13, 15),(41, 51, 56), 0 ),
		polygon ((15, 17, 11),(57, 66, 42), 0 )
	)
); /* end of polyset 'chimney02' */

polyset chimney05 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = ON,
	opposite = OFF,
	shader = (buildinga2 ),
	shader = (buildingb3 ),
	casts_shadow = TRUE,
	vertices = ((cv((3.253406, 9.929581, 22.175303), 1)),
			(cv((1.997568, 5.457635, 22.122073), 1)),
			(cv((2.105793, 9.415261, 22.013848), 1)),
			(cv((3.200177, 5.457635, 22.122073), 1)),
			(cv((3.091951, 9.415261, 21.02769), 1)),
			(cv((3.253406, 9.540231, 20.866235), 1)),
			(cv((1.944338, 9.540231, 20.866235), 1)),
			(cv((2.105793, 9.415261, 21.02769), 1)),
			(cv((3.200177, 5.457635, 20.919464), 1)),
			(cv((1.997568, 5.457635, 20.919464), 1)),
			(cv((3.253406, 9.929581, 20.866235), 1)),
			(cv((1.944338, 9.929581, 20.866235), 1)),
			(cv((3.012068, 10.002705, 21.107573), 1)),
			(cv((2.185676, 10.002705, 21.107573), 1)),
			(cv((2.598872, 9.345234, 21.520769), 1)),
			(cv((2.185676, 10.002705, 21.933965), 1)),
			(cv((3.012068, 10.002705, 21.933965), 1)),
			(cv((1.944338, 9.929581, 22.175303), 1)),
			(cv((1.944338, 9.540231, 22.175303), 1)),
			(cv((3.091951, 9.415261, 22.013848), 1)),
			(cv((3.253406, 9.540231, 22.175303), 1))	),
	texture_vertices = (
			st( 0.590000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.310000, 0.140000 ),
			st( 0.590000, 0.140000 ),
			st( 0.320000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.320000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.310000, 0.140000 ),
			st( 0.590000, 0.140000 ),
			st( 0.590000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.808372, 0.970000 ),
			st( 0.300000, 0.970000 ),
			st( 0.839556, 0.971449 ),
			st( 0.300000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ) ),
	polygons = (
		polygon ((19, 3, 1),(71, 11, 5), 0 ),
		polygon ((18, 17, 0),(67, 63, 0), 0 ),
		polygon ((4, 5, 6),(14, 18, 22), 0 ),
		polygon ((6, 7, 4),(22, 26, 14), 0 ),
		polygon ((8, 4, 7),(30, 14, 26), 0 ),
		polygon ((7, 9, 8),(26, 32, 30), 0 ),
		polygon ((5, 10, 11),(18, 35, 39), 0 ),
		polygon ((11, 6, 5),(39, 22, 18), 0 ),
		polygon ((10, 12, 13),(35, 43, 48), 0 ),
		polygon ((13, 11, 10),(48, 39, 35), 0 ),
		polygon ((13, 12, 14),(49, 44, 52), 1 ),
		polygon ((0, 20, 18),(0, 77, 67), 0 ),
		polygon ((17, 15, 16),(63, 53, 58), 0 ),
		polygon ((19, 20, 5),(72, 78, 19), 0 ),
		polygon ((5, 4, 19),(20, 15, 73), 0 ),
		polygon ((3, 19, 4),(12, 74, 16), 0 ),
		polygon ((4, 8, 3),(17, 31, 13), 0 ),
		polygon ((20, 0, 10),(79, 1, 36), 0 ),
		polygon ((10, 5, 20),(37, 21, 80), 0 ),
		polygon ((0, 16, 12),(2, 59, 45), 0 ),
		polygon ((12, 10, 0),(46, 38, 3), 0 ),
		polygon ((12, 16, 14),(47, 60, 52), 1 ),
		polygon ((15, 13, 14),(54, 50, 52), 1 ),
		polygon ((1, 2, 19),(5, 7, 75), 0 ),
		polygon ((2, 18, 20),(7, 67, 81), 0 ),
		polygon ((20, 19, 2),(82, 76, 7), 0 ),
		polygon ((16, 0, 17),(61, 4, 63), 0 ),
		polygon ((16, 15, 14),(62, 55, 52), 1 ),
		polygon ((7, 6, 18),(27, 23, 68), 0 ),
		polygon ((18, 2, 7),(69, 8, 28), 0 ),
		polygon ((9, 7, 2),(33, 29, 9), 0 ),
		polygon ((2, 1, 9),(10, 6, 34), 0 ),
		polygon ((6, 11, 17),(24, 40, 64), 0 ),
		polygon ((17, 18, 6),(65, 70, 25), 0 ),
		polygon ((11, 13, 15),(41, 51, 56), 0 ),
		polygon ((15, 17, 11),(57, 66, 42), 0 )
	)
); /* end of polyset 'chimney05' */

polyset chimney03 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = ON,
	opposite = OFF,
	shader = (buildinga2 ),
	shader = (buildingb3 ),
	casts_shadow = TRUE,
	vertices = ((cv((-8.636542, 12.583623, 29.536745), 1)),
			(cv((-10.56273, 0.033808, 29.62572), 1)),
			(cv((-8.547567, 0.033808, 27.610558), 1)),
			(cv((-10.56273, 0.033808, 27.610558), 1)),
			(cv((-8.863136, 11.8618, 27.926127), 1)),
			(cv((-8.636542, 12.037189, 27.699533), 1)),
			(cv((-10.473754, 12.037189, 27.699533), 1)),
			(cv((-10.24716, 11.8618, 27.926127), 1)),
			(cv((-8.711247, 6.307469, 27.774238), 1)),
			(cv((-10.399049, 6.307469, 27.774238), 1)),
			(cv((-8.636542, 12.583623, 27.699533), 1)),
			(cv((-10.473754, 12.583623, 27.699533), 1)),
			(cv((-8.975248, 12.686249, 28.038239), 1)),
			(cv((-10.135048, 12.686249, 28.038239), 1)),
			(cv((-9.555148, 11.76352, 28.618139), 1)),
			(cv((-10.135048, 12.686249, 29.198039), 1)),
			(cv((-8.975248, 12.686249, 29.198039), 1)),
			(cv((-8.547567, 0.033808, 29.62572), 1)),
			(cv((-10.473754, 12.037189, 29.536745), 1)),
			(cv((-8.863136, 11.8618, 29.310151), 1)),
			(cv((-8.636542, 12.037189, 29.536745), 1)),
			(cv((-10.399049, 6.307469, 29.46204), 1)),
			(cv((-10.24716, 11.8618, 29.310151), 1)),
			(cv((-8.711247, 6.307469, 29.46204), 1)),
			(cv((-10.473754, 12.583623, 29.536745), 1))	),
	texture_vertices = (
			st( 0.590000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.600000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.600000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.600000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.320000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.310000, 0.140000 ),
			st( 0.590000, 0.140000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.860000 ),
			st( 0.590000, 0.140000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.860000 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.839556, 0.971449 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.600000, 0.970000 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.300000, 0.140000 ),
			st( 0.600000, 0.140000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.310000, 0.140000 ),
			st( 0.590000, 0.140000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.860000 ),
			st( 0.310000, 0.140000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.590000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ) ),
	polygons = (
		polygon ((19, 23, 21),(76, 98, 88), 0 ),
		polygon ((18, 24, 0),(71, 104, 0), 0 ),
		polygon ((4, 5, 6),(14, 18, 22), 0 ),
		polygon ((6, 7, 4),(22, 26, 14), 0 ),
		polygon ((8, 4, 7),(30, 14, 26), 0 ),
		polygon ((7, 9, 8),(26, 35, 30), 0 ),
		polygon ((5, 10, 11),(18, 41, 45), 0 ),
		polygon ((11, 6, 5),(45, 22, 18), 0 ),
		polygon ((10, 12, 13),(41, 49, 54), 0 ),
		polygon ((13, 11, 10),(54, 45, 41), 0 ),
		polygon ((13, 12, 14),(55, 50, 58), 1 ),
		polygon ((0, 20, 18),(0, 82, 71), 0 ),
		polygon ((24, 15, 16),(104, 59, 64), 0 ),
		polygon ((19, 20, 5),(77, 83, 19), 0 ),
		polygon ((5, 4, 19),(20, 15, 78), 0 ),
		polygon ((23, 19, 4),(99, 79, 16), 0 ),
		polygon ((4, 8, 23),(17, 31, 100), 0 ),
		polygon ((20, 0, 10),(84, 1, 42), 0 ),
		polygon ((10, 5, 20),(43, 21, 85), 0 ),
		polygon ((0, 16, 12),(2, 65, 51), 0 ),
		polygon ((12, 10, 0),(52, 44, 3), 0 ),
		polygon ((12, 16, 14),(53, 66, 58), 1 ),
		polygon ((2, 17, 8),(8, 69, 32), 0 ),
		polygon ((8, 17, 23),(33, 69, 101), 0 ),
		polygon ((3, 2, 9),(11, 9, 36), 0 ),
		polygon ((9, 2, 8),(37, 10, 34), 0 ),
		polygon ((16, 0, 24),(67, 4, 104), 0 ),
		polygon ((16, 15, 14),(68, 60, 58), 1 ),
		polygon ((7, 6, 18),(27, 23, 72), 0 ),
		polygon ((18, 22, 7),(73, 94, 28), 0 ),
		polygon ((9, 7, 22),(38, 29, 94), 0 ),
		polygon ((22, 21, 9),(94, 89, 39), 0 ),
		polygon ((6, 11, 24),(24, 46, 105), 0 ),
		polygon ((24, 18, 6),(106, 74, 25), 0 ),
		polygon ((11, 13, 15),(47, 56, 61), 0 ),
		polygon ((15, 24, 11),(62, 107, 48), 0 ),
		polygon ((15, 13, 14),(63, 57, 58), 1 ),
		polygon ((1, 3, 21),(5, 12, 90), 0 ),
		polygon ((21, 3, 9),(91, 13, 40), 0 ),
		polygon ((17, 1, 23),(70, 6, 102), 0 ),
		polygon ((23, 1, 21),(103, 7, 92), 0 ),
		polygon ((22, 18, 20),(95, 75, 86), 0 ),
		polygon ((20, 19, 22),(87, 80, 96), 0 ),
		polygon ((21, 22, 19),(93, 97, 81), 0 )
	)
); /* end of polyset 'chimney03' */

polyset chimney04 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = ON,
	opposite = OFF,
	shader = (buildinga2 ),
	shader = (buildingb3 ),
	casts_shadow = TRUE,
	vertices = ((cv((-1.393955, 11.81545, -23.211698), 1)),
			(cv((-2.766421, 2.873334, -23.1483), 1)),
			(cv((-1.330558, 2.873334, -24.584163), 1)),
			(cv((-2.766421, 2.873334, -24.584163), 1)),
			(cv((-1.55541, 11.30113, -24.359311), 1)),
			(cv((-1.393955, 11.4261, -24.520766), 1)),
			(cv((-2.703023, 11.4261, -24.520766), 1)),
			(cv((-2.541568, 11.30113, -24.359311), 1)),
			(cv((-1.447185, 7.343504, -24.467536), 1)),
			(cv((-2.649794, 7.343504, -24.467536), 1)),
			(cv((-1.393955, 11.81545, -24.520766), 1)),
			(cv((-2.703023, 11.81545, -24.520766), 1)),
			(cv((-1.635293, 11.888574, -24.279428), 1)),
			(cv((-2.461685, 11.888574, -24.279428), 1)),
			(cv((-2.048489, 11.231103, -23.866232), 1)),
			(cv((-2.461685, 11.888574, -23.453036), 1)),
			(cv((-1.635293, 11.888574, -23.453036), 1)),
			(cv((-1.330558, 2.873334, -23.1483), 1)),
			(cv((-2.703023, 11.4261, -23.211698), 1)),
			(cv((-1.55541, 11.30113, -23.373153), 1)),
			(cv((-1.393955, 11.4261, -23.211698), 1)),
			(cv((-2.649794, 7.343504, -23.264927), 1)),
			(cv((-2.541568, 11.30113, -23.373153), 1)),
			(cv((-1.447185, 7.343504, -23.264927), 1)),
			(cv((-2.703023, 11.81545, -23.211698), 1))	),
	texture_vertices = (
			st( 0.590000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.600000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.600000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.600000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.320000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.310000, 0.140000 ),
			st( 0.590000, 0.140000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.860000 ),
			st( 0.590000, 0.140000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.860000 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.839556, 0.971449 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.600000, 0.970000 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.300000, 0.140000 ),
			st( 0.600000, 0.140000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.310000, 0.140000 ),
			st( 0.590000, 0.140000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.860000 ),
			st( 0.310000, 0.140000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.590000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ) ),
	polygons = (
		polygon ((19, 23, 21),(76, 98, 88), 0 ),
		polygon ((18, 24, 0),(71, 104, 0), 0 ),
		polygon ((4, 5, 6),(14, 18, 22), 0 ),
		polygon ((6, 7, 4),(22, 26, 14), 0 ),
		polygon ((8, 4, 7),(30, 14, 26), 0 ),
		polygon ((7, 9, 8),(26, 35, 30), 0 ),
		polygon ((5, 10, 11),(18, 41, 45), 0 ),
		polygon ((11, 6, 5),(45, 22, 18), 0 ),
		polygon ((10, 12, 13),(41, 49, 54), 0 ),
		polygon ((13, 11, 10),(54, 45, 41), 0 ),
		polygon ((13, 12, 14),(55, 50, 58), 1 ),
		polygon ((0, 20, 18),(0, 82, 71), 0 ),
		polygon ((24, 15, 16),(104, 59, 64), 0 ),
		polygon ((19, 20, 5),(77, 83, 19), 0 ),
		polygon ((5, 4, 19),(20, 15, 78), 0 ),
		polygon ((23, 19, 4),(99, 79, 16), 0 ),
		polygon ((4, 8, 23),(17, 31, 100), 0 ),
		polygon ((20, 0, 10),(84, 1, 42), 0 ),
		polygon ((10, 5, 20),(43, 21, 85), 0 ),
		polygon ((0, 16, 12),(2, 65, 51), 0 ),
		polygon ((12, 10, 0),(52, 44, 3), 0 ),
		polygon ((12, 16, 14),(53, 66, 58), 1 ),
		polygon ((2, 17, 8),(8, 69, 32), 0 ),
		polygon ((8, 17, 23),(33, 69, 101), 0 ),
		polygon ((3, 2, 9),(11, 9, 36), 0 ),
		polygon ((9, 2, 8),(37, 10, 34), 0 ),
		polygon ((16, 0, 24),(67, 4, 104), 0 ),
		polygon ((16, 15, 14),(68, 60, 58), 1 ),
		polygon ((7, 6, 18),(27, 23, 72), 0 ),
		polygon ((18, 22, 7),(73, 94, 28), 0 ),
		polygon ((9, 7, 22),(38, 29, 94), 0 ),
		polygon ((22, 21, 9),(94, 89, 39), 0 ),
		polygon ((6, 11, 24),(24, 46, 105), 0 ),
		polygon ((24, 18, 6),(106, 74, 25), 0 ),
		polygon ((11, 13, 15),(47, 56, 61), 0 ),
		polygon ((15, 24, 11),(62, 107, 48), 0 ),
		polygon ((15, 13, 14),(63, 57, 58), 1 ),
		polygon ((1, 3, 21),(5, 12, 90), 0 ),
		polygon ((21, 3, 9),(91, 13, 40), 0 ),
		polygon ((17, 1, 23),(70, 6, 102), 0 ),
		polygon ((23, 1, 21),(103, 7, 92), 0 ),
		polygon ((22, 18, 20),(95, 75, 86), 0 ),
		polygon ((20, 19, 22),(87, 80, 96), 0 ),
		polygon ((21, 22, 19),(93, 97, 81), 0 )
	)
); /* end of polyset 'chimney04' */

polyset chimney01 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = ON,
	opposite = OFF,
	shader = (buildinga2 ),
	shader = (buildingb3 ),
	casts_shadow = TRUE,
	vertices = ((cv((-7.879474, 11.81545, -23.211698), 1)),
			(cv((-9.25194, 2.873334, -23.1483), 1)),
			(cv((-7.816076, 2.873334, -24.584163), 1)),
			(cv((-9.25194, 2.873334, -24.584163), 1)),
			(cv((-8.040929, 11.30113, -24.359311), 1)),
			(cv((-7.879474, 11.4261, -24.520766), 1)),
			(cv((-9.188542, 11.4261, -24.520766), 1)),
			(cv((-9.027087, 11.30113, -24.359311), 1)),
			(cv((-7.932703, 7.343504, -24.467536), 1)),
			(cv((-9.135313, 7.343504, -24.467536), 1)),
			(cv((-7.879474, 11.81545, -24.520766), 1)),
			(cv((-9.188542, 11.81545, -24.520766), 1)),
			(cv((-8.120812, 11.888574, -24.279428), 1)),
			(cv((-8.947204, 11.888574, -24.279428), 1)),
			(cv((-8.534008, 11.231103, -23.866232), 1)),
			(cv((-8.947204, 11.888574, -23.453036), 1)),
			(cv((-8.120812, 11.888574, -23.453036), 1)),
			(cv((-7.816076, 2.873334, -23.1483), 1)),
			(cv((-9.188542, 11.4261, -23.211698), 1)),
			(cv((-8.040929, 11.30113, -23.373153), 1)),
			(cv((-7.879474, 11.4261, -23.211698), 1)),
			(cv((-9.135313, 7.343504, -23.264927), 1)),
			(cv((-9.027087, 11.30113, -23.373153), 1)),
			(cv((-7.932703, 7.343504, -23.264927), 1)),
			(cv((-9.188542, 11.81545, -23.211698), 1))	),
	texture_vertices = (
			st( 0.590000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.600000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.600000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.600000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.300000, 0.140000 ),
			st( 0.320000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.310000, 0.140000 ),
			st( 0.590000, 0.140000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.860000 ),
			st( 0.590000, 0.140000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.860000 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.320000, 1.000000 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.839556, 0.971449 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.600000, 0.970000 ),
			st( 0.300000, 0.970000 ),
			st( 0.808372, 0.970000 ),
			st( 0.600000, 0.970000 ),
			st( 0.828948, 0.937880 ),
			st( 0.300000, 0.140000 ),
			st( 0.600000, 0.140000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.945000 ),
			st( 0.590000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.320000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.590000, 0.970000 ),
			st( 0.310000, 0.140000 ),
			st( 0.590000, 0.140000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.310000, 0.860000 ),
			st( 0.310000, 0.140000 ),
			st( 0.590000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.320000, 0.945000 ),
			st( 0.590000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.140000 ),
			st( 0.310000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.590000, 0.860000 ),
			st( 0.320000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ),
			st( 0.590000, 1.000000 ) ),
	polygons = (
		polygon ((19, 23, 21),(76, 98, 88), 0 ),
		polygon ((18, 24, 0),(71, 104, 0), 0 ),
		polygon ((4, 5, 6),(14, 18, 22), 0 ),
		polygon ((6, 7, 4),(22, 26, 14), 0 ),
		polygon ((8, 4, 7),(30, 14, 26), 0 ),
		polygon ((7, 9, 8),(26, 35, 30), 0 ),
		polygon ((5, 10, 11),(18, 41, 45), 0 ),
		polygon ((11, 6, 5),(45, 22, 18), 0 ),
		polygon ((10, 12, 13),(41, 49, 54), 0 ),
		polygon ((13, 11, 10),(54, 45, 41), 0 ),
		polygon ((13, 12, 14),(55, 50, 58), 1 ),
		polygon ((0, 20, 18),(0, 82, 71), 0 ),
		polygon ((24, 15, 16),(104, 59, 64), 0 ),
		polygon ((19, 20, 5),(77, 83, 19), 0 ),
		polygon ((5, 4, 19),(20, 15, 78), 0 ),
		polygon ((23, 19, 4),(99, 79, 16), 0 ),
		polygon ((4, 8, 23),(17, 31, 100), 0 ),
		polygon ((20, 0, 10),(84, 1, 42), 0 ),
		polygon ((10, 5, 20),(43, 21, 85), 0 ),
		polygon ((0, 16, 12),(2, 65, 51), 0 ),
		polygon ((12, 10, 0),(52, 44, 3), 0 ),
		polygon ((12, 16, 14),(53, 66, 58), 1 ),
		polygon ((2, 17, 8),(8, 69, 32), 0 ),
		polygon ((8, 17, 23),(33, 69, 101), 0 ),
		polygon ((3, 2, 9),(11, 9, 36), 0 ),
		polygon ((9, 2, 8),(37, 10, 34), 0 ),
		polygon ((16, 0, 24),(67, 4, 104), 0 ),
		polygon ((16, 15, 14),(68, 60, 58), 1 ),
		polygon ((7, 6, 18),(27, 23, 72), 0 ),
		polygon ((18, 22, 7),(73, 94, 28), 0 ),
		polygon ((9, 7, 22),(38, 29, 94), 0 ),
		polygon ((22, 21, 9),(94, 89, 39), 0 ),
		polygon ((6, 11, 24),(24, 46, 105), 0 ),
		polygon ((24, 18, 6),(106, 74, 25), 0 ),
		polygon ((11, 13, 15),(47, 56, 61), 0 ),
		polygon ((15, 24, 11),(62, 107, 48), 0 ),
		polygon ((15, 13, 14),(63, 57, 58), 1 ),
		polygon ((1, 3, 21),(5, 12, 90), 0 ),
		polygon ((21, 3, 9),(91, 13, 40), 0 ),
		polygon ((17, 1, 23),(70, 6, 102), 0 ),
		polygon ((23, 1, 21),(103, 7, 92), 0 ),
		polygon ((22, 18, 20),(95, 75, 86), 0 ),
		polygon ((20, 19, 22),(87, 80, 96), 0 ),
		polygon ((21, 22, 19),(93, 97, 81), 0 )
	)
); /* end of polyset 'chimney01' */

polyset stormfan05 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = ON,
	opposite = OFF,
	shader = (stormfan_2 ),
	casts_shadow = TRUE,
	vertices = ((cv((-6.494901, 6.156458, 16.014707), 1)),
			(cv((-6.595917, 6.156458, 16.189672), 1)),
			(cv((-6.696932, 6.188061, 16.014707), 1)),
			(cv((-6.324871, 6.037033, 16.014707), 1)),
			(cv((-6.510902, 6.037033, 16.336922), 1)),
			(cv((-6.494319, 5.48014, 16.014707), 1)),
			(cv((-6.595626, 5.48014, 16.190175), 1)),
			(cv((-6.595917, 5.756936, 16.189672), 1)),
			(cv((-6.324871, 5.87361, 16.014707), 1)),
			(cv((-6.510902, 5.87361, 16.336922), 1)),
			(cv((-6.494901, 5.756936, 16.014707), 1)),
			(cv((-6.595917, 6.156458, 15.839743), 1)),
			(cv((-6.882963, 5.87361, 15.692493), 1)),
			(cv((-6.898963, 5.756936, 16.014707), 1)),
			(cv((-6.510902, 6.037033, 15.692493), 1)),
			(cv((-6.797948, 5.756936, 16.189672), 1)),
			(cv((-6.595626, 5.48014, 15.839239), 1)),
			(cv((-6.797948, 6.156458, 16.189672), 1)),
			(cv((-6.798239, 5.48014, 16.190175), 1)),
			(cv((-6.510902, 5.87361, 15.692493), 1)),
			(cv((-6.882963, 5.87361, 16.336922), 1)),
			(cv((-6.595917, 5.756936, 15.839743), 1)),
			(cv((-6.898963, 6.156458, 16.014707), 1)),
			(cv((-6.797948, 6.156458, 15.839743), 1)),
			(cv((-6.882963, 6.037033, 16.336922), 1)),
			(cv((-7.068993, 6.037033, 16.014707), 1)),
			(cv((-6.882963, 6.037033, 15.692493), 1)),
			(cv((-6.899545, 5.48014, 16.014707), 1)),
			(cv((-6.798239, 5.48014, 15.839239), 1)),
			(cv((-6.797948, 5.756936, 15.839743), 1)),
			(cv((-7.068993, 5.87361, 16.014707), 1))	),
	texture_vertices = (
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.499235, 0.988397 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.017406, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 3, 7), 0 ),
		polygon ((0, 3, 4),(0, 8, 12), 0 ),
		polygon ((4, 1, 0),(12, 3, 0), 0 ),
		polygon ((5, 6, 7),(16, 18, 21), 0 ),
		polygon ((3, 8, 9),(8, 24, 28), 0 ),
		polygon ((9, 4, 3),(28, 12, 8), 0 ),
		polygon ((8, 10, 7),(24, 32, 21), 0 ),
		polygon ((9, 8, 7),(28, 24, 21), 0 ),
		polygon ((7, 10, 5),(21, 32, 16), 0 ),
		polygon ((11, 0, 2),(37, 1, 7), 0 ),
		polygon ((11, 14, 3),(37, 49, 9), 0 ),
		polygon ((3, 0, 11),(10, 2, 37), 0 ),
		polygon ((16, 5, 10),(58, 17, 33), 0 ),
		polygon ((14, 19, 8),(49, 65, 25), 0 ),
		polygon ((8, 3, 14),(26, 11, 49), 0 ),
		polygon ((19, 21, 10),(65, 73, 34), 0 ),
		polygon ((8, 19, 10),(27, 65, 35), 0 ),
		polygon ((10, 21, 16),(36, 73, 58), 0 ),
		polygon ((22, 23, 2),(78, 81, 7), 0 ),
		polygon ((22, 25, 26),(78, 89, 93), 0 ),
		polygon ((26, 23, 22),(93, 81, 78), 0 ),
		polygon ((27, 28, 29),(97, 99, 102), 0 ),
		polygon ((25, 30, 12),(89, 105, 40), 0 ),
		polygon ((12, 26, 25),(40, 93, 89), 0 ),
		polygon ((30, 13, 29),(105, 44, 102), 0 ),
		polygon ((12, 30, 29),(40, 105, 102), 0 ),
		polygon ((29, 13, 27),(102, 44, 97), 0 ),
		polygon ((23, 11, 2),(82, 38, 7), 0 ),
		polygon ((23, 26, 14),(83, 94, 50), 0 ),
		polygon ((14, 11, 23),(51, 39, 84), 0 ),
		polygon ((28, 16, 21),(100, 59, 74), 0 ),
		polygon ((26, 12, 19),(95, 41, 66), 0 ),
		polygon ((19, 14, 26),(67, 52, 96), 0 ),
		polygon ((12, 29, 21),(42, 103, 75), 0 ),
		polygon ((19, 12, 21),(68, 43, 76), 0 ),
		polygon ((21, 29, 28),(77, 104, 101), 0 ),
		polygon ((17, 22, 2),(60, 79, 7), 0 ),
		polygon ((17, 24, 25),(60, 85, 90), 0 ),
		polygon ((25, 22, 17),(91, 80, 60), 0 ),
		polygon ((18, 27, 13),(63, 98, 45), 0 ),
		polygon ((24, 20, 30),(85, 69, 106), 0 ),
		polygon ((30, 25, 24),(107, 92, 85), 0 ),
		polygon ((20, 15, 13),(69, 53, 46), 0 ),
		polygon ((30, 20, 13),(108, 69, 47), 0 ),
		polygon ((13, 15, 18),(48, 53, 63), 0 ),
		polygon ((1, 17, 2),(4, 61, 7), 0 ),
		polygon ((1, 4, 24),(5, 13, 86), 0 ),
		polygon ((24, 17, 1),(87, 62, 6), 0 ),
		polygon ((6, 18, 15),(19, 64, 54), 0 ),
		polygon ((4, 9, 20),(14, 29, 70), 0 ),
		polygon ((20, 24, 4),(71, 88, 15), 0 ),
		polygon ((9, 7, 15),(30, 22, 55), 0 ),
		polygon ((20, 9, 15),(72, 31, 56), 0 ),
		polygon ((15, 7, 6),(57, 23, 20), 0 )
	)
); /* end of polyset 'stormfan05' */

polyset stormfan06 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = ON,
	opposite = OFF,
	shader = (stormfan_2 ),
	casts_shadow = TRUE,
	vertices = ((cv((-4.353362, 6.156458, 16.037543), 1)),
			(cv((-4.454378, 6.156458, 16.212507), 1)),
			(cv((-4.555394, 6.188061, 16.037543), 1)),
			(cv((-4.183333, 6.037033, 16.037543), 1)),
			(cv((-4.369363, 6.037033, 16.359757), 1)),
			(cv((-4.352781, 5.48014, 16.037543), 1)),
			(cv((-4.454087, 5.48014, 16.213011), 1)),
			(cv((-4.454378, 5.756936, 16.212507), 1)),
			(cv((-4.183333, 5.87361, 16.037543), 1)),
			(cv((-4.369363, 5.87361, 16.359757), 1)),
			(cv((-4.353362, 5.756936, 16.037543), 1)),
			(cv((-4.454378, 6.156458, 15.862579), 1)),
			(cv((-4.741424, 5.87361, 15.715329), 1)),
			(cv((-4.757425, 5.756936, 16.037543), 1)),
			(cv((-4.369363, 6.037033, 15.715329), 1)),
			(cv((-4.656409, 5.756936, 16.212507), 1)),
			(cv((-4.454087, 5.48014, 15.862075), 1)),
			(cv((-4.656409, 6.156458, 16.212507), 1)),
			(cv((-4.6567, 5.48014, 16.213011), 1)),
			(cv((-4.369363, 5.87361, 15.715329), 1)),
			(cv((-4.741424, 5.87361, 16.359757), 1)),
			(cv((-4.454378, 5.756936, 15.862579), 1)),
			(cv((-4.757425, 6.156458, 16.037543), 1)),
			(cv((-4.656409, 6.156458, 15.862579), 1)),
			(cv((-4.741424, 6.037033, 16.359757), 1)),
			(cv((-4.927454, 6.037033, 16.037543), 1)),
			(cv((-4.741424, 6.037033, 15.715329), 1)),
			(cv((-4.758006, 5.48014, 16.037543), 1)),
			(cv((-4.6567, 5.48014, 15.862075), 1)),
			(cv((-4.656409, 5.756936, 15.862579), 1)),
			(cv((-4.927454, 5.87361, 16.037543), 1))	),
	texture_vertices = (
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.499235, 0.988397 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.017406, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 3, 7), 0 ),
		polygon ((0, 3, 4),(0, 8, 12), 0 ),
		polygon ((4, 1, 0),(12, 3, 0), 0 ),
		polygon ((5, 6, 7),(16, 18, 21), 0 ),
		polygon ((3, 8, 9),(8, 24, 28), 0 ),
		polygon ((9, 4, 3),(28, 12, 8), 0 ),
		polygon ((8, 10, 7),(24, 32, 21), 0 ),
		polygon ((9, 8, 7),(28, 24, 21), 0 ),
		polygon ((7, 10, 5),(21, 32, 16), 0 ),
		polygon ((11, 0, 2),(37, 1, 7), 0 ),
		polygon ((11, 14, 3),(37, 49, 9), 0 ),
		polygon ((3, 0, 11),(10, 2, 37), 0 ),
		polygon ((16, 5, 10),(58, 17, 33), 0 ),
		polygon ((14, 19, 8),(49, 65, 25), 0 ),
		polygon ((8, 3, 14),(26, 11, 49), 0 ),
		polygon ((19, 21, 10),(65, 73, 34), 0 ),
		polygon ((8, 19, 10),(27, 65, 35), 0 ),
		polygon ((10, 21, 16),(36, 73, 58), 0 ),
		polygon ((22, 23, 2),(78, 81, 7), 0 ),
		polygon ((22, 25, 26),(78, 89, 93), 0 ),
		polygon ((26, 23, 22),(93, 81, 78), 0 ),
		polygon ((27, 28, 29),(97, 99, 102), 0 ),
		polygon ((25, 30, 12),(89, 105, 40), 0 ),
		polygon ((12, 26, 25),(40, 93, 89), 0 ),
		polygon ((30, 13, 29),(105, 44, 102), 0 ),
		polygon ((12, 30, 29),(40, 105, 102), 0 ),
		polygon ((29, 13, 27),(102, 44, 97), 0 ),
		polygon ((23, 11, 2),(82, 38, 7), 0 ),
		polygon ((23, 26, 14),(83, 94, 50), 0 ),
		polygon ((14, 11, 23),(51, 39, 84), 0 ),
		polygon ((28, 16, 21),(100, 59, 74), 0 ),
		polygon ((26, 12, 19),(95, 41, 66), 0 ),
		polygon ((19, 14, 26),(67, 52, 96), 0 ),
		polygon ((12, 29, 21),(42, 103, 75), 0 ),
		polygon ((19, 12, 21),(68, 43, 76), 0 ),
		polygon ((21, 29, 28),(77, 104, 101), 0 ),
		polygon ((17, 22, 2),(60, 79, 7), 0 ),
		polygon ((17, 24, 25),(60, 85, 90), 0 ),
		polygon ((25, 22, 17),(91, 80, 60), 0 ),
		polygon ((18, 27, 13),(63, 98, 45), 0 ),
		polygon ((24, 20, 30),(85, 69, 106), 0 ),
		polygon ((30, 25, 24),(107, 92, 85), 0 ),
		polygon ((20, 15, 13),(69, 53, 46), 0 ),
		polygon ((30, 20, 13),(108, 69, 47), 0 ),
		polygon ((13, 15, 18),(48, 53, 63), 0 ),
		polygon ((1, 17, 2),(4, 61, 7), 0 ),
		polygon ((1, 4, 24),(5, 13, 86), 0 ),
		polygon ((24, 17, 1),(87, 62, 6), 0 ),
		polygon ((6, 18, 15),(19, 64, 54), 0 ),
		polygon ((4, 9, 20),(14, 29, 70), 0 ),
		polygon ((20, 24, 4),(71, 88, 15), 0 ),
		polygon ((9, 7, 15),(30, 22, 55), 0 ),
		polygon ((20, 9, 15),(72, 31, 56), 0 ),
		polygon ((15, 7, 6),(57, 23, 20), 0 )
	)
); /* end of polyset 'stormfan06' */

polyset stormfan07 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = ON,
	opposite = OFF,
	shader = (stormfan_2 ),
	casts_shadow = TRUE,
	vertices = ((cv((-2.530776, 6.156458, 14.713092), 1)),
			(cv((-2.631792, 6.156458, 14.888057), 1)),
			(cv((-2.732808, 6.188061, 14.713092), 1)),
			(cv((-2.360747, 6.037033, 14.713092), 1)),
			(cv((-2.546777, 6.037033, 15.035307), 1)),
			(cv((-2.530195, 5.48014, 14.713092), 1)),
			(cv((-2.631501, 5.48014, 14.88856), 1)),
			(cv((-2.631792, 5.756936, 14.888057), 1)),
			(cv((-2.360747, 5.87361, 14.713092), 1)),
			(cv((-2.546777, 5.87361, 15.035307), 1)),
			(cv((-2.530776, 5.756936, 14.713092), 1)),
			(cv((-2.631792, 6.156458, 14.538128), 1)),
			(cv((-2.918838, 5.87361, 14.390878), 1)),
			(cv((-2.934839, 5.756936, 14.713092), 1)),
			(cv((-2.546777, 6.037033, 14.390878), 1)),
			(cv((-2.833823, 5.756936, 14.888057), 1)),
			(cv((-2.631501, 5.48014, 14.537625), 1)),
			(cv((-2.833823, 6.156458, 14.888057), 1)),
			(cv((-2.834114, 5.48014, 14.88856), 1)),
			(cv((-2.546777, 5.87361, 14.390878), 1)),
			(cv((-2.918838, 5.87361, 15.035307), 1)),
			(cv((-2.631792, 5.756936, 14.538128), 1)),
			(cv((-2.934839, 6.156458, 14.713092), 1)),
			(cv((-2.833823, 6.156458, 14.538128), 1)),
			(cv((-2.918838, 6.037033, 15.035307), 1)),
			(cv((-3.104868, 6.037033, 14.713092), 1)),
			(cv((-2.918838, 6.037033, 14.390878), 1)),
			(cv((-2.93542, 5.48014, 14.713092), 1)),
			(cv((-2.834114, 5.48014, 14.537625), 1)),
			(cv((-2.833823, 5.756936, 14.538128), 1)),
			(cv((-3.104868, 5.87361, 14.713092), 1))	),
	texture_vertices = (
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.499235, 0.988397 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.017406, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 3, 7), 0 ),
		polygon ((0, 3, 4),(0, 8, 12), 0 ),
		polygon ((4, 1, 0),(12, 3, 0), 0 ),
		polygon ((5, 6, 7),(16, 18, 21), 0 ),
		polygon ((3, 8, 9),(8, 24, 28), 0 ),
		polygon ((9, 4, 3),(28, 12, 8), 0 ),
		polygon ((8, 10, 7),(24, 32, 21), 0 ),
		polygon ((9, 8, 7),(28, 24, 21), 0 ),
		polygon ((7, 10, 5),(21, 32, 16), 0 ),
		polygon ((11, 0, 2),(37, 1, 7), 0 ),
		polygon ((11, 14, 3),(37, 49, 9), 0 ),
		polygon ((3, 0, 11),(10, 2, 37), 0 ),
		polygon ((16, 5, 10),(58, 17, 33), 0 ),
		polygon ((14, 19, 8),(49, 65, 25), 0 ),
		polygon ((8, 3, 14),(26, 11, 49), 0 ),
		polygon ((19, 21, 10),(65, 73, 34), 0 ),
		polygon ((8, 19, 10),(27, 65, 35), 0 ),
		polygon ((10, 21, 16),(36, 73, 58), 0 ),
		polygon ((22, 23, 2),(78, 81, 7), 0 ),
		polygon ((22, 25, 26),(78, 89, 93), 0 ),
		polygon ((26, 23, 22),(93, 81, 78), 0 ),
		polygon ((27, 28, 29),(97, 99, 102), 0 ),
		polygon ((25, 30, 12),(89, 105, 40), 0 ),
		polygon ((12, 26, 25),(40, 93, 89), 0 ),
		polygon ((30, 13, 29),(105, 44, 102), 0 ),
		polygon ((12, 30, 29),(40, 105, 102), 0 ),
		polygon ((29, 13, 27),(102, 44, 97), 0 ),
		polygon ((23, 11, 2),(82, 38, 7), 0 ),
		polygon ((23, 26, 14),(83, 94, 50), 0 ),
		polygon ((14, 11, 23),(51, 39, 84), 0 ),
		polygon ((28, 16, 21),(100, 59, 74), 0 ),
		polygon ((26, 12, 19),(95, 41, 66), 0 ),
		polygon ((19, 14, 26),(67, 52, 96), 0 ),
		polygon ((12, 29, 21),(42, 103, 75), 0 ),
		polygon ((19, 12, 21),(68, 43, 76), 0 ),
		polygon ((21, 29, 28),(77, 104, 101), 0 ),
		polygon ((17, 22, 2),(60, 79, 7), 0 ),
		polygon ((17, 24, 25),(60, 85, 90), 0 ),
		polygon ((25, 22, 17),(91, 80, 60), 0 ),
		polygon ((18, 27, 13),(63, 98, 45), 0 ),
		polygon ((24, 20, 30),(85, 69, 106), 0 ),
		polygon ((30, 25, 24),(107, 92, 85), 0 ),
		polygon ((20, 15, 13),(69, 53, 46), 0 ),
		polygon ((30, 20, 13),(108, 69, 47), 0 ),
		polygon ((13, 15, 18),(48, 53, 63), 0 ),
		polygon ((1, 17, 2),(4, 61, 7), 0 ),
		polygon ((1, 4, 24),(5, 13, 86), 0 ),
		polygon ((24, 17, 1),(87, 62, 6), 0 ),
		polygon ((6, 18, 15),(19, 64, 54), 0 ),
		polygon ((4, 9, 20),(14, 29, 70), 0 ),
		polygon ((20, 24, 4),(71, 88, 15), 0 ),
		polygon ((9, 7, 15),(30, 22, 55), 0 ),
		polygon ((20, 9, 15),(72, 31, 56), 0 ),
		polygon ((15, 7, 6),(57, 23, 20), 0 )
	)
); /* end of polyset 'stormfan07' */

polyset stormfan08 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = ON,
	opposite = OFF,
	shader = (stormfan_2 ),
	casts_shadow = TRUE,
	vertices = ((cv((-8.340269, 6.156458, 14.713092), 1)),
			(cv((-8.441285, 6.156458, 14.888057), 1)),
			(cv((-8.5423, 6.188061, 14.713092), 1)),
			(cv((-8.17024, 6.037033, 14.713092), 1)),
			(cv((-8.35627, 6.037033, 15.035307), 1)),
			(cv((-8.339688, 5.48014, 14.713092), 1)),
			(cv((-8.440994, 5.48014, 14.88856), 1)),
			(cv((-8.441285, 5.756936, 14.888057), 1)),
			(cv((-8.17024, 5.87361, 14.713092), 1)),
			(cv((-8.35627, 5.87361, 15.035307), 1)),
			(cv((-8.340269, 5.756936, 14.713092), 1)),
			(cv((-8.441285, 6.156458, 14.538128), 1)),
			(cv((-8.728331, 5.87361, 14.390878), 1)),
			(cv((-8.744332, 5.756936, 14.713092), 1)),
			(cv((-8.35627, 6.037033, 14.390878), 1)),
			(cv((-8.643316, 5.756936, 14.888057), 1)),
			(cv((-8.440994, 5.48014, 14.537625), 1)),
			(cv((-8.643316, 6.156458, 14.888057), 1)),
			(cv((-8.643607, 5.48014, 14.88856), 1)),
			(cv((-8.35627, 5.87361, 14.390878), 1)),
			(cv((-8.728331, 5.87361, 15.035307), 1)),
			(cv((-8.441285, 5.756936, 14.538128), 1)),
			(cv((-8.744332, 6.156458, 14.713092), 1)),
			(cv((-8.643316, 6.156458, 14.538128), 1)),
			(cv((-8.728331, 6.037033, 15.035307), 1)),
			(cv((-8.914361, 6.037033, 14.713092), 1)),
			(cv((-8.728331, 6.037033, 14.390878), 1)),
			(cv((-8.744913, 5.48014, 14.713092), 1)),
			(cv((-8.643607, 5.48014, 14.537625), 1)),
			(cv((-8.643316, 5.756936, 14.538128), 1)),
			(cv((-8.914361, 5.87361, 14.713092), 1))	),
	texture_vertices = (
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.499235, 0.988397 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.017406, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 3, 7), 0 ),
		polygon ((0, 3, 4),(0, 8, 12), 0 ),
		polygon ((4, 1, 0),(12, 3, 0), 0 ),
		polygon ((5, 6, 7),(16, 18, 21), 0 ),
		polygon ((3, 8, 9),(8, 24, 28), 0 ),
		polygon ((9, 4, 3),(28, 12, 8), 0 ),
		polygon ((8, 10, 7),(24, 32, 21), 0 ),
		polygon ((9, 8, 7),(28, 24, 21), 0 ),
		polygon ((7, 10, 5),(21, 32, 16), 0 ),
		polygon ((11, 0, 2),(37, 1, 7), 0 ),
		polygon ((11, 14, 3),(37, 49, 9), 0 ),
		polygon ((3, 0, 11),(10, 2, 37), 0 ),
		polygon ((16, 5, 10),(58, 17, 33), 0 ),
		polygon ((14, 19, 8),(49, 65, 25), 0 ),
		polygon ((8, 3, 14),(26, 11, 49), 0 ),
		polygon ((19, 21, 10),(65, 73, 34), 0 ),
		polygon ((8, 19, 10),(27, 65, 35), 0 ),
		polygon ((10, 21, 16),(36, 73, 58), 0 ),
		polygon ((22, 23, 2),(78, 81, 7), 0 ),
		polygon ((22, 25, 26),(78, 89, 93), 0 ),
		polygon ((26, 23, 22),(93, 81, 78), 0 ),
		polygon ((27, 28, 29),(97, 99, 102), 0 ),
		polygon ((25, 30, 12),(89, 105, 40), 0 ),
		polygon ((12, 26, 25),(40, 93, 89), 0 ),
		polygon ((30, 13, 29),(105, 44, 102), 0 ),
		polygon ((12, 30, 29),(40, 105, 102), 0 ),
		polygon ((29, 13, 27),(102, 44, 97), 0 ),
		polygon ((23, 11, 2),(82, 38, 7), 0 ),
		polygon ((23, 26, 14),(83, 94, 50), 0 ),
		polygon ((14, 11, 23),(51, 39, 84), 0 ),
		polygon ((28, 16, 21),(100, 59, 74), 0 ),
		polygon ((26, 12, 19),(95, 41, 66), 0 ),
		polygon ((19, 14, 26),(67, 52, 96), 0 ),
		polygon ((12, 29, 21),(42, 103, 75), 0 ),
		polygon ((19, 12, 21),(68, 43, 76), 0 ),
		polygon ((21, 29, 28),(77, 104, 101), 0 ),
		polygon ((17, 22, 2),(60, 79, 7), 0 ),
		polygon ((17, 24, 25),(60, 85, 90), 0 ),
		polygon ((25, 22, 17),(91, 80, 60), 0 ),
		polygon ((18, 27, 13),(63, 98, 45), 0 ),
		polygon ((24, 20, 30),(85, 69, 106), 0 ),
		polygon ((30, 25, 24),(107, 92, 85), 0 ),
		polygon ((20, 15, 13),(69, 53, 46), 0 ),
		polygon ((30, 20, 13),(108, 69, 47), 0 ),
		polygon ((13, 15, 18),(48, 53, 63), 0 ),
		polygon ((1, 17, 2),(4, 61, 7), 0 ),
		polygon ((1, 4, 24),(5, 13, 86), 0 ),
		polygon ((24, 17, 1),(87, 62, 6), 0 ),
		polygon ((6, 18, 15),(19, 64, 54), 0 ),
		polygon ((4, 9, 20),(14, 29, 70), 0 ),
		polygon ((20, 24, 4),(71, 88, 15), 0 ),
		polygon ((9, 7, 15),(30, 22, 55), 0 ),
		polygon ((20, 9, 15),(72, 31, 56), 0 ),
		polygon ((15, 7, 6),(57, 23, 20), 0 )
	)
); /* end of polyset 'stormfan08' */

polyset stormfan04 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = ON,
	opposite = OFF,
	shader = (stormfan_2 ),
	casts_shadow = TRUE,
	vertices = ((cv((6.613392, 6.002245, -16.676505), 1)),
			(cv((6.714407, 6.002245, -16.851469), 1)),
			(cv((6.815423, 6.033847, -16.676505), 1)),
			(cv((6.443362, 5.882819, -16.676505), 1)),
			(cv((6.629393, 5.882819, -16.998719), 1)),
			(cv((6.61281, 5.228343, -16.676505), 1)),
			(cv((6.714117, 5.228343, -16.851973), 1)),
			(cv((6.714407, 5.602723, -16.851469), 1)),
			(cv((6.443362, 5.719397, -16.676505), 1)),
			(cv((6.629393, 5.719397, -16.998719), 1)),
			(cv((6.613392, 5.602723, -16.676505), 1)),
			(cv((6.714407, 6.002245, -16.501541), 1)),
			(cv((7.001454, 5.719397, -16.354291), 1)),
			(cv((7.017454, 5.602723, -16.676505), 1)),
			(cv((6.629393, 5.882819, -16.354291), 1)),
			(cv((6.916439, 5.602723, -16.851469), 1)),
			(cv((6.714117, 5.228343, -16.501037), 1)),
			(cv((6.916439, 6.002245, -16.851469), 1)),
			(cv((6.91673, 5.228343, -16.851973), 1)),
			(cv((6.629393, 5.719397, -16.354291), 1)),
			(cv((7.001454, 5.719397, -16.998719), 1)),
			(cv((6.714407, 5.602723, -16.501541), 1)),
			(cv((7.017454, 6.002245, -16.676505), 1)),
			(cv((6.916439, 6.002245, -16.501541), 1)),
			(cv((7.001454, 5.882819, -16.998719), 1)),
			(cv((7.187484, 5.882819, -16.676505), 1)),
			(cv((7.001454, 5.882819, -16.354291), 1)),
			(cv((7.018036, 5.228343, -16.676505), 1)),
			(cv((6.91673, 5.228343, -16.501037), 1)),
			(cv((6.916439, 5.602723, -16.501541), 1)),
			(cv((7.187484, 5.719397, -16.676505), 1))	),
	texture_vertices = (
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.499235, 0.988397 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.017406, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 3, 7), 0 ),
		polygon ((0, 3, 4),(0, 8, 12), 0 ),
		polygon ((4, 1, 0),(12, 3, 0), 0 ),
		polygon ((5, 6, 7),(16, 18, 21), 0 ),
		polygon ((3, 8, 9),(8, 24, 28), 0 ),
		polygon ((9, 4, 3),(28, 12, 8), 0 ),
		polygon ((8, 10, 7),(24, 32, 21), 0 ),
		polygon ((9, 8, 7),(28, 24, 21), 0 ),
		polygon ((7, 10, 5),(21, 32, 16), 0 ),
		polygon ((11, 0, 2),(37, 1, 7), 0 ),
		polygon ((11, 14, 3),(37, 49, 9), 0 ),
		polygon ((3, 0, 11),(10, 2, 37), 0 ),
		polygon ((16, 5, 10),(58, 17, 33), 0 ),
		polygon ((14, 19, 8),(49, 65, 25), 0 ),
		polygon ((8, 3, 14),(26, 11, 49), 0 ),
		polygon ((19, 21, 10),(65, 73, 34), 0 ),
		polygon ((8, 19, 10),(27, 65, 35), 0 ),
		polygon ((10, 21, 16),(36, 73, 58), 0 ),
		polygon ((22, 23, 2),(78, 81, 7), 0 ),
		polygon ((22, 25, 26),(78, 89, 93), 0 ),
		polygon ((26, 23, 22),(93, 81, 78), 0 ),
		polygon ((27, 28, 29),(97, 99, 102), 0 ),
		polygon ((25, 30, 12),(89, 105, 40), 0 ),
		polygon ((12, 26, 25),(40, 93, 89), 0 ),
		polygon ((30, 13, 29),(105, 44, 102), 0 ),
		polygon ((12, 30, 29),(40, 105, 102), 0 ),
		polygon ((29, 13, 27),(102, 44, 97), 0 ),
		polygon ((23, 11, 2),(82, 38, 7), 0 ),
		polygon ((23, 26, 14),(83, 94, 50), 0 ),
		polygon ((14, 11, 23),(51, 39, 84), 0 ),
		polygon ((28, 16, 21),(100, 59, 74), 0 ),
		polygon ((26, 12, 19),(95, 41, 66), 0 ),
		polygon ((19, 14, 26),(67, 52, 96), 0 ),
		polygon ((12, 29, 21),(42, 103, 75), 0 ),
		polygon ((19, 12, 21),(68, 43, 76), 0 ),
		polygon ((21, 29, 28),(77, 104, 101), 0 ),
		polygon ((17, 22, 2),(60, 79, 7), 0 ),
		polygon ((17, 24, 25),(60, 85, 90), 0 ),
		polygon ((25, 22, 17),(91, 80, 60), 0 ),
		polygon ((18, 27, 13),(63, 98, 45), 0 ),
		polygon ((24, 20, 30),(85, 69, 106), 0 ),
		polygon ((30, 25, 24),(107, 92, 85), 0 ),
		polygon ((20, 15, 13),(69, 53, 46), 0 ),
		polygon ((30, 20, 13),(108, 69, 47), 0 ),
		polygon ((13, 15, 18),(48, 53, 63), 0 ),
		polygon ((1, 17, 2),(4, 61, 7), 0 ),
		polygon ((1, 4, 24),(5, 13, 86), 0 ),
		polygon ((24, 17, 1),(87, 62, 6), 0 ),
		polygon ((6, 18, 15),(19, 64, 54), 0 ),
		polygon ((4, 9, 20),(14, 29, 70), 0 ),
		polygon ((20, 24, 4),(71, 88, 15), 0 ),
		polygon ((9, 7, 15),(30, 22, 55), 0 ),
		polygon ((20, 9, 15),(72, 31, 56), 0 ),
		polygon ((15, 7, 6),(57, 23, 20), 0 )
	)
); /* end of polyset 'stormfan04' */

polyset stormfan03 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = ON,
	opposite = OFF,
	shader = (stormfan_2 ),
	casts_shadow = TRUE,
	vertices = ((cv((4.471853, 6.002245, -16.69934), 1)),
			(cv((4.572869, 6.002245, -16.874305), 1)),
			(cv((4.673885, 6.033847, -16.69934), 1)),
			(cv((4.301824, 5.882819, -16.69934), 1)),
			(cv((4.487854, 5.882819, -17.021555), 1)),
			(cv((4.471272, 5.228343, -16.69934), 1)),
			(cv((4.572578, 5.228343, -16.874808), 1)),
			(cv((4.572869, 5.602723, -16.874305), 1)),
			(cv((4.301824, 5.719397, -16.69934), 1)),
			(cv((4.487854, 5.719397, -17.021555), 1)),
			(cv((4.471853, 5.602723, -16.69934), 1)),
			(cv((4.572869, 6.002245, -16.524376), 1)),
			(cv((4.859915, 5.719397, -16.377126), 1)),
			(cv((4.875916, 5.602723, -16.69934), 1)),
			(cv((4.487854, 5.882819, -16.377126), 1)),
			(cv((4.7749, 5.602723, -16.874305), 1)),
			(cv((4.572578, 5.228343, -16.523872), 1)),
			(cv((4.7749, 6.002245, -16.874305), 1)),
			(cv((4.775191, 5.228343, -16.874808), 1)),
			(cv((4.487854, 5.719397, -16.377126), 1)),
			(cv((4.859915, 5.719397, -17.021555), 1)),
			(cv((4.572869, 5.602723, -16.524376), 1)),
			(cv((4.875916, 6.002245, -16.69934), 1)),
			(cv((4.7749, 6.002245, -16.524376), 1)),
			(cv((4.859915, 5.882819, -17.021555), 1)),
			(cv((5.045945, 5.882819, -16.69934), 1)),
			(cv((4.859915, 5.882819, -16.377126), 1)),
			(cv((4.876497, 5.228343, -16.69934), 1)),
			(cv((4.775191, 5.228343, -16.523872), 1)),
			(cv((4.7749, 5.602723, -16.524376), 1)),
			(cv((5.045945, 5.719397, -16.69934), 1))	),
	texture_vertices = (
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.499235, 0.988397 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.017406, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 3, 7), 0 ),
		polygon ((0, 3, 4),(0, 8, 12), 0 ),
		polygon ((4, 1, 0),(12, 3, 0), 0 ),
		polygon ((5, 6, 7),(16, 18, 21), 0 ),
		polygon ((3, 8, 9),(8, 24, 28), 0 ),
		polygon ((9, 4, 3),(28, 12, 8), 0 ),
		polygon ((8, 10, 7),(24, 32, 21), 0 ),
		polygon ((9, 8, 7),(28, 24, 21), 0 ),
		polygon ((7, 10, 5),(21, 32, 16), 0 ),
		polygon ((11, 0, 2),(37, 1, 7), 0 ),
		polygon ((11, 14, 3),(37, 49, 9), 0 ),
		polygon ((3, 0, 11),(10, 2, 37), 0 ),
		polygon ((16, 5, 10),(58, 17, 33), 0 ),
		polygon ((14, 19, 8),(49, 65, 25), 0 ),
		polygon ((8, 3, 14),(26, 11, 49), 0 ),
		polygon ((19, 21, 10),(65, 73, 34), 0 ),
		polygon ((8, 19, 10),(27, 65, 35), 0 ),
		polygon ((10, 21, 16),(36, 73, 58), 0 ),
		polygon ((22, 23, 2),(78, 81, 7), 0 ),
		polygon ((22, 25, 26),(78, 89, 93), 0 ),
		polygon ((26, 23, 22),(93, 81, 78), 0 ),
		polygon ((27, 28, 29),(97, 99, 102), 0 ),
		polygon ((25, 30, 12),(89, 105, 40), 0 ),
		polygon ((12, 26, 25),(40, 93, 89), 0 ),
		polygon ((30, 13, 29),(105, 44, 102), 0 ),
		polygon ((12, 30, 29),(40, 105, 102), 0 ),
		polygon ((29, 13, 27),(102, 44, 97), 0 ),
		polygon ((23, 11, 2),(82, 38, 7), 0 ),
		polygon ((23, 26, 14),(83, 94, 50), 0 ),
		polygon ((14, 11, 23),(51, 39, 84), 0 ),
		polygon ((28, 16, 21),(100, 59, 74), 0 ),
		polygon ((26, 12, 19),(95, 41, 66), 0 ),
		polygon ((19, 14, 26),(67, 52, 96), 0 ),
		polygon ((12, 29, 21),(42, 103, 75), 0 ),
		polygon ((19, 12, 21),(68, 43, 76), 0 ),
		polygon ((21, 29, 28),(77, 104, 101), 0 ),
		polygon ((17, 22, 2),(60, 79, 7), 0 ),
		polygon ((17, 24, 25),(60, 85, 90), 0 ),
		polygon ((25, 22, 17),(91, 80, 60), 0 ),
		polygon ((18, 27, 13),(63, 98, 45), 0 ),
		polygon ((24, 20, 30),(85, 69, 106), 0 ),
		polygon ((30, 25, 24),(107, 92, 85), 0 ),
		polygon ((20, 15, 13),(69, 53, 46), 0 ),
		polygon ((30, 20, 13),(108, 69, 47), 0 ),
		polygon ((13, 15, 18),(48, 53, 63), 0 ),
		polygon ((1, 17, 2),(4, 61, 7), 0 ),
		polygon ((1, 4, 24),(5, 13, 86), 0 ),
		polygon ((24, 17, 1),(87, 62, 6), 0 ),
		polygon ((6, 18, 15),(19, 64, 54), 0 ),
		polygon ((4, 9, 20),(14, 29, 70), 0 ),
		polygon ((20, 24, 4),(71, 88, 15), 0 ),
		polygon ((9, 7, 15),(30, 22, 55), 0 ),
		polygon ((20, 9, 15),(72, 31, 56), 0 ),
		polygon ((15, 7, 6),(57, 23, 20), 0 )
	)
); /* end of polyset 'stormfan03' */

polyset stormfan02 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = ON,
	opposite = OFF,
	shader = (stormfan_2 ),
	casts_shadow = TRUE,
	vertices = ((cv((2.649267, 6.002245, -15.37489), 1)),
			(cv((2.750283, 6.002245, -15.549854), 1)),
			(cv((2.851299, 6.033847, -15.37489), 1)),
			(cv((2.479238, 5.882819, -15.37489), 1)),
			(cv((2.665268, 5.882819, -15.697104), 1)),
			(cv((2.648686, 5.228343, -15.37489), 1)),
			(cv((2.749992, 5.228343, -15.550358), 1)),
			(cv((2.750283, 5.602723, -15.549854), 1)),
			(cv((2.479238, 5.719397, -15.37489), 1)),
			(cv((2.665268, 5.719397, -15.697104), 1)),
			(cv((2.649267, 5.602723, -15.37489), 1)),
			(cv((2.750283, 6.002245, -15.199926), 1)),
			(cv((3.037329, 5.719397, -15.052676), 1)),
			(cv((3.05333, 5.602723, -15.37489), 1)),
			(cv((2.665268, 5.882819, -15.052676), 1)),
			(cv((2.952314, 5.602723, -15.549854), 1)),
			(cv((2.749992, 5.228343, -15.199422), 1)),
			(cv((2.952314, 6.002245, -15.549854), 1)),
			(cv((2.952605, 5.228343, -15.550358), 1)),
			(cv((2.665268, 5.719397, -15.052676), 1)),
			(cv((3.037329, 5.719397, -15.697104), 1)),
			(cv((2.750283, 5.602723, -15.199926), 1)),
			(cv((3.05333, 6.002245, -15.37489), 1)),
			(cv((2.952314, 6.002245, -15.199926), 1)),
			(cv((3.037329, 5.882819, -15.697104), 1)),
			(cv((3.223359, 5.882819, -15.37489), 1)),
			(cv((3.037329, 5.882819, -15.052676), 1)),
			(cv((3.053911, 5.228343, -15.37489), 1)),
			(cv((2.952605, 5.228343, -15.199422), 1)),
			(cv((2.952314, 5.602723, -15.199926), 1)),
			(cv((3.223359, 5.719397, -15.37489), 1))	),
	texture_vertices = (
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.499235, 0.988397 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.017406, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 3, 7), 0 ),
		polygon ((0, 3, 4),(0, 8, 12), 0 ),
		polygon ((4, 1, 0),(12, 3, 0), 0 ),
		polygon ((5, 6, 7),(16, 18, 21), 0 ),
		polygon ((3, 8, 9),(8, 24, 28), 0 ),
		polygon ((9, 4, 3),(28, 12, 8), 0 ),
		polygon ((8, 10, 7),(24, 32, 21), 0 ),
		polygon ((9, 8, 7),(28, 24, 21), 0 ),
		polygon ((7, 10, 5),(21, 32, 16), 0 ),
		polygon ((11, 0, 2),(37, 1, 7), 0 ),
		polygon ((11, 14, 3),(37, 49, 9), 0 ),
		polygon ((3, 0, 11),(10, 2, 37), 0 ),
		polygon ((16, 5, 10),(58, 17, 33), 0 ),
		polygon ((14, 19, 8),(49, 65, 25), 0 ),
		polygon ((8, 3, 14),(26, 11, 49), 0 ),
		polygon ((19, 21, 10),(65, 73, 34), 0 ),
		polygon ((8, 19, 10),(27, 65, 35), 0 ),
		polygon ((10, 21, 16),(36, 73, 58), 0 ),
		polygon ((22, 23, 2),(78, 81, 7), 0 ),
		polygon ((22, 25, 26),(78, 89, 93), 0 ),
		polygon ((26, 23, 22),(93, 81, 78), 0 ),
		polygon ((27, 28, 29),(97, 99, 102), 0 ),
		polygon ((25, 30, 12),(89, 105, 40), 0 ),
		polygon ((12, 26, 25),(40, 93, 89), 0 ),
		polygon ((30, 13, 29),(105, 44, 102), 0 ),
		polygon ((12, 30, 29),(40, 105, 102), 0 ),
		polygon ((29, 13, 27),(102, 44, 97), 0 ),
		polygon ((23, 11, 2),(82, 38, 7), 0 ),
		polygon ((23, 26, 14),(83, 94, 50), 0 ),
		polygon ((14, 11, 23),(51, 39, 84), 0 ),
		polygon ((28, 16, 21),(100, 59, 74), 0 ),
		polygon ((26, 12, 19),(95, 41, 66), 0 ),
		polygon ((19, 14, 26),(67, 52, 96), 0 ),
		polygon ((12, 29, 21),(42, 103, 75), 0 ),
		polygon ((19, 12, 21),(68, 43, 76), 0 ),
		polygon ((21, 29, 28),(77, 104, 101), 0 ),
		polygon ((17, 22, 2),(60, 79, 7), 0 ),
		polygon ((17, 24, 25),(60, 85, 90), 0 ),
		polygon ((25, 22, 17),(91, 80, 60), 0 ),
		polygon ((18, 27, 13),(63, 98, 45), 0 ),
		polygon ((24, 20, 30),(85, 69, 106), 0 ),
		polygon ((30, 25, 24),(107, 92, 85), 0 ),
		polygon ((20, 15, 13),(69, 53, 46), 0 ),
		polygon ((30, 20, 13),(108, 69, 47), 0 ),
		polygon ((13, 15, 18),(48, 53, 63), 0 ),
		polygon ((1, 17, 2),(4, 61, 7), 0 ),
		polygon ((1, 4, 24),(5, 13, 86), 0 ),
		polygon ((24, 17, 1),(87, 62, 6), 0 ),
		polygon ((6, 18, 15),(19, 64, 54), 0 ),
		polygon ((4, 9, 20),(14, 29, 70), 0 ),
		polygon ((20, 24, 4),(71, 88, 15), 0 ),
		polygon ((9, 7, 15),(30, 22, 55), 0 ),
		polygon ((20, 9, 15),(72, 31, 56), 0 ),
		polygon ((15, 7, 6),(57, 23, 20), 0 )
	)
); /* end of polyset 'stormfan02' */

polyset stormfan01 (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = ON,
	opposite = OFF,
	shader = (stormfan_2 ),
	casts_shadow = TRUE,
	vertices = ((cv((8.45876, 6.002245, -15.37489), 1)),
			(cv((8.559776, 6.002245, -15.549854), 1)),
			(cv((8.660791, 6.033847, -15.37489), 1)),
			(cv((8.288731, 5.882819, -15.37489), 1)),
			(cv((8.474761, 5.882819, -15.697104), 1)),
			(cv((8.458179, 5.228343, -15.37489), 1)),
			(cv((8.559485, 5.228343, -15.550358), 1)),
			(cv((8.559776, 5.602723, -15.549854), 1)),
			(cv((8.288731, 5.719397, -15.37489), 1)),
			(cv((8.474761, 5.719397, -15.697104), 1)),
			(cv((8.45876, 5.602723, -15.37489), 1)),
			(cv((8.559776, 6.002245, -15.199926), 1)),
			(cv((8.846822, 5.719397, -15.052676), 1)),
			(cv((8.862823, 5.602723, -15.37489), 1)),
			(cv((8.474761, 5.882819, -15.052676), 1)),
			(cv((8.761807, 5.602723, -15.549854), 1)),
			(cv((8.559485, 5.228343, -15.199422), 1)),
			(cv((8.761807, 6.002245, -15.549854), 1)),
			(cv((8.762098, 5.228343, -15.550358), 1)),
			(cv((8.474761, 5.719397, -15.052676), 1)),
			(cv((8.846822, 5.719397, -15.697104), 1)),
			(cv((8.559776, 5.602723, -15.199926), 1)),
			(cv((8.862823, 6.002245, -15.37489), 1)),
			(cv((8.761807, 6.002245, -15.199926), 1)),
			(cv((8.846822, 5.882819, -15.697104), 1)),
			(cv((9.032852, 5.882819, -15.37489), 1)),
			(cv((8.846822, 5.882819, -15.052676), 1)),
			(cv((8.863404, 5.228343, -15.37489), 1)),
			(cv((8.762098, 5.228343, -15.199422), 1)),
			(cv((8.761807, 5.602723, -15.199926), 1)),
			(cv((9.032852, 5.719397, -15.37489), 1))	),
	texture_vertices = (
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.499235, 0.988397 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.017406, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.760871, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.237599, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.760871, 0.944504 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.017406, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.981064, 0.778631 ),
			st( 0.761624, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.236846, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.761624, 0.005152 ),
			st( 0.237599, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.760871, 0.389599 ),
			st( 0.981064, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ),
			st( 0.017406, 0.551650 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 3, 7), 0 ),
		polygon ((0, 3, 4),(0, 8, 12), 0 ),
		polygon ((4, 1, 0),(12, 3, 0), 0 ),
		polygon ((5, 6, 7),(16, 18, 21), 0 ),
		polygon ((3, 8, 9),(8, 24, 28), 0 ),
		polygon ((9, 4, 3),(28, 12, 8), 0 ),
		polygon ((8, 10, 7),(24, 32, 21), 0 ),
		polygon ((9, 8, 7),(28, 24, 21), 0 ),
		polygon ((7, 10, 5),(21, 32, 16), 0 ),
		polygon ((11, 0, 2),(37, 1, 7), 0 ),
		polygon ((11, 14, 3),(37, 49, 9), 0 ),
		polygon ((3, 0, 11),(10, 2, 37), 0 ),
		polygon ((16, 5, 10),(58, 17, 33), 0 ),
		polygon ((14, 19, 8),(49, 65, 25), 0 ),
		polygon ((8, 3, 14),(26, 11, 49), 0 ),
		polygon ((19, 21, 10),(65, 73, 34), 0 ),
		polygon ((8, 19, 10),(27, 65, 35), 0 ),
		polygon ((10, 21, 16),(36, 73, 58), 0 ),
		polygon ((22, 23, 2),(78, 81, 7), 0 ),
		polygon ((22, 25, 26),(78, 89, 93), 0 ),
		polygon ((26, 23, 22),(93, 81, 78), 0 ),
		polygon ((27, 28, 29),(97, 99, 102), 0 ),
		polygon ((25, 30, 12),(89, 105, 40), 0 ),
		polygon ((12, 26, 25),(40, 93, 89), 0 ),
		polygon ((30, 13, 29),(105, 44, 102), 0 ),
		polygon ((12, 30, 29),(40, 105, 102), 0 ),
		polygon ((29, 13, 27),(102, 44, 97), 0 ),
		polygon ((23, 11, 2),(82, 38, 7), 0 ),
		polygon ((23, 26, 14),(83, 94, 50), 0 ),
		polygon ((14, 11, 23),(51, 39, 84), 0 ),
		polygon ((28, 16, 21),(100, 59, 74), 0 ),
		polygon ((26, 12, 19),(95, 41, 66), 0 ),
		polygon ((19, 14, 26),(67, 52, 96), 0 ),
		polygon ((12, 29, 21),(42, 103, 75), 0 ),
		polygon ((19, 12, 21),(68, 43, 76), 0 ),
		polygon ((21, 29, 28),(77, 104, 101), 0 ),
		polygon ((17, 22, 2),(60, 79, 7), 0 ),
		polygon ((17, 24, 25),(60, 85, 90), 0 ),
		polygon ((25, 22, 17),(91, 80, 60), 0 ),
		polygon ((18, 27, 13),(63, 98, 45), 0 ),
		polygon ((24, 20, 30),(85, 69, 106), 0 ),
		polygon ((30, 25, 24),(107, 92, 85), 0 ),
		polygon ((20, 15, 13),(69, 53, 46), 0 ),
		polygon ((30, 20, 13),(108, 69, 47), 0 ),
		polygon ((13, 15, 18),(48, 53, 63), 0 ),
		polygon ((1, 17, 2),(4, 61, 7), 0 ),
		polygon ((1, 4, 24),(5, 13, 86), 0 ),
		polygon ((24, 17, 1),(87, 62, 6), 0 ),
		polygon ((6, 18, 15),(19, 64, 54), 0 ),
		polygon ((4, 9, 20),(14, 29, 70), 0 ),
		polygon ((20, 24, 4),(71, 88, 15), 0 ),
		polygon ((9, 7, 15),(30, 22, 55), 0 ),
		polygon ((20, 9, 15),(72, 31, 56), 0 ),
		polygon ((15, 7, 6),(57, 23, 20), 0 )
	)
); /* end of polyset 'stormfan01' */

ENVIRONMENT
background ( 
        color = (0.0, 0.0, 0.0)
);
shader_glow ( 
,
        glow_type =  LINEAR_GLOW,
        halo_type =  LINEAR_GLOW,
        auto_exposure = ON,
        quality = 0.5,
        threshold = 0.0,
        glow_color = (100.0, 100.0, 100.0),
        glow_intensity = 1.0,
        glow_spread = 0.05,
        glow_eccentricity = 0.1,
        glow_radial_noise = 0.0,
        glow_star_level = 0.0,
        glow_opacity = 0.0,
        halo_color = (100.0, 100.0, 100.0),
        halo_intensity = 1.0,
        halo_spread = 0.3,
        halo_eccentricity = 0.1,
        halo_radial_noise = 0.0,
        halo_star_level = 0.0,
        halo_lens_flare = 0.0,
        rotation = 0.0,
        radial_noise_frequency = 0.5,
        star_points = 4.0
);
photo_effects ( 
,
        film_grain = 0.0,
        filter = (255.0, 255.0, 255.0)
);
master_light ( 
,
        intensity = 1.0,
        light_color = (255.0, 255.0, 255.0)
);
dynamics ( 
,
        gravity = 1.0,
        air_density = 0.05,
        Floor = ON,
        floor_offset = 0.0,
        ceiling = OFF,
        ceiling_offset = 20.0,
        left = OFF,
        left_offset = -10.0,
        right = OFF,
        right_offset = 10.0,
        front = OFF,
        front_offset = -10.0,
        back = OFF,
        back_offset = 10.0,
        wall_friction = 0.0,
        wall_elasticity = 0.707,
        turbulence_intensity = 0.0,
        turbulence_spread = 0.5,
        turbulence_persistence = 5.0,
        turbulence_animated = ON,
        turbulence_space_resolution =  16,
        turbulence_time_resolution =  16,
        turbulence_roughness = 0.5,
        turbulence_variability = 0.5,
        turbulence_granularity = 0.0
);

MODEL
/* Only expression assignments should appear above this line and below the MODEL directive. */
/* Placing any other commands in the above section will produce incorrect expression behaviour. */
{
	instance BG_NorthEast();
}
{
	instance BG_Northwest();
}
{
	instance BG_southeast();
}
{
	instance BG_southwest();
}
{
	instance park_sidewalk();
}
{
	instance street_northeast();
}
{
	instance street_northwest();
}
{
	instance street_southeast();
}
{
	instance street_southwest();
}
{
	instance street_east();
}
{
	instance street_west();
}
{
	instance continent();
}
{
	instance chimney06();
}
{
	instance watertower_tank();
}
{
	instance watertower_base();
}
{
	trn(-210.416524, 0.0, -211.496796);
	trn_ro(0.000005, 0.0, 0.0);
	rot (xaxis, 90.0);
	trn_ri(-0.000005, 0.0, 0.0);
	trn_so(0.000005, 0.0, 0.0);
	scale (418.957499, 421.987023, 45.146461);
	trn_si(0.0, 0.0, 0.0);
	Projection_tform#46 = cur_xform();
}
{
	instance grass_patches();
}
{
	trn_ro(0.0, 0.0, 117.170959);
	trn_ri(0.0, 0.0, -117.170959);
	trn_so(0.0, 0.0, 117.170959);
	trn_si(0.0, 0.0, -117.170959);
	instance house12();
}
{
	trn_ro(0.0, 0.0, -118.305336);
	trn_ri(0.0, 0.0, 118.305336);
	trn_so(0.0, 0.0, -118.305336);
	trn_si(0.0, 0.0, 118.305336);
	instance house09();
}
{
	trn_ro(-39.99918, 0.0, -177.450226);
	trn_ri(39.99918, 0.0, 177.450226);
	trn_so(-39.99918, 0.0, -177.450225);
	trn_si(39.99918, 0.0, 177.450225);
	instance house11();
}
{
	trn_ro(41.060268, 0.0, 176.315842);
	trn_ri(-41.060268, 0.0, -176.315842);
	trn_so(41.06027, 0.0, 176.31584);
	trn_si(-41.06027, 0.0, -176.31584);
	instance house10();
}
{
	instance scenery();
}
{
	trn_ro(1.269156, 0.0, -14.734159);
	trn_ri(-1.269156, 0.0, 14.734159);
	trn_so(1.269156, 0.0, -14.734158);
	trn_si(-1.269156, 0.0, 14.734158);
	instance building_northeast();
}
{
	trn_ro(0.202926, 0.0, -0.771625);
	trn_ri(-0.202926, 0.0, 0.771625);
	trn_so(0.202926, 0.0, -0.771625);
	trn_si(-0.202926, 0.0, 0.771625);
	instance building_southwest();
}
{
	trn_ro(-1.139626, 2.88969, -14.366421);
	trn_ri(1.139626, -2.88969, 14.366421);
	trn_so(-1.139626, 2.88969, -14.366421);
	trn_si(1.139626, -2.88969, 14.366421);
	instance building_northwest();
}
{
	trn_ro(0.521177, 0.0, -0.476592);
	trn_ri(-0.521177, 0.0, 0.476592);
	trn_so(0.521177, 0.0, -0.476592);
	trn_si(-0.521177, 0.0, 0.476592);
	instance building_southeast();
}
{
	instance sidewalk_southwest();
}
{
	instance sidewalk_west();
}
{
	instance sidewalk_northwest();
}
{
	instance sidewalk_southeast();
}
{
	instance sidewalk_east();
}
{
	instance sidewalk_northeast();
}
{
	trn_ro(-16.387497, 0.0, 0.0);
	trn_ri(16.387497, 0.0, 0.0);
	trn_so(-16.387497, 0.0, 0.0);
	trn_si(16.387497, 0.0, 0.0);
	instance house08();
}
{
	trn_ro(-16.387497, 0.0, 0.0);
	trn_ri(16.387497, 0.0, 0.0);
	trn_so(-16.387497, 0.0, 0.0);
	trn_si(16.387497, 0.0, 0.0);
	instance house07();
}
{
	trn_ro(-16.387497, 0.0, 0.0);
	trn_ri(16.387497, 0.0, 0.0);
	trn_so(-16.387497, 0.0, 0.0);
	trn_si(16.387497, 0.0, 0.0);
	instance house06();
}
{
	trn_ro(16.02976, 0.0, 0.0);
	trn_ri(-16.02976, 0.0, 0.0);
	trn_so(16.02976, 0.0, 0.0);
	trn_si(-16.02976, 0.0, 0.0);
	instance house05();
}
{
	trn_ro(16.02976, 0.0, 0.0);
	trn_ri(-16.02976, 0.0, 0.0);
	trn_so(16.02976, 0.0, 0.0);
	trn_si(-16.02976, 0.0, 0.0);
	instance house04();
}
{
	trn_ro(16.02976, 0.0, 0.0);
	trn_ri(-16.02976, 0.0, 0.0);
	trn_so(16.02976, 0.0, 0.0);
	trn_si(-16.02976, 0.0, 0.0);
	instance house03();
}
{
	trn_ro(0.305108, -0.117144, -32.783421);
	trn_ri(-0.305108, 0.117144, 32.783421);
	trn_so(0.305104, -0.117144, -32.78342);
	trn_si(-0.305104, 0.117144, 32.78342);
	instance house02();
}
{
	trn_ro(-0.027799, -0.117144, 31.124104);
	trn_ri(0.027799, 0.117144, -31.124104);
	trn_so(-0.027794, -0.117144, 31.124103);
	trn_si(0.027794, 0.117144, -31.124103);
	instance house01();
}
{
	trn_ro(0.265103, 0.0, -6.940522);
	trn_ri(-0.265103, 0.0, 6.940522);
	trn_so(0.265103, 0.0, -6.940522);
	trn_si(-0.265103, 0.0, 6.940522);
	instance alley_trashcans();
}
{
	instance park_sky();
}
{
	trn_ro(8.957188, -3.69112, 21.605433);
	trn_ri(-8.957188, 3.69112, -21.605433);
	trn_so(8.957188, -3.69112, 21.605433);
	trn_si(-8.957188, 3.69112, -21.605433);
	instance chimney02();
}
{
	trn_ro(2.598872, -3.69112, 21.520769);
	trn_ri(-2.598872, 3.69112, -21.520769);
	trn_so(2.598872, -3.69112, 21.520769);
	trn_si(-2.598872, 3.69112, -21.520769);
	instance chimney05();
}
{
	trn_ro(-9.555148, -6.532354, 28.618139);
	trn_ri(9.555148, 6.532354, -28.618139);
	trn_so(-9.555148, -6.532354, 28.618139);
	trn_si(9.555148, 6.532354, -28.618139);
	instance chimney03();
}
{
	trn_ro(-2.048489, -1.805251, -23.866232);
	trn_ri(2.048489, 1.805251, 23.866232);
	trn_so(-2.048489, -1.805251, -23.866232);
	trn_si(2.048489, 1.805251, 23.866232);
	instance chimney04();
}
{
	trn_ro(-8.534008, -1.805251, -23.866232);
	trn_ri(8.534008, 1.805251, 23.866232);
	trn_so(-8.534008, -1.805251, -23.866232);
	trn_si(8.534008, 1.805251, 23.866232);
	instance chimney01();
}
{
	trn_ro(-0.581119, -0.220231, 7.506346);
	trn_ri(0.581119, 0.220231, -7.506346);
	trn_so(-0.581119, -0.220231, 7.506346);
	trn_si(0.581119, 0.220231, -7.506346);
	{
		trn_ro(-6.696932, 5.48014, 16.014708);
		trn_ri(6.696932, -5.48014, -16.014708);
		trn_so(-6.696932, 5.48014, 16.014707);
		trn_si(6.696932, -5.48014, -16.014707);
		instance stormfan05();
	}
	{
		trn_ro(-4.555393, 5.48014, 16.037542);
		trn_ri(4.555393, -5.48014, -16.037542);
		trn_so(-4.555393, 5.48014, 16.037542);
		trn_si(4.555393, -5.48014, -16.037542);
		instance stormfan06();
	}
	{
		trn_ro(-2.732807, 5.48014, 14.713093);
		trn_ri(2.732807, -5.48014, -14.713093);
		trn_so(-2.732807, 5.48014, 14.713093);
		trn_si(2.732807, -5.48014, -14.713093);
		instance stormfan07();
	}
	{
		trn_ro(-8.5423, 5.48014, 14.713093);
		trn_ri(8.5423, -5.48014, -14.713093);
		trn_so(-8.5423, 5.48014, 14.713093);
		trn_si(8.5423, -5.48014, -14.713093);
		instance stormfan08();
	}
}
{
	trn_ro(5.873034, -0.374444, -15.406876);
	trn_ri(-5.873034, 0.374444, 15.406876);
	trn_so(5.873034, -0.374444, -15.406876);
	trn_si(-5.873034, 0.374444, 15.406876);
	{
		trn_ro(6.815423, 5.325926, -16.676506);
		trn_ri(-6.815423, -5.325926, 16.676506);
		trn_so(6.815423, 5.325926, -16.676506);
		trn_si(-6.815423, -5.325926, 16.676506);
		instance stormfan04();
	}
	{
		trn_ro(4.673884, 5.325926, -16.699341);
		trn_ri(-4.673884, -5.325926, 16.699341);
		trn_so(4.673884, 5.325926, -16.69934);
		trn_si(-4.673884, -5.325926, 16.69934);
		instance stormfan03();
	}
	{
		trn_ro(2.851299, 5.325926, -15.37489);
		trn_ri(-2.851299, -5.325926, 15.37489);
		trn_so(2.851299, 5.325926, -15.37489);
		trn_si(-2.851299, -5.325926, 15.37489);
		instance stormfan02();
	}
	{
		trn_ro(8.660791, 5.325926, -15.374891);
		trn_ri(-8.660791, -5.325926, 15.374891);
		trn_so(8.660791, 5.325926, -15.374891);
		trn_si(-8.660791, -5.325926, 15.374891);
		instance stormfan01();
	}
}
{
	trn(-4.251146, -0.003295, -5.0992);
	rot (yaxis, 90.0);
	scale (0.346061, 0.532514, 0.516796);
	Projection_tform#47 = cur_xform();
}
{
	trn(0.0, 0.0, 12.0);
	{
		inst Light();
	}
	{
		trn(-2.0, -2.0, 0.0);
		Lightview = current_position(( 0.0,  0.0,  0.0));
	}
	{
		trn(0.0, 10.0, 0.0);
		Lightup = current_position(( 0.0,  0.0,  0.0));
	}
}
{
	{
		trn(33.005699, 28.466106, 17.92926);
		camera (
			perspective = TRUE,
			eye   = ( 0.0,  0.0,  0.0),
			active = ON,
			pix   = "pix/parkenv.sdl",
			view  = Camera_view,
			up  = Camera_up,
			aov = 55.0,
			filmaperture_x = 0.4,
			filmaperture_y = 0.285,
			filmoffset_x = 0.0,
			filmoffset_y = 0.0,
			placement_fit_code = 0,
			placement_shift = 0.0,
			aspect   = pixel_aspect,
			aspect_ratio_pixel = pixel_aspect,
			near = 0.353891,
			far = 3398.354968,
			depth_of_field = 0.0,
			scaling_factor = 1.0,
			f_stop = 3.5,
			focal_distance = 12.0,
			auto_focus = OFF,
			motion_blur = 0.0
		);
	}
	{
		trn(25.589098, 22.56641, 15.544201);
		Camera_view = current_position( (0, 0, 0) );
	}
	{
		trn(32.430988, 29.263304, 17.744461);
		Camera_up = current_position( (0, 0, 0) );
	}
}

